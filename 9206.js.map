{"version":3,"file":"9206.js","mappings":"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","sources":["./node_modules/@angular/material/fesm2022/legacy-snack-bar.mjs"],"sourcesContent":["import * as i1$2 from '@angular/cdk/overlay';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport * as i1$1 from '@angular/cdk/portal';\nimport { PortalModule } from '@angular/cdk/portal';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, NgModule, Injectable, Optional, SkipSelf } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i3 from '@angular/material/legacy-button';\nimport { MatLegacyButtonModule } from '@angular/material/legacy-button';\nimport * as i1 from '@angular/material/snack-bar';\nimport { MAT_SNACK_BAR_DATA, _MatSnackBarContainerBase, matSnackBarAnimations, _MatSnackBarBase, MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material/snack-bar';\nexport { MAT_SNACK_BAR_DATA as MAT_LEGACY_SNACK_BAR_DATA, MAT_SNACK_BAR_DEFAULT_OPTIONS as MAT_LEGACY_SNACK_BAR_DEFAULT_OPTIONS, MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY as MAT_LEGACY_SNACK_BAR_DEFAULT_OPTIONS_FACTORY, MatSnackBarConfig as MatLegacySnackBarConfig, MatSnackBarRef as MatLegacySnackBarRef, _MatSnackBarBase as _MatLegacySnackBarBase, _MatSnackBarContainerBase as _MatLegacySnackBarContainerBase, matSnackBarAnimations as matLegacySnackBarAnimations } from '@angular/material/snack-bar';\nimport * as i2$1 from '@angular/cdk/a11y';\nimport * as i3$1 from '@angular/cdk/layout';\n\n/**\n * A component used to open as the default snack bar, matching material spec.\n * This should only be used internally by the snack bar service.\n * @deprecated Use `SimpleSnackBar` from `@angular/material/snack-bar` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass LegacySimpleSnackBar {\n    constructor(snackBarRef, data) {\n        this.snackBarRef = snackBarRef;\n        this.data = data;\n    }\n    /** Performs the action on the snack bar. */\n    action() {\n        this.snackBarRef.dismissWithAction();\n    }\n    /** If the action button should be shown. */\n    get hasAction() {\n        return !!this.data.action;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: LegacySimpleSnackBar, deps: [{ token: i1.MatSnackBarRef }, { token: MAT_SNACK_BAR_DATA }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: LegacySimpleSnackBar, selector: \"simple-snack-bar\", host: { classAttribute: \"mat-simple-snackbar\" }, ngImport: i0, template: \"<span class=\\\"mat-simple-snack-bar-content\\\">{{data.message}}</span>\\n<div class=\\\"mat-simple-snackbar-action\\\"  *ngIf=\\\"hasAction\\\">\\n  <button mat-button (click)=\\\"action()\\\">{{data.action}}</button>\\n</div>\\n\", styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}.mat-simple-snack-bar-content{overflow:hidden;text-overflow:ellipsis}\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i3.MatLegacyButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: LegacySimpleSnackBar, decorators: [{\n            type: Component,\n            args: [{ selector: 'simple-snack-bar', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'class': 'mat-simple-snackbar',\n                    }, template: \"<span class=\\\"mat-simple-snack-bar-content\\\">{{data.message}}</span>\\n<div class=\\\"mat-simple-snackbar-action\\\"  *ngIf=\\\"hasAction\\\">\\n  <button mat-button (click)=\\\"action()\\\">{{data.action}}</button>\\n</div>\\n\", styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}.mat-simple-snack-bar-content{overflow:hidden;text-overflow:ellipsis}\"] }]\n        }], ctorParameters: function () { return [{ type: i1.MatSnackBarRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_SNACK_BAR_DATA]\n                }] }]; } });\n\n/**\n * Internal component that wraps user-provided snack bar content.\n * @docs-private\n * @deprecated Use `MatSnackBarContainer` from `@angular/material/snack-bar` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySnackBarContainer extends _MatSnackBarContainerBase {\n    _afterPortalAttached() {\n        super._afterPortalAttached();\n        if (this.snackBarConfig.horizontalPosition === 'center') {\n            this._elementRef.nativeElement.classList.add('mat-snack-bar-center');\n        }\n        if (this.snackBarConfig.verticalPosition === 'top') {\n            this._elementRef.nativeElement.classList.add('mat-snack-bar-top');\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySnackBarContainer, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacySnackBarContainer, selector: \"snack-bar-container\", host: { listeners: { \"@state.done\": \"onAnimationEnd($event)\" }, properties: { \"@state\": \"_animationState\" }, classAttribute: \"mat-snack-bar-container\" }, usesInheritance: true, ngImport: i0, template: \"<!-- Initially holds the snack bar content, will be empty after announcing to screen readers. -->\\n<div aria-hidden=\\\"true\\\">\\n  <ng-template cdkPortalOutlet></ng-template>\\n</div>\\n\\n<!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n<div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\" [attr.id]=\\\"_liveElementId\\\"></div>\\n\", styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\"], dependencies: [{ kind: \"directive\", type: i1$1.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matSnackBarAnimations.snackBarState], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySnackBarContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'snack-bar-container', changeDetection: ChangeDetectionStrategy.Default, encapsulation: ViewEncapsulation.None, animations: [matSnackBarAnimations.snackBarState], host: {\n                        'class': 'mat-snack-bar-container',\n                        '[@state]': '_animationState',\n                        '(@state.done)': 'onAnimationEnd($event)',\n                    }, template: \"<!-- Initially holds the snack bar content, will be empty after announcing to screen readers. -->\\n<div aria-hidden=\\\"true\\\">\\n  <ng-template cdkPortalOutlet></ng-template>\\n</div>\\n\\n<!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n<div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\" [attr.id]=\\\"_liveElementId\\\"></div>\\n\", styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\"] }]\n        }] });\n\n/**\n * @deprecated Use `MatSnackBarModule` from `@angular/material/snack-bar` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySnackBarModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySnackBarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySnackBarModule, declarations: [MatLegacySnackBarContainer, LegacySimpleSnackBar], imports: [OverlayModule, PortalModule, CommonModule, MatLegacyButtonModule, MatCommonModule], exports: [MatLegacySnackBarContainer, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySnackBarModule, imports: [OverlayModule, PortalModule, CommonModule, MatLegacyButtonModule, MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySnackBarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, PortalModule, CommonModule, MatLegacyButtonModule, MatCommonModule],\n                    exports: [MatLegacySnackBarContainer, MatCommonModule],\n                    declarations: [MatLegacySnackBarContainer, LegacySimpleSnackBar],\n                }]\n        }] });\n\n/**\n * Service to dispatch Material Design snack bar messages.\n * @deprecated Use `MatSnackBar` from `@angular/material/snack-bar` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySnackBar extends _MatSnackBarBase {\n    constructor(overlay, live, injector, breakpointObserver, parentSnackBar, defaultConfig) {\n        super(overlay, live, injector, breakpointObserver, parentSnackBar, defaultConfig);\n        this.simpleSnackBarComponent = LegacySimpleSnackBar;\n        this.snackBarContainerComponent = MatLegacySnackBarContainer;\n        this.handsetCssClass = 'mat-snack-bar-handset';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySnackBar, deps: [{ token: i1$2.Overlay }, { token: i2$1.LiveAnnouncer }, { token: i0.Injector }, { token: i3$1.BreakpointObserver }, { token: MatLegacySnackBar, optional: true, skipSelf: true }, { token: MAT_SNACK_BAR_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySnackBar, providedIn: MatLegacySnackBarModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySnackBar, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: MatLegacySnackBarModule }]\n        }], ctorParameters: function () { return [{ type: i1$2.Overlay }, { type: i2$1.LiveAnnouncer }, { type: i0.Injector }, { type: i3$1.BreakpointObserver }, { type: MatLegacySnackBar, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1.MatSnackBarConfig, decorators: [{\n                    type: Inject,\n                    args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]\n                }] }]; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LegacySimpleSnackBar, MatLegacySnackBar, MatLegacySnackBarContainer, MatLegacySnackBarModule };\n"],"names":["i1$2","OverlayModule","i1$1","PortalModule","i2","CommonModule","i0","Component","ViewEncapsulation","ChangeDetectionStrategy","Inject","NgModule","Injectable","Optional","SkipSelf","MatCommonModule","i3","MatLegacyButtonModule","i1","MAT_SNACK_BAR_DATA","_MatSnackBarContainerBase","matSnackBarAnimations","_MatSnackBarBase","MAT_SNACK_BAR_DEFAULT_OPTIONS","MAT_LEGACY_SNACK_BAR_DATA","MAT_LEGACY_SNACK_BAR_DEFAULT_OPTIONS","MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY","MAT_LEGACY_SNACK_BAR_DEFAULT_OPTIONS_FACTORY","MatSnackBarConfig","MatLegacySnackBarConfig","MatSnackBarRef","MatLegacySnackBarRef","_MatLegacySnackBarBase","_MatLegacySnackBarContainerBase","matLegacySnackBarAnimations","i2$1","i3$1","LegacySimpleSnackBar_div_2_Template","rf","ctx","_r2","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","LegacySimpleSnackBar_div_2_Template_button_click_1_listener","ɵɵrestoreView","ctx_r1","ɵɵnextContext","ɵɵresetView","action","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵadvance","ɵɵtextInterpolate","data","MatLegacySnackBarContainer_ng_template_1_Template","LegacySimpleSnackBar","constructor","snackBarRef","dismissWithAction","hasAction","_","ɵfac","LegacySimpleSnackBar_Factory","t","ɵɵdirectiveInject","_2","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","decls","vars","consts","template","LegacySimpleSnackBar_Template","ɵɵtemplate","message","ɵɵproperty","dependencies","NgIf","MatLegacyButton","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","None","OnPush","host","undefined","decorators","MatLegacySnackBarContainer","_afterPortalAttached","snackBarConfig","horizontalPosition","_elementRef","nativeElement","classList","add","verticalPosition","ɵMatLegacySnackBarContainer_BaseFactory","MatLegacySnackBarContainer_Factory","ɵɵgetInheritedFactory","hostVars","hostBindings","MatLegacySnackBarContainer_HostBindings","ɵɵsyntheticHostListener","MatLegacySnackBarContainer_animation_state_done_HostBindingHandler","$event","onAnimationEnd","ɵɵsyntheticHostProperty","_animationState","features","ɵɵInheritDefinitionFeature","MatLegacySnackBarContainer_Template","ɵɵelement","ɵɵattribute","_live","_role","_liveElementId","CdkPortalOutlet","animation","snackBarState","Default","animations","MatLegacySnackBarModule","MatLegacySnackBarModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","exports","declarations","MatLegacySnackBar","overlay","live","injector","breakpointObserver","parentSnackBar","defaultConfig","simpleSnackBarComponent","snackBarContainerComponent","handsetCssClass","MatLegacySnackBar_Factory","ɵɵinject","Overlay","LiveAnnouncer","Injector","BreakpointObserver","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}