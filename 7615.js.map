{"version":3,"file":"7615.js","mappings":"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","sources":["./node_modules/rxjs/dist/esm/internal/Scheduler.js","./node_modules/rxjs/dist/esm/internal/Subject.js","./node_modules/rxjs/dist/esm/internal/operators/debounceTime.js","./node_modules/rxjs/dist/esm/internal/scheduler/Action.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsyncAction.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsyncScheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/async.js","./node_modules/rxjs/dist/esm/internal/scheduler/dateTimestampProvider.js","./node_modules/rxjs/dist/esm/internal/scheduler/intervalProvider.js","./node_modules/rxjs/dist/esm/internal/util/ObjectUnsubscribedError.js","./node_modules/@angular/cdk/fesm2022/observers.mjs"],"sourcesContent":["import { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class Scheduler {\n    constructor(schedulerActionCtor, now = Scheduler.now) {\n        this.schedulerActionCtor = schedulerActionCtor;\n        this.now = now;\n    }\n    schedule(work, delay = 0, state) {\n        return new this.schedulerActionCtor(this, work).schedule(state, delay);\n    }\n}\nScheduler.now = dateTimestampProvider.now;\n","import { Observable } from './Observable';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\nexport class Subject extends Observable {\n    constructor() {\n        super();\n        this.closed = false;\n        this.currentObservers = null;\n        this.observers = [];\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    lift(operator) {\n        const subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    }\n    _throwIfClosed() {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n    }\n    next(value) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                if (!this.currentObservers) {\n                    this.currentObservers = Array.from(this.observers);\n                }\n                for (const observer of this.currentObservers) {\n                    observer.next(value);\n                }\n            }\n        });\n    }\n    error(err) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.hasError = this.isStopped = true;\n                this.thrownError = err;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().error(err);\n                }\n            }\n        });\n    }\n    complete() {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.isStopped = true;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().complete();\n                }\n            }\n        });\n    }\n    unsubscribe() {\n        this.isStopped = this.closed = true;\n        this.observers = this.currentObservers = null;\n    }\n    get observed() {\n        var _a;\n        return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n    _trySubscribe(subscriber) {\n        this._throwIfClosed();\n        return super._trySubscribe(subscriber);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._checkFinalizedStatuses(subscriber);\n        return this._innerSubscribe(subscriber);\n    }\n    _innerSubscribe(subscriber) {\n        const { hasError, isStopped, observers } = this;\n        if (hasError || isStopped) {\n            return EMPTY_SUBSCRIPTION;\n        }\n        this.currentObservers = null;\n        observers.push(subscriber);\n        return new Subscription(() => {\n            this.currentObservers = null;\n            arrRemove(observers, subscriber);\n        });\n    }\n    _checkFinalizedStatuses(subscriber) {\n        const { hasError, thrownError, isStopped } = this;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped) {\n            subscriber.complete();\n        }\n    }\n    asObservable() {\n        const observable = new Observable();\n        observable.source = this;\n        return observable;\n    }\n}\nSubject.create = (destination, source) => {\n    return new AnonymousSubject(destination, source);\n};\nexport class AnonymousSubject extends Subject {\n    constructor(destination, source) {\n        super();\n        this.destination = destination;\n        this.source = source;\n    }\n    next(value) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n    }\n    error(err) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n    }\n    complete() {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    _subscribe(subscriber) {\n        var _a, _b;\n        return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;\n    }\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function debounceTime(dueTime, scheduler = asyncScheduler) {\n    return operate((source, subscriber) => {\n        let activeTask = null;\n        let lastValue = null;\n        let lastTime = null;\n        const emit = () => {\n            if (activeTask) {\n                activeTask.unsubscribe();\n                activeTask = null;\n                const value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        function emitWhenIdle() {\n            const targetTime = lastTime + dueTime;\n            const now = scheduler.now();\n            if (now < targetTime) {\n                activeTask = this.schedule(undefined, targetTime - now);\n                subscriber.add(activeTask);\n                return;\n            }\n            emit();\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            lastValue = value;\n            lastTime = scheduler.now();\n            if (!activeTask) {\n                activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n                subscriber.add(activeTask);\n            }\n        }, () => {\n            emit();\n            subscriber.complete();\n        }, undefined, () => {\n            lastValue = activeTask = null;\n        }));\n    });\n}\n","import { Subscription } from '../Subscription';\nexport class Action extends Subscription {\n    constructor(scheduler, work) {\n        super();\n    }\n    schedule(state, delay = 0) {\n        return this;\n    }\n}\n","import { Action } from './Action';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nexport class AsyncAction extends Action {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    schedule(state, delay = 0) {\n        var _a;\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        const id = this.id;\n        const scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = (_a = this.id) !== null && _a !== void 0 ? _a : this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    }\n    requestAsyncId(scheduler, _id, delay = 0) {\n        return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    }\n    recycleAsyncId(_scheduler, id, delay = 0) {\n        if (delay != null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        if (id != null) {\n            intervalProvider.clearInterval(id);\n        }\n        return undefined;\n    }\n    execute(state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        const error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    }\n    _execute(state, _delay) {\n        let errored = false;\n        let errorValue;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = e ? e : new Error('Scheduled action threw falsy error');\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    }\n    unsubscribe() {\n        if (!this.closed) {\n            const { id, scheduler } = this;\n            const { actions } = scheduler;\n            this.work = this.state = this.scheduler = null;\n            this.pending = false;\n            arrRemove(actions, this);\n            if (id != null) {\n                this.id = this.recycleAsyncId(scheduler, id, null);\n            }\n            this.delay = null;\n            super.unsubscribe();\n        }\n    }\n}\n","import { Scheduler } from '../Scheduler';\nexport class AsyncScheduler extends Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        super(SchedulerAction, now);\n        this.actions = [];\n        this._active = false;\n    }\n    flush(action) {\n        const { actions } = this;\n        if (this._active) {\n            actions.push(action);\n            return;\n        }\n        let error;\n        this._active = true;\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while ((action = actions.shift()));\n        this._active = false;\n        if (error) {\n            while ((action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\nexport const async = asyncScheduler;\n","export const dateTimestampProvider = {\n    now() {\n        return (dateTimestampProvider.delegate || Date).now();\n    },\n    delegate: undefined,\n};\n","export const intervalProvider = {\n    setInterval(handler, timeout, ...args) {\n        const { delegate } = intervalProvider;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) {\n            return delegate.setInterval(handler, timeout, ...args);\n        }\n        return setInterval(handler, timeout, ...args);\n    },\n    clearInterval(handle) {\n        const { delegate } = intervalProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);\n    },\n    delegate: undefined,\n};\n","import { createErrorClass } from './createErrorClass';\nexport const ObjectUnsubscribedError = createErrorClass((_super) => function ObjectUnsubscribedErrorImpl() {\n    _super(this);\n    this.name = 'ObjectUnsubscribedError';\n    this.message = 'object unsubscribed';\n});\n","import { coerceElement, coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Output, Input, NgModule } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * @docs-private\n */\nclass MutationObserverFactory {\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MutationObserverFactory, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MutationObserverFactory, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MutationObserverFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** An injectable service that allows watching elements for changes to their content. */\nclass ContentObserver {\n    constructor(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /** Keeps track of the existing MutationObservers so they can be reused. */\n        this._observedElements = new Map();\n    }\n    ngOnDestroy() {\n        this._observedElements.forEach((_, element) => this._cleanupObserver(element));\n    }\n    observe(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        return new Observable((observer) => {\n            const stream = this._observeElement(element);\n            const subscription = stream.subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            };\n        });\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     */\n    _observeElement(element) {\n        if (!this._observedElements.has(element)) {\n            const stream = new Subject();\n            const observer = this._mutationObserverFactory.create(mutations => stream.next(mutations));\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true,\n                });\n            }\n            this._observedElements.set(element, { observer, stream, count: 1 });\n        }\n        else {\n            this._observedElements.get(element).count++;\n        }\n        return this._observedElements.get(element).stream;\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            this._observedElements.get(element).count--;\n            if (!this._observedElements.get(element).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /** Clean up the underlying MutationObserver for the specified element. */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = this._observedElements.get(element);\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ContentObserver, deps: [{ token: MutationObserverFactory }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ContentObserver, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ContentObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: MutationObserverFactory }]; } });\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /** Debounce interval for emitting the changes. */\n    get debounce() {\n        return this._debounce;\n    }\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    constructor(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /** Event emitted for each change in the element's content. */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    _subscribe() {\n        this._unsubscribe();\n        const stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular(() => {\n            this._currentSubscription = (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n        });\n    }\n    _unsubscribe() {\n        this._currentSubscription?.unsubscribe();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkObserveContent, deps: [{ token: ContentObserver }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: { disabled: [\"cdkObserveContentDisabled\", \"disabled\"], debounce: \"debounce\" }, outputs: { event: \"cdkObserveContent\" }, exportAs: [\"cdkObserveContent\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkObserveContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkObserveContent]',\n                    exportAs: 'cdkObserveContent',\n                }]\n        }], ctorParameters: function () { return [{ type: ContentObserver }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { event: [{\n                type: Output,\n                args: ['cdkObserveContent']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkObserveContentDisabled']\n            }], debounce: [{\n                type: Input\n            }] } });\nclass ObserversModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ObserversModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: ObserversModule, declarations: [CdkObserveContent], exports: [CdkObserveContent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ObserversModule, providers: [MutationObserverFactory] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ObserversModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkObserveContent],\n                    declarations: [CdkObserveContent],\n                    providers: [MutationObserverFactory],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkObserveContent, ContentObserver, MutationObserverFactory, ObserversModule };\n"],"names":["dateTimestampProvider","Scheduler","constructor","schedulerActionCtor","now","schedule","work","delay","state","Observable","Subscription","EMPTY_SUBSCRIPTION","ObjectUnsubscribedError","arrRemove","errorContext","Subject","closed","currentObservers","observers","isStopped","hasError","thrownError","lift","operator","subject","AnonymousSubject","_throwIfClosed","next","value","Array","from","observer","error","err","length","shift","complete","unsubscribe","observed","_a","_trySubscribe","subscriber","_subscribe","_checkFinalizedStatuses","_innerSubscribe","push","asObservable","observable","source","create","destination","_b","call","subscribe","asyncScheduler","operate","createOperatorSubscriber","debounceTime","dueTime","scheduler","activeTask","lastValue","lastTime","emit","emitWhenIdle","targetTime","undefined","add","Action","intervalProvider","AsyncAction","pending","id","recycleAsyncId","requestAsyncId","_id","setInterval","flush","bind","_scheduler","clearInterval","execute","Error","_execute","_delay","errored","errorValue","e","actions","AsyncScheduler","SchedulerAction","_active","action","async","delegate","Date","handler","timeout","args","handle","createErrorClass","_super","ObjectUnsubscribedErrorImpl","name","message","coerceElement","coerceBooleanProperty","coerceNumberProperty","i0","Injectable","EventEmitter","Directive","Output","Input","NgModule","MutationObserverFactory","callback","MutationObserver","_","ɵfac","MutationObserverFactory_Factory","t","_2","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","ContentObserver","_mutationObserverFactory","_observedElements","Map","ngOnDestroy","forEach","element","_cleanupObserver","observe","elementOrRef","stream","_observeElement","subscription","_unobserveElement","has","mutations","characterData","childList","subtree","set","count","get","disconnect","delete","ContentObserver_Factory","ɵɵinject","CdkObserveContent","disabled","_disabled","_unsubscribe","debounce","_debounce","_contentObserver","_elementRef","_ngZone","event","_currentSubscription","ngAfterContentInit","runOutsideAngular","pipe","CdkObserveContent_Factory","ɵɵdirectiveInject","ElementRef","NgZone","ɵdir","ɵɵdefineDirective","selectors","inputs","outputs","exportAs","selector","ObserversModule","ObserversModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","providers","exports","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10]}