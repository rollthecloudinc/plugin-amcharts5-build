{"version":3,"file":"4062.js","mappings":";;;;;;;;;;;;;AAAoC;AAC7B,MAAMC,eAAe,SAASD,6CAAO,CAAC;EACzCE,WAAWA,CAACC,MAAM,EAAE;IAChB,KAAK,EAAE;IACP,IAAI,CAACA,MAAM,GAAGA,MAAM;EACxB;EACA,IAAIC,KAAKA,CAAA,EAAG;IACR,OAAO,IAAI,CAACC,QAAQ,EAAE;EAC1B;EACAC,UAAUA,CAACC,UAAU,EAAE;IACnB,MAAMC,YAAY,GAAG,KAAK,CAACF,UAAU,CAACC,UAAU,CAAC;IACjD,CAACC,YAAY,CAACC,MAAM,IAAIF,UAAU,CAACG,IAAI,CAAC,IAAI,CAACP,MAAM,CAAC;IACpD,OAAOK,YAAY;EACvB;EACAH,QAAQA,CAAA,EAAG;IACP,MAAM;MAAEM,QAAQ;MAAEC,WAAW;MAAET;IAAO,CAAC,GAAG,IAAI;IAC9C,IAAIQ,QAAQ,EAAE;MACV,MAAMC,WAAW;IACrB;IACA,IAAI,CAACC,cAAc,EAAE;IACrB,OAAOV,MAAM;EACjB;EACAO,IAAIA,CAACN,KAAK,EAAE;IACR,KAAK,CAACM,IAAI,CAAE,IAAI,CAACP,MAAM,GAAGC,KAAK,CAAE;EACrC;AACJ;;;;;;;;;;;;;;;;;;;;ACzB0C;AACwB;AACO;AAC5B;AACM;AAC5C,MAAMJ,OAAO,SAASc,mDAAU,CAAC;EACpCZ,WAAWA,CAAA,EAAG;IACV,KAAK,EAAE;IACP,IAAI,CAACO,MAAM,GAAG,KAAK;IACnB,IAAI,CAACW,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACC,SAAS,GAAG,EAAE;IACnB,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACX,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,WAAW,GAAG,IAAI;EAC3B;EACAW,IAAIA,CAACC,QAAQ,EAAE;IACX,MAAMC,OAAO,GAAG,IAAIC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC;IAChDD,OAAO,CAACD,QAAQ,GAAGA,QAAQ;IAC3B,OAAOC,OAAO;EAClB;EACAZ,cAAcA,CAAA,EAAG;IACb,IAAI,IAAI,CAACJ,MAAM,EAAE;MACb,MAAM,IAAIQ,kFAAuB,EAAE;IACvC;EACJ;EACAP,IAAIA,CAACN,KAAK,EAAE;IACRe,gEAAY,CAAC,MAAM;MACf,IAAI,CAACN,cAAc,EAAE;MACrB,IAAI,CAAC,IAAI,CAACS,SAAS,EAAE;QACjB,IAAI,CAAC,IAAI,CAACF,gBAAgB,EAAE;UACxB,IAAI,CAACA,gBAAgB,GAAGO,KAAK,CAACC,IAAI,CAAC,IAAI,CAACP,SAAS,CAAC;QACtD;QACA,KAAK,MAAMQ,QAAQ,IAAI,IAAI,CAACT,gBAAgB,EAAE;UAC1CS,QAAQ,CAACnB,IAAI,CAACN,KAAK,CAAC;QACxB;MACJ;IACJ,CAAC,CAAC;EACN;EACA0B,KAAKA,CAACC,GAAG,EAAE;IACPZ,gEAAY,CAAC,MAAM;MACf,IAAI,CAACN,cAAc,EAAE;MACrB,IAAI,CAAC,IAAI,CAACS,SAAS,EAAE;QACjB,IAAI,CAACX,QAAQ,GAAG,IAAI,CAACW,SAAS,GAAG,IAAI;QACrC,IAAI,CAACV,WAAW,GAAGmB,GAAG;QACtB,MAAM;UAAEV;QAAU,CAAC,GAAG,IAAI;QAC1B,OAAOA,SAAS,CAACW,MAAM,EAAE;UACrBX,SAAS,CAACY,KAAK,EAAE,CAACH,KAAK,CAACC,GAAG,CAAC;QAChC;MACJ;IACJ,CAAC,CAAC;EACN;EACAG,QAAQA,CAAA,EAAG;IACPf,gEAAY,CAAC,MAAM;MACf,IAAI,CAACN,cAAc,EAAE;MACrB,IAAI,CAAC,IAAI,CAACS,SAAS,EAAE;QACjB,IAAI,CAACA,SAAS,GAAG,IAAI;QACrB,MAAM;UAAED;QAAU,CAAC,GAAG,IAAI;QAC1B,OAAOA,SAAS,CAACW,MAAM,EAAE;UACrBX,SAAS,CAACY,KAAK,EAAE,CAACC,QAAQ,EAAE;QAChC;MACJ;IACJ,CAAC,CAAC;EACN;EACAC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACb,SAAS,GAAG,IAAI,CAACb,MAAM,GAAG,IAAI;IACnC,IAAI,CAACY,SAAS,GAAG,IAAI,CAACD,gBAAgB,GAAG,IAAI;EACjD;EACA,IAAIgB,QAAQA,CAAA,EAAG;IACX,IAAIC,EAAE;IACN,OAAO,CAAC,CAACA,EAAE,GAAG,IAAI,CAAChB,SAAS,MAAM,IAAI,IAAIgB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACL,MAAM,IAAI,CAAC;EACrF;EACAM,aAAaA,CAAC/B,UAAU,EAAE;IACtB,IAAI,CAACM,cAAc,EAAE;IACrB,OAAO,KAAK,CAACyB,aAAa,CAAC/B,UAAU,CAAC;EAC1C;EACAD,UAAUA,CAACC,UAAU,EAAE;IACnB,IAAI,CAACM,cAAc,EAAE;IACrB,IAAI,CAAC0B,uBAAuB,CAAChC,UAAU,CAAC;IACxC,OAAO,IAAI,CAACiC,eAAe,CAACjC,UAAU,CAAC;EAC3C;EACAiC,eAAeA,CAACjC,UAAU,EAAE;IACxB,MAAM;MAAEI,QAAQ;MAAEW,SAAS;MAAED;IAAU,CAAC,GAAG,IAAI;IAC/C,IAAIV,QAAQ,IAAIW,SAAS,EAAE;MACvB,OAAON,6DAAkB;IAC7B;IACA,IAAI,CAACI,gBAAgB,GAAG,IAAI;IAC5BC,SAAS,CAACoB,IAAI,CAAClC,UAAU,CAAC;IAC1B,OAAO,IAAIQ,uDAAY,CAAC,MAAM;MAC1B,IAAI,CAACK,gBAAgB,GAAG,IAAI;MAC5BF,0DAAS,CAACG,SAAS,EAAEd,UAAU,CAAC;IACpC,CAAC,CAAC;EACN;EACAgC,uBAAuBA,CAAChC,UAAU,EAAE;IAChC,MAAM;MAAEI,QAAQ;MAAEC,WAAW;MAAEU;IAAU,CAAC,GAAG,IAAI;IACjD,IAAIX,QAAQ,EAAE;MACVJ,UAAU,CAACuB,KAAK,CAAClB,WAAW,CAAC;IACjC,CAAC,MACI,IAAIU,SAAS,EAAE;MAChBf,UAAU,CAAC2B,QAAQ,EAAE;IACzB;EACJ;EACAQ,YAAYA,CAAA,EAAG;IACX,MAAMC,UAAU,GAAG,IAAI7B,mDAAU,EAAE;IACnC6B,UAAU,CAACC,MAAM,GAAG,IAAI;IACxB,OAAOD,UAAU;EACrB;AACJ;AACA3C,OAAO,CAAC6C,MAAM,GAAG,CAACC,WAAW,EAAEF,MAAM,KAAK;EACtC,OAAO,IAAIlB,gBAAgB,CAACoB,WAAW,EAAEF,MAAM,CAAC;AACpD,CAAC;AACM,MAAMlB,gBAAgB,SAAS1B,OAAO,CAAC;EAC1CE,WAAWA,CAAC4C,WAAW,EAAEF,MAAM,EAAE;IAC7B,KAAK,EAAE;IACP,IAAI,CAACE,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACF,MAAM,GAAGA,MAAM;EACxB;EACAlC,IAAIA,CAACN,KAAK,EAAE;IACR,IAAIiC,EAAE,EAAEU,EAAE;IACV,CAACA,EAAE,GAAG,CAACV,EAAE,GAAG,IAAI,CAACS,WAAW,MAAM,IAAI,IAAIT,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC3B,IAAI,MAAM,IAAI,IAAIqC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACC,IAAI,CAACX,EAAE,EAAEjC,KAAK,CAAC;EACvI;EACA0B,KAAKA,CAACC,GAAG,EAAE;IACP,IAAIM,EAAE,EAAEU,EAAE;IACV,CAACA,EAAE,GAAG,CAACV,EAAE,GAAG,IAAI,CAACS,WAAW,MAAM,IAAI,IAAIT,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACP,KAAK,MAAM,IAAI,IAAIiB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACC,IAAI,CAACX,EAAE,EAAEN,GAAG,CAAC;EACtI;EACAG,QAAQA,CAAA,EAAG;IACP,IAAIG,EAAE,EAAEU,EAAE;IACV,CAACA,EAAE,GAAG,CAACV,EAAE,GAAG,IAAI,CAACS,WAAW,MAAM,IAAI,IAAIT,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACH,QAAQ,MAAM,IAAI,IAAIa,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACC,IAAI,CAACX,EAAE,CAAC;EACpI;EACA/B,UAAUA,CAACC,UAAU,EAAE;IACnB,IAAI8B,EAAE,EAAEU,EAAE;IACV,OAAO,CAACA,EAAE,GAAG,CAACV,EAAE,GAAG,IAAI,CAACO,MAAM,MAAM,IAAI,IAAIP,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACY,SAAS,CAAC1C,UAAU,CAAC,MAAM,IAAI,IAAIwC,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG/B,6DAAkB;EACtJ;AACJ;;;;;;;;;;;;;;;;ACpI2C;AACpC,MAAMkC,KAAK,GAAG,IAAIpC,mDAAU,CAAEP,UAAU,IAAKA,UAAU,CAAC2B,QAAQ,EAAE,CAAC;AACnE,SAASiB,KAAKA,CAACC,SAAS,EAAE;EAC7B,OAAOA,SAAS,GAAGC,cAAc,CAACD,SAAS,CAAC,GAAGF,KAAK;AACxD;AACA,SAASG,cAAcA,CAACD,SAAS,EAAE;EAC/B,OAAO,IAAItC,mDAAU,CAAEP,UAAU,IAAK6C,SAAS,CAACE,QAAQ,CAAC,MAAM/C,UAAU,CAAC2B,QAAQ,EAAE,CAAC,CAAC;AAC1F;;;;;;;;;;;;;;;;ACP4C;AACd;AACvB,SAASsB,EAAEA,CAAC,GAAGC,IAAI,EAAE;EACxB,MAAML,SAAS,GAAGG,wDAAY,CAACE,IAAI,CAAC;EACpC,OAAO7B,2CAAI,CAAC6B,IAAI,EAAEL,SAAS,CAAC;AAChC;;;;;;;;;;;;;;;;ACL2C;AACpC,SAASO,wBAAwBA,CAACb,WAAW,EAAEc,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAEC,UAAU,EAAE;EAC3F,OAAO,IAAIC,kBAAkB,CAAClB,WAAW,EAAEc,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAEC,UAAU,CAAC;AACvF;AACO,MAAMC,kBAAkB,SAASN,mDAAU,CAAC;EAC/CxD,WAAWA,CAAC4C,WAAW,EAAEc,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAEC,UAAU,EAAEE,iBAAiB,EAAE;IACjF,KAAK,CAACnB,WAAW,CAAC;IAClB,IAAI,CAACiB,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACE,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACC,KAAK,GAAGN,MAAM,GACb,UAAUxD,KAAK,EAAE;MACf,IAAI;QACAwD,MAAM,CAACxD,KAAK,CAAC;MACjB,CAAC,CACD,OAAO2B,GAAG,EAAE;QACRe,WAAW,CAAChB,KAAK,CAACC,GAAG,CAAC;MAC1B;IACJ,CAAC,GACC,KAAK,CAACmC,KAAK;IACjB,IAAI,CAACC,MAAM,GAAGL,OAAO,GACf,UAAU/B,GAAG,EAAE;MACb,IAAI;QACA+B,OAAO,CAAC/B,GAAG,CAAC;MAChB,CAAC,CACD,OAAOA,GAAG,EAAE;QACRe,WAAW,CAAChB,KAAK,CAACC,GAAG,CAAC;MAC1B,CAAC,SACO;QACJ,IAAI,CAACI,WAAW,EAAE;MACtB;IACJ,CAAC,GACC,KAAK,CAACgC,MAAM;IAClB,IAAI,CAACC,SAAS,GAAGP,UAAU,GACrB,YAAY;MACV,IAAI;QACAA,UAAU,EAAE;MAChB,CAAC,CACD,OAAO9B,GAAG,EAAE;QACRe,WAAW,CAAChB,KAAK,CAACC,GAAG,CAAC;MAC1B,CAAC,SACO;QACJ,IAAI,CAACI,WAAW,EAAE;MACtB;IACJ,CAAC,GACC,KAAK,CAACiC,SAAS;EACzB;EACAjC,WAAWA,CAAA,EAAG;IACV,IAAIE,EAAE;IACN,IAAI,CAAC,IAAI,CAAC4B,iBAAiB,IAAI,IAAI,CAACA,iBAAiB,EAAE,EAAE;MACrD,MAAM;QAAExD;MAAO,CAAC,GAAG,IAAI;MACvB,KAAK,CAAC0B,WAAW,EAAE;MACnB,CAAC1B,MAAM,KAAK,CAAC4B,EAAE,GAAG,IAAI,CAAC0B,UAAU,MAAM,IAAI,IAAI1B,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACW,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1F;EACJ;AACJ;;;;;;;;;;;;;;;;;ACtD4C;AACL;AACyB;AACzD,SAASsB,IAAIA,CAACC,KAAK,EAAE;EACxB,OAAOA,KAAK,IAAI,CAAC,GAET,MAAMrB,oDAAK,GACbmB,mDAAO,CAAC,CAACzB,MAAM,EAAErC,UAAU,KAAK;IAC9B,IAAIiE,IAAI,GAAG,CAAC;IACZ5B,MAAM,CAACK,SAAS,CAACU,6EAAwB,CAACpD,UAAU,EAAGH,KAAK,IAAK;MAC7D,IAAI,EAAEoE,IAAI,IAAID,KAAK,EAAE;QACjBhE,UAAU,CAACG,IAAI,CAACN,KAAK,CAAC;QACtB,IAAImE,KAAK,IAAIC,IAAI,EAAE;UACfjE,UAAU,CAAC2B,QAAQ,EAAE;QACzB;MACJ;IACJ,CAAC,CAAC,CAAC;EACP,CAAC,CAAC;AACV;;;;;;;;;;;;;;;;;;AClBuC;AACyB;AACZ;AAChB;AAC7B,SAASyC,SAASA,CAACC,QAAQ,EAAE;EAChC,OAAOP,mDAAO,CAAC,CAACzB,MAAM,EAAErC,UAAU,KAAK;IACnCkE,gEAAS,CAACG,QAAQ,CAAC,CAAC3B,SAAS,CAACU,6EAAwB,CAACpD,UAAU,EAAE,MAAMA,UAAU,CAAC2B,QAAQ,EAAE,EAAEwC,4CAAI,CAAC,CAAC;IACtG,CAACnE,UAAU,CAACE,MAAM,IAAImC,MAAM,CAACK,SAAS,CAAC1C,UAAU,CAAC;EACtD,CAAC,CAAC;AACN;;;;;;;;;;;;;;;ACTsD;AAC/C,MAAMU,uBAAuB,GAAG4D,mEAAgB,CAAEC,MAAM,IAAK,SAASC,2BAA2BA,CAAA,EAAG;EACvGD,MAAM,CAAC,IAAI,CAAC;EACZ,IAAI,CAACE,IAAI,GAAG,yBAAyB;EACrC,IAAI,CAACC,OAAO,GAAG,qBAAqB;AACxC,CAAC,CAAC;;;;;;;;;;;;;;;;ACLyC;AACD;AACnC,SAASE,YAAYA,CAACC,GAAG,EAAE;EAC9B,OAAO,CAAC,CAACA,GAAG,KAAKA,GAAG,YAAYtE,mDAAU,IAAKoE,uDAAU,CAACE,GAAG,CAAC7D,IAAI,CAAC,IAAI2D,uDAAU,CAACE,GAAG,CAACnC,SAAS,CAAE,CAAC;AACtG;;;;;;;;;;;;;;;;ACJ0C;AACnC,SAASoC,OAAOA,CAACzC,MAAM,EAAE;EAC5B,OAAOsC,uDAAU,CAACtC,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACrB,IAAI,CAAC;AAClF;AACO,SAAS8C,OAAOA,CAACiB,IAAI,EAAE;EAC1B,OAAQ1C,MAAM,IAAK;IACf,IAAIyC,OAAO,CAACzC,MAAM,CAAC,EAAE;MACjB,OAAOA,MAAM,CAACrB,IAAI,CAAC,UAAUgE,YAAY,EAAE;QACvC,IAAI;UACA,OAAOD,IAAI,CAACC,YAAY,EAAE,IAAI,CAAC;QACnC,CAAC,CACD,OAAOxD,GAAG,EAAE;UACR,IAAI,CAACD,KAAK,CAACC,GAAG,CAAC;QACnB;MACJ,CAAC,CAAC;IACN;IACA,MAAM,IAAIyD,SAAS,CAAC,wCAAwC,CAAC;EACjE,CAAC;AACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBwC;AACsB;AAC+E;AACvF;AACV;AACC;AACY;AACd;AACP;AAC0O;AACtM;AACvB;;AAEjD;AACA;AACA;AACA;AACA;AACA;AALA,MAAAgC,GAAA;AAAA,MAAAC,GAAA;AAAA,SAAAC,4BAAAC,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAoDoGvB,4DAAE,YA+/D7B;IA//D2BA,oDAAE,GAigEhG;IAjgE8FA,0DAAE,EAigE3F;EAAA;EAAA,IAAAuB,EAAA;IAAA,MAAAK,MAAA,GAjgEyF5B,2DAAE;IAAFA,yDAAE,eAAA4B,MAAA,CAAAG,OAAA,CA+/D9B;IA//D4B/B,uDAAE,GAigEhG;IAjgE8FA,gEAAE,MAAA4B,MAAA,CAAAM,UAAA,MAigEhG;EAAA;AAAA;AAAA,SAAAC,4BAAAZ,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAjgE8FvB,4DAAE,YAkgE/B;IAlgE6BA,oDAAE,GAogEhG;IApgE8FA,0DAAE,EAogE3F;EAAA;EAAA,IAAAuB,EAAA;IAAA,MAAAa,OAAA,GAAAZ,GAAA,CAAAa,SAAA;IAAA,MAAAC,MAAA,GApgEyFtC,2DAAE;IAAFA,yDAAE,eAAAsC,MAAA,CAAAP,OAAA,CAkgEhC;IAlgE8B/B,uDAAE,GAogEhG;IApgE8FA,gEAAE,MAAAsC,MAAA,CAAAC,YAAA,CAAAH,OAAA,EAAAE,MAAA,CAAA1D,IAAA,OAogEhG;EAAA;AAAA;AAljEN,SAAS4D,mBAAmBA,CAACC,IAAI,EAAE;EAC/B,OAAO,cAAcA,IAAI,CAAC;IACtB;IACA,IAAIC,MAAMA,CAAA,EAAG;MACT,OAAO,IAAI,CAACC,OAAO;IACvB;IACA,IAAID,MAAMA,CAACE,CAAC,EAAE;MACV,MAAMC,SAAS,GAAG,IAAI,CAACF,OAAO;MAC9B,IAAI,CAACA,OAAO,GAAGrD,4EAAqB,CAACsD,CAAC,CAAC;MACvC,IAAI,CAACE,iBAAiB,GAAGD,SAAS,KAAK,IAAI,CAACF,OAAO;IACvD;IACA;IACAI,gBAAgBA,CAAA,EAAG;MACf,MAAMA,gBAAgB,GAAG,IAAI,CAACD,iBAAiB;MAC/C,IAAI,CAACA,iBAAiB,GAAG,KAAK;MAC9B,OAAOC,gBAAgB;IAC3B;IACA;IACAC,kBAAkBA,CAAA,EAAG;MACjB,IAAI,CAACF,iBAAiB,GAAG,KAAK;IAClC;IACAhJ,WAAWA,CAAC,GAAGuD,IAAI,EAAE;MACjB,KAAK,CAAC,GAAGA,IAAI,CAAC;MACd,IAAI,CAACsF,OAAO,GAAG,KAAK;MACpB;MACA,IAAI,CAACG,iBAAiB,GAAG,KAAK;IAClC;EACJ,CAAC;AACL;;AAEA;AACA;AACA;AACA;AACA,MAAMG,SAAS,GAAG,IAAIhD,yDAAc,CAAC,WAAW,CAAC;AACjD;AACA,MAAMiD,mBAAmB,GAAG,IAAIjD,yDAAc,CAAC,qBAAqB,CAAC;;AAErE;AACA;AACA;AACA;AACA,MAAMkD,UAAU,CAAC;EACbrJ,WAAWA,CAAA,CAAC,oBAAqBsJ,QAAQ,EAAE;IACvC,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC5B;EAAC,QAAAC,CAAA,GACQ,IAAI,CAACC,IAAI,YAAAC,mBAAAC,CAAA;IAAA,YAAAA,CAAA,IAAwFL,UAAU,EAApBnD,+DAAE,CAAoCA,sDAAc;EAAA,CAA4C;EAAA,QAAA2D,EAAA,GACvL,IAAI,CAACC,IAAI,kBAD8E5D,+DAAE;IAAA8D,IAAA,EACJX,UAAU;IAAAY,SAAA;EAAA,EAA2C;AACvJ;AACA;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAHoGhE,+DAAE,CAGXmD,UAAU,EAAc,CAAC;IACxGW,IAAI,EAAE5D,oDAAS;IACf7C,IAAI,EAAE,CAAC;MAAE6G,QAAQ,EAAE;IAAe,CAAC;EACvC,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEJ,IAAI,EAAE9D,sDAAc0D;IAAC,CAAC,CAAC;EAAE,CAAC;AAAA;AAC9E;AACA;AACA;AACA;AACA,MAAMS,gBAAgB,CAAC;EACnBrK,WAAWA,CAAA,CAAC,oBAAqBsJ,QAAQ,EAAE;IACvC,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC5B;EAAC,QAAAC,CAAA,GACQ,IAAI,CAACC,IAAI,YAAAc,yBAAAZ,CAAA;IAAA,YAAAA,CAAA,IAAwFW,gBAAgB,EAf1BnE,+DAAE,CAe0CA,sDAAc;EAAA,CAA4C;EAAA,QAAA2D,EAAA,GAC7L,IAAI,CAACC,IAAI,kBAhB8E5D,+DAAE;IAAA8D,IAAA,EAgBJK,gBAAgB;IAAAJ,SAAA;EAAA,EAAiD;AACnK;AACA;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAlBoGhE,+DAAE,CAkBXmE,gBAAgB,EAAc,CAAC;IAC9GL,IAAI,EAAE5D,oDAAS;IACf7C,IAAI,EAAE,CAAC;MAAE6G,QAAQ,EAAE;IAAqB,CAAC;EAC7C,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEJ,IAAI,EAAE9D,sDAAc0D;IAAC,CAAC,CAAC;EAAE,CAAC;AAAA;AAC9E;AACA;AACA;AACA;AACA,MAAMW,gBAAgB,CAAC;EACnBvK,WAAWA,CAAA,CAAC,oBAAqBsJ,QAAQ,EAAE;IACvC,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC5B;EAAC,QAAAC,CAAA,GACQ,IAAI,CAACC,IAAI,YAAAgB,yBAAAd,CAAA;IAAA,YAAAA,CAAA,IAAwFa,gBAAgB,EA9B1BrE,+DAAE,CA8B0CA,sDAAc;EAAA,CAA4C;EAAA,QAAA2D,EAAA,GAC7L,IAAI,CAACC,IAAI,kBA/B8E5D,+DAAE;IAAA8D,IAAA,EA+BJO,gBAAgB;IAAAN,SAAA;EAAA,EAAiD;AACnK;AACA;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAjCoGhE,+DAAE,CAiCXqE,gBAAgB,EAAc,CAAC;IAC9GP,IAAI,EAAE5D,oDAAS;IACf7C,IAAI,EAAE,CAAC;MAAE6G,QAAQ,EAAE;IAAqB,CAAC;EAC7C,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEJ,IAAI,EAAE9D,sDAAc0D;IAAC,CAAC,CAAC;EAAE,CAAC;AAAA;AAC9E;AACA;AACA,MAAMa,gBAAgB,CAAC;AAEvB,MAAMC,iBAAiB,GAAGhC,mBAAmB,CAAC+B,gBAAgB,CAAC;AAC/D;AACA;AACA;AACA;AACA,MAAME,YAAY,SAASD,iBAAiB,CAAC;EACzC;EACA,IAAI5F,IAAIA,CAAA,EAAG;IACP,OAAO,IAAI,CAAC8F,KAAK;EACrB;EACA,IAAI9F,IAAIA,CAACA,IAAI,EAAE;IACX,IAAI,CAAC+F,aAAa,CAAC/F,IAAI,CAAC;EAC5B;EACA;AACJ;AACA;AACA;AACA;EACI,IAAIgG,SAASA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACC,UAAU;EAC1B;EACA,IAAID,SAASA,CAAChC,CAAC,EAAE;IACb,MAAMC,SAAS,GAAG,IAAI,CAACgC,UAAU;IACjC,IAAI,CAACA,UAAU,GAAGvF,4EAAqB,CAACsD,CAAC,CAAC;IAC1C,IAAI,CAACE,iBAAiB,GAAGD,SAAS,KAAK,IAAI,CAACgC,UAAU;EAC1D;EACA/K,WAAWA,CAACgL,MAAM,EAAE;IAChB,KAAK,EAAE;IACP,IAAI,CAACA,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACD,UAAU,GAAG,KAAK;EAC3B;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIE,yBAAyBA,CAAA,EAAG;IACxB,IAAI,CAACC,mBAAmB,GAAG,CAAE,cAAa,IAAI,CAACC,oBAAqB,EAAC,CAAC;EAC1E;EACA;AACJ;AACA;AACA;AACA;AACA;EACIN,aAAaA,CAAC3K,KAAK,EAAE;IACjB;IACA;IACA,IAAIA,KAAK,EAAE;MACP,IAAI,CAAC0K,KAAK,GAAG1K,KAAK;MAClB,IAAI,CAACiL,oBAAoB,GAAGjL,KAAK,CAACkL,OAAO,CAAC,eAAe,EAAE,GAAG,CAAC;MAC/D,IAAI,CAACH,yBAAyB,EAAE;IACpC;EACJ;EAAC,QAAA1B,CAAA,GACQ,IAAI,CAACC,IAAI,YAAA6B,qBAAA3B,CAAA;IAAA,YAAAA,CAAA,IAAwFiB,YAAY,EAjGtBzE,+DAAE,CAiGsCiD,SAAS;EAAA,CAA4D;EAAA,QAAAU,EAAA,GACpM,IAAI,CAACC,IAAI,kBAlG8E5D,+DAAE;IAAA8D,IAAA,EAkGJW,YAAY;IAAAV,SAAA;IAAAqB,cAAA,WAAAC,4BAAA9D,EAAA,EAAAC,GAAA,EAAA8D,QAAA;MAAA,IAAA/D,EAAA;QAlGVvB,4DAAE,CAAAsF,QAAA,EAkGyQnC,UAAU;QAlGrRnD,4DAAE,CAAAsF,QAAA,EAkGgWnB,gBAAgB;QAlGlXnE,4DAAE,CAAAsF,QAAA,EAkG6bjB,gBAAgB;MAAA;MAAA,IAAA9C,EAAA;QAAA,IAAAiE,EAAA;QAlG/cxF,4DAAE,CAAAwF,EAAA,GAAFxF,yDAAE,QAAAwB,GAAA,CAAAmE,IAAA,GAAAH,EAAA,CAAAI,KAAA;QAAF5F,4DAAE,CAAAwF,EAAA,GAAFxF,yDAAE,QAAAwB,GAAA,CAAAqE,UAAA,GAAAL,EAAA,CAAAI,KAAA;QAAF5F,4DAAE,CAAAwF,EAAA,GAAFxF,yDAAE,QAAAwB,GAAA,CAAAsE,UAAA,GAAAN,EAAA,CAAAI,KAAA;MAAA;IAAA;IAAAG,MAAA;MAAArD,MAAA;MAAA9D,IAAA;MAAAgG,SAAA;IAAA;IAAAoB,QAAA,GAAFhG,gEAAE,CAkGuI,CAAC;MAAEkG,OAAO,EAAE,4BAA4B;MAAEC,WAAW,EAAE1B;IAAa,CAAC,CAAC,GAlG/MzE,wEAAE;EAAA,EAkG2gB;AACjnB;AACA;EAAA,QAAAgE,SAAA,oBAAAA,SAAA,KApGoGhE,+DAAE,CAoGXyE,YAAY,EAAc,CAAC;IAC1GX,IAAI,EAAE5D,oDAAS;IACf7C,IAAI,EAAE,CAAC;MACC6G,QAAQ,EAAE,gBAAgB;MAC1B6B,MAAM,EAAE,CAAC,QAAQ,CAAC;MAClBM,SAAS,EAAE,CAAC;QAAEH,OAAO,EAAE,4BAA4B;QAAEC,WAAW,EAAE1B;MAAa,CAAC;IACpF,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEX,IAAI,EAAEwC,SAAS;MAAEC,UAAU,EAAE,CAAC;QAC9DzC,IAAI,EAAE3D,iDAAM;QACZ9C,IAAI,EAAE,CAAC4F,SAAS;MACpB,CAAC,EAAE;QACCa,IAAI,EAAE1D,mDAAQA;MAClB,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAExB,IAAI,EAAE,CAAC;MACnCkF,IAAI,EAAEzD,gDAAK;MACXhD,IAAI,EAAE,CAAC,cAAc;IACzB,CAAC,CAAC;IAAEuH,SAAS,EAAE,CAAC;MACZd,IAAI,EAAEzD,gDAAK;MACXhD,IAAI,EAAE,CAAC,WAAW;IACtB,CAAC,CAAC;IAAEsI,IAAI,EAAE,CAAC;MACP7B,IAAI,EAAExD,uDAAY;MAClBjD,IAAI,EAAE,CAAC8F,UAAU;IACrB,CAAC,CAAC;IAAE0C,UAAU,EAAE,CAAC;MACb/B,IAAI,EAAExD,uDAAY;MAClBjD,IAAI,EAAE,CAAC8G,gBAAgB;IAC3B,CAAC,CAAC;IAAE2B,UAAU,EAAE,CAAC;MACbhC,IAAI,EAAExD,uDAAY;MAClBjD,IAAI,EAAE,CAACgH,gBAAgB;IAC3B,CAAC;EAAE,CAAC;AAAA;AAChB;AACA,MAAMmC,WAAW,CAAC;EACd1M,WAAWA,CAAC2M,SAAS,EAAEC,UAAU,EAAE;IAC/BA,UAAU,CAACC,aAAa,CAACC,SAAS,CAACC,GAAG,CAAC,GAAGJ,SAAS,CAACzB,mBAAmB,CAAC;EAC5E;AACJ;AACA;AACA,MAAM8B,aAAa,SAASN,WAAW,CAAC;EACpC1M,WAAWA,CAAC2M,SAAS,EAAEC,UAAU,EAAE;IAC/B,KAAK,CAACD,SAAS,EAAEC,UAAU,CAAC;EAChC;EAAC,QAAArD,CAAA,GACQ,IAAI,CAACC,IAAI,YAAAyD,sBAAAvD,CAAA;IAAA,YAAAA,CAAA,IAAwFsD,aAAa,EA3IvB9G,+DAAE,CA2IuCyE,YAAY,GA3IrDzE,+DAAE,CA2IgEA,qDAAa;EAAA,CAA4C;EAAA,QAAA2D,EAAA,GAClN,IAAI,CAACC,IAAI,kBA5I8E5D,+DAAE;IAAA8D,IAAA,EA4IJgD,aAAa;IAAA/C,SAAA;IAAAkD,SAAA,WAAkF,cAAc;IAAAjB,QAAA,GA5I3GhG,wEAAE;EAAA,EA4IwL;AAC9R;AACA;EAAA,QAAAgE,SAAA,oBAAAA,SAAA,KA9IoGhE,+DAAE,CA8IX8G,aAAa,EAAc,CAAC;IAC3GhD,IAAI,EAAE5D,oDAAS;IACf7C,IAAI,EAAE,CAAC;MACC6G,QAAQ,EAAE,sCAAsC;MAChDgD,IAAI,EAAE;QACF,OAAO,EAAE,iBAAiB;QAC1B,MAAM,EAAE;MACZ;IACJ,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEpD,IAAI,EAAEW;IAAa,CAAC,EAAE;MAAEX,IAAI,EAAE9D,qDAAagH;IAAC,CAAC,CAAC;EAAE,CAAC;AAAA;AACrG;AACA,MAAMG,aAAa,SAASX,WAAW,CAAC;EACpC1M,WAAWA,CAAC2M,SAAS,EAAEC,UAAU,EAAE;IAC/B,KAAK,CAACD,SAAS,EAAEC,UAAU,CAAC;IAC5B,IAAID,SAAS,CAAC3B,MAAM,EAAEsC,WAAW,CAACT,aAAa,CAACU,QAAQ,KAAK,CAAC,EAAE;MAC5D,MAAMC,SAAS,GAAGb,SAAS,CAAC3B,MAAM,CAACsC,WAAW,CAACT,aAAa,CAACY,YAAY,CAAC,MAAM,CAAC;MACjF,MAAMC,IAAI,GAAGF,SAAS,KAAK,MAAM,IAAIA,SAAS,KAAK,UAAU,GAAG,UAAU,GAAG,MAAM;MACnFZ,UAAU,CAACC,aAAa,CAACc,YAAY,CAAC,MAAM,EAAED,IAAI,CAAC;IACvD;EACJ;EAAC,QAAAnE,CAAA,GACQ,IAAI,CAACC,IAAI,YAAAoE,sBAAAlE,CAAA;IAAA,YAAAA,CAAA,IAAwF2D,aAAa,EAlKvBnH,+DAAE,CAkKuCyE,YAAY,GAlKrDzE,+DAAE,CAkKgEA,qDAAa;EAAA,CAA4C;EAAA,QAAA2D,EAAA,GAClN,IAAI,CAACC,IAAI,kBAnK8E5D,+DAAE;IAAA8D,IAAA,EAmKJqD,aAAa;IAAApD,SAAA;IAAAkD,SAAA;IAAAjB,QAAA,GAnKXhG,wEAAE;EAAA,EAmKgJ;AACtP;AACA;EAAA,QAAAgE,SAAA,oBAAAA,SAAA,KArKoGhE,+DAAE,CAqKXmH,aAAa,EAAc,CAAC;IAC3GrD,IAAI,EAAE5D,oDAAS;IACf7C,IAAI,EAAE,CAAC;MACC6G,QAAQ,EAAE,sCAAsC;MAChDgD,IAAI,EAAE;QACF,OAAO,EAAE;MACb;IACJ,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEpD,IAAI,EAAEW;IAAa,CAAC,EAAE;MAAEX,IAAI,EAAE9D,qDAAagH;IAAC,CAAC,CAAC;EAAE,CAAC;AAAA;AACrG;AACA,MAAMW,OAAO,SAASnB,WAAW,CAAC;EAC9B1M,WAAWA,CAAC2M,SAAS,EAAEC,UAAU,EAAE;IAC/B,KAAK,CAACD,SAAS,EAAEC,UAAU,CAAC;IAC5B,IAAID,SAAS,CAAC3B,MAAM,EAAEsC,WAAW,CAACT,aAAa,CAACU,QAAQ,KAAK,CAAC,EAAE;MAC5D,MAAMC,SAAS,GAAGb,SAAS,CAAC3B,MAAM,CAACsC,WAAW,CAACT,aAAa,CAACY,YAAY,CAAC,MAAM,CAAC;MACjF,MAAMC,IAAI,GAAGF,SAAS,KAAK,MAAM,IAAIA,SAAS,KAAK,UAAU,GAAG,UAAU,GAAG,MAAM;MACnFZ,UAAU,CAACC,aAAa,CAACc,YAAY,CAAC,MAAM,EAAED,IAAI,CAAC;IACvD;EACJ;EAAC,QAAAnE,CAAA,GACQ,IAAI,CAACC,IAAI,YAAAsE,gBAAApE,CAAA;IAAA,YAAAA,CAAA,IAAwFmE,OAAO,EAxLjB3H,+DAAE,CAwLiCyE,YAAY,GAxL/CzE,+DAAE,CAwL0DA,qDAAa;EAAA,CAA4C;EAAA,QAAA2D,EAAA,GAC5M,IAAI,CAACC,IAAI,kBAzL8E5D,+DAAE;IAAA8D,IAAA,EAyLJ6D,OAAO;IAAA5D,SAAA;IAAAkD,SAAA;IAAAjB,QAAA,GAzLLhG,wEAAE;EAAA,EAyLqH;AAC3N;AACA;EAAA,QAAAgE,SAAA,oBAAAA,SAAA,KA3LoGhE,+DAAE,CA2LX2H,OAAO,EAAc,CAAC;IACrG7D,IAAI,EAAE5D,oDAAS;IACf7C,IAAI,EAAE,CAAC;MACC6G,QAAQ,EAAE,wBAAwB;MAClCgD,IAAI,EAAE;QACF,OAAO,EAAE;MACb;IACJ,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEpD,IAAI,EAAEW;IAAa,CAAC,EAAE;MAAEX,IAAI,EAAE9D,qDAAagH;IAAC,CAAC,CAAC;EAAE,CAAC;AAAA;;AAErG;AACA;AACA;AACA,MAAMa,SAAS,CAAC;EACZ/N,WAAWA,CAAA,EAAG;IACV,IAAI,CAACgO,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,QAAQ,GAAG,EAAE;EACtB;AACJ;AACA;AACA,MAAMC,0BAA0B,GAAG,IAAI/H,yDAAc,CAAC,4BAA4B,CAAC;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMgI,wBAAwB,CAAC;EAC3BnO,WAAWA,CAACoO,OAAO,EAAE;IACjB,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACC,UAAU,GAAG,IAAIxO,yCAAO,EAAE;EACnC;EACA;AACJ;AACA;EACIsD,QAAQA,CAACmL,IAAI,EAAE;IACX,IAAI,CAACC,uBAAuB,EAAE;IAC9B,IAAI,CAACH,gBAAgB,CAACL,KAAK,CAACzL,IAAI,CAACgM,IAAI,CAAC;EAC1C;EACA;AACJ;AACA;AACA;EACIE,WAAWA,CAACF,IAAI,EAAE;IACd,IAAI,CAACC,uBAAuB,EAAE;IAC9B,IAAI,CAACH,gBAAgB,CAACJ,QAAQ,CAAC1L,IAAI,CAACgM,IAAI,CAAC;EAC7C;EACA;EACAG,WAAWA,CAAA,EAAG;IACV,IAAI,CAACJ,UAAU,CAAC9N,IAAI,EAAE;IACtB,IAAI,CAAC8N,UAAU,CAACtM,QAAQ,EAAE;EAC9B;EACAwM,uBAAuBA,CAAA,EAAG;IACtB,IAAI,IAAI,CAACH,gBAAgB,EAAE;MACvB;IACJ;IACA,IAAI,CAACA,gBAAgB,GAAG,IAAIN,SAAS,EAAE;IACvC,IAAI,CAACY,sBAAsB,EAAE,CACxBC,IAAI,CAACnK,yDAAS,CAAC,IAAI,CAAC6J,UAAU,CAAC,CAAC,CAChCvL,SAAS,CAAC,MAAM;MACjB,OAAO,IAAI,CAACsL,gBAAgB,CAACL,KAAK,CAAClM,MAAM,IAAI,IAAI,CAACuM,gBAAgB,CAACJ,QAAQ,CAACnM,MAAM,EAAE;QAChF,MAAMsB,QAAQ,GAAG,IAAI,CAACiL,gBAAgB;QACtC;QACA,IAAI,CAACA,gBAAgB,GAAG,IAAIN,SAAS,EAAE;QACvC,KAAK,MAAMQ,IAAI,IAAInL,QAAQ,CAAC4K,KAAK,EAAE;UAC/BO,IAAI,EAAE;QACV;QACA,KAAK,MAAMA,IAAI,IAAInL,QAAQ,CAAC6K,QAAQ,EAAE;UAClCM,IAAI,EAAE;QACV;MACJ;MACA,IAAI,CAACF,gBAAgB,GAAG,IAAI;IAChC,CAAC,CAAC;EACN;EACAM,sBAAsBA,CAAA,EAAG;IACrB;IACA;IACA,OAAO,IAAI,CAACP,OAAO,CAACS,QAAQ,GACtBnN,0CAAI,CAACoN,OAAO,CAACC,OAAO,CAACvC,SAAS,CAAC,CAAC,GAChC,IAAI,CAAC4B,OAAO,CAACY,QAAQ,CAACJ,IAAI,CAACxK,qDAAI,CAAC,CAAC,CAAC,CAAC;EAC7C;EAAC,QAAAmF,CAAA,GACQ,IAAI,CAACC,IAAI,YAAAyF,iCAAAvF,CAAA;IAAA,YAAAA,CAAA,IAAwFyE,wBAAwB,EA9QlCjI,sDAAE,CA8QkDA,iDAAS;EAAA,CAA6C;EAAA,QAAA2D,EAAA,GACjM,IAAI,CAACsF,KAAK,kBA/Q6EjJ,gEAAE;IAAAmJ,KAAA,EA+QYlB,wBAAwB;IAAAmB,OAAA,EAAxBnB,wBAAwB,CAAA3E;EAAA,EAAG;AAC7I;AACA;EAAA,QAAAU,SAAA,oBAAAA,SAAA,KAjRoGhE,+DAAE,CAiRXiI,wBAAwB,EAAc,CAAC;IACtHnE,IAAI,EAAEvD,qDAAUA;EACpB,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEuD,IAAI,EAAE9D,iDAASa;IAAC,CAAC,CAAC;EAAE,CAAC;AAAA;;AAEzE;AACA;AACA;AACA;AACA,MAAMwI,gBAAgB,GAAI,6CAA4C;AACtE;AACA;AACA;AACA;AACA,MAAMC,UAAU,CAAC;EACbxP,WAAWA,CAAA,CACX,oBAAqBsJ,QAAQ,EAAEmG,QAAQ,EAAE;IACrC,IAAI,CAACnG,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACmG,QAAQ,GAAGA,QAAQ;EAC5B;EACAC,WAAWA,CAACC,OAAO,EAAE;IACjB;IACA;IACA,IAAI,CAAC,IAAI,CAACC,cAAc,EAAE;MACtB,MAAMC,OAAO,GAAIF,OAAO,CAAC,SAAS,CAAC,IAAIA,OAAO,CAAC,SAAS,CAAC,CAACG,YAAY,IAAK,EAAE;MAC7E,IAAI,CAACF,cAAc,GAAG,IAAI,CAACH,QAAQ,CAACM,IAAI,CAACF,OAAO,CAAC,CAAClN,MAAM,EAAE;MAC1D,IAAI,CAACiN,cAAc,CAACI,IAAI,CAACH,OAAO,CAAC;IACrC;EACJ;EACA;AACJ;AACA;AACA;EACII,cAAcA,CAAA,EAAG;IACb,OAAO,IAAI,CAACL,cAAc,CAACI,IAAI,CAAC,IAAI,CAACH,OAAO,CAAC;EACjD;EACA;EACAK,mBAAmBA,CAACC,MAAM,EAAE;IACxB,IAAI,IAAI,YAAYC,eAAe,EAAE;MACjC,OAAOD,MAAM,CAACpE,UAAU,CAACzC,QAAQ;IACrC;IACA,IAAI,IAAI,YAAY+G,eAAe,EAAE;MACjC,OAAOF,MAAM,CAACnE,UAAU,CAAC1C,QAAQ;IACrC,CAAC,MACI;MACD,OAAO6G,MAAM,CAACtE,IAAI,CAACvC,QAAQ;IAC/B;EACJ;EAAC,QAAAC,CAAA,GACQ,IAAI,CAACC,IAAI,YAAA8G,mBAAA5G,CAAA;IAAA,YAAAA,CAAA,IAAwF8F,UAAU,EAhUpBtJ,+DAAE,CAgUoCA,sDAAc,GAhUpDA,+DAAE,CAgU+DA,0DAAkB;EAAA,CAA4C;EAAA,QAAA2D,EAAA,GACtN,IAAI,CAACC,IAAI,kBAjU8E5D,+DAAE;IAAA8D,IAAA,EAiUJwF,UAAU;IAAAtD,QAAA,GAjURhG,kEAAE;EAAA,EAiU4C;AAClJ;AACA;EAAA,QAAAgE,SAAA,oBAAAA,SAAA,KAnUoGhE,+DAAE,CAmUXsJ,UAAU,EAAc,CAAC;IACxGxF,IAAI,EAAE5D,oDAASA;EACnB,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAE4D,IAAI,EAAE9D,sDAAc0D;IAAC,CAAC,EAAE;MAAEI,IAAI,EAAE9D,0DAAkBqK;IAAC,CAAC,CAAC;EAAE,CAAC;AAAA;AAC5G;AACA;AACA,MAAME,mBAAmB,SAASjB,UAAU,CAAC;AAE7C,MAAMkB,oBAAoB,GAAGhI,mBAAmB,CAAC+H,mBAAmB,CAAC;AACrE;AACA;AACA;AACA;AACA,MAAML,eAAe,SAASM,oBAAoB,CAAC;EAC/C1Q,WAAWA,CAACsJ,QAAQ,EAAEmG,QAAQ,EAAEzE,MAAM,EAAE;IACpC,KAAK,CAAC1B,QAAQ,EAAEmG,QAAQ,CAAC;IACzB,IAAI,CAACzE,MAAM,GAAGA,MAAM;EACxB;EACA;EACA;EACA0E,WAAWA,CAACC,OAAO,EAAE;IACjB,KAAK,CAACD,WAAW,CAACC,OAAO,CAAC;EAC9B;EAAC,QAAApG,CAAA,GACQ,IAAI,CAACC,IAAI,YAAAmH,wBAAAjH,CAAA;IAAA,YAAAA,CAAA,IAAwF0G,eAAe,EAzVzBlK,+DAAE,CAyVyCA,sDAAc,GAzVzDA,+DAAE,CAyVoEA,0DAAkB,GAzVxFA,+DAAE,CAyVmGiD,SAAS;EAAA,CAA4D;EAAA,QAAAU,EAAA,GACjQ,IAAI,CAACC,IAAI,kBA1V8E5D,+DAAE;IAAA8D,IAAA,EA0VJoG,eAAe;IAAAnG,SAAA;IAAAgC,MAAA;MAAA4D,OAAA;MAAAjH,MAAA;IAAA;IAAAsD,QAAA,GA1VbhG,wEAAE,EAAFA,kEAAE;EAAA,EA0VyM;AAC/S;AACA;EAAA,QAAAgE,SAAA,oBAAAA,SAAA,KA5VoGhE,+DAAE,CA4VXkK,eAAe,EAAc,CAAC;IAC7GpG,IAAI,EAAE5D,oDAAS;IACf7C,IAAI,EAAE,CAAC;MACC6G,QAAQ,EAAE,mBAAmB;MAC7B6B,MAAM,EAAE,CAAC,0BAA0B,EAAE,+BAA+B;IACxE,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEjC,IAAI,EAAE9D,sDAAc0D;IAAC,CAAC,EAAE;MAAEI,IAAI,EAAE9D,0DAAkBqK;IAAC,CAAC,EAAE;MAAEvG,IAAI,EAAEwC,SAAS;MAAEC,UAAU,EAAE,CAAC;QACtHzC,IAAI,EAAE3D,iDAAM;QACZ9C,IAAI,EAAE,CAAC4F,SAAS;MACpB,CAAC,EAAE;QACCa,IAAI,EAAE1D,mDAAQA;MAClB,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC;AAAA;AACxB;AACA;AACA,MAAMsK,mBAAmB,SAASpB,UAAU,CAAC;AAE7C,MAAMqB,oBAAoB,GAAGnI,mBAAmB,CAACkI,mBAAmB,CAAC;AACrE;AACA;AACA;AACA;AACA,MAAMP,eAAe,SAASQ,oBAAoB,CAAC;EAC/C7Q,WAAWA,CAACsJ,QAAQ,EAAEmG,QAAQ,EAAEzE,MAAM,EAAE;IACpC,KAAK,CAAC1B,QAAQ,EAAEmG,QAAQ,CAAC;IACzB,IAAI,CAACzE,MAAM,GAAGA,MAAM;EACxB;EACA;EACA;EACA0E,WAAWA,CAACC,OAAO,EAAE;IACjB,KAAK,CAACD,WAAW,CAACC,OAAO,CAAC;EAC9B;EAAC,QAAApG,CAAA,GACQ,IAAI,CAACC,IAAI,YAAAsH,wBAAApH,CAAA;IAAA,YAAAA,CAAA,IAAwF2G,eAAe,EA3XzBnK,+DAAE,CA2XyCA,sDAAc,GA3XzDA,+DAAE,CA2XoEA,0DAAkB,GA3XxFA,+DAAE,CA2XmGiD,SAAS;EAAA,CAA4D;EAAA,QAAAU,EAAA,GACjQ,IAAI,CAACC,IAAI,kBA5X8E5D,+DAAE;IAAA8D,IAAA,EA4XJqG,eAAe;IAAApG,SAAA;IAAAgC,MAAA;MAAA4D,OAAA;MAAAjH,MAAA;IAAA;IAAAsD,QAAA,GA5XbhG,wEAAE,EAAFA,kEAAE;EAAA,EA4XyM;AAC/S;AACA;EAAA,QAAAgE,SAAA,oBAAAA,SAAA,KA9XoGhE,+DAAE,CA8XXmK,eAAe,EAAc,CAAC;IAC7GrG,IAAI,EAAE5D,oDAAS;IACf7C,IAAI,EAAE,CAAC;MACC6G,QAAQ,EAAE,mBAAmB;MAC7B6B,MAAM,EAAE,CAAC,0BAA0B,EAAE,+BAA+B;IACxE,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEjC,IAAI,EAAE9D,sDAAc0D;IAAC,CAAC,EAAE;MAAEI,IAAI,EAAE9D,0DAAkBqK;IAAC,CAAC,EAAE;MAAEvG,IAAI,EAAEwC,SAAS;MAAEC,UAAU,EAAE,CAAC;QACtHzC,IAAI,EAAE3D,iDAAM;QACZ9C,IAAI,EAAE,CAAC4F,SAAS;MACpB,CAAC,EAAE;QACCa,IAAI,EAAE1D,mDAAQA;MAClB,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC;AAAA;AACxB;AACA;AACA;AACA;AACA;AACA,MAAMyK,SAAS,SAASvB,UAAU,CAAC;EAC/B;EACA;EACAxP,WAAWA,CAACsJ,QAAQ,EAAEmG,QAAQ,EAAEzE,MAAM,EAAE;IACpC,KAAK,CAAC1B,QAAQ,EAAEmG,QAAQ,CAAC;IACzB,IAAI,CAACzE,MAAM,GAAGA,MAAM;EACxB;EAAC,QAAAzB,CAAA,GACQ,IAAI,CAACC,IAAI,YAAAwH,kBAAAtH,CAAA;IAAA,YAAAA,CAAA,IAAwFqH,SAAS,EAtZnB7K,+DAAE,CAsZmCA,sDAAc,GAtZnDA,+DAAE,CAsZ8DA,0DAAkB,GAtZlFA,+DAAE,CAsZ6FiD,SAAS;EAAA,CAA4D;EAAA,QAAAU,EAAA,GAC3P,IAAI,CAACC,IAAI,kBAvZ8E5D,+DAAE;IAAA8D,IAAA,EAuZJ+G,SAAS;IAAA9G,SAAA;IAAAgC,MAAA;MAAA4D,OAAA;MAAAoB,IAAA;IAAA;IAAA/E,QAAA,GAvZPhG,wEAAE;EAAA,EAuZ6J;AACnQ;AACA;EAAA,QAAAgE,SAAA,oBAAAA,SAAA,KAzZoGhE,+DAAE,CAyZX6K,SAAS,EAAc,CAAC;IACvG/G,IAAI,EAAE5D,oDAAS;IACf7C,IAAI,EAAE,CAAC;MACC6G,QAAQ,EAAE,aAAa;MACvB6B,MAAM,EAAE,CAAC,2BAA2B,EAAE,qBAAqB;IAC/D,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEjC,IAAI,EAAE9D,sDAAc0D;IAAC,CAAC,EAAE;MAAEI,IAAI,EAAE9D,0DAAkBqK;IAAC,CAAC,EAAE;MAAEvG,IAAI,EAAEwC,SAAS;MAAEC,UAAU,EAAE,CAAC;QACtHzC,IAAI,EAAE3D,iDAAM;QACZ9C,IAAI,EAAE,CAAC4F,SAAS;MACpB,CAAC,EAAE;QACCa,IAAI,EAAE1D,mDAAQA;MAClB,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC;AAAA;AACxB;AACA;AACA;AACA;AACA,MAAM4K,aAAa,CAAC;EAChB;AACJ;AACA;AACA;AACA;AACA;AACA;EANI,QAAA3H,CAAA,GAOS,IAAI,CAAC4H,oBAAoB,GAAG,IAAI;EACzCnR,WAAWA,CAACoR,cAAc,EAAE;IACxB,IAAI,CAACA,cAAc,GAAGA,cAAc;IACpCF,aAAa,CAACC,oBAAoB,GAAG,IAAI;EAC7C;EACAzC,WAAWA,CAAA,EAAG;IACV;IACA;IACA,IAAIwC,aAAa,CAACC,oBAAoB,KAAK,IAAI,EAAE;MAC7CD,aAAa,CAACC,oBAAoB,GAAG,IAAI;IAC7C;EACJ;EAAC,QAAAtH,EAAA,GACQ,IAAI,CAACL,IAAI,YAAA6H,sBAAA3H,CAAA;IAAA,YAAAA,CAAA,IAAwFwH,aAAa,EA7bvBhL,+DAAE,CA6buCA,2DAAmB;EAAA,CAA4C;EAAA,QAAAqL,EAAA,GAC/L,IAAI,CAACzH,IAAI,kBA9b8E5D,+DAAE;IAAA8D,IAAA,EA8bJkH,aAAa;IAAAjH,SAAA;EAAA,EAA8C;AAC7J;AACA;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAhcoGhE,+DAAE,CAgcXgL,aAAa,EAAc,CAAC;IAC3GlH,IAAI,EAAE5D,oDAAS;IACf7C,IAAI,EAAE,CAAC;MAAE6G,QAAQ,EAAE;IAAkB,CAAC;EAC1C,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEJ,IAAI,EAAE9D,2DAAmBoL;IAAC,CAAC,CAAC;EAAE,CAAC;AAAA;AACnF;AACA,MAAME,YAAY,CAAC;EAAA,QAAAjI,CAAA,GACN,IAAI,CAACC,IAAI,YAAAiI,qBAAA/H,CAAA;IAAA,YAAAA,CAAA,IAAwF8H,YAAY;EAAA,CAAmD;EAAA,QAAA3H,EAAA,GAChK,IAAI,CAAC6H,IAAI,kBAvc8ExL,+DAAE;IAAA8D,IAAA,EAucJwH,YAAY;IAAAvH,SAAA;IAAAkD,SAAA,WAAgF,KAAK;IAAAyE,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAxI,QAAA,WAAAyI,sBAAAtK,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAvc/FvB,gEAAE,MAucyM;MAAA;IAAA;IAAA+L,YAAA,GAA6Df,aAAa;IAAAgB,aAAA;EAAA,EAAkI;AAC3f;AACA;EAAA,QAAAhI,SAAA,oBAAAA,SAAA,KAzcoGhE,+DAAE,CAycXsL,YAAY,EAAc,CAAC;IAC1GxH,IAAI,EAAEtD,oDAAS;IACfnD,IAAI,EAAE,CAAC;MACC6G,QAAQ,EAAE,oCAAoC;MAC9Cd,QAAQ,EAAEiG,gBAAgB;MAC1BnC,IAAI,EAAE;QACF,OAAO,EAAE,gBAAgB;QACzB,MAAM,EAAE;MACZ,CAAC;MACD;MACA;MACA+E,eAAe,EAAExL,0EAA+B;MAChDuL,aAAa,EAAEtL,iEAAsByL;IACzC,CAAC;EACT,CAAC,CAAC;AAAA;AACV;AACA,MAAMC,YAAY,CAAC;EAAA,QAAA/I,CAAA,GACN,IAAI,CAACC,IAAI,YAAA+I,qBAAA7I,CAAA;IAAA,YAAAA,CAAA,IAAwF4I,YAAY;EAAA,CAAmD;EAAA,QAAAzI,EAAA,GAChK,IAAI,CAAC6H,IAAI,kBA3d8ExL,+DAAE;IAAA8D,IAAA,EA2dJsI,YAAY;IAAArI,SAAA;IAAAkD,SAAA,WAAgF,KAAK;IAAAyE,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAxI,QAAA,WAAAkJ,sBAAA/K,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QA3d/FvB,gEAAE,MA2dyM;MAAA;IAAA;IAAA+L,YAAA,GAA6Df,aAAa;IAAAgB,aAAA;EAAA,EAAkI;AAC3f;AACA;EAAA,QAAAhI,SAAA,oBAAAA,SAAA,KA7doGhE,+DAAE,CA6dXoM,YAAY,EAAc,CAAC;IAC1GtI,IAAI,EAAEtD,oDAAS;IACfnD,IAAI,EAAE,CAAC;MACC6G,QAAQ,EAAE,oCAAoC;MAC9Cd,QAAQ,EAAEiG,gBAAgB;MAC1BnC,IAAI,EAAE;QACF,OAAO,EAAE,gBAAgB;QACzB,MAAM,EAAE;MACZ,CAAC;MACD;MACA;MACA+E,eAAe,EAAExL,0EAA+B;MAChDuL,aAAa,EAAEtL,iEAAsByL;IACzC,CAAC;EACT,CAAC,CAAC;AAAA;AACV;AACA,MAAMI,MAAM,CAAC;EAAA,QAAAlJ,CAAA,GACA,IAAI,CAACC,IAAI,YAAAkJ,eAAAhJ,CAAA;IAAA,YAAAA,CAAA,IAAwF+I,MAAM;EAAA,CAAmD;EAAA,QAAA5I,EAAA,GAC1J,IAAI,CAAC6H,IAAI,kBA/e8ExL,+DAAE;IAAA8D,IAAA,EA+eJyI,MAAM;IAAAxI,SAAA;IAAAkD,SAAA,WAAkE,KAAK;IAAAyE,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAxI,QAAA,WAAAqJ,gBAAAlL,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QA/e3EvB,gEAAE,MA+e8K;MAAA;IAAA;IAAA+L,YAAA,GAA6Df,aAAa;IAAAgB,aAAA;EAAA,EAAkI;AAChe;AACA;EAAA,QAAAhI,SAAA,oBAAAA,SAAA,KAjfoGhE,+DAAE,CAifXuM,MAAM,EAAc,CAAC;IACpGzI,IAAI,EAAEtD,oDAAS;IACfnD,IAAI,EAAE,CAAC;MACC6G,QAAQ,EAAE,sBAAsB;MAChCd,QAAQ,EAAEiG,gBAAgB;MAC1BnC,IAAI,EAAE;QACF,OAAO,EAAE,SAAS;QAClB,MAAM,EAAE;MACZ,CAAC;MACD;MACA;MACA+E,eAAe,EAAExL,0EAA+B;MAChDuL,aAAa,EAAEtL,iEAAsByL;IACzC,CAAC;EACT,CAAC,CAAC;AAAA;AACV;AACA,MAAMO,YAAY,CAAC;EACf5S,WAAWA,CAAC6S,WAAW,EAAE;IACrB,IAAI,CAACA,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,iBAAiB,GAAG,iBAAiB;EAC9C;EAAC,QAAAvJ,CAAA,GACQ,IAAI,CAACC,IAAI,YAAAuJ,qBAAArJ,CAAA;IAAA,YAAAA,CAAA,IAAwFkJ,YAAY,EAtgBtB1M,+DAAE,CAsgBsCA,sDAAc;EAAA,CAA4C;EAAA,QAAA2D,EAAA,GACzL,IAAI,CAACC,IAAI,kBAvgB8E5D,+DAAE;IAAA8D,IAAA,EAugBJ4I,YAAY;IAAA3I,SAAA;EAAA,EAAwD;AACtK;AACA;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAzgBoGhE,+DAAE,CAygBX0M,YAAY,EAAc,CAAC;IAC1G5I,IAAI,EAAE5D,oDAAS;IACf7C,IAAI,EAAE,CAAC;MACC6G,QAAQ,EAAE;IACd,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEJ,IAAI,EAAE9D,sDAAc0D;IAAC,CAAC,CAAC;EAAE,CAAC;AAAA;;AAE9E;AACA;AACA;AACA;AACA,MAAMoJ,iBAAiB,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC;AAC5D;AACA;AACA;AACA;AACA,MAAMC,YAAY,CAAC;EACf;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIjT,WAAWA,CAACkT,kBAAkB,EAAEC,aAAa,EAAEC,SAAS,EAAEC,wBAAwB,EAAEC,UAAU,GAAG,IAAI,EAAEC,6BAA6B,GAAG,IAAI,EAAEC,iBAAiB,EAAE;IAC5J,IAAI,CAACN,kBAAkB,GAAGA,kBAAkB;IAC5C,IAAI,CAACC,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,wBAAwB,GAAGA,wBAAwB;IACxD,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,6BAA6B,GAAGA,6BAA6B;IAClE,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACC,iBAAiB,GAAG,EAAE;IAC3B,IAAI,CAACC,cAAc,GAAG;MAClB,KAAK,EAAG,GAAEP,aAAc,kBAAiB;MACzC,QAAQ,EAAG,GAAEA,aAAc,qBAAoB;MAC/C,MAAM,EAAG,GAAEA,aAAc,mBAAkB;MAC3C,OAAO,EAAG,GAAEA,aAAc;IAC9B,CAAC;EACL;EACA;AACJ;AACA;AACA;AACA;AACA;EACIQ,sBAAsBA,CAACC,IAAI,EAAEC,gBAAgB,EAAE;IAC3C,MAAMC,eAAe,GAAG,EAAE;IAC1B,KAAK,MAAMC,GAAG,IAAIH,IAAI,EAAE;MACpB;MACA;MACA,IAAIG,GAAG,CAACxG,QAAQ,KAAKwG,GAAG,CAACC,YAAY,EAAE;QACnC;MACJ;MACAF,eAAe,CAACvR,IAAI,CAACwR,GAAG,CAAC;MACzB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,CAACG,QAAQ,CAACpS,MAAM,EAAEmS,CAAC,EAAE,EAAE;QAC1CH,eAAe,CAACvR,IAAI,CAACwR,GAAG,CAACG,QAAQ,CAACD,CAAC,CAAC,CAAC;MACzC;IACJ;IACA;IACA,IAAI,CAACZ,wBAAwB,CAACjQ,QAAQ,CAAC,MAAM;MACzC,KAAK,MAAM+Q,OAAO,IAAIL,eAAe,EAAE;QACnC,IAAI,CAACM,kBAAkB,CAACD,OAAO,EAAEN,gBAAgB,CAAC;MACtD;IACJ,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIQ,mBAAmBA,CAACT,IAAI,EAAEU,iBAAiB,EAAEC,eAAe,EAAEC,qBAAqB,GAAG,IAAI,EAAE;IACxF,IAAI,CAACZ,IAAI,CAAC9R,MAAM,IACZ,CAAC,IAAI,CAACwR,UAAU,IAChB,EAAEgB,iBAAiB,CAACG,IAAI,CAACC,KAAK,IAAIA,KAAK,CAAC,IAAIH,eAAe,CAACE,IAAI,CAACC,KAAK,IAAIA,KAAK,CAAC,CAAC,EAAE;MACnF,IAAI,IAAI,CAAClB,iBAAiB,EAAE;QACxB,IAAI,CAACA,iBAAiB,CAACmB,oBAAoB,CAAC;UAAEC,KAAK,EAAE;QAAG,CAAC,CAAC;QAC1D,IAAI,CAACpB,iBAAiB,CAACqB,uBAAuB,CAAC;UAAED,KAAK,EAAE;QAAG,CAAC,CAAC;MACjE;MACA;IACJ;IACA,MAAME,QAAQ,GAAGlB,IAAI,CAAC,CAAC,CAAC;IACxB,MAAMmB,QAAQ,GAAGD,QAAQ,CAACZ,QAAQ,CAACpS,MAAM;IACzC,MAAMkT,UAAU,GAAG,IAAI,CAACC,cAAc,CAACH,QAAQ,EAAEN,qBAAqB,CAAC;IACvE,MAAMU,cAAc,GAAG,IAAI,CAACC,8BAA8B,CAACH,UAAU,EAAEV,iBAAiB,CAAC;IACzF,MAAMc,YAAY,GAAG,IAAI,CAACC,4BAA4B,CAACL,UAAU,EAAET,eAAe,CAAC;IACnF,MAAMe,eAAe,GAAGhB,iBAAiB,CAACiB,WAAW,CAAC,IAAI,CAAC;IAC3D,MAAMC,cAAc,GAAGjB,eAAe,CAACkB,OAAO,CAAC,IAAI,CAAC;IACpD;IACA,IAAI,CAACpC,wBAAwB,CAACjQ,QAAQ,CAAC,MAAM;MACzC,MAAMsS,KAAK,GAAG,IAAI,CAACtC,SAAS,KAAK,KAAK;MACtC,MAAMuC,KAAK,GAAGD,KAAK,GAAG,OAAO,GAAG,MAAM;MACtC,MAAME,GAAG,GAAGF,KAAK,GAAG,MAAM,GAAG,OAAO;MACpC,KAAK,MAAM3B,GAAG,IAAIH,IAAI,EAAE;QACpB,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGc,QAAQ,EAAEd,CAAC,EAAE,EAAE;UAC/B,MAAMpI,IAAI,GAAGkI,GAAG,CAACG,QAAQ,CAACD,CAAC,CAAC;UAC5B,IAAIK,iBAAiB,CAACL,CAAC,CAAC,EAAE;YACtB,IAAI,CAAC4B,eAAe,CAAChK,IAAI,EAAE8J,KAAK,EAAET,cAAc,CAACjB,CAAC,CAAC,EAAEA,CAAC,KAAKqB,eAAe,CAAC;UAC/E;UACA,IAAIf,eAAe,CAACN,CAAC,CAAC,EAAE;YACpB,IAAI,CAAC4B,eAAe,CAAChK,IAAI,EAAE+J,GAAG,EAAER,YAAY,CAACnB,CAAC,CAAC,EAAEA,CAAC,KAAKuB,cAAc,CAAC;UAC1E;QACJ;MACJ;MACA,IAAI,IAAI,CAAChC,iBAAiB,EAAE;QACxB,IAAI,CAACA,iBAAiB,CAACmB,oBAAoB,CAAC;UACxCC,KAAK,EAAEU,eAAe,KAAK,CAAC,CAAC,GACvB,EAAE,GACFN,UAAU,CACPc,KAAK,CAAC,CAAC,EAAER,eAAe,GAAG,CAAC,CAAC,CAC7BS,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAM3B,iBAAiB,CAAC2B,KAAK,CAAC,GAAGD,KAAK,GAAG,IAAK;QAC5E,CAAC,CAAC;QACF,IAAI,CAACxC,iBAAiB,CAACqB,uBAAuB,CAAC;UAC3CD,KAAK,EAAEY,cAAc,KAAK,CAAC,CAAC,GACtB,EAAE,GACFR,UAAU,CACPc,KAAK,CAACN,cAAc,CAAC,CACrBO,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAM1B,eAAe,CAAC0B,KAAK,GAAGT,cAAc,CAAC,GAAGQ,KAAK,GAAG,IAAK,CAAC,CAC/EE,OAAO;QACpB,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,SAASA,CAACC,WAAW,EAAEC,YAAY,EAAEC,QAAQ,EAAE;IAC3C;IACA,IAAI,CAAC,IAAI,CAAChD,UAAU,EAAE;MAClB;IACJ;IACA;IACA;IACA;IACA,MAAMM,IAAI,GAAG0C,QAAQ,KAAK,QAAQ,GAAGF,WAAW,CAACN,KAAK,EAAE,CAACI,OAAO,EAAE,GAAGE,WAAW;IAChF,MAAMG,MAAM,GAAGD,QAAQ,KAAK,QAAQ,GAAGD,YAAY,CAACP,KAAK,EAAE,CAACI,OAAO,EAAE,GAAGG,YAAY;IACpF;IACA,MAAMG,aAAa,GAAG,EAAE;IACxB,MAAMC,iBAAiB,GAAG,EAAE;IAC5B,MAAMC,eAAe,GAAG,EAAE;IAC1B,KAAK,IAAIC,QAAQ,GAAG,CAAC,EAAEC,YAAY,GAAG,CAAC,EAAED,QAAQ,GAAG/C,IAAI,CAAC9R,MAAM,EAAE6U,QAAQ,EAAE,EAAE;MACzE,IAAI,CAACJ,MAAM,CAACI,QAAQ,CAAC,EAAE;QACnB;MACJ;MACAH,aAAa,CAACG,QAAQ,CAAC,GAAGC,YAAY;MACtC,MAAM7C,GAAG,GAAGH,IAAI,CAAC+C,QAAQ,CAAC;MAC1BD,eAAe,CAACC,QAAQ,CAAC,GAAG,IAAI,CAACzD,kBAAkB,GAC7CzR,KAAK,CAACC,IAAI,CAACqS,GAAG,CAACG,QAAQ,CAAC,GACxB,CAACH,GAAG,CAAC;MACX,MAAM8C,MAAM,GAAG9C,GAAG,CAAC+C,qBAAqB,EAAE,CAACD,MAAM;MACjDD,YAAY,IAAIC,MAAM;MACtBJ,iBAAiB,CAACE,QAAQ,CAAC,GAAGE,MAAM;IACxC;IACA,MAAME,gBAAgB,GAAGR,MAAM,CAAChB,WAAW,CAAC,IAAI,CAAC;IACjD;IACA;IACA,IAAI,CAAClC,wBAAwB,CAACjQ,QAAQ,CAAC,MAAM;MACzC,KAAK,IAAIuT,QAAQ,GAAG,CAAC,EAAEA,QAAQ,GAAG/C,IAAI,CAAC9R,MAAM,EAAE6U,QAAQ,EAAE,EAAE;QACvD,IAAI,CAACJ,MAAM,CAACI,QAAQ,CAAC,EAAE;UACnB;QACJ;QACA,MAAMK,MAAM,GAAGR,aAAa,CAACG,QAAQ,CAAC;QACtC,MAAMM,kBAAkB,GAAGN,QAAQ,KAAKI,gBAAgB;QACxD,KAAK,MAAM5C,OAAO,IAAIuC,eAAe,CAACC,QAAQ,CAAC,EAAE;UAC7C,IAAI,CAACd,eAAe,CAAC1B,OAAO,EAAEmC,QAAQ,EAAEU,MAAM,EAAEC,kBAAkB,CAAC;QACvE;MACJ;MACA,IAAIX,QAAQ,KAAK,KAAK,EAAE;QACpB,IAAI,CAAC9C,iBAAiB,EAAE0D,uBAAuB,CAAC;UAC5CtC,KAAK,EAAE6B,iBAAiB;UACxBU,OAAO,EAAEX,aAAa;UACtBY,QAAQ,EAAEV;QACd,CAAC,CAAC;MACN,CAAC,MACI;QACD,IAAI,CAAClD,iBAAiB,EAAE6D,uBAAuB,CAAC;UAC5CzC,KAAK,EAAE6B,iBAAiB;UACxBU,OAAO,EAAEX,aAAa;UACtBY,QAAQ,EAAEV;QACd,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;AACA;EACIY,2BAA2BA,CAACC,YAAY,EAAElB,YAAY,EAAE;IACpD,IAAI,CAAC,IAAI,CAACnD,kBAAkB,EAAE;MAC1B;IACJ;IACA,MAAMsE,KAAK,GAAGD,YAAY,CAACE,aAAa,CAAC,OAAO,CAAC;IACjD;IACA,IAAI,CAACpE,wBAAwB,CAACjQ,QAAQ,CAAC,MAAM;MACzC,IAAIiT,YAAY,CAAC5B,IAAI,CAACC,KAAK,IAAI,CAACA,KAAK,CAAC,EAAE;QACpC,IAAI,CAACN,kBAAkB,CAACoD,KAAK,EAAE,CAAC,QAAQ,CAAC,CAAC;MAC9C,CAAC,MACI;QACD,IAAI,CAAC3B,eAAe,CAAC2B,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,KAAK,CAAC;MACnD;IACJ,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;EACIpD,kBAAkBA,CAACD,OAAO,EAAEN,gBAAgB,EAAE;IAC1C,KAAK,MAAM6D,GAAG,IAAI7D,gBAAgB,EAAE;MAChCM,OAAO,CAACwD,KAAK,CAACD,GAAG,CAAC,GAAG,EAAE;MACvBvD,OAAO,CAACrH,SAAS,CAAC8K,MAAM,CAAC,IAAI,CAAClE,cAAc,CAACgE,GAAG,CAAC,CAAC;IACtD;IACA;IACA;IACA;IACA;IACA,MAAMG,YAAY,GAAG7E,iBAAiB,CAACyB,IAAI,CAACiD,GAAG,IAAI7D,gBAAgB,CAAC4B,OAAO,CAACiC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAIvD,OAAO,CAACwD,KAAK,CAACD,GAAG,CAAC,CAAC;IAC9G,IAAIG,YAAY,EAAE;MACd1D,OAAO,CAACwD,KAAK,CAACG,MAAM,GAAG,IAAI,CAACC,oBAAoB,CAAC5D,OAAO,CAAC;IAC7D,CAAC,MACI;MACD;MACAA,OAAO,CAACwD,KAAK,CAACG,MAAM,GAAG,EAAE;MACzB,IAAI,IAAI,CAACvE,6BAA6B,EAAE;QACpCY,OAAO,CAACwD,KAAK,CAACrB,QAAQ,GAAG,EAAE;MAC/B;MACAnC,OAAO,CAACrH,SAAS,CAAC8K,MAAM,CAAC,IAAI,CAACzE,aAAa,CAAC;IAChD;EACJ;EACA;AACJ;AACA;AACA;AACA;EACI0C,eAAeA,CAAC1B,OAAO,EAAEuD,GAAG,EAAEM,QAAQ,EAAEC,eAAe,EAAE;IACrD9D,OAAO,CAACrH,SAAS,CAACC,GAAG,CAAC,IAAI,CAACoG,aAAa,CAAC;IACzC,IAAI8E,eAAe,EAAE;MACjB9D,OAAO,CAACrH,SAAS,CAACC,GAAG,CAAC,IAAI,CAAC2G,cAAc,CAACgE,GAAG,CAAC,CAAC;IACnD;IACAvD,OAAO,CAACwD,KAAK,CAACD,GAAG,CAAC,GAAI,GAAEM,QAAS,IAAG;IACpC7D,OAAO,CAACwD,KAAK,CAACG,MAAM,GAAG,IAAI,CAACC,oBAAoB,CAAC5D,OAAO,CAAC;IACzD,IAAI,IAAI,CAACZ,6BAA6B,EAAE;MACpCY,OAAO,CAACwD,KAAK,CAACO,OAAO,IAAI,8CAA8C;IAC3E;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIH,oBAAoBA,CAAC5D,OAAO,EAAE;IAC1B,MAAMgE,gBAAgB,GAAG;MACrBC,GAAG,EAAE,GAAG;MACRC,MAAM,EAAE,EAAE;MACVC,IAAI,EAAE,CAAC;MACPC,KAAK,EAAE;IACX,CAAC;IACD,IAAIT,MAAM,GAAG,CAAC;IACd;IACA;IACA;IACA,KAAK,MAAMJ,GAAG,IAAI1E,iBAAiB,EAAE;MACjC,IAAImB,OAAO,CAACwD,KAAK,CAACD,GAAG,CAAC,EAAE;QACpBI,MAAM,IAAIK,gBAAgB,CAACT,GAAG,CAAC;MACnC;IACJ;IACA,OAAOI,MAAM,GAAI,GAAEA,MAAO,EAAC,GAAG,EAAE;EACpC;EACA;EACA7C,cAAcA,CAAClB,GAAG,EAAES,qBAAqB,GAAG,IAAI,EAAE;IAC9C,IAAI,CAACA,qBAAqB,IAAI,IAAI,CAACf,iBAAiB,CAAC3R,MAAM,EAAE;MACzD,OAAO,IAAI,CAAC2R,iBAAiB;IACjC;IACA,MAAMuB,UAAU,GAAG,EAAE;IACrB,MAAMwD,aAAa,GAAGzE,GAAG,CAACG,QAAQ;IAClC,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuE,aAAa,CAAC1W,MAAM,EAAEmS,CAAC,EAAE,EAAE;MAC3C,IAAIpI,IAAI,GAAG2M,aAAa,CAACvE,CAAC,CAAC;MAC3Be,UAAU,CAACzS,IAAI,CAACsJ,IAAI,CAACiL,qBAAqB,EAAE,CAACd,KAAK,CAAC;IACvD;IACA,IAAI,CAACvC,iBAAiB,GAAGuB,UAAU;IACnC,OAAOA,UAAU;EACrB;EACA;AACJ;AACA;AACA;AACA;EACIG,8BAA8BA,CAACsD,MAAM,EAAEpC,YAAY,EAAE;IACjD,MAAMqC,SAAS,GAAG,EAAE;IACpB,IAAIC,YAAY,GAAG,CAAC;IACpB,KAAK,IAAI1E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwE,MAAM,CAAC3W,MAAM,EAAEmS,CAAC,EAAE,EAAE;MACpC,IAAIoC,YAAY,CAACpC,CAAC,CAAC,EAAE;QACjByE,SAAS,CAACzE,CAAC,CAAC,GAAG0E,YAAY;QAC3BA,YAAY,IAAIF,MAAM,CAACxE,CAAC,CAAC;MAC7B;IACJ;IACA,OAAOyE,SAAS;EACpB;EACA;AACJ;AACA;AACA;AACA;EACIrD,4BAA4BA,CAACoD,MAAM,EAAEpC,YAAY,EAAE;IAC/C,MAAMqC,SAAS,GAAG,EAAE;IACpB,IAAIC,YAAY,GAAG,CAAC;IACpB,KAAK,IAAI1E,CAAC,GAAGwE,MAAM,CAAC3W,MAAM,EAAEmS,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACpC,IAAIoC,YAAY,CAACpC,CAAC,CAAC,EAAE;QACjByE,SAAS,CAACzE,CAAC,CAAC,GAAG0E,YAAY;QAC3BA,YAAY,IAAIF,MAAM,CAACxE,CAAC,CAAC;MAC7B;IACJ;IACA,OAAOyE,SAAS;EACpB;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASE,0BAA0BA,CAACC,EAAE,EAAE;EACpC,OAAOC,KAAK,CAAE,kCAAiCD,EAAG,IAAG,CAAC;AAC1D;AACA;AACA;AACA;AACA;AACA,SAASE,gCAAgCA,CAACjU,IAAI,EAAE;EAC5C,OAAOgU,KAAK,CAAE,+CAA8ChU,IAAK,IAAG,CAAC;AACzE;AACA;AACA;AACA;AACA;AACA,SAASkU,mCAAmCA,CAAA,EAAG;EAC3C,OAAOF,KAAK,CAAE,sEAAqE,CAAC;AACxF;AACA;AACA;AACA;AACA;AACA,SAASG,kCAAkCA,CAACC,IAAI,EAAE;EAC9C,OAAOJ,KAAK,CAAE,kDAAiD,GAC1D,sBAAqBK,IAAI,CAACC,SAAS,CAACF,IAAI,CAAE,EAAC,CAAC;AACrD;AACA;AACA;AACA;AACA;AACA,SAASG,2BAA2BA,CAAA,EAAG;EACnC,OAAOP,KAAK,CAAC,mDAAmD,GAC5D,oDAAoD,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA,SAASQ,8BAA8BA,CAAA,EAAG;EACtC,OAAOR,KAAK,CAAE,wEAAuE,CAAC;AAC1F;AACA;AACA;AACA;AACA;AACA,SAASS,yCAAyCA,CAAA,EAAG;EACjD,OAAOT,KAAK,CAAE,6DAA4D,CAAC;AAC/E;AACA;AACA;AACA;AACA;AACA,SAASU,kCAAkCA,CAAA,EAAG;EAC1C,OAAOV,KAAK,CAAE,qCAAoC,CAAC;AACvD;;AAEA;AACA,MAAMW,2BAA2B,GAAG,IAAItT,yDAAc,CAAC,SAAS,CAAC;;AAEjE;AACA;AACA;AACA;AACA,MAAMuT,cAAc,CAAC;EAAA,QAAAnQ,CAAA,GACR,IAAI,CAACC,IAAI,YAAAmQ,uBAAAjQ,CAAA;IAAA,YAAAA,CAAA,IAAwFgQ,cAAc;EAAA,CAAmD;EAAA,QAAA7P,EAAA,GAClK,IAAI,CAACC,IAAI,kBAv6B8E5D,+DAAE;IAAA8D,IAAA,EAu6BJ0P,cAAc;IAAAzP,SAAA;IAAAiC,QAAA,GAv6BZhG,gEAAE,CAu6B0F,CAAC;MAAEkG,OAAO,EAAE3G,6EAAuB;MAAEmU,QAAQ,EAAElU,kFAA4BA;IAAC,CAAC,CAAC;EAAA,EAAiB;AAC/R;AACA;EAAA,QAAAwE,SAAA,oBAAAA,SAAA,KAz6BoGhE,+DAAE,CAy6BXwT,cAAc,EAAc,CAAC;IAC5G1P,IAAI,EAAE5D,oDAAS;IACf7C,IAAI,EAAE,CAAC;MACC6G,QAAQ,EAAE,uDAAuD;MACjEmC,SAAS,EAAE,CAAC;QAAEH,OAAO,EAAE3G,6EAAuB;QAAEmU,QAAQ,EAAElU,kFAA4BA;MAAC,CAAC;IAC5F,CAAC;EACT,CAAC,CAAC;AAAA;AACV;AACA;AACA;AACA;AACA,MAAMmU,aAAa,CAAC;EAChB7Z,WAAWA,CAAC8Z,aAAa,EAAElN,UAAU,EAAE;IACnC,IAAI,CAACkN,aAAa,GAAGA,aAAa;IAClC,IAAI,CAAClN,UAAU,GAAGA,UAAU;EAChC;EAAC,QAAArD,CAAA,GACQ,IAAI,CAACC,IAAI,YAAAuQ,sBAAArQ,CAAA;IAAA,YAAAA,CAAA,IAAwFmQ,aAAa,EAz7BvB3T,+DAAE,CAy7BuCA,2DAAmB,GAz7B5DA,+DAAE,CAy7BuEA,qDAAa;EAAA,CAA4C;EAAA,QAAA2D,EAAA,GACzN,IAAI,CAACC,IAAI,kBA17B8E5D,+DAAE;IAAA8D,IAAA,EA07BJ6P,aAAa;IAAA5P,SAAA;EAAA,EAA0C;AACzJ;AACA;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KA57BoGhE,+DAAE,CA47BX2T,aAAa,EAAc,CAAC;IAC3G7P,IAAI,EAAE5D,oDAAS;IACf7C,IAAI,EAAE,CAAC;MAAE6G,QAAQ,EAAE;IAAc,CAAC;EACtC,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEJ,IAAI,EAAE9D,2DAAmBoL;IAAC,CAAC,EAAE;MAAEtH,IAAI,EAAE9D,qDAAagH;IAAC,CAAC,CAAC;EAAE,CAAC;AAAA;AAC5G;AACA;AACA;AACA;AACA,MAAM8M,eAAe,CAAC;EAClBha,WAAWA,CAAC8Z,aAAa,EAAElN,UAAU,EAAE;IACnC,IAAI,CAACkN,aAAa,GAAGA,aAAa;IAClC,IAAI,CAAClN,UAAU,GAAGA,UAAU;EAChC;EAAC,QAAArD,CAAA,GACQ,IAAI,CAACC,IAAI,YAAAyQ,wBAAAvQ,CAAA;IAAA,YAAAA,CAAA,IAAwFsQ,eAAe,EAz8BzB9T,+DAAE,CAy8ByCA,2DAAmB,GAz8B9DA,+DAAE,CAy8ByEA,qDAAa;EAAA,CAA4C;EAAA,QAAA2D,EAAA,GAC3N,IAAI,CAACC,IAAI,kBA18B8E5D,+DAAE;IAAA8D,IAAA,EA08BJgQ,eAAe;IAAA/P,SAAA;EAAA,EAAgD;AACjK;AACA;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KA58BoGhE,+DAAE,CA48BX8T,eAAe,EAAc,CAAC;IAC7GhQ,IAAI,EAAE5D,oDAAS;IACf7C,IAAI,EAAE,CAAC;MAAE6G,QAAQ,EAAE;IAAoB,CAAC;EAC5C,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEJ,IAAI,EAAE9D,2DAAmBoL;IAAC,CAAC,EAAE;MAAEtH,IAAI,EAAE9D,qDAAagH;IAAC,CAAC,CAAC;EAAE,CAAC;AAAA;AAC5G;AACA;AACA;AACA;AACA,MAAMgN,eAAe,CAAC;EAClBla,WAAWA,CAAC8Z,aAAa,EAAElN,UAAU,EAAE;IACnC,IAAI,CAACkN,aAAa,GAAGA,aAAa;IAClC,IAAI,CAAClN,UAAU,GAAGA,UAAU;EAChC;EAAC,QAAArD,CAAA,GACQ,IAAI,CAACC,IAAI,YAAA2Q,wBAAAzQ,CAAA;IAAA,YAAAA,CAAA,IAAwFwQ,eAAe,EAz9BzBhU,+DAAE,CAy9ByCA,2DAAmB,GAz9B9DA,+DAAE,CAy9ByEA,qDAAa;EAAA,CAA4C;EAAA,QAAA2D,EAAA,GAC3N,IAAI,CAACC,IAAI,kBA19B8E5D,+DAAE;IAAA8D,IAAA,EA09BJkQ,eAAe;IAAAjQ,SAAA;EAAA,EAAgD;AACjK;AACA;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KA59BoGhE,+DAAE,CA49BXgU,eAAe,EAAc,CAAC;IAC7GlQ,IAAI,EAAE5D,oDAAS;IACf7C,IAAI,EAAE,CAAC;MAAE6G,QAAQ,EAAE;IAAoB,CAAC;EAC5C,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEJ,IAAI,EAAE9D,2DAAmBoL;IAAC,CAAC,EAAE;MAAEtH,IAAI,EAAE9D,qDAAagH;IAAC,CAAC,CAAC;EAAE,CAAC;AAAA;AAC5G;AACA;AACA;AACA;AACA;AACA,MAAMkN,eAAe,CAAC;EAClBpa,WAAWA,CAAC8Z,aAAa,EAAElN,UAAU,EAAE;IACnC,IAAI,CAACkN,aAAa,GAAGA,aAAa;IAClC,IAAI,CAAClN,UAAU,GAAGA,UAAU;EAChC;EAAC,QAAArD,CAAA,GACQ,IAAI,CAACC,IAAI,YAAA6Q,wBAAA3Q,CAAA;IAAA,YAAAA,CAAA,IAAwF0Q,eAAe,EA1+BzBlU,+DAAE,CA0+ByCA,2DAAmB,GA1+B9DA,+DAAE,CA0+ByEA,qDAAa;EAAA,CAA4C;EAAA,QAAA2D,EAAA,GAC3N,IAAI,CAACC,IAAI,kBA3+B8E5D,+DAAE;IAAA8D,IAAA,EA2+BJoQ,eAAe;IAAAnQ,SAAA;EAAA,EAAgD;AACjK;AACA;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KA7+BoGhE,+DAAE,CA6+BXkU,eAAe,EAAc,CAAC;IAC7GpQ,IAAI,EAAE5D,oDAAS;IACf7C,IAAI,EAAE,CAAC;MAAE6G,QAAQ,EAAE;IAAoB,CAAC;EAC5C,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEJ,IAAI,EAAE9D,2DAAmBoL;IAAC,CAAC,EAAE;MAAEtH,IAAI,EAAE9D,qDAAagH;IAAC,CAAC,CAAC;EAAE,CAAC;AAAA;AAC5G;AACA;AACA;AACA;AACA;AACA,MAAMoN,kBAAkB;AACxB;AACA;AACC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,MAAMC,UAAU,SAAS1T,0DAAe,CAAC;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA,MAAM2T,QAAQ,CAAC;EACX;AACJ;AACA;AACA;AACA;AACA;EACI,IAAIC,OAAOA,CAAA,EAAG;IACV,OAAO,IAAI,CAACC,UAAU;EAC1B;EACA,IAAID,OAAOA,CAACE,EAAE,EAAE;IACZ,IAAI,CAAC,OAAOzQ,SAAS,KAAK,WAAW,IAAIA,SAAS,KAAKyQ,EAAE,IAAI,IAAI,IAAI,OAAOA,EAAE,KAAK,UAAU,EAAE;MAC3FC,OAAO,CAACC,IAAI,CAAE,4CAA2C1B,IAAI,CAACC,SAAS,CAACuB,EAAE,CAAE,GAAE,CAAC;IACnF;IACA,IAAI,CAACD,UAAU,GAAGC,EAAE;EACxB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,IAAIG,UAAUA,CAAA,EAAG;IACb,OAAO,IAAI,CAACC,WAAW;EAC3B;EACA,IAAID,UAAUA,CAACA,UAAU,EAAE;IACvB,IAAI,IAAI,CAACC,WAAW,KAAKD,UAAU,EAAE;MACjC,IAAI,CAACE,iBAAiB,CAACF,UAAU,CAAC;IACtC;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;EACI,IAAIG,qBAAqBA,CAAA,EAAG;IACxB,OAAO,IAAI,CAACC,sBAAsB;EACtC;EACA,IAAID,qBAAqBA,CAACnS,CAAC,EAAE;IACzB,IAAI,CAACoS,sBAAsB,GAAG1V,4EAAqB,CAACsD,CAAC,CAAC;IACtD;IACA;IACA,IAAI,IAAI,CAACqS,UAAU,IAAI,IAAI,CAACA,UAAU,CAACrB,aAAa,CAAChY,MAAM,EAAE;MACzD,IAAI,CAACsZ,oBAAoB,EAAE;MAC3B,IAAI,CAACC,wBAAwB,EAAE;IACnC;EACJ;EACA;AACJ;AACA;AACA;EACI,IAAIC,WAAWA,CAAA,EAAG;IACd,OAAO,IAAI,CAACC,YAAY;EAC5B;EACA,IAAID,WAAWA,CAACxS,CAAC,EAAE;IACf,IAAI,CAACyS,YAAY,GAAG/V,4EAAqB,CAACsD,CAAC,CAAC;IAC5C;IACA,IAAI,CAAC0S,2BAA2B,GAAG,IAAI;IACvC,IAAI,CAACC,4BAA4B,GAAG,IAAI;EAC5C;EACAzb,WAAWA,CAACyP,QAAQ,EAAEiM,kBAAkB,EAAEpO,WAAW,EAAEI,IAAI,EAAEiO,IAAI,EAAEC,SAAS,EAAEC,SAAS,EAAEC,aAAa,EAAEzI,wBAAwB,EAAE0I,cAAc;EAChJ;AACJ;AACA;AACA;EACIC,0BAA0B;EAC1B;AACJ;AACA;AACA;EACI5N,OAAO,EAAE;IACL,IAAI,CAACqB,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACiM,kBAAkB,GAAGA,kBAAkB;IAC5C,IAAI,CAACpO,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACqO,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACE,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACzI,wBAAwB,GAAGA,wBAAwB;IACxD,IAAI,CAAC0I,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,0BAA0B,GAAGA,0BAA0B;IAC5D,IAAI,CAAC5N,OAAO,GAAGA,OAAO;IACtB;IACA,IAAI,CAAC6N,UAAU,GAAG,IAAInc,yCAAO,EAAE;IAC/B;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACoc,iBAAiB,GAAG,IAAIC,GAAG,EAAE;IAClC;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACC,iBAAiB,GAAG,IAAIC,GAAG,EAAE;IAClC;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACC,cAAc,GAAG,IAAID,GAAG,EAAE;IAC/B;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACE,oBAAoB,GAAG,IAAIF,GAAG,EAAE;IACrC;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACG,oBAAoB,GAAG,IAAIH,GAAG,EAAE;IACrC;AACR;AACA;AACA;IACQ,IAAI,CAACI,oBAAoB,GAAG,IAAI;IAChC;AACR;AACA;AACA;IACQ,IAAI,CAACC,oBAAoB,GAAG,IAAI;IAChC;AACR;AACA;AACA;IACQ,IAAI,CAACjB,4BAA4B,GAAG,IAAI;IACxC;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACD,2BAA2B,GAAG,IAAI;IACvC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACmB,oBAAoB,GAAG,IAAIR,GAAG,EAAE;IACrC;AACR;AACA;AACA;IACQ,IAAI,CAACS,cAAc,GAAG,kBAAkB;IACxC;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACC,4BAA4B,GAAG,IAAI;IACxC;IACA,IAAI,CAACC,mBAAmB,GAAG,KAAK;IAChC,IAAI,CAAC5B,sBAAsB,GAAG,KAAK;IACnC,IAAI,CAACK,YAAY,GAAG,KAAK;IACzB;AACR;AACA;AACA;IACQ,IAAI,CAACwB,cAAc,GAAG,IAAIjW,uDAAY,EAAE;IACxC;IACA;IACA;AACR;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACkW,UAAU,GAAG,IAAIjd,kDAAe,CAAC;MAClC4V,KAAK,EAAE,CAAC;MACRC,GAAG,EAAEqH,MAAM,CAACC;IAChB,CAAC,CAAC;IACF,IAAI,CAACxP,IAAI,EAAE;MACP,IAAI,CAACJ,WAAW,CAACT,aAAa,CAACc,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC;IAChE;IACA,IAAI,CAACiO,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAAC1I,kBAAkB,GAAG,IAAI,CAAC5F,WAAW,CAACT,aAAa,CAACsQ,QAAQ,KAAK,OAAO;EACjF;EACAC,QAAQA,CAAA,EAAG;IACP,IAAI,CAACC,kBAAkB,EAAE;IACzB,IAAI,IAAI,CAACnK,kBAAkB,EAAE;MACzB,IAAI,CAACoK,yBAAyB,EAAE;IACpC;IACA;IACA;IACA;IACA,IAAI,CAACC,WAAW,GAAG,IAAI,CAAC9N,QAAQ,CAACM,IAAI,CAAC,EAAE,CAAC,CAACpN,MAAM,CAAC,CAAC6a,EAAE,EAAEC,OAAO,KAAK;MAC9D,OAAO,IAAI,CAAChD,OAAO,GAAG,IAAI,CAACA,OAAO,CAACgD,OAAO,CAACC,SAAS,EAAED,OAAO,CAACvE,IAAI,CAAC,GAAGuE,OAAO;IACjF,CAAC,CAAC;IACF,IAAI,CAAC1B,cAAc,CACd4B,MAAM,EAAE,CACR/O,IAAI,CAACnK,yDAAS,CAAC,IAAI,CAACwX,UAAU,CAAC,CAAC,CAChClZ,SAAS,CAAC,MAAM;MACjB,IAAI,CAACyY,2BAA2B,GAAG,IAAI;IAC3C,CAAC,CAAC;EACN;EACAoC,qBAAqBA,CAAA,EAAG;IACpB;IACA,IAAI,CAACC,aAAa,EAAE;IACpB,IAAI,CAACC,gBAAgB,EAAE;IACvB;IACA,IAAI,CAAC,IAAI,CAACC,cAAc,CAACjc,MAAM,IAC3B,CAAC,IAAI,CAACkc,cAAc,CAAClc,MAAM,IAC3B,CAAC,IAAI,CAACmc,QAAQ,CAACnc,MAAM,KACpB,OAAOoI,SAAS,KAAK,WAAW,IAAIA,SAAS,CAAC,EAAE;MACjD,MAAMmP,2BAA2B,EAAE;IACvC;IACA;IACA,MAAM6E,cAAc,GAAG,IAAI,CAACC,qBAAqB,EAAE;IACnD,MAAMC,cAAc,GAAGF,cAAc,IAAI,IAAI,CAACzB,oBAAoB,IAAI,IAAI,CAACC,oBAAoB;IAC/F;IACA,IAAI,CAACjB,4BAA4B,GAAG,IAAI,CAACA,4BAA4B,IAAI2C,cAAc;IACvF,IAAI,CAAC5C,2BAA2B,GAAG4C,cAAc;IACjD;IACA,IAAI,IAAI,CAAC3B,oBAAoB,EAAE;MAC3B,IAAI,CAAC4B,sBAAsB,EAAE;MAC7B,IAAI,CAAC5B,oBAAoB,GAAG,KAAK;IACrC;IACA;IACA,IAAI,IAAI,CAACC,oBAAoB,EAAE;MAC3B,IAAI,CAAC4B,sBAAsB,EAAE;MAC7B,IAAI,CAAC5B,oBAAoB,GAAG,KAAK;IACrC;IACA;IACA;IACA,IAAI,IAAI,CAAC5B,UAAU,IAAI,IAAI,CAACmD,QAAQ,CAACnc,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAACyc,yBAAyB,EAAE;MAChF,IAAI,CAACC,qBAAqB,EAAE;IAChC,CAAC,MACI,IAAI,IAAI,CAAC/C,4BAA4B,EAAE;MACxC;MACA;MACA,IAAI,CAACJ,wBAAwB,EAAE;IACnC;IACA,IAAI,CAACoD,kBAAkB,EAAE;EAC7B;EACA/P,WAAWA,CAAA,EAAG;IACV,CACI,IAAI,CAACyM,UAAU,CAACrB,aAAa,EAC7B,IAAI,CAAC4E,gBAAgB,CAAC5E,aAAa,EACnC,IAAI,CAAC6E,gBAAgB,CAAC7E,aAAa,EACnC,IAAI,CAAC6C,oBAAoB,EACzB,IAAI,CAACP,iBAAiB,EACtB,IAAI,CAACE,cAAc,EACnB,IAAI,CAACC,oBAAoB,EACzB,IAAI,CAACC,oBAAoB,EACzB,IAAI,CAACN,iBAAiB,CACzB,CAAC0C,OAAO,CAACC,GAAG,IAAI;MACbA,GAAG,CAACC,KAAK,EAAE;IACf,CAAC,CAAC;IACF,IAAI,CAACf,cAAc,GAAG,EAAE;IACxB,IAAI,CAACC,cAAc,GAAG,EAAE;IACxB,IAAI,CAACe,cAAc,GAAG,IAAI;IAC1B,IAAI,CAAC9C,UAAU,CAACzb,IAAI,EAAE;IACtB,IAAI,CAACyb,UAAU,CAACja,QAAQ,EAAE;IAC1B,IAAI2D,sEAAY,CAAC,IAAI,CAACmV,UAAU,CAAC,EAAE;MAC/B,IAAI,CAACA,UAAU,CAACkE,UAAU,CAAC,IAAI,CAAC;IACpC;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,UAAUA,CAAA,EAAG;IACT,IAAI,CAACC,WAAW,GAAG,IAAI,CAACC,iBAAiB,EAAE;IAC3C,MAAMxP,OAAO,GAAG,IAAI,CAAC4N,WAAW,CAACvN,IAAI,CAAC,IAAI,CAACkP,WAAW,CAAC;IACvD,IAAI,CAACvP,OAAO,EAAE;MACV,IAAI,CAACyP,gBAAgB,EAAE;MACvB,IAAI,CAACrC,cAAc,CAACvc,IAAI,EAAE;MAC1B;IACJ;IACA,MAAMsZ,aAAa,GAAG,IAAI,CAACqB,UAAU,CAACrB,aAAa;IACnD,IAAI,CAACgC,aAAa,CAACuD,YAAY,CAAC1P,OAAO,EAAEmK,aAAa,EAAE,CAACwF,MAAM,EAAEC,sBAAsB,EAAEC,YAAY,KAAK,IAAI,CAACC,oBAAoB,CAACH,MAAM,CAACI,IAAI,EAAEF,YAAY,CAAC,EAAEF,MAAM,IAAIA,MAAM,CAACI,IAAI,CAACxG,IAAI,EAAGyE,MAAM,IAAK;MACpM,IAAIA,MAAM,CAACgC,SAAS,KAAK,CAAC,CAAC,yCAAyChC,MAAM,CAACiC,OAAO,EAAE;QAChF,IAAI,CAACC,0BAA0B,CAAClC,MAAM,CAAC2B,MAAM,CAACI,IAAI,CAACI,MAAM,EAAEnC,MAAM,CAACiC,OAAO,CAAC;MAC9E;IACJ,CAAC,CAAC;IACF;IACA,IAAI,CAACG,sBAAsB,EAAE;IAC7B;IACA;IACApQ,OAAO,CAACqQ,qBAAqB,CAAEV,MAAM,IAAK;MACtC,MAAMW,OAAO,GAAGnG,aAAa,CAACoG,GAAG,CAACZ,MAAM,CAACE,YAAY,CAAC;MACtDS,OAAO,CAACL,OAAO,CAACrX,SAAS,GAAG+W,MAAM,CAACI,IAAI,CAACxG,IAAI;IAChD,CAAC,CAAC;IACF,IAAI,CAACkG,gBAAgB,EAAE;IACvB;IACA;IACA,IAAI,IAAI,CAAChR,OAAO,IAAIrH,iEAAsB,EAAE,EAAE;MAC1C,IAAI,CAACqH,OAAO,CAACY,QAAQ,CAACJ,IAAI,CAACxK,qDAAI,CAAC,CAAC,CAAC,EAAEK,yDAAS,CAAC,IAAI,CAACwX,UAAU,CAAC,CAAC,CAAClZ,SAAS,CAAC,MAAM;QAC5E,IAAI,CAACsY,wBAAwB,EAAE;MACnC,CAAC,CAAC;IACN,CAAC,MACI;MACD,IAAI,CAACA,wBAAwB,EAAE;IACnC;IACA,IAAI,CAAC0B,cAAc,CAACvc,IAAI,EAAE;EAC9B;EACA;EACA4f,YAAYA,CAACzT,SAAS,EAAE;IACpB,IAAI,CAACyP,iBAAiB,CAACrP,GAAG,CAACJ,SAAS,CAAC;EACzC;EACA;EACA0T,eAAeA,CAAC1T,SAAS,EAAE;IACvB,IAAI,CAACyP,iBAAiB,CAACkE,MAAM,CAAC3T,SAAS,CAAC;EAC5C;EACA;EACA4T,SAASA,CAACT,MAAM,EAAE;IACd,IAAI,CAACxD,cAAc,CAACvP,GAAG,CAAC+S,MAAM,CAAC;EACnC;EACA;EACAU,YAAYA,CAACV,MAAM,EAAE;IACjB,IAAI,CAACxD,cAAc,CAACgE,MAAM,CAACR,MAAM,CAAC;EACtC;EACA;EACAW,eAAeA,CAACC,YAAY,EAAE;IAC1B,IAAI,CAACnE,oBAAoB,CAACxP,GAAG,CAAC2T,YAAY,CAAC;IAC3C,IAAI,CAACjE,oBAAoB,GAAG,IAAI;EACpC;EACA;EACAkE,kBAAkBA,CAACD,YAAY,EAAE;IAC7B,IAAI,CAACnE,oBAAoB,CAAC+D,MAAM,CAACI,YAAY,CAAC;IAC9C,IAAI,CAACjE,oBAAoB,GAAG,IAAI;EACpC;EACA;EACAmE,eAAeA,CAACC,YAAY,EAAE;IAC1B,IAAI,CAACrE,oBAAoB,CAACzP,GAAG,CAAC8T,YAAY,CAAC;IAC3C,IAAI,CAACnE,oBAAoB,GAAG,IAAI;EACpC;EACA;EACAoE,kBAAkBA,CAACD,YAAY,EAAE;IAC7B,IAAI,CAACrE,oBAAoB,CAAC8D,MAAM,CAACO,YAAY,CAAC;IAC9C,IAAI,CAACnE,oBAAoB,GAAG,IAAI;EACpC;EACA;EACAqE,YAAYA,CAACC,SAAS,EAAE;IACpB,IAAI,CAACC,gBAAgB,GAAGD,SAAS;EACrC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIE,2BAA2BA,CAAA,EAAG;IAC1B,MAAMC,UAAU,GAAG,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAAC1C,gBAAgB,CAAC;IAC/D,MAAMnH,YAAY,GAAG,IAAI,CAACjK,WAAW,CAACT,aAAa;IACnD;IACA;IACA;IACA,MAAMwU,KAAK,GAAG9J,YAAY,CAACE,aAAa,CAAC,OAAO,CAAC;IACjD,IAAI4J,KAAK,EAAE;MACPA,KAAK,CAAC1J,KAAK,CAAC2J,OAAO,GAAGH,UAAU,CAACrf,MAAM,GAAG,EAAE,GAAG,MAAM;IACzD;IACA,MAAMuU,YAAY,GAAG,IAAI,CAAC0H,cAAc,CAAChI,GAAG,CAAC8I,GAAG,IAAIA,GAAG,CAACjW,MAAM,CAAC;IAC/D,IAAI,CAAC2Y,aAAa,CAAC5N,sBAAsB,CAACwN,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC;IAC9D,IAAI,CAACI,aAAa,CAACpL,SAAS,CAACgL,UAAU,EAAE9K,YAAY,EAAE,KAAK,CAAC;IAC7D;IACA,IAAI,CAAC0H,cAAc,CAACa,OAAO,CAACC,GAAG,IAAIA,GAAG,CAAC3V,kBAAkB,EAAE,CAAC;EAChE;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIsY,2BAA2BA,CAAA,EAAG;IAC1B,MAAMC,UAAU,GAAG,IAAI,CAACL,gBAAgB,CAAC,IAAI,CAACzC,gBAAgB,CAAC;IAC/D,MAAMpH,YAAY,GAAG,IAAI,CAACjK,WAAW,CAACT,aAAa;IACnD;IACA;IACA;IACA,MAAM2K,KAAK,GAAGD,YAAY,CAACE,aAAa,CAAC,OAAO,CAAC;IACjD,IAAID,KAAK,EAAE;MACPA,KAAK,CAACG,KAAK,CAAC2J,OAAO,GAAGG,UAAU,CAAC3f,MAAM,GAAG,EAAE,GAAG,MAAM;IACzD;IACA,MAAMuU,YAAY,GAAG,IAAI,CAAC2H,cAAc,CAACjI,GAAG,CAAC8I,GAAG,IAAIA,GAAG,CAACjW,MAAM,CAAC;IAC/D,IAAI,CAAC2Y,aAAa,CAAC5N,sBAAsB,CAAC8N,UAAU,EAAE,CAAC,QAAQ,CAAC,CAAC;IACjE,IAAI,CAACF,aAAa,CAACpL,SAAS,CAACsL,UAAU,EAAEpL,YAAY,EAAE,QAAQ,CAAC;IAChE,IAAI,CAACkL,aAAa,CAACjK,2BAA2B,CAAC,IAAI,CAAChK,WAAW,CAACT,aAAa,EAAEwJ,YAAY,CAAC;IAC5F;IACA,IAAI,CAAC2H,cAAc,CAACY,OAAO,CAACC,GAAG,IAAIA,GAAG,CAAC3V,kBAAkB,EAAE,CAAC;EAChE;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACImS,wBAAwBA,CAAA,EAAG;IACvB,MAAM8F,UAAU,GAAG,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAAC1C,gBAAgB,CAAC;IAC/D,MAAMgD,QAAQ,GAAG,IAAI,CAACN,gBAAgB,CAAC,IAAI,CAACjG,UAAU,CAAC;IACvD,MAAMsG,UAAU,GAAG,IAAI,CAACL,gBAAgB,CAAC,IAAI,CAACzC,gBAAgB,CAAC;IAC/D;IACA;IACA;IACA;IACA,IAAK,IAAI,CAACzL,kBAAkB,IAAI,CAAC,IAAI,CAACqI,YAAY,IAAK,IAAI,CAACE,4BAA4B,EAAE;MACtF;MACA;MACA,IAAI,CAAC8F,aAAa,CAAC5N,sBAAsB,CAAC,CAAC,GAAGwN,UAAU,EAAE,GAAGO,QAAQ,EAAE,GAAGD,UAAU,CAAC,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;MACzG,IAAI,CAAChG,4BAA4B,GAAG,KAAK;IAC7C;IACA;IACA0F,UAAU,CAACvC,OAAO,CAAC,CAAC+C,SAAS,EAAE1N,CAAC,KAAK;MACjC,IAAI,CAAC2N,sBAAsB,CAAC,CAACD,SAAS,CAAC,EAAE,IAAI,CAAC5D,cAAc,CAAC9J,CAAC,CAAC,CAAC;IACpE,CAAC,CAAC;IACF;IACA,IAAI,CAACgK,QAAQ,CAACW,OAAO,CAACkB,MAAM,IAAI;MAC5B;MACA,MAAMlM,IAAI,GAAG,EAAE;MACf,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyN,QAAQ,CAAC5f,MAAM,EAAEmS,CAAC,EAAE,EAAE;QACtC,IAAI,IAAI,CAACiL,WAAW,CAACjL,CAAC,CAAC,CAAC6L,MAAM,KAAKA,MAAM,EAAE;UACvClM,IAAI,CAACrR,IAAI,CAACmf,QAAQ,CAACzN,CAAC,CAAC,CAAC;QAC1B;MACJ;MACA,IAAI,CAAC2N,sBAAsB,CAAChO,IAAI,EAAEkM,MAAM,CAAC;IAC7C,CAAC,CAAC;IACF;IACA2B,UAAU,CAAC7C,OAAO,CAAC,CAACiD,SAAS,EAAE5N,CAAC,KAAK;MACjC,IAAI,CAAC2N,sBAAsB,CAAC,CAACC,SAAS,CAAC,EAAE,IAAI,CAAC7D,cAAc,CAAC/J,CAAC,CAAC,CAAC;IACpE,CAAC,CAAC;IACF;IACAxS,KAAK,CAACC,IAAI,CAAC,IAAI,CAACwa,iBAAiB,CAAC4F,MAAM,EAAE,CAAC,CAAClD,OAAO,CAACC,GAAG,IAAIA,GAAG,CAAC3V,kBAAkB,EAAE,CAAC;EACxF;EACA;AACJ;AACA;AACA;AACA;EACIiW,iBAAiBA,CAAA,EAAG;IAChB,MAAMF,UAAU,GAAG,EAAE;IACrB;IACA;IACA,MAAM8C,oBAAoB,GAAG,IAAI,CAACpF,oBAAoB;IACtD,IAAI,CAACA,oBAAoB,GAAG,IAAIR,GAAG,EAAE;IACrC;IACA;IACA,KAAK,IAAIlI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC+N,KAAK,CAAClgB,MAAM,EAAEmS,CAAC,EAAE,EAAE;MACxC,IAAIiF,IAAI,GAAG,IAAI,CAAC8I,KAAK,CAAC/N,CAAC,CAAC;MACxB,MAAMgO,iBAAiB,GAAG,IAAI,CAACC,qBAAqB,CAAChJ,IAAI,EAAEjF,CAAC,EAAE8N,oBAAoB,CAAC7B,GAAG,CAAChH,IAAI,CAAC,CAAC;MAC7F,IAAI,CAAC,IAAI,CAACyD,oBAAoB,CAACwF,GAAG,CAACjJ,IAAI,CAAC,EAAE;QACtC,IAAI,CAACyD,oBAAoB,CAACyF,GAAG,CAAClJ,IAAI,EAAE,IAAImJ,OAAO,EAAE,CAAC;MACtD;MACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,iBAAiB,CAACngB,MAAM,EAAEwgB,CAAC,EAAE,EAAE;QAC/C,IAAIC,SAAS,GAAGN,iBAAiB,CAACK,CAAC,CAAC;QACpC,MAAME,KAAK,GAAG,IAAI,CAAC7F,oBAAoB,CAACuD,GAAG,CAACqC,SAAS,CAACrJ,IAAI,CAAC;QAC3D,IAAIsJ,KAAK,CAACL,GAAG,CAACI,SAAS,CAACzC,MAAM,CAAC,EAAE;UAC7B0C,KAAK,CAACtC,GAAG,CAACqC,SAAS,CAACzC,MAAM,CAAC,CAACvd,IAAI,CAACggB,SAAS,CAAC;QAC/C,CAAC,MACI;UACDC,KAAK,CAACJ,GAAG,CAACG,SAAS,CAACzC,MAAM,EAAE,CAACyC,SAAS,CAAC,CAAC;QAC5C;QACAtD,UAAU,CAAC1c,IAAI,CAACggB,SAAS,CAAC;MAC9B;IACJ;IACA,OAAOtD,UAAU;EACrB;EACA;AACJ;AACA;AACA;AACA;EACIiD,qBAAqBA,CAAChJ,IAAI,EAAEwE,SAAS,EAAE8E,KAAK,EAAE;IAC1C,MAAMC,OAAO,GAAG,IAAI,CAACC,WAAW,CAACxJ,IAAI,EAAEwE,SAAS,CAAC;IACjD,OAAO+E,OAAO,CAAC1M,GAAG,CAAC+J,MAAM,IAAI;MACzB,MAAM6C,gBAAgB,GAAGH,KAAK,IAAIA,KAAK,CAACL,GAAG,CAACrC,MAAM,CAAC,GAAG0C,KAAK,CAACtC,GAAG,CAACJ,MAAM,CAAC,GAAG,EAAE;MAC5E,IAAI6C,gBAAgB,CAAC7gB,MAAM,EAAE;QACzB,MAAM2b,OAAO,GAAGkF,gBAAgB,CAAC5gB,KAAK,EAAE;QACxC0b,OAAO,CAACC,SAAS,GAAGA,SAAS;QAC7B,OAAOD,OAAO;MAClB,CAAC,MACI;QACD,OAAO;UAAEvE,IAAI;UAAE4G,MAAM;UAAEpC;QAAU,CAAC;MACtC;IACJ,CAAC,CAAC;EACN;EACA;EACAI,gBAAgBA,CAAA,EAAG;IACf,IAAI,CAAC5B,iBAAiB,CAAC4C,KAAK,EAAE;IAC9B,MAAM8D,UAAU,GAAGC,gBAAgB,CAAC,IAAI,CAACC,WAAW,CAAC,IAAI,CAACC,kBAAkB,CAAC,EAAE,IAAI,CAAC3G,iBAAiB,CAAC;IACtGwG,UAAU,CAAChE,OAAO,CAACjS,SAAS,IAAI;MAC5B,IAAI,IAAI,CAACuP,iBAAiB,CAACiG,GAAG,CAACxV,SAAS,CAAC7H,IAAI,CAAC,KACzC,OAAOoF,SAAS,KAAK,WAAW,IAAIA,SAAS,CAAC,EAAE;QACjD,MAAM6O,gCAAgC,CAACpM,SAAS,CAAC7H,IAAI,CAAC;MAC1D;MACA,IAAI,CAACoX,iBAAiB,CAACkG,GAAG,CAACzV,SAAS,CAAC7H,IAAI,EAAE6H,SAAS,CAAC;IACzD,CAAC,CAAC;EACN;EACA;EACAkR,aAAaA,CAAA,EAAG;IACZ,IAAI,CAACE,cAAc,GAAG8E,gBAAgB,CAAC,IAAI,CAACC,WAAW,CAAC,IAAI,CAACE,qBAAqB,CAAC,EAAE,IAAI,CAACzG,oBAAoB,CAAC;IAC/G,IAAI,CAACyB,cAAc,GAAG6E,gBAAgB,CAAC,IAAI,CAACC,WAAW,CAAC,IAAI,CAACG,qBAAqB,CAAC,EAAE,IAAI,CAACzG,oBAAoB,CAAC;IAC/G,IAAI,CAACyB,QAAQ,GAAG4E,gBAAgB,CAAC,IAAI,CAACC,WAAW,CAAC,IAAI,CAACI,eAAe,CAAC,EAAE,IAAI,CAAC5G,cAAc,CAAC;IAC7F;IACA,MAAM6G,cAAc,GAAG,IAAI,CAAClF,QAAQ,CAACmF,MAAM,CAACvE,GAAG,IAAI,CAACA,GAAG,CAAC5N,IAAI,CAAC;IAC7D,IAAI,CAAC,IAAI,CAACgK,qBAAqB,IAC3BkI,cAAc,CAACrhB,MAAM,GAAG,CAAC,KACxB,OAAOoI,SAAS,KAAK,WAAW,IAAIA,SAAS,CAAC,EAAE;MACjD,MAAM8O,mCAAmC,EAAE;IAC/C;IACA,IAAI,CAAC+F,cAAc,GAAGoE,cAAc,CAAC,CAAC,CAAC;EAC3C;EACA;AACJ;AACA;AACA;AACA;EACIhF,qBAAqBA,CAAA,EAAG;IACpB,MAAMkF,kBAAkB,GAAGA,CAACC,GAAG,EAAEzE,GAAG,KAAKyE,GAAG,IAAI,CAAC,CAACzE,GAAG,CAAC5O,cAAc,EAAE;IACtE;IACA,MAAMsT,kBAAkB,GAAG,IAAI,CAACtF,QAAQ,CAACuF,MAAM,CAACH,kBAAkB,EAAE,KAAK,CAAC;IAC1E,IAAIE,kBAAkB,EAAE;MACpB,IAAI,CAACnI,oBAAoB,EAAE;IAC/B;IACA;IACA,MAAMqI,oBAAoB,GAAG,IAAI,CAAC1F,cAAc,CAACyF,MAAM,CAACH,kBAAkB,EAAE,KAAK,CAAC;IAClF,IAAII,oBAAoB,EAAE;MACtB,IAAI,CAACpF,sBAAsB,EAAE;IACjC;IACA,MAAMqF,oBAAoB,GAAG,IAAI,CAAC1F,cAAc,CAACwF,MAAM,CAACH,kBAAkB,EAAE,KAAK,CAAC;IAClF,IAAIK,oBAAoB,EAAE;MACtB,IAAI,CAACpF,sBAAsB,EAAE;IACjC;IACA,OAAOiF,kBAAkB,IAAIE,oBAAoB,IAAIC,oBAAoB;EAC7E;EACA;AACJ;AACA;AACA;AACA;EACI1I,iBAAiBA,CAACF,UAAU,EAAE;IAC1B,IAAI,CAACkH,KAAK,GAAG,EAAE;IACf,IAAIrc,sEAAY,CAAC,IAAI,CAACmV,UAAU,CAAC,EAAE;MAC/B,IAAI,CAACA,UAAU,CAACkE,UAAU,CAAC,IAAI,CAAC;IACpC;IACA;IACA,IAAI,IAAI,CAACT,yBAAyB,EAAE;MAChC,IAAI,CAACA,yBAAyB,CAACtc,WAAW,EAAE;MAC5C,IAAI,CAACsc,yBAAyB,GAAG,IAAI;IACzC;IACA,IAAI,CAACzD,UAAU,EAAE;MACb,IAAI,IAAI,CAACyC,WAAW,EAAE;QAClB,IAAI,CAACA,WAAW,CAACvN,IAAI,CAAC,EAAE,CAAC;MAC7B;MACA,IAAI,CAACmL,UAAU,CAACrB,aAAa,CAACgF,KAAK,EAAE;IACzC;IACA,IAAI,CAAC/D,WAAW,GAAGD,UAAU;EACjC;EACA;EACA0D,qBAAqBA,CAAA,EAAG;IACpB;IACA,IAAI,CAAC,IAAI,CAAC1D,UAAU,EAAE;MAClB;IACJ;IACA,IAAI6I,UAAU;IACd,IAAIhe,sEAAY,CAAC,IAAI,CAACmV,UAAU,CAAC,EAAE;MAC/B6I,UAAU,GAAG,IAAI,CAAC7I,UAAU,CAAC8I,OAAO,CAAC,IAAI,CAAC;IAC9C,CAAC,MACI,IAAI3e,mDAAY,CAAC,IAAI,CAAC6V,UAAU,CAAC,EAAE;MACpC6I,UAAU,GAAG,IAAI,CAAC7I,UAAU;IAChC,CAAC,MACI,IAAIrZ,KAAK,CAACoiB,OAAO,CAAC,IAAI,CAAC/I,UAAU,CAAC,EAAE;MACrC6I,UAAU,GAAGrgB,yCAAE,CAAC,IAAI,CAACwX,UAAU,CAAC;IACpC;IACA,IAAI6I,UAAU,KAAKnX,SAAS,KAAK,OAAOtC,SAAS,KAAK,WAAW,IAAIA,SAAS,CAAC,EAAE;MAC7E,MAAMoP,8BAA8B,EAAE;IAC1C;IACA,IAAI,CAACiF,yBAAyB,GAAGoF,UAAU,CACtC/U,IAAI,CAACnK,yDAAS,CAAC,IAAI,CAACwX,UAAU,CAAC,CAAC,CAChClZ,SAAS,CAACmW,IAAI,IAAI;MACnB,IAAI,CAAC8I,KAAK,GAAG9I,IAAI,IAAI,EAAE;MACvB,IAAI,CAAC+F,UAAU,EAAE;IACrB,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;EACIZ,sBAAsBA,CAAA,EAAG;IACrB;IACA,IAAI,IAAI,CAACK,gBAAgB,CAAC5E,aAAa,CAAChY,MAAM,GAAG,CAAC,EAAE;MAChD,IAAI,CAAC4c,gBAAgB,CAAC5E,aAAa,CAACgF,KAAK,EAAE;IAC/C;IACA,IAAI,CAACf,cAAc,CAACa,OAAO,CAAC,CAACC,GAAG,EAAE5K,CAAC,KAAK,IAAI,CAAC6P,UAAU,CAAC,IAAI,CAACpF,gBAAgB,EAAEG,GAAG,EAAE5K,CAAC,CAAC,CAAC;IACvF,IAAI,CAACiN,2BAA2B,EAAE;EACtC;EACA;AACJ;AACA;AACA;EACI5C,sBAAsBA,CAAA,EAAG;IACrB;IACA,IAAI,IAAI,CAACK,gBAAgB,CAAC7E,aAAa,CAAChY,MAAM,GAAG,CAAC,EAAE;MAChD,IAAI,CAAC6c,gBAAgB,CAAC7E,aAAa,CAACgF,KAAK,EAAE;IAC/C;IACA,IAAI,CAACd,cAAc,CAACY,OAAO,CAAC,CAACC,GAAG,EAAE5K,CAAC,KAAK,IAAI,CAAC6P,UAAU,CAAC,IAAI,CAACnF,gBAAgB,EAAEE,GAAG,EAAE5K,CAAC,CAAC,CAAC;IACvF,IAAI,CAACuN,2BAA2B,EAAE;EACtC;EACA;EACAI,sBAAsBA,CAAChO,IAAI,EAAEkM,MAAM,EAAE;IACjC,MAAM8C,UAAU,GAAGnhB,KAAK,CAACC,IAAI,CAACoe,MAAM,CAACjQ,OAAO,IAAI,EAAE,CAAC,CAACkG,GAAG,CAACgO,UAAU,IAAI;MAClE,MAAMpX,SAAS,GAAG,IAAI,CAACuP,iBAAiB,CAACgE,GAAG,CAAC6D,UAAU,CAAC;MACxD,IAAI,CAACpX,SAAS,KAAK,OAAOzC,SAAS,KAAK,WAAW,IAAIA,SAAS,CAAC,EAAE;QAC/D,MAAM0O,0BAA0B,CAACmL,UAAU,CAAC;MAChD;MACA,OAAOpX,SAAS;IACpB,CAAC,CAAC;IACF,MAAM2H,iBAAiB,GAAGsO,UAAU,CAAC7M,GAAG,CAACpJ,SAAS,IAAIA,SAAS,CAAC/D,MAAM,CAAC;IACvE,MAAM2L,eAAe,GAAGqO,UAAU,CAAC7M,GAAG,CAACpJ,SAAS,IAAIA,SAAS,CAAC7B,SAAS,CAAC;IACxE,IAAI,CAACyW,aAAa,CAAClN,mBAAmB,CAACT,IAAI,EAAEU,iBAAiB,EAAEC,eAAe,EAAE,CAAC,IAAI,CAACgH,YAAY,IAAI,IAAI,CAACC,2BAA2B,CAAC;EAC5I;EACA;EACA4F,gBAAgBA,CAAC4C,SAAS,EAAE;IACxB,MAAMC,YAAY,GAAG,EAAE;IACvB,KAAK,IAAIhQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+P,SAAS,CAAClK,aAAa,CAAChY,MAAM,EAAEmS,CAAC,EAAE,EAAE;MACrD,MAAMiQ,OAAO,GAAGF,SAAS,CAAClK,aAAa,CAACoG,GAAG,CAACjM,CAAC,CAAC;MAC9CgQ,YAAY,CAAC1hB,IAAI,CAAC2hB,OAAO,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC3C;IACA,OAAOF,YAAY;EACvB;EACA;AACJ;AACA;AACA;AACA;AACA;EACIvB,WAAWA,CAACxJ,IAAI,EAAEwE,SAAS,EAAE;IACzB,IAAI,IAAI,CAACO,QAAQ,CAACnc,MAAM,IAAI,CAAC,EAAE;MAC3B,OAAO,CAAC,IAAI,CAACmc,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC7B;IACA,IAAIwE,OAAO,GAAG,EAAE;IAChB,IAAI,IAAI,CAACxH,qBAAqB,EAAE;MAC5BwH,OAAO,GAAG,IAAI,CAACxE,QAAQ,CAACmF,MAAM,CAACvE,GAAG,IAAI,CAACA,GAAG,CAAC5N,IAAI,IAAI4N,GAAG,CAAC5N,IAAI,CAACyM,SAAS,EAAExE,IAAI,CAAC,CAAC;IACjF,CAAC,MACI;MACD,IAAI4G,MAAM,GAAG,IAAI,CAAC7B,QAAQ,CAAClO,IAAI,CAAC8O,GAAG,IAAIA,GAAG,CAAC5N,IAAI,IAAI4N,GAAG,CAAC5N,IAAI,CAACyM,SAAS,EAAExE,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC6F,cAAc;MACpG,IAAIe,MAAM,EAAE;QACR2C,OAAO,CAAClgB,IAAI,CAACud,MAAM,CAAC;MACxB;IACJ;IACA,IAAI,CAAC2C,OAAO,CAAC3gB,MAAM,KAAK,OAAOoI,SAAS,KAAK,WAAW,IAAIA,SAAS,CAAC,EAAE;MACpE,MAAM+O,kCAAkC,CAACC,IAAI,CAAC;IAClD;IACA,OAAOuJ,OAAO;EAClB;EACAhD,oBAAoBA,CAAC8C,SAAS,EAAEtM,KAAK,EAAE;IACnC,MAAM6J,MAAM,GAAGyC,SAAS,CAACzC,MAAM;IAC/B,MAAMF,OAAO,GAAG;MAAErX,SAAS,EAAEga,SAAS,CAACrJ;IAAK,CAAC;IAC7C,OAAO;MACHrG,WAAW,EAAEiN,MAAM,CAACxW,QAAQ;MAC5BsW,OAAO;MACP3J;IACJ,CAAC;EACL;EACA;AACJ;AACA;AACA;AACA;EACI6N,UAAUA,CAACM,MAAM,EAAEtE,MAAM,EAAE7J,KAAK,EAAE2J,OAAO,GAAG,CAAC,CAAC,EAAE;IAC5C;IACA,MAAMyE,IAAI,GAAGD,MAAM,CAACtK,aAAa,CAACwK,kBAAkB,CAACxE,MAAM,CAACxW,QAAQ,EAAEsW,OAAO,EAAE3J,KAAK,CAAC;IACrF,IAAI,CAAC4J,0BAA0B,CAACC,MAAM,EAAEF,OAAO,CAAC;IAChD,OAAOyE,IAAI;EACf;EACAxE,0BAA0BA,CAACC,MAAM,EAAEF,OAAO,EAAE;IACxC,KAAK,IAAI2E,YAAY,IAAI,IAAI,CAACC,iBAAiB,CAAC1E,MAAM,CAAC,EAAE;MACrD,IAAI5O,aAAa,CAACC,oBAAoB,EAAE;QACpCD,aAAa,CAACC,oBAAoB,CAACC,cAAc,CAACkT,kBAAkB,CAACC,YAAY,EAAE3E,OAAO,CAAC;MAC/F;IACJ;IACA,IAAI,CAAClE,kBAAkB,CAAC+I,YAAY,EAAE;EAC1C;EACA;AACJ;AACA;AACA;EACI1E,sBAAsBA,CAAA,EAAG;IACrB,MAAMjG,aAAa,GAAG,IAAI,CAACqB,UAAU,CAACrB,aAAa;IACnD,KAAK,IAAI4K,WAAW,GAAG,CAAC,EAAErgB,KAAK,GAAGyV,aAAa,CAAChY,MAAM,EAAE4iB,WAAW,GAAGrgB,KAAK,EAAEqgB,WAAW,EAAE,EAAE;MACxF,MAAMR,OAAO,GAAGpK,aAAa,CAACoG,GAAG,CAACwE,WAAW,CAAC;MAC9C,MAAM9E,OAAO,GAAGsE,OAAO,CAACtE,OAAO;MAC/BA,OAAO,CAACvb,KAAK,GAAGA,KAAK;MACrBub,OAAO,CAAC9T,KAAK,GAAG4Y,WAAW,KAAK,CAAC;MACjC9E,OAAO,CAAC+E,IAAI,GAAGD,WAAW,KAAKrgB,KAAK,GAAG,CAAC;MACxCub,OAAO,CAACgF,IAAI,GAAGF,WAAW,GAAG,CAAC,KAAK,CAAC;MACpC9E,OAAO,CAACiF,GAAG,GAAG,CAACjF,OAAO,CAACgF,IAAI;MAC3B,IAAI,IAAI,CAAC3J,qBAAqB,EAAE;QAC5B2E,OAAO,CAAClC,SAAS,GAAG,IAAI,CAACwB,WAAW,CAACwF,WAAW,CAAC,CAAChH,SAAS;QAC3DkC,OAAO,CAAC8E,WAAW,GAAGA,WAAW;MACrC,CAAC,MACI;QACD9E,OAAO,CAAC3J,KAAK,GAAG,IAAI,CAACiJ,WAAW,CAACwF,WAAW,CAAC,CAAChH,SAAS;MAC3D;IACJ;EACJ;EACA;EACA8G,iBAAiBA,CAAC1E,MAAM,EAAE;IACtB,IAAI,CAACA,MAAM,IAAI,CAACA,MAAM,CAACjQ,OAAO,EAAE;MAC5B,OAAO,EAAE;IACb;IACA,OAAOpO,KAAK,CAACC,IAAI,CAACoe,MAAM,CAACjQ,OAAO,EAAEiV,QAAQ,IAAI;MAC1C,MAAM3U,MAAM,GAAG,IAAI,CAAC+L,iBAAiB,CAACgE,GAAG,CAAC4E,QAAQ,CAAC;MACnD,IAAI,CAAC3U,MAAM,KAAK,OAAOjG,SAAS,KAAK,WAAW,IAAIA,SAAS,CAAC,EAAE;QAC5D,MAAM0O,0BAA0B,CAACkM,QAAQ,CAAC;MAC9C;MACA,OAAOhF,MAAM,CAAC5P,mBAAmB,CAACC,MAAM,CAAC;IAC7C,CAAC,CAAC;EACN;EACA;EACAmN,yBAAyBA,CAAA,EAAG;IACxB,MAAMyH,gBAAgB,GAAG,IAAI,CAACnJ,SAAS,CAACoJ,sBAAsB,EAAE;IAChE,MAAMC,QAAQ,GAAG,CACb;MAAEC,GAAG,EAAE,OAAO;MAAEC,OAAO,EAAE,CAAC,IAAI,CAACzG,gBAAgB;IAAE,CAAC,EAClD;MAAEwG,GAAG,EAAE,OAAO;MAAEC,OAAO,EAAE,CAAC,IAAI,CAAChK,UAAU,EAAE,IAAI,CAACiK,gBAAgB;IAAE,CAAC,EACnE;MAAEF,GAAG,EAAE,OAAO;MAAEC,OAAO,EAAE,CAAC,IAAI,CAACxG,gBAAgB;IAAE,CAAC,CACrD;IACD,KAAK,MAAM0G,OAAO,IAAIJ,QAAQ,EAAE;MAC5B,MAAM9Q,OAAO,GAAG,IAAI,CAACyH,SAAS,CAAC0J,aAAa,CAACD,OAAO,CAACH,GAAG,CAAC;MACzD/Q,OAAO,CAACxG,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC;MACxC,KAAK,MAAMyW,MAAM,IAAIiB,OAAO,CAACF,OAAO,EAAE;QAClChR,OAAO,CAACoR,WAAW,CAACnB,MAAM,CAACxX,UAAU,CAACC,aAAa,CAAC;MACxD;MACAkY,gBAAgB,CAACQ,WAAW,CAACpR,OAAO,CAAC;IACzC;IACA;IACA,IAAI,CAAC7G,WAAW,CAACT,aAAa,CAAC0Y,WAAW,CAACR,gBAAgB,CAAC;EAChE;EACA;AACJ;AACA;AACA;AACA;EACI3J,oBAAoBA,CAAA,EAAG;IACnB,IAAI,CAACmC,WAAW,CAACvN,IAAI,CAAC,EAAE,CAAC;IACzB,IAAI,CAACmL,UAAU,CAACrB,aAAa,CAACgF,KAAK,EAAE;IACrC,IAAI,CAACG,UAAU,EAAE;EACrB;EACA;AACJ;AACA;AACA;AACA;EACIR,kBAAkBA,CAAA,EAAG;IACjB,MAAM+G,kBAAkB,GAAGA,CAAClC,GAAG,EAAEmC,CAAC,KAAK;MACnC,OAAOnC,GAAG,IAAImC,CAAC,CAACxc,gBAAgB,EAAE;IACtC,CAAC;IACD;IACA;IACA;IACA,IAAI,IAAI,CAAC8U,cAAc,CAACyF,MAAM,CAACgC,kBAAkB,EAAE,KAAK,CAAC,EAAE;MACvD,IAAI,CAACtE,2BAA2B,EAAE;IACtC;IACA,IAAI,IAAI,CAAClD,cAAc,CAACwF,MAAM,CAACgC,kBAAkB,EAAE,KAAK,CAAC,EAAE;MACvD,IAAI,CAAChE,2BAA2B,EAAE;IACtC;IACA,IAAI/f,KAAK,CAACC,IAAI,CAAC,IAAI,CAACwa,iBAAiB,CAAC4F,MAAM,EAAE,CAAC,CAAC0B,MAAM,CAACgC,kBAAkB,EAAE,KAAK,CAAC,EAAE;MAC/E,IAAI,CAAC/J,4BAA4B,GAAG,IAAI;MACxC,IAAI,CAACJ,wBAAwB,EAAE;IACnC;EACJ;EACA;AACJ;AACA;AACA;AACA;EACIgC,kBAAkBA,CAAA,EAAG;IACjB,MAAMjK,SAAS,GAAG,IAAI,CAACuI,IAAI,GAAG,IAAI,CAACA,IAAI,CAACzb,KAAK,GAAG,KAAK;IACrD,IAAI,CAACqhB,aAAa,GAAG,IAAItO,YAAY,CAAC,IAAI,CAACC,kBAAkB,EAAE,IAAI,CAAC0J,cAAc,EAAExJ,SAAS,EAAE,IAAI,CAACC,wBAAwB,EAAE,IAAI,CAACwI,SAAS,CAAC6J,SAAS,EAAE,IAAI,CAAC7I,4BAA4B,EAAE,IAAI,CAACb,0BAA0B,CAAC;IAC3N,CAAC,IAAI,CAACL,IAAI,GAAG,IAAI,CAACA,IAAI,CAACgC,MAAM,GAAGra,yCAAE,EAAE,EAC/BsL,IAAI,CAACnK,yDAAS,CAAC,IAAI,CAACwX,UAAU,CAAC,CAAC,CAChClZ,SAAS,CAAC7C,KAAK,IAAI;MACpB,IAAI,CAACqhB,aAAa,CAACnO,SAAS,GAAGlT,KAAK;MACpC,IAAI,CAACmb,wBAAwB,EAAE;IACnC,CAAC,CAAC;EACN;EACA;EACAyH,WAAWA,CAAC6C,KAAK,EAAE;IACf,OAAOA,KAAK,CAACvC,MAAM,CAAC1D,IAAI,IAAI,CAACA,IAAI,CAAC1U,MAAM,IAAI0U,IAAI,CAAC1U,MAAM,KAAK,IAAI,CAAC;EACrE;EACA;EACAoU,gBAAgBA,CAAA,EAAG;IACf,MAAM4B,SAAS,GAAG,IAAI,CAACC,gBAAgB,IAAI,IAAI,CAAC2E,UAAU;IAC1D,IAAI,CAAC5E,SAAS,EAAE;MACZ;IACJ;IACA,MAAM6E,UAAU,GAAG,IAAI,CAAC1K,UAAU,CAACrB,aAAa,CAAChY,MAAM,KAAK,CAAC;IAC7D,IAAI+jB,UAAU,KAAK,IAAI,CAAC/I,mBAAmB,EAAE;MACzC;IACJ;IACA,MAAMgJ,SAAS,GAAG,IAAI,CAACV,gBAAgB,CAACtL,aAAa;IACrD,IAAI+L,UAAU,EAAE;MACZ,MAAMxB,IAAI,GAAGyB,SAAS,CAACxB,kBAAkB,CAACtD,SAAS,CAACnO,WAAW,CAAC;MAChE,MAAMkT,QAAQ,GAAG1B,IAAI,CAACF,SAAS,CAAC,CAAC,CAAC;MAClC;MACA;MACA,IAAIE,IAAI,CAACF,SAAS,CAACriB,MAAM,KAAK,CAAC,IAAIikB,QAAQ,EAAExY,QAAQ,KAAK,IAAI,CAACqO,SAAS,CAAC5H,YAAY,EAAE;QACnF+R,QAAQ,CAACpY,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC;QACpCoY,QAAQ,CAACjZ,SAAS,CAACC,GAAG,CAACiU,SAAS,CAAClO,iBAAiB,CAAC;MACvD;IACJ,CAAC,MACI;MACDgT,SAAS,CAAChH,KAAK,EAAE;IACrB;IACA,IAAI,CAAChC,mBAAmB,GAAG+I,UAAU;EACzC;EAAC,QAAAtc,CAAA,GACQ,IAAI,CAACC,IAAI,YAAAwc,iBAAAtc,CAAA;IAAA,YAAAA,CAAA,IAAwF8Q,QAAQ,EAn1DlBtU,+DAAE,CAm1DkCA,0DAAkB,GAn1DtDA,+DAAE,CAm1DiEA,4DAAoB,GAn1DvFA,+DAAE,CAm1DkGA,qDAAa,GAn1DjHA,+DAAE,CAm1D4H,MAAM,GAn1DpIA,+DAAE,CAm1DgKX,6DAAiB,MAn1DnLW,+DAAE,CAm1D8MD,qDAAQ,GAn1DxNC,+DAAE,CAm1DmOJ,2DAAW,GAn1DhPI,+DAAE,CAm1D2PT,6EAAuB,GAn1DpRS,+DAAE,CAm1D+RgI,0BAA0B,GAn1D3ThI,+DAAE,CAm1DsUH,iEAAgB,GAn1DxVG,+DAAE,CAm1DmWuT,2BAA2B,OAn1DhYvT,+DAAE,CAm1D2aA,iDAAS;EAAA,CAA4D;EAAA,QAAA2D,EAAA,GACzkB,IAAI,CAAC6H,IAAI,kBAp1D8ExL,+DAAE;IAAA8D,IAAA,EAo1DJwQ,QAAQ;IAAAvQ,SAAA;IAAAqB,cAAA,WAAAgb,wBAAA7e,EAAA,EAAAC,GAAA,EAAA8D,QAAA;MAAA,IAAA/D,EAAA;QAp1DNvB,4DAAE,CAAAsF,QAAA,EA01D3BoH,YAAY;QA11Da1M,4DAAE,CAAAsF,QAAA,EA01DyDb,YAAY;QA11DvEzE,4DAAE,CAAAsF,QAAA,EA01D0IuF,SAAS;QA11DrJ7K,4DAAE,CAAAsF,QAAA,EA01D8N4E,eAAe;QA11D/OlK,4DAAE,CAAAsF,QAAA,EA01DwT6E,eAAe;MAAA;MAAA,IAAA5I,EAAA;QAAA,IAAAiE,EAAA;QA11DzUxF,4DAAE,CAAAwF,EAAA,GAAFxF,yDAAE,QAAAwB,GAAA,CAAAke,UAAA,GAAAla,EAAA,CAAAI,KAAA;QAAF5F,4DAAE,CAAAwF,EAAA,GAAFxF,yDAAE,QAAAwB,GAAA,CAAAqb,kBAAA,GAAArX,EAAA;QAAFxF,4DAAE,CAAAwF,EAAA,GAAFxF,yDAAE,QAAAwB,GAAA,CAAAwb,eAAA,GAAAxX,EAAA;QAAFxF,4DAAE,CAAAwF,EAAA,GAAFxF,yDAAE,QAAAwB,GAAA,CAAAsb,qBAAA,GAAAtX,EAAA;QAAFxF,4DAAE,CAAAwF,EAAA,GAAFxF,yDAAE,QAAAwB,GAAA,CAAAub,qBAAA,GAAAvX,EAAA;MAAA;IAAA;IAAA6a,SAAA,WAAAC,eAAA/e,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAAFvB,yDAAE,CA01Dma2T,aAAa;QA11Dlb3T,yDAAE,CA01DihB8T,eAAe;QA11DliB9T,yDAAE,CA01DioBgU,eAAe;QA11DlpBhU,yDAAE,CA01DivBkU,eAAe;MAAA;MAAA,IAAA3S,EAAA;QAAA,IAAAiE,EAAA;QA11DlwBxF,4DAAE,CAAAwF,EAAA,GAAFxF,yDAAE,QAAAwB,GAAA,CAAAyT,UAAA,GAAAzP,EAAA,CAAAI,KAAA;QAAF5F,4DAAE,CAAAwF,EAAA,GAAFxF,yDAAE,QAAAwB,GAAA,CAAAgX,gBAAA,GAAAhT,EAAA,CAAAI,KAAA;QAAF5F,4DAAE,CAAAwF,EAAA,GAAFxF,yDAAE,QAAAwB,GAAA,CAAAiX,gBAAA,GAAAjT,EAAA,CAAAI,KAAA;QAAF5F,4DAAE,CAAAwF,EAAA,GAAFxF,yDAAE,QAAAwB,GAAA,CAAA0d,gBAAA,GAAA1Z,EAAA,CAAAI,KAAA;MAAA;IAAA;IAAAqB,SAAA,sBAo1D6Q,EAAE;IAAAuZ,QAAA;IAAAC,YAAA,WAAAC,sBAAAnf,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAp1DjRvB,yDAAE,2BAAAwB,GAAA,CAAA4T,WAAA;MAAA;IAAA;IAAArP,MAAA;MAAAwO,OAAA;MAAAK,UAAA;MAAAG,qBAAA;MAAAK,WAAA;IAAA;IAAAwL,OAAA;MAAA/J,cAAA;IAAA;IAAAgK,QAAA;IAAA7a,QAAA,GAAFhG,gEAAE,CAo1D4X,CACtd;MAAEkG,OAAO,EAAEjD,SAAS;MAAEkD,WAAW,EAAEmO;IAAS,CAAC,EAC7C;MAAEpO,OAAO,EAAE3G,6EAAuB;MAAEmU,QAAQ,EAAEhU,kFAA4BA;IAAC,CAAC,EAC5E;MAAEwG,OAAO,EAAE8B,0BAA0B;MAAE0L,QAAQ,EAAEzL;IAAyB,CAAC;IAC3E;IACA;MAAE/B,OAAO,EAAEqN,2BAA2B;MAAEuN,QAAQ,EAAE;IAAK,CAAC,CAC3D;IAAAC,kBAAA,EAAA1f,GAAA;IAAAqK,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAxI,QAAA,WAAA4d,kBAAAzf,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QA11D2FvB,6DAAE,CAAAoB,GAAA;QAAFpB,0DAAE,GA01Du4B;QA11Dz4BA,0DAAE,MA01D67B;QA11D/7BA,gEAAE,MA01D8+B;MAAA;IAAA;IAAA+L,YAAA,GAAqQ4H,aAAa,EAAwDG,eAAe,EAA8DE,eAAe,EAA8DE,eAAe;IAAAiN,MAAA;IAAAnV,aAAA;EAAA,EAAoI;AAC3sD;AACA;EAAA,QAAAhI,SAAA,oBAAAA,SAAA,KA51DoGhE,+DAAE,CA41DXsU,QAAQ,EAAc,CAAC;IACtGxQ,IAAI,EAAEtD,oDAAS;IACfnD,IAAI,EAAE,CAAC;MAAE6G,QAAQ,EAAE,6BAA6B;MAAE2c,QAAQ,EAAE,UAAU;MAAEzd,QAAQ,EAAEgR,kBAAkB;MAAElN,IAAI,EAAE;QAChG,OAAO,EAAE,WAAW;QACpB,gCAAgC,EAAE,aAAa;QAC/C,iBAAiB,EAAE;MACvB,CAAC;MAAE8E,aAAa,EAAEtL,iEAAsB;MAAEuL,eAAe,EAAExL,0EAA+B;MAAE4F,SAAS,EAAE,CACnG;QAAEH,OAAO,EAAEjD,SAAS;QAAEkD,WAAW,EAAEmO;MAAS,CAAC,EAC7C;QAAEpO,OAAO,EAAE3G,6EAAuB;QAAEmU,QAAQ,EAAEhU,kFAA4BA;MAAC,CAAC,EAC5E;QAAEwG,OAAO,EAAE8B,0BAA0B;QAAE0L,QAAQ,EAAEzL;MAAyB,CAAC;MAC3E;MACA;QAAE/B,OAAO,EAAEqN,2BAA2B;QAAEuN,QAAQ,EAAE;MAAK,CAAC,CAC3D;MAAEK,MAAM,EAAE,CAAC,6CAA6C;IAAE,CAAC;EACxE,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAErd,IAAI,EAAE9D,0DAAkBqK;IAAC,CAAC,EAAE;MAAEvG,IAAI,EAAE9D,4DAAoB+f;IAAC,CAAC,EAAE;MAAEjc,IAAI,EAAE9D,qDAAagH;IAAC,CAAC,EAAE;MAAElD,IAAI,EAAEwC,SAAS;MAAEC,UAAU,EAAE,CAAC;QACrJzC,IAAI,EAAEhD,oDAAS;QACfzD,IAAI,EAAE,CAAC,MAAM;MACjB,CAAC;IAAE,CAAC,EAAE;MAAEyG,IAAI,EAAEzE,6DAAiB;MAAEkH,UAAU,EAAE,CAAC;QAC1CzC,IAAI,EAAE1D,mDAAQA;MAClB,CAAC;IAAE,CAAC,EAAE;MAAE0D,IAAI,EAAEwC,SAAS;MAAEC,UAAU,EAAE,CAAC;QAClCzC,IAAI,EAAE3D,iDAAM;QACZ9C,IAAI,EAAE,CAAC0C,qDAAQ;MACnB,CAAC;IAAE,CAAC,EAAE;MAAE+D,IAAI,EAAElE,2DAAWsgB;IAAC,CAAC,EAAE;MAAEpc,IAAI,EAAEwC,SAAS;MAAEC,UAAU,EAAE,CAAC;QACzDzC,IAAI,EAAE3D,iDAAM;QACZ9C,IAAI,EAAE,CAACkC,6EAAuB;MAClC,CAAC;IAAE,CAAC,EAAE;MAAEuE,IAAI,EAAEmE,wBAAwB;MAAE1B,UAAU,EAAE,CAAC;QACjDzC,IAAI,EAAE3D,iDAAM;QACZ9C,IAAI,EAAE,CAAC2K,0BAA0B;MACrC,CAAC;IAAE,CAAC,EAAE;MAAElE,IAAI,EAAEjE,iEAAgBsgB;IAAC,CAAC,EAAE;MAAErc,IAAI,EAAEwC,SAAS;MAAEC,UAAU,EAAE,CAAC;QAC9DzC,IAAI,EAAE1D,mDAAQA;MAClB,CAAC,EAAE;QACC0D,IAAI,EAAE/C,mDAAQA;MAClB,CAAC,EAAE;QACC+C,IAAI,EAAE3D,iDAAM;QACZ9C,IAAI,EAAE,CAACkW,2BAA2B;MACtC,CAAC;IAAE,CAAC,EAAE;MAAEzP,IAAI,EAAE9D,iDAAS;MAAEuG,UAAU,EAAE,CAAC;QAClCzC,IAAI,EAAE1D,mDAAQA;MAClB,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEmU,OAAO,EAAE,CAAC;MACtCzQ,IAAI,EAAEzD,gDAAKA;IACf,CAAC,CAAC;IAAEuU,UAAU,EAAE,CAAC;MACb9Q,IAAI,EAAEzD,gDAAKA;IACf,CAAC,CAAC;IAAE0U,qBAAqB,EAAE,CAAC;MACxBjR,IAAI,EAAEzD,gDAAKA;IACf,CAAC,CAAC;IAAE+U,WAAW,EAAE,CAAC;MACdtR,IAAI,EAAEzD,gDAAKA;IACf,CAAC,CAAC;IAAEwW,cAAc,EAAE,CAAC;MACjB/S,IAAI,EAAE9C,iDAAMA;IAChB,CAAC,CAAC;IAAEiU,UAAU,EAAE,CAAC;MACbnR,IAAI,EAAE7C,oDAAS;MACf5D,IAAI,EAAE,CAACsW,aAAa,EAAE;QAAEyN,MAAM,EAAE;MAAK,CAAC;IAC1C,CAAC,CAAC;IAAE5I,gBAAgB,EAAE,CAAC;MACnB1U,IAAI,EAAE7C,oDAAS;MACf5D,IAAI,EAAE,CAACyW,eAAe,EAAE;QAAEsN,MAAM,EAAE;MAAK,CAAC;IAC5C,CAAC,CAAC;IAAE3I,gBAAgB,EAAE,CAAC;MACnB3U,IAAI,EAAE7C,oDAAS;MACf5D,IAAI,EAAE,CAAC2W,eAAe,EAAE;QAAEoN,MAAM,EAAE;MAAK,CAAC;IAC5C,CAAC,CAAC;IAAElC,gBAAgB,EAAE,CAAC;MACnBpb,IAAI,EAAE7C,oDAAS;MACf5D,IAAI,EAAE,CAAC6W,eAAe,EAAE;QAAEkN,MAAM,EAAE;MAAK,CAAC;IAC5C,CAAC,CAAC;IAAEvE,kBAAkB,EAAE,CAAC;MACrB/Y,IAAI,EAAE5C,0DAAe;MACrB7D,IAAI,EAAE,CAACoH,YAAY,EAAE;QAAE4c,WAAW,EAAE;MAAK,CAAC;IAC9C,CAAC,CAAC;IAAErE,eAAe,EAAE,CAAC;MAClBlZ,IAAI,EAAE5C,0DAAe;MACrB7D,IAAI,EAAE,CAACwN,SAAS,EAAE;QAAEwW,WAAW,EAAE;MAAK,CAAC;IAC3C,CAAC,CAAC;IAAEvE,qBAAqB,EAAE,CAAC;MACxBhZ,IAAI,EAAE5C,0DAAe;MACrB7D,IAAI,EAAE,CAAC6M,eAAe,EAAE;QAChBmX,WAAW,EAAE;MACjB,CAAC;IACT,CAAC,CAAC;IAAEtE,qBAAqB,EAAE,CAAC;MACxBjZ,IAAI,EAAE5C,0DAAe;MACrB7D,IAAI,EAAE,CAAC8M,eAAe,EAAE;QAChBkX,WAAW,EAAE;MACjB,CAAC;IACT,CAAC,CAAC;IAAE3B,UAAU,EAAE,CAAC;MACb5b,IAAI,EAAExD,uDAAY;MAClBjD,IAAI,EAAE,CAACqP,YAAY;IACvB,CAAC;EAAE,CAAC;AAAA;AAChB;AACA,SAASiQ,gBAAgBA,CAAC2E,KAAK,EAAEpF,GAAG,EAAE;EAClC,OAAOoF,KAAK,CAACC,MAAM,CAAChmB,KAAK,CAACC,IAAI,CAAC0gB,GAAG,CAAC,CAAC;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMsF,aAAa,CAAC;EAChB;EACA,IAAI5iB,IAAIA,CAAA,EAAG;IACP,OAAO,IAAI,CAAC8F,KAAK;EACrB;EACA,IAAI9F,IAAIA,CAACA,IAAI,EAAE;IACX,IAAI,CAAC8F,KAAK,GAAG9F,IAAI;IACjB;IACA;IACA,IAAI,CAAC6iB,kBAAkB,EAAE;EAC7B;EACA3nB,WAAWA;EACX;EACA;EACA;EACAgL,MAAM,EAAE4c,QAAQ,EAAE;IACd,IAAI,CAAC5c,MAAM,GAAGA,MAAM;IACpB,IAAI,CAAC4c,QAAQ,GAAGA,QAAQ;IACxB;IACA,IAAI,CAAC3f,OAAO,GAAG,OAAO;IACtB,IAAI,CAAC2f,QAAQ,GAAGA,QAAQ,IAAI,CAAC,CAAC;EAClC;EACAxK,QAAQA,CAAA,EAAG;IACP,IAAI,CAACuK,kBAAkB,EAAE;IACzB,IAAI,IAAI,CAACvf,UAAU,KAAKoE,SAAS,EAAE;MAC/B,IAAI,CAACpE,UAAU,GAAG,IAAI,CAACyf,wBAAwB,EAAE;IACrD;IACA,IAAI,CAAC,IAAI,CAACpf,YAAY,EAAE;MACpB,IAAI,CAACA,YAAY,GACb,IAAI,CAACmf,QAAQ,CAACE,mBAAmB,KAAK,CAAC5O,IAAI,EAAEpU,IAAI,KAAKoU,IAAI,CAACpU,IAAI,CAAC,CAAC;IACzE;IACA,IAAI,IAAI,CAACkG,MAAM,EAAE;MACb;MACA;MACA;MACA,IAAI,CAAC2B,SAAS,CAACd,IAAI,GAAG,IAAI,CAACA,IAAI;MAC/B,IAAI,CAACc,SAAS,CAACZ,UAAU,GAAG,IAAI,CAACA,UAAU;MAC3C,IAAI,CAACf,MAAM,CAACoV,YAAY,CAAC,IAAI,CAACzT,SAAS,CAAC;IAC5C,CAAC,MACI,IAAI,OAAOzC,SAAS,KAAK,WAAW,IAAIA,SAAS,EAAE;MACpD,MAAMqP,yCAAyC,EAAE;IACrD;EACJ;EACA7K,WAAWA,CAAA,EAAG;IACV,IAAI,IAAI,CAAC1D,MAAM,EAAE;MACb,IAAI,CAACA,MAAM,CAACqV,eAAe,CAAC,IAAI,CAAC1T,SAAS,CAAC;IAC/C;EACJ;EACA;AACJ;AACA;AACA;EACIkb,wBAAwBA,CAAA,EAAG;IACvB,MAAM/iB,IAAI,GAAG,IAAI,CAACA,IAAI;IACtB,IAAI,CAACA,IAAI,KAAK,OAAOoF,SAAS,KAAK,WAAW,IAAIA,SAAS,CAAC,EAAE;MAC1D,MAAMsP,kCAAkC,EAAE;IAC9C;IACA,IAAI,IAAI,CAACoO,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAACG,0BAA0B,EAAE;MAC3D,OAAO,IAAI,CAACH,QAAQ,CAACG,0BAA0B,CAACjjB,IAAI,CAAC;IACzD;IACA,OAAOA,IAAI,CAAC,CAAC,CAAC,CAACkjB,WAAW,EAAE,GAAGljB,IAAI,CAACgR,KAAK,CAAC,CAAC,CAAC;EAChD;EACA;EACA6R,kBAAkBA,CAAA,EAAG;IACjB,IAAI,IAAI,CAAChb,SAAS,EAAE;MAChB,IAAI,CAACA,SAAS,CAAC7H,IAAI,GAAG,IAAI,CAACA,IAAI;IACnC;EACJ;EAAC,QAAAyE,CAAA,GACQ,IAAI,CAACC,IAAI,YAAAye,sBAAAve,CAAA;IAAA,YAAAA,CAAA,IAAwFge,aAAa,EA5/DvBxhB,+DAAE,CA4/DuCsU,QAAQ,MA5/DjDtU,+DAAE,CA4/D4EkD,mBAAmB;EAAA,CAA4D;EAAA,QAAAS,EAAA,GACpP,IAAI,CAAC6H,IAAI,kBA7/D8ExL,+DAAE;IAAA8D,IAAA,EA6/DJ0d,aAAa;IAAAzd,SAAA;IAAAsc,SAAA,WAAA2B,oBAAAzgB,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QA7/DXvB,yDAAE,CA6/DiNyE,YAAY;QA7/D/NzE,yDAAE,CA6/DkTmD,UAAU;QA7/D9TnD,yDAAE,CA6/DuZmE,gBAAgB;MAAA;MAAA,IAAA5C,EAAA;QAAA,IAAAiE,EAAA;QA7/DzaxF,4DAAE,CAAAwF,EAAA,GAAFxF,yDAAE,QAAAwB,GAAA,CAAAiF,SAAA,GAAAjB,EAAA,CAAAI,KAAA;QAAF5F,4DAAE,CAAAwF,EAAA,GAAFxF,yDAAE,QAAAwB,GAAA,CAAAmE,IAAA,GAAAH,EAAA,CAAAI,KAAA;QAAF5F,4DAAE,CAAAwF,EAAA,GAAFxF,yDAAE,QAAAwB,GAAA,CAAAqE,UAAA,GAAAL,EAAA,CAAAI,KAAA;MAAA;IAAA;IAAAG,MAAA;MAAAnH,IAAA;MAAAsD,UAAA;MAAAK,YAAA;MAAAR,OAAA;IAAA;IAAA2J,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAxI,QAAA,WAAA6e,uBAAA1gB,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAAFvB,qEAAE,MA8/DvE;QA9/DqEA,wDAAE,IAAAsB,2BAAA,gBAigE3F;QAjgEyFtB,wDAAE,IAAAmC,2BAAA,gBAogE3F;QApgEyFnC,mEAAE,EAqgEnF;MAAA;IAAA;IAAA+L,YAAA,GAC4C5I,UAAU,EAAyDgB,gBAAgB,EAA+DM,YAAY,EAA4GkD,OAAO,EAAmEb,aAAa;IAAAkF,aAAA;EAAA,EAAuJ;AACvjB;AACA;EAAA,QAAAhI,SAAA,oBAAAA,SAAA,KAxgEoGhE,+DAAE,CAwgEXwhB,aAAa,EAAc,CAAC;IAC3G1d,IAAI,EAAEtD,oDAAS;IACfnD,IAAI,EAAE,CAAC;MACC6G,QAAQ,EAAE,iBAAiB;MAC3Bd,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiB4I,aAAa,EAAEtL,iEAAsB;MACrC;MACA;MACA;MACA;MACA;MACA;MACAuL,eAAe,EAAExL,0EAA+ByL;IACpD,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEpI,IAAI,EAAEwQ,QAAQ;MAAE/N,UAAU,EAAE,CAAC;QAC7DzC,IAAI,EAAE1D,mDAAQA;MAClB,CAAC;IAAE,CAAC,EAAE;MAAE0D,IAAI,EAAEwC,SAAS;MAAEC,UAAU,EAAE,CAAC;QAClCzC,IAAI,EAAE1D,mDAAQA;MAClB,CAAC,EAAE;QACC0D,IAAI,EAAE3D,iDAAM;QACZ9C,IAAI,EAAE,CAAC6F,mBAAmB;MAC9B,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEtE,IAAI,EAAE,CAAC;MACnCkF,IAAI,EAAEzD,gDAAKA;IACf,CAAC,CAAC;IAAE6B,UAAU,EAAE,CAAC;MACb4B,IAAI,EAAEzD,gDAAKA;IACf,CAAC,CAAC;IAAEkC,YAAY,EAAE,CAAC;MACfuB,IAAI,EAAEzD,gDAAKA;IACf,CAAC,CAAC;IAAE0B,OAAO,EAAE,CAAC;MACV+B,IAAI,EAAEzD,gDAAKA;IACf,CAAC,CAAC;IAAEoG,SAAS,EAAE,CAAC;MACZ3C,IAAI,EAAE7C,oDAAS;MACf5D,IAAI,EAAE,CAACoH,YAAY,EAAE;QAAE2c,MAAM,EAAE;MAAK,CAAC;IACzC,CAAC,CAAC;IAAEzb,IAAI,EAAE,CAAC;MACP7B,IAAI,EAAE7C,oDAAS;MACf5D,IAAI,EAAE,CAAC8F,UAAU,EAAE;QAAEie,MAAM,EAAE;MAAK,CAAC;IACvC,CAAC,CAAC;IAAEvb,UAAU,EAAE,CAAC;MACb/B,IAAI,EAAE7C,oDAAS;MACf5D,IAAI,EAAE,CAAC8G,gBAAgB,EAAE;QAAEid,MAAM,EAAE;MAAK,CAAC;IAC7C,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMiB,qBAAqB,GAAG,CAC1B/N,QAAQ,EACRzJ,SAAS,EACT1H,UAAU,EACV6H,aAAa,EACb7G,gBAAgB,EAChBE,gBAAgB,EAChBI,YAAY,EACZkD,OAAO,EACP4E,MAAM,EACNzF,aAAa,EACbK,aAAa,EACbmE,YAAY,EACZpB,eAAe,EACfkC,YAAY,EACZjC,eAAe,EACfwJ,aAAa,EACbG,eAAe,EACfE,eAAe,EACfwN,aAAa,EACb9U,YAAY,EACZ8G,cAAc,EACdU,eAAe,CAClB;AACD,MAAMoO,cAAc,CAAC;EAAA,QAAAjf,CAAA,GACR,IAAI,CAACC,IAAI,YAAAif,uBAAA/e,CAAA;IAAA,YAAAA,CAAA,IAAwF8e,cAAc;EAAA,CAAkD;EAAA,QAAA3e,EAAA,GACjK,IAAI,CAAC6e,IAAI,kBAnlE8ExiB,8DAAE;IAAA8D,IAAA,EAmlESwe;EAAc,EA0C9F;EAAA,QAAAjX,EAAA,GAClB,IAAI,CAACqX,IAAI,kBA9nE8E1iB,8DAAE;IAAA4iB,OAAA,GA8nEmC9iB,mEAAe;EAAA,EAAI;AAC5J;AACA;EAAA,QAAAkE,SAAA,oBAAAA,SAAA,KAhoEoGhE,+DAAE,CAgoEXsiB,cAAc,EAAc,CAAC;IAC5Gxe,IAAI,EAAE3C,mDAAQ;IACd9D,IAAI,EAAE,CAAC;MACCwlB,OAAO,EAAER,qBAAqB;MAC9BS,YAAY,EAAET,qBAAqB;MACnCO,OAAO,EAAE,CAAC9iB,mEAAe;IAC7B,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA","sources":["./node_modules/rxjs/dist/esm/internal/BehaviorSubject.js","./node_modules/rxjs/dist/esm/internal/Subject.js","./node_modules/rxjs/dist/esm/internal/observable/empty.js","./node_modules/rxjs/dist/esm/internal/observable/of.js","./node_modules/rxjs/dist/esm/internal/operators/OperatorSubscriber.js","./node_modules/rxjs/dist/esm/internal/operators/take.js","./node_modules/rxjs/dist/esm/internal/operators/takeUntil.js","./node_modules/rxjs/dist/esm/internal/util/ObjectUnsubscribedError.js","./node_modules/rxjs/dist/esm/internal/util/isObservable.js","./node_modules/rxjs/dist/esm/internal/util/lift.js","./node_modules/@angular/cdk/fesm2022/table.mjs"],"sourcesContent":["import { Subject } from './Subject';\nexport class BehaviorSubject extends Subject {\n    constructor(_value) {\n        super();\n        this._value = _value;\n    }\n    get value() {\n        return this.getValue();\n    }\n    _subscribe(subscriber) {\n        const subscription = super._subscribe(subscriber);\n        !subscription.closed && subscriber.next(this._value);\n        return subscription;\n    }\n    getValue() {\n        const { hasError, thrownError, _value } = this;\n        if (hasError) {\n            throw thrownError;\n        }\n        this._throwIfClosed();\n        return _value;\n    }\n    next(value) {\n        super.next((this._value = value));\n    }\n}\n","import { Observable } from './Observable';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\nexport class Subject extends Observable {\n    constructor() {\n        super();\n        this.closed = false;\n        this.currentObservers = null;\n        this.observers = [];\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    lift(operator) {\n        const subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    }\n    _throwIfClosed() {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n    }\n    next(value) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                if (!this.currentObservers) {\n                    this.currentObservers = Array.from(this.observers);\n                }\n                for (const observer of this.currentObservers) {\n                    observer.next(value);\n                }\n            }\n        });\n    }\n    error(err) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.hasError = this.isStopped = true;\n                this.thrownError = err;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().error(err);\n                }\n            }\n        });\n    }\n    complete() {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.isStopped = true;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().complete();\n                }\n            }\n        });\n    }\n    unsubscribe() {\n        this.isStopped = this.closed = true;\n        this.observers = this.currentObservers = null;\n    }\n    get observed() {\n        var _a;\n        return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n    _trySubscribe(subscriber) {\n        this._throwIfClosed();\n        return super._trySubscribe(subscriber);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._checkFinalizedStatuses(subscriber);\n        return this._innerSubscribe(subscriber);\n    }\n    _innerSubscribe(subscriber) {\n        const { hasError, isStopped, observers } = this;\n        if (hasError || isStopped) {\n            return EMPTY_SUBSCRIPTION;\n        }\n        this.currentObservers = null;\n        observers.push(subscriber);\n        return new Subscription(() => {\n            this.currentObservers = null;\n            arrRemove(observers, subscriber);\n        });\n    }\n    _checkFinalizedStatuses(subscriber) {\n        const { hasError, thrownError, isStopped } = this;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped) {\n            subscriber.complete();\n        }\n    }\n    asObservable() {\n        const observable = new Observable();\n        observable.source = this;\n        return observable;\n    }\n}\nSubject.create = (destination, source) => {\n    return new AnonymousSubject(destination, source);\n};\nexport class AnonymousSubject extends Subject {\n    constructor(destination, source) {\n        super();\n        this.destination = destination;\n        this.source = source;\n    }\n    next(value) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n    }\n    error(err) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n    }\n    complete() {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    _subscribe(subscriber) {\n        var _a, _b;\n        return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;\n    }\n}\n","import { Observable } from '../Observable';\nexport const EMPTY = new Observable((subscriber) => subscriber.complete());\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nfunction emptyScheduled(scheduler) {\n    return new Observable((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n","import { popScheduler } from '../util/args';\nimport { from } from './from';\nexport function of(...args) {\n    const scheduler = popScheduler(args);\n    return from(args, scheduler);\n}\n","import { Subscriber } from '../Subscriber';\nexport function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {\n    return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\nexport class OperatorSubscriber extends Subscriber {\n    constructor(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {\n        super(destination);\n        this.onFinalize = onFinalize;\n        this.shouldUnsubscribe = shouldUnsubscribe;\n        this._next = onNext\n            ? function (value) {\n                try {\n                    onNext(value);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n            }\n            : super._next;\n        this._error = onError\n            ? function (err) {\n                try {\n                    onError(err);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : super._error;\n        this._complete = onComplete\n            ? function () {\n                try {\n                    onComplete();\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : super._complete;\n    }\n    unsubscribe() {\n        var _a;\n        if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n            const { closed } = this;\n            super.unsubscribe();\n            !closed && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));\n        }\n    }\n}\n","import { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function take(count) {\n    return count <= 0\n        ?\n            () => EMPTY\n        : operate((source, subscriber) => {\n            let seen = 0;\n            source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n                if (++seen <= count) {\n                    subscriber.next(value);\n                    if (count <= seen) {\n                        subscriber.complete();\n                    }\n                }\n            }));\n        });\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\nexport function takeUntil(notifier) {\n    return operate((source, subscriber) => {\n        innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, () => subscriber.complete(), noop));\n        !subscriber.closed && source.subscribe(subscriber);\n    });\n}\n","import { createErrorClass } from './createErrorClass';\nexport const ObjectUnsubscribedError = createErrorClass((_super) => function ObjectUnsubscribedErrorImpl() {\n    _super(this);\n    this.name = 'ObjectUnsubscribedError';\n    this.message = 'object unsubscribed';\n});\n","import { Observable } from '../Observable';\nimport { isFunction } from './isFunction';\nexport function isObservable(obj) {\n    return !!obj && (obj instanceof Observable || (isFunction(obj.lift) && isFunction(obj.subscribe)));\n}\n","import { isFunction } from './isFunction';\nexport function hasLift(source) {\n    return isFunction(source === null || source === void 0 ? void 0 : source.lift);\n}\nexport function operate(init) {\n    return (source) => {\n        if (hasLift(source)) {\n            return source.lift(function (liftedSource) {\n                try {\n                    return init(liftedSource, this);\n                }\n                catch (err) {\n                    this.error(err);\n                }\n            });\n        }\n        throw new TypeError('Unable to lift unknown Observable type');\n    };\n}\n","import * as i1 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, isDataSource, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nexport { DataSource } from '@angular/cdk/collections';\nimport * as i2 from '@angular/cdk/platform';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, Input, ContentChild, Injectable, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, EventEmitter, NgZone, Attribute, SkipSelf, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, from, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\n\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        /** Whether sticky positioning should be applied. */\n        get sticky() {\n            return this._sticky;\n        }\n        set sticky(v) {\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /** Whether the sticky value has changed since this was last called. */\n        hasStickyChanged() {\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /** Whether the sticky input has changed since it was last checked. */\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkCellDef, selector: \"[cdkCellDef]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkHeaderCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkHeaderCellDef, selector: \"[cdkHeaderCellDef]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkHeaderCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkHeaderCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkFooterCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkFooterCellDef, selector: \"[cdkFooterCellDef]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkFooterCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkFooterCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n// Boilerplate for applying mixins to CdkColumnDef.\n/** @docs-private */\nclass CdkColumnDefBase {\n}\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    /** Unique name for this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._setNameInput(name);\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    set stickyEnd(v) {\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n    constructor(_table) {\n        super();\n        this._table = _table;\n        this._stickyEnd = false;\n    }\n    /**\n     * Overridable method that sets the css classes that will be added to every cell in this\n     * column.\n     * In the future, columnCssClassName will change from type string[] to string and this\n     * will set a single string value.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setNameInput(value) {\n        // If the directive is set without a name (updated programmatically), then this setter will\n        // trigger with an empty string and should not overwrite the programmatically set value.\n        if (value) {\n            this._name = value;\n            this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/gi, '-');\n            this._updateColumnCssClassName();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkColumnDef, deps: [{ token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkColumnDef, selector: \"[cdkColumnDef]\", inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }], queries: [{ propertyName: \"cell\", first: true, predicate: CdkCellDef, descendants: true }, { propertyName: \"headerCell\", first: true, predicate: CdkHeaderCellDef, descendants: true }, { propertyName: \"footerCell\", first: true, predicate: CdkFooterCellDef, descendants: true }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkColumnDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkColumnDef]',\n                    inputs: ['sticky'],\n                    providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }],\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { name: [{\n                type: Input,\n                args: ['cdkColumnDef']\n            }], stickyEnd: [{\n                type: Input,\n                args: ['stickyEnd']\n            }], cell: [{\n                type: ContentChild,\n                args: [CdkCellDef]\n            }], headerCell: [{\n                type: ContentChild,\n                args: [CdkHeaderCellDef]\n            }], footerCell: [{\n                type: ContentChild,\n                args: [CdkFooterCellDef]\n            }] } });\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        elementRef.nativeElement.classList.add(...columnDef._columnCssClassName);\n    }\n}\n/** Header cell template container that adds the right classes and role. */\nclass CdkHeaderCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkHeaderCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkHeaderCell, selector: \"cdk-header-cell, th[cdk-header-cell]\", host: { attributes: { \"role\": \"columnheader\" }, classAttribute: \"cdk-header-cell\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkHeaderCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-header-cell, th[cdk-header-cell]',\n                    host: {\n                        'class': 'cdk-header-cell',\n                        'role': 'columnheader',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n/** Footer cell template container that adds the right classes and role. */\nclass CdkFooterCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        if (columnDef._table?._elementRef.nativeElement.nodeType === 1) {\n            const tableRole = columnDef._table._elementRef.nativeElement.getAttribute('role');\n            const role = tableRole === 'grid' || tableRole === 'treegrid' ? 'gridcell' : 'cell';\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkFooterCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkFooterCell, selector: \"cdk-footer-cell, td[cdk-footer-cell]\", host: { classAttribute: \"cdk-footer-cell\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkFooterCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                    host: {\n                        'class': 'cdk-footer-cell',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n/** Cell template container that adds the right classes and role. */\nclass CdkCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        if (columnDef._table?._elementRef.nativeElement.nodeType === 1) {\n            const tableRole = columnDef._table._elementRef.nativeElement.getAttribute('role');\n            const role = tableRole === 'grid' || tableRole === 'treegrid' ? 'gridcell' : 'cell';\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkCell, selector: \"cdk-cell, td[cdk-cell]\", host: { classAttribute: \"cdk-cell\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-cell, td[cdk-cell]',\n                    host: {\n                        'class': 'cdk-cell',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n\n/**\n * @docs-private\n */\nclass _Schedule {\n    constructor() {\n        this.tasks = [];\n        this.endTasks = [];\n    }\n}\n/** Injection token used to provide a coalesced style scheduler. */\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\nclass _CoalescedStyleScheduler {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        this._currentSchedule = null;\n        this._destroyed = new Subject();\n    }\n    /**\n     * Schedules the specified task to run at the end of the current VM turn.\n     */\n    schedule(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.tasks.push(task);\n    }\n    /**\n     * Schedules the specified task to run after other scheduled tasks at the end of the current\n     * VM turn.\n     */\n    scheduleEnd(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.endTasks.push(task);\n    }\n    /** Prevent any further tasks from running. */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    _createScheduleIfNeeded() {\n        if (this._currentSchedule) {\n            return;\n        }\n        this._currentSchedule = new _Schedule();\n        this._getScheduleObservable()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n                const schedule = this._currentSchedule;\n                // Capture new tasks scheduled by the current set of tasks.\n                this._currentSchedule = new _Schedule();\n                for (const task of schedule.tasks) {\n                    task();\n                }\n                for (const task of schedule.endTasks) {\n                    task();\n                }\n            }\n            this._currentSchedule = null;\n        });\n    }\n    _getScheduleObservable() {\n        // Use onStable when in the context of an ongoing change detection cycle so that we\n        // do not accidentally trigger additional cycles.\n        return this._ngZone.isStable\n            ? from(Promise.resolve(undefined))\n            : this._ngZone.onStable.pipe(take(1));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: _CoalescedStyleScheduler, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: _CoalescedStyleScheduler }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: _CoalescedStyleScheduler, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\nclass BaseRowDef {\n    constructor(\n    /** @docs-private */ template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /** Gets this row def's relevant cell template from the provided column def. */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: BaseRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: BaseRowDef, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: BaseRowDef, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }]; } });\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/** @docs-private */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkHeaderRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkHeaderRowDef, selector: \"[cdkHeaderRowDef]\", inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkHeaderRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkHeaderRowDef]',\n                    inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky'],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }]; } });\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/** @docs-private */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkFooterRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkFooterRowDef, selector: \"[cdkFooterRowDef]\", inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkFooterRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkFooterRowDef]',\n                    inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky'],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }]; } });\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkRowDef, selector: \"[cdkRowDef]\", inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkRowDef]',\n                    inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen'],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }]; } });\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\nclass CdkCellOutlet {\n    /**\n     * Static property containing the latest constructed instance of this class.\n     * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n     * createEmbeddedView. After one of these components are created, this property will provide\n     * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n     * construct the cells with the provided context.\n     */\n    static { this.mostRecentCellOutlet = null; }\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkCellOutlet, deps: [{ token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkCellOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkCellOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }]; } });\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass CdkHeaderRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkHeaderRow, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkHeaderRow, selector: \"cdk-header-row, tr[cdk-header-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-header-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkHeaderRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-header-row, tr[cdk-header-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass CdkFooterRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkFooterRow, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkFooterRow, selector: \"cdk-footer-row, tr[cdk-footer-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-footer-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkFooterRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-footer-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass CdkRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkRow, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkRow, selector: \"cdk-row, tr[cdk-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-row, tr[cdk-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Row that can be used to display a message when no data is shown in the table. */\nclass CdkNoDataRow {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._contentClassName = 'cdk-no-data-row';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkNoDataRow, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkNoDataRow, selector: \"ng-template[cdkNoDataRow]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkNoDataRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkNoDataRow]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n    /**\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n     * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n     *     using inline styles. If false, it is assumed that position: sticky is included in\n     *     the component stylesheet for _stickCellCss.\n     * @param _positionListener A listener that is notified of changes to sticky rows/columns\n     *     and their dimensions.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._isBrowser = _isBrowser;\n        this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n        this._positionListener = _positionListener;\n        this._cachedCellWidths = [];\n        this._borderCellCss = {\n            'top': `${_stickCellCss}-border-elem-top`,\n            'bottom': `${_stickCellCss}-border-elem-bottom`,\n            'left': `${_stickCellCss}-border-elem-left`,\n            'right': `${_stickCellCss}-border-elem-right`,\n        };\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        const elementsToClear = [];\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            elementsToClear.push(row);\n            for (let i = 0; i < row.children.length; i++) {\n                elementsToClear.push(row.children[i]);\n            }\n        }\n        // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            for (const element of elementsToClear) {\n                this._removeStickyStyle(element, stickyDirections);\n            }\n        });\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n     *     column cell. If `false` cached widths will be used instead.\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\n        if (!rows.length ||\n            !this._isBrowser ||\n            !(stickyStartStates.some(state => state) || stickyEndStates.some(state => state))) {\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({ sizes: [] });\n                this._positionListener.stickyEndColumnsUpdated({ sizes: [] });\n            }\n            return;\n        }\n        const firstRow = rows[0];\n        const numCells = firstRow.children.length;\n        const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        const lastStickyStart = stickyStartStates.lastIndexOf(true);\n        const firstStickyEnd = stickyEndStates.indexOf(true);\n        // Coalesce with sticky row updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            const isRtl = this.direction === 'rtl';\n            const start = isRtl ? 'right' : 'left';\n            const end = isRtl ? 'left' : 'right';\n            for (const row of rows) {\n                for (let i = 0; i < numCells; i++) {\n                    const cell = row.children[i];\n                    if (stickyStartStates[i]) {\n                        this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\n                    }\n                    if (stickyEndStates[i]) {\n                        this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\n                    }\n                }\n            }\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({\n                    sizes: lastStickyStart === -1\n                        ? []\n                        : cellWidths\n                            .slice(0, lastStickyStart + 1)\n                            .map((width, index) => (stickyStartStates[index] ? width : null)),\n                });\n                this._positionListener.stickyEndColumnsUpdated({\n                    sizes: firstStickyEnd === -1\n                        ? []\n                        : cellWidths\n                            .slice(firstStickyEnd)\n                            .map((width, index) => (stickyEndStates[index + firstStickyEnd] ? width : null))\n                            .reverse(),\n                });\n            }\n        });\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n        // sticky states need to be reversed as well.\n        const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n        const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n        // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n        const stickyOffsets = [];\n        const stickyCellHeights = [];\n        const elementsToStick = [];\n        for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\n            if (!states[rowIndex]) {\n                continue;\n            }\n            stickyOffsets[rowIndex] = stickyOffset;\n            const row = rows[rowIndex];\n            elementsToStick[rowIndex] = this._isNativeHtmlTable\n                ? Array.from(row.children)\n                : [row];\n            const height = row.getBoundingClientRect().height;\n            stickyOffset += height;\n            stickyCellHeights[rowIndex] = height;\n        }\n        const borderedRowIndex = states.lastIndexOf(true);\n        // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n        // (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n                if (!states[rowIndex]) {\n                    continue;\n                }\n                const offset = stickyOffsets[rowIndex];\n                const isBorderedRowIndex = rowIndex === borderedRowIndex;\n                for (const element of elementsToStick[rowIndex]) {\n                    this._addStickyStyle(element, position, offset, isBorderedRowIndex);\n                }\n            }\n            if (position === 'top') {\n                this._positionListener?.stickyHeaderRowsUpdated({\n                    sizes: stickyCellHeights,\n                    offsets: stickyOffsets,\n                    elements: elementsToStick,\n                });\n            }\n            else {\n                this._positionListener?.stickyFooterRowsUpdated({\n                    sizes: stickyCellHeights,\n                    offsets: stickyOffsets,\n                    elements: elementsToStick,\n                });\n            }\n        });\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        const tfoot = tableElement.querySelector('tfoot');\n        // Coalesce with other sticky updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            if (stickyStates.some(state => !state)) {\n                this._removeStickyStyle(tfoot, ['bottom']);\n            }\n            else {\n                this._addStickyStyle(tfoot, 'bottom', 0, false);\n            }\n        });\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n            element.classList.remove(this._borderCellCss[dir]);\n        }\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        // Short-circuit checking element.style[dir] for stickyDirections as they\n        // were already removed above.\n        const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n        if (hasDirection) {\n            element.style.zIndex = this._getCalculatedZIndex(element);\n        }\n        else {\n            // When not hasDirection, _getCalculatedZIndex will always return ''.\n            element.style.zIndex = '';\n            if (this._needsPositionStickyOnElement) {\n                element.style.position = '';\n            }\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     */\n    _addStickyStyle(element, dir, dirValue, isBorderElement) {\n        element.classList.add(this._stickCellCss);\n        if (isBorderElement) {\n            element.classList.add(this._borderCellCss[dir]);\n        }\n        element.style[dir] = `${dirValue}px`;\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        if (this._needsPositionStickyOnElement) {\n            element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        }\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     */\n    _getCalculatedZIndex(element) {\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of STICKY_DIRECTIONS) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /** Gets the widths for each cell in the provided row. */\n    _getCellWidths(row, recalculateCellWidths = true) {\n        if (!recalculateCellWidths && this._cachedCellWidths.length) {\n            return this._cachedCellWidths;\n        }\n        const cellWidths = [];\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            let cell = firstRowCells[i];\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        this._cachedCellWidths = cellWidths;\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\n\n/**\n * Returns an error to be thrown when attempting to find an nonexistent column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/** The injection token used to specify the StickyPositioningListener. */\nconst STICKY_POSITIONING_LISTENER = new InjectionToken('CDK_SPL');\n\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass CdkRecycleRows {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkRecycleRows, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkRecycleRows, selector: \"cdk-table[recycleRows], table[cdk-table][recycleRows]\", providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkRecycleRows, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-table[recycleRows], table[cdk-table][recycleRows]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }] });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\nclass DataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DataRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: DataRowOutlet, selector: \"[rowOutlet]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DataRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[rowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\nclass HeaderRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: HeaderRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: HeaderRowOutlet, selector: \"[headerRowOutlet]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: HeaderRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[headerRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\nclass FooterRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: FooterRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: FooterRowOutlet, selector: \"[footerRowOutlet]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: FooterRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[footerRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\nclass NoDataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: NoDataRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: NoDataRowOutlet, selector: \"[noDataRowOutlet]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: NoDataRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[noDataRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-content select=\"colgroup, col\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container noDataRowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\nclass CdkTable {\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    set trackBy(fn) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n     * and optimize rendering sticky styles for native tables. No-op for flex tables.\n     */\n    get fixedLayout() {\n        return this._fixedLayout;\n    }\n    set fixedLayout(v) {\n        this._fixedLayout = coerceBooleanProperty(v);\n        // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n        this._forceRecalculateCellWidths = true;\n        this._stickyColumnStylesNeedReset = true;\n    }\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, _viewRepeater, _coalescedStyleScheduler, _viewportRuler, \n    /**\n     * @deprecated `_stickyPositioningListener` parameter to become required.\n     * @breaking-change 13.0.0\n     */\n    _stickyPositioningListener, \n    /**\n     * @deprecated `_ngZone` parameter to become required.\n     * @breaking-change 14.0.0\n     */\n    _ngZone) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        this._viewRepeater = _viewRepeater;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._viewportRuler = _viewportRuler;\n        this._stickyPositioningListener = _stickyPositioningListener;\n        this._ngZone = _ngZone;\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n         * change.\n         */\n        this._stickyColumnStylesNeedReset = true;\n        /**\n         * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n         * `false`, cached values will be used instead. This is only applicable to tables with\n         * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n         */\n        this._forceRecalculateCellWidths = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overridden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        /**\n         * Whether to manually add position: sticky to all sticky cell elements. Not needed if\n         * the position is set in a selector associated with the value of stickyCssClass. May be\n         * overridden by table subclasses\n         */\n        this.needsPositionStickyOnElement = true;\n        /** Whether the no data row is currently showing anything. */\n        this._isShowingNoDataRow = false;\n        this._multiTemplateDataRows = false;\n        this._fixedLayout = false;\n        /**\n         * Emits when the table completes rendering a set of data rows based on the latest data from the\n         * data source, even if the set of rows is empty.\n         */\n        this.contentChanged = new EventEmitter();\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * @docs-private\n         */\n        this.viewChange = new BehaviorSubject({\n            start: 0,\n            end: Number.MAX_VALUE,\n        });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'table');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        });\n        this._viewportRuler\n            .change()\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(() => {\n            this._forceRecalculateCellWidths = true;\n        });\n    }\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length &&\n            !this._footerRowDefs.length &&\n            !this._rowDefs.length &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        const columnsChanged = this._renderUpdatedColumns();\n        const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n        // Ensure sticky column styles are reset if set to `true` elsewhere.\n        this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n        this._forceRecalculateCellWidths = rowDefsChanged;\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        else if (this._stickyColumnStylesNeedReset) {\n            // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n            // called when it row data arrives. Otherwise, we need to call it proactively.\n            this.updateStickyColumnStyles();\n        }\n        this._checkStickyStates();\n    }\n    ngOnDestroy() {\n        [\n            this._rowOutlet.viewContainer,\n            this._headerRowOutlet.viewContainer,\n            this._footerRowOutlet.viewContainer,\n            this._cachedRenderRowsMap,\n            this._customColumnDefs,\n            this._customRowDefs,\n            this._customHeaderRowDefs,\n            this._customFooterRowDefs,\n            this._columnDefsByName,\n        ].forEach(def => {\n            def.clear();\n        });\n        this._headerRowDefs = [];\n        this._footerRowDefs = [];\n        this._defaultRowDef = null;\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            this._updateNoDataRow();\n            this.contentChanged.next();\n            return;\n        }\n        const viewContainer = this._rowOutlet.viewContainer;\n        this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), record => record.item.data, (change) => {\n            if (change.operation === 1 /* _ViewRepeaterOperation.INSERTED */ && change.context) {\n                this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n            }\n        });\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((record) => {\n            const rowView = viewContainer.get(record.currentIndex);\n            rowView.context.$implicit = record.item.data;\n        });\n        this._updateNoDataRow();\n        // Allow the new row data to render before measuring it.\n        // @breaking-change 14.0.0 Remove undefined check once _ngZone is required.\n        if (this._ngZone && NgZone.isInAngularZone()) {\n            this._ngZone.onStable.pipe(take(1), takeUntil(this._onDestroy)).subscribe(() => {\n                this.updateStickyColumnStyles();\n            });\n        }\n        else {\n            this.updateStickyColumnStyles();\n        }\n        this.contentChanged.next();\n    }\n    /** Adds a column definition that was not included as part of the content children. */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /** Removes a column definition that was not included as part of the content children. */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /** Adds a row definition that was not included as part of the content children. */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /** Removes a row definition that was not included as part of the content children. */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /** Adds a header row definition that was not included as part of the content children. */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Removes a header row definition that was not included as part of the content children. */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Adds a footer row definition that was not included as part of the content children. */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Removes a footer row definition that was not included as part of the content children. */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Sets a no data row definition that was not included as a part of the content children. */\n    setNoDataRow(noDataRow) {\n        this._customNoDataRow = noDataRow;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyHeaderRowStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._headerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyFooterRowStyles() {\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._footerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     */\n    updateStickyColumnStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n        // In a table using a fixed layout, row content won't affect column width, so sticky styles\n        // don't need to be cleared unless either the sticky column config changes or one of the row\n        // defs change.\n        if ((this._isNativeHtmlTable && !this._fixedLayout) || this._stickyColumnStylesNeedReset) {\n            // Clear the left and right positioning from all columns in the table across all rows since\n            // sticky columns span across all table sections (header, data, footer)\n            this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n            this._stickyColumnStylesNeedReset = false;\n        }\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        });\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach(rowDef => {\n            // Collect all the rows rendered with this row definition.\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        });\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        });\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     */\n    _getAllRenderRows() {\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            let data = this._data[i];\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                let renderRow = renderRowsForData[j];\n                const cache = this._cachedRenderRowsMap.get(renderRow.data);\n                if (cache.has(renderRow.rowDef)) {\n                    cache.get(renderRow.rowDef).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map(rowDef => {\n            const cachedRenderRows = cache && cache.has(rowDef) ? cache.get(rowDef) : [];\n            if (cachedRenderRows.length) {\n                const dataRow = cachedRenderRows.shift();\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        });\n    }\n    /** Update the map containing the content's column definitions. */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach(columnDef => {\n            if (this._columnDefsByName.has(columnDef.name) &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        });\n    }\n    /** Update the list of all available row definitions that can be used. */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n        if (!this.multiTemplateDataRows &&\n            defaultRowDefs.length > 1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     */\n    _renderUpdatedColumns() {\n        const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\n        // Force re-render data rows if the list of column definitions have changed.\n        const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n        if (dataColumnsChanged) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed.\n        const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n        if (headerColumnsChanged) {\n            this._forceRenderHeaderRows();\n        }\n        const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n        if (footerColumnsChanged) {\n            this._forceRenderFooterRows();\n        }\n        return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(data => {\n            this._data = data || [];\n            this.renderRows();\n        });\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n        this.updateStickyHeaderRowStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n        this.updateStickyFooterRowStyles();\n    }\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\n    _addStickyColumnStyles(rows, rowDef) {\n        const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return columnDef;\n        });\n        const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n        const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n    }\n    /** Gets the list of rows that have been rendered in the row outlet. */\n    _getRenderedRows(rowOutlet) {\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            const viewRef = rowOutlet.viewContainer.get(i);\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n        }\n        else {\n            let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    _getEmbeddedViewArgs(renderRow, index) {\n        const rowDef = renderRow.rowDef;\n        const context = { $implicit: renderRow.data };\n        return {\n            templateRef: rowDef.template,\n            context,\n            index,\n        };\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        this._renderCellTemplateForItem(rowDef, context);\n        return view;\n    }\n    _renderCellTemplateForItem(rowDef, context) {\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     */\n    _updateRowIndexContext() {\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            const viewRef = viewContainer.get(renderIndex);\n            const context = viewRef.context;\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /** Gets the column definitions for the provided row def. */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, columnId => {\n            const column = this._columnDefsByName.get(columnId);\n            if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        });\n    }\n    /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\n    _applyNativeTableSections() {\n        const documentFragment = this._document.createDocumentFragment();\n        const sections = [\n            { tag: 'thead', outlets: [this._headerRowOutlet] },\n            { tag: 'tbody', outlets: [this._rowOutlet, this._noDataRowOutlet] },\n            { tag: 'tfoot', outlets: [this._footerRowOutlet] },\n        ];\n        for (const section of sections) {\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            for (const outlet of section.outlets) {\n                element.appendChild(outlet.elementRef.nativeElement);\n            }\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     */\n    _checkStickyStates() {\n        const stickyCheckReducer = (acc, d) => {\n            return acc || d.hasStickyChanged();\n        };\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this._stickyColumnStylesNeedReset = true;\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     */\n    _setupStickyStyler() {\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        });\n    }\n    /** Filters definitions that belong to this table from a QueryList. */\n    _getOwnDefs(items) {\n        return items.filter(item => !item._table || item._table === this);\n    }\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\n    _updateNoDataRow() {\n        const noDataRow = this._customNoDataRow || this._noDataRow;\n        if (!noDataRow) {\n            return;\n        }\n        const shouldShow = this._rowOutlet.viewContainer.length === 0;\n        if (shouldShow === this._isShowingNoDataRow) {\n            return;\n        }\n        const container = this._noDataRowOutlet.viewContainer;\n        if (shouldShow) {\n            const view = container.createEmbeddedView(noDataRow.templateRef);\n            const rootNode = view.rootNodes[0];\n            // Only add the attributes if we have a single root node since it's hard\n            // to figure out which one to add it to when there are multiple.\n            if (view.rootNodes.length === 1 && rootNode?.nodeType === this._document.ELEMENT_NODE) {\n                rootNode.setAttribute('role', 'row');\n                rootNode.classList.add(noDataRow._contentClassName);\n            }\n        }\n        else {\n            container.clear();\n        }\n        this._isShowingNoDataRow = shouldShow;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTable, deps: [{ token: i0.IterableDiffers }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: 'role', attribute: true }, { token: i1.Directionality, optional: true }, { token: DOCUMENT }, { token: i2.Platform }, { token: _VIEW_REPEATER_STRATEGY }, { token: _COALESCED_STYLE_SCHEDULER }, { token: i3.ViewportRuler }, { token: STICKY_POSITIONING_LISTENER, optional: true, skipSelf: true }, { token: i0.NgZone, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkTable, selector: \"cdk-table, table[cdk-table]\", inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\", fixedLayout: \"fixedLayout\" }, outputs: { contentChanged: \"contentChanged\" }, host: { attributes: { \"ngSkipHydration\": \"\" }, properties: { \"class.cdk-table-fixed-layout\": \"fixedLayout\" }, classAttribute: \"cdk-table\" }, providers: [\n            { provide: CDK_TABLE, useExisting: CdkTable },\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n            { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n            // Prevent nested tables from seeing this table's StickyPositioningListener.\n            { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n        ], queries: [{ propertyName: \"_noDataRow\", first: true, predicate: CdkNoDataRow, descendants: true }, { propertyName: \"_contentColumnDefs\", predicate: CdkColumnDef, descendants: true }, { propertyName: \"_contentRowDefs\", predicate: CdkRowDef, descendants: true }, { propertyName: \"_contentHeaderRowDefs\", predicate: CdkHeaderRowDef, descendants: true }, { propertyName: \"_contentFooterRowDefs\", predicate: CdkFooterRowDef, descendants: true }], viewQueries: [{ propertyName: \"_rowOutlet\", first: true, predicate: DataRowOutlet, descendants: true, static: true }, { propertyName: \"_headerRowOutlet\", first: true, predicate: HeaderRowOutlet, descendants: true, static: true }, { propertyName: \"_footerRowOutlet\", first: true, predicate: FooterRowOutlet, descendants: true, static: true }, { propertyName: \"_noDataRowOutlet\", first: true, predicate: NoDataRowOutlet, descendants: true, static: true }], exportAs: [\"cdkTable\"], ngImport: i0, template: \"\\n  <ng-content select=\\\"caption\\\"></ng-content>\\n  <ng-content select=\\\"colgroup, col\\\"></ng-content>\\n  <ng-container headerRowOutlet></ng-container>\\n  <ng-container rowOutlet></ng-container>\\n  <ng-container noDataRowOutlet></ng-container>\\n  <ng-container footerRowOutlet></ng-container>\\n\", isInline: true, styles: [\".cdk-table-fixed-layout{table-layout:fixed}\"], dependencies: [{ kind: \"directive\", type: DataRowOutlet, selector: \"[rowOutlet]\" }, { kind: \"directive\", type: HeaderRowOutlet, selector: \"[headerRowOutlet]\" }, { kind: \"directive\", type: FooterRowOutlet, selector: \"[footerRowOutlet]\" }, { kind: \"directive\", type: NoDataRowOutlet, selector: \"[noDataRowOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTable, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-table, table[cdk-table]', exportAs: 'cdkTable', template: CDK_TABLE_TEMPLATE, host: {\n                        'class': 'cdk-table',\n                        '[class.cdk-table-fixed-layout]': 'fixedLayout',\n                        'ngSkipHydration': '',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, providers: [\n                        { provide: CDK_TABLE, useExisting: CdkTable },\n                        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                        // Prevent nested tables from seeing this table's StickyPositioningListener.\n                        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                    ], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.IterableDiffers }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['role']\n                }] }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i2.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [_VIEW_REPEATER_STRATEGY]\n                }] }, { type: _CoalescedStyleScheduler, decorators: [{\n                    type: Inject,\n                    args: [_COALESCED_STYLE_SCHEDULER]\n                }] }, { type: i3.ViewportRuler }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [STICKY_POSITIONING_LISTENER]\n                }] }, { type: i0.NgZone, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { trackBy: [{\n                type: Input\n            }], dataSource: [{\n                type: Input\n            }], multiTemplateDataRows: [{\n                type: Input\n            }], fixedLayout: [{\n                type: Input\n            }], contentChanged: [{\n                type: Output\n            }], _rowOutlet: [{\n                type: ViewChild,\n                args: [DataRowOutlet, { static: true }]\n            }], _headerRowOutlet: [{\n                type: ViewChild,\n                args: [HeaderRowOutlet, { static: true }]\n            }], _footerRowOutlet: [{\n                type: ViewChild,\n                args: [FooterRowOutlet, { static: true }]\n            }], _noDataRowOutlet: [{\n                type: ViewChild,\n                args: [NoDataRowOutlet, { static: true }]\n            }], _contentColumnDefs: [{\n                type: ContentChildren,\n                args: [CdkColumnDef, { descendants: true }]\n            }], _contentRowDefs: [{\n                type: ContentChildren,\n                args: [CdkRowDef, { descendants: true }]\n            }], _contentHeaderRowDefs: [{\n                type: ContentChildren,\n                args: [CdkHeaderRowDef, {\n                        descendants: true,\n                    }]\n            }], _contentFooterRowDefs: [{\n                type: ContentChildren,\n                args: [CdkFooterRowDef, {\n                        descendants: true,\n                    }]\n            }], _noDataRow: [{\n                type: ContentChild,\n                args: [CdkNoDataRow]\n            }] } });\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass CdkTextColumn {\n    /** Column name that should be used to reference this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    constructor(\n    // `CdkTextColumn` is always requiring a table, but we just assert it manually\n    // for better error reporting.\n    // tslint:disable-next-line: lightweight-tokens\n    _table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /** Alignment of the cell values. */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((data, name) => data[name]);\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     */\n    _createDefaultHeaderText() {\n        const name = this.name;\n        if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /** Synchronizes the column definition name with the text column name. */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTextColumn, deps: [{ token: CdkTable, optional: true }, { token: TEXT_COLUMN_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkTextColumn, selector: \"cdk-text-column\", inputs: { name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\", justify: \"justify\" }, viewQueries: [{ propertyName: \"columnDef\", first: true, predicate: CdkColumnDef, descendants: true, static: true }, { propertyName: \"cell\", first: true, predicate: CdkCellDef, descendants: true, static: true }, { propertyName: \"headerCell\", first: true, predicate: CdkHeaderCellDef, descendants: true, static: true }], ngImport: i0, template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellDef, selector: \"[cdkCellDef]\" }, { kind: \"directive\", type: CdkHeaderCellDef, selector: \"[cdkHeaderCellDef]\" }, { kind: \"directive\", type: CdkColumnDef, selector: \"[cdkColumnDef]\", inputs: [\"sticky\", \"cdkColumnDef\", \"stickyEnd\"] }, { kind: \"directive\", type: CdkCell, selector: \"cdk-cell, td[cdk-cell]\" }, { kind: \"directive\", type: CdkHeaderCell, selector: \"cdk-header-cell, th[cdk-header-cell]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTextColumn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-text-column',\n                    template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                }]\n        }], ctorParameters: function () { return [{ type: CdkTable, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TEXT_COLUMN_OPTIONS]\n                }] }]; }, propDecorators: { name: [{\n                type: Input\n            }], headerText: [{\n                type: Input\n            }], dataAccessor: [{\n                type: Input\n            }], justify: [{\n                type: Input\n            }], columnDef: [{\n                type: ViewChild,\n                args: [CdkColumnDef, { static: true }]\n            }], cell: [{\n                type: ViewChild,\n                args: [CdkCellDef, { static: true }]\n            }], headerCell: [{\n                type: ViewChild,\n                args: [CdkHeaderCellDef, { static: true }]\n            }] } });\n\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n    CdkNoDataRow,\n    CdkRecycleRows,\n    NoDataRowOutlet,\n];\nclass CdkTableModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTableModule, declarations: [CdkTable,\n            CdkRowDef,\n            CdkCellDef,\n            CdkCellOutlet,\n            CdkHeaderCellDef,\n            CdkFooterCellDef,\n            CdkColumnDef,\n            CdkCell,\n            CdkRow,\n            CdkHeaderCell,\n            CdkFooterCell,\n            CdkHeaderRow,\n            CdkHeaderRowDef,\n            CdkFooterRow,\n            CdkFooterRowDef,\n            DataRowOutlet,\n            HeaderRowOutlet,\n            FooterRowOutlet,\n            CdkTextColumn,\n            CdkNoDataRow,\n            CdkRecycleRows,\n            NoDataRowOutlet], imports: [ScrollingModule], exports: [CdkTable,\n            CdkRowDef,\n            CdkCellDef,\n            CdkCellOutlet,\n            CdkHeaderCellDef,\n            CdkFooterCellDef,\n            CdkColumnDef,\n            CdkCell,\n            CdkRow,\n            CdkHeaderCell,\n            CdkFooterCell,\n            CdkHeaderRow,\n            CdkHeaderRowDef,\n            CdkFooterRow,\n            CdkFooterRowDef,\n            DataRowOutlet,\n            HeaderRowOutlet,\n            FooterRowOutlet,\n            CdkTextColumn,\n            CdkNoDataRow,\n            CdkRecycleRows,\n            NoDataRowOutlet] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTableModule, imports: [ScrollingModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: EXPORTED_DECLARATIONS,\n                    declarations: EXPORTED_DECLARATIONS,\n                    imports: [ScrollingModule],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRecycleRows, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\n"],"names":["Subject","BehaviorSubject","constructor","_value","value","getValue","_subscribe","subscriber","subscription","closed","next","hasError","thrownError","_throwIfClosed","Observable","Subscription","EMPTY_SUBSCRIPTION","ObjectUnsubscribedError","arrRemove","errorContext","currentObservers","observers","isStopped","lift","operator","subject","AnonymousSubject","Array","from","observer","error","err","length","shift","complete","unsubscribe","observed","_a","_trySubscribe","_checkFinalizedStatuses","_innerSubscribe","push","asObservable","observable","source","create","destination","_b","call","subscribe","EMPTY","empty","scheduler","emptyScheduled","schedule","popScheduler","of","args","Subscriber","createOperatorSubscriber","onNext","onComplete","onError","onFinalize","OperatorSubscriber","shouldUnsubscribe","_next","_error","_complete","operate","take","count","seen","innerFrom","noop","takeUntil","notifier","createErrorClass","_super","ObjectUnsubscribedErrorImpl","name","message","isFunction","isObservable","obj","hasLift","init","liftedSource","TypeError","i1","coerceBooleanProperty","_VIEW_REPEATER_STRATEGY","_RecycleViewRepeaterStrategy","isDataSource","_DisposeViewRepeaterStrategy","DataSource","i2","i3","ScrollingModule","DOCUMENT","i0","InjectionToken","Directive","Inject","Optional","Input","ContentChild","Injectable","Component","ChangeDetectionStrategy","ViewEncapsulation","EmbeddedViewRef","EventEmitter","NgZone","Attribute","SkipSelf","Output","ViewChild","ContentChildren","NgModule","_c0","_c1","CdkTextColumn_th_1_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵstyleProp","justify","ɵɵadvance","ɵɵtextInterpolate1","headerText","CdkTextColumn_td_2_Template","data_r2","$implicit","ctx_r1","dataAccessor","mixinHasStickyInput","base","sticky","_sticky","v","prevValue","_hasStickyChanged","hasStickyChanged","resetStickyChanged","CDK_TABLE","TEXT_COLUMN_OPTIONS","CdkCellDef","template","_","ɵfac","CdkCellDef_Factory","t","ɵɵdirectiveInject","TemplateRef","_2","ɵdir","ɵɵdefineDirective","type","selectors","ngDevMode","ɵsetClassMetadata","selector","CdkHeaderCellDef","CdkHeaderCellDef_Factory","CdkFooterCellDef","CdkFooterCellDef_Factory","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_name","_setNameInput","stickyEnd","_stickyEnd","_table","_updateColumnCssClassName","_columnCssClassName","cssClassFriendlyName","replace","CdkColumnDef_Factory","contentQueries","CdkColumnDef_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","cell","first","headerCell","footerCell","inputs","features","ɵɵProvidersFeature","provide","useExisting","ɵɵInheritDefinitionFeature","providers","undefined","decorators","BaseCdkCell","columnDef","elementRef","nativeElement","classList","add","CdkHeaderCell","CdkHeaderCell_Factory","ElementRef","hostAttrs","host","CdkFooterCell","_elementRef","nodeType","tableRole","getAttribute","role","setAttribute","CdkFooterCell_Factory","CdkCell","CdkCell_Factory","_Schedule","tasks","endTasks","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","_ngZone","_currentSchedule","_destroyed","task","_createScheduleIfNeeded","scheduleEnd","ngOnDestroy","_getScheduleObservable","pipe","isStable","Promise","resolve","onStable","_CoalescedStyleScheduler_Factory","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","CDK_ROW_TEMPLATE","BaseRowDef","_differs","ngOnChanges","changes","_columnsDiffer","columns","currentValue","find","diff","getColumnsDiff","extractCellTemplate","column","CdkHeaderRowDef","CdkFooterRowDef","BaseRowDef_Factory","IterableDiffers","ɵɵNgOnChangesFeature","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkHeaderRowDef_Factory","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkFooterRowDef_Factory","CdkRowDef","CdkRowDef_Factory","when","CdkCellOutlet","mostRecentCellOutlet","_viewContainer","CdkCellOutlet_Factory","ViewContainerRef","_3","CdkHeaderRow","CdkHeaderRow_Factory","ɵcmp","ɵɵdefineComponent","decls","vars","consts","CdkHeaderRow_Template","ɵɵelementContainer","dependencies","encapsulation","changeDetection","Default","None","CdkFooterRow","CdkFooterRow_Factory","CdkFooterRow_Template","CdkRow","CdkRow_Factory","CdkRow_Template","CdkNoDataRow","templateRef","_contentClassName","CdkNoDataRow_Factory","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_coalescedStyleScheduler","_isBrowser","_needsPositionStickyOnElement","_positionListener","_cachedCellWidths","_borderCellCss","clearStickyPositioning","rows","stickyDirections","elementsToClear","row","ELEMENT_NODE","i","children","element","_removeStickyStyle","updateStickyColumns","stickyStartStates","stickyEndStates","recalculateCellWidths","some","state","stickyColumnsUpdated","sizes","stickyEndColumnsUpdated","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","lastStickyStart","lastIndexOf","firstStickyEnd","indexOf","isRtl","start","end","_addStickyStyle","slice","map","width","index","reverse","stickRows","rowsToStick","stickyStates","position","states","stickyOffsets","stickyCellHeights","elementsToStick","rowIndex","stickyOffset","height","getBoundingClientRect","borderedRowIndex","offset","isBorderedRowIndex","stickyHeaderRowsUpdated","offsets","elements","stickyFooterRowsUpdated","updateStickyFooterContainer","tableElement","tfoot","querySelector","dir","style","remove","hasDirection","zIndex","_getCalculatedZIndex","dirValue","isBorderElement","cssText","zIndexIncrements","top","bottom","left","right","firstRowCells","widths","positions","nextPosition","getTableUnknownColumnError","id","Error","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","data","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","STICKY_POSITIONING_LISTENER","CdkRecycleRows","CdkRecycleRows_Factory","useClass","DataRowOutlet","viewContainer","DataRowOutlet_Factory","HeaderRowOutlet","HeaderRowOutlet_Factory","FooterRowOutlet","FooterRowOutlet_Factory","NoDataRowOutlet","NoDataRowOutlet_Factory","CDK_TABLE_TEMPLATE","RowViewRef","CdkTable","trackBy","_trackByFn","fn","console","warn","dataSource","_dataSource","_switchDataSource","multiTemplateDataRows","_multiTemplateDataRows","_rowOutlet","_forceRenderDataRows","updateStickyColumnStyles","fixedLayout","_fixedLayout","_forceRecalculateCellWidths","_stickyColumnStylesNeedReset","_changeDetectorRef","_dir","_document","_platform","_viewRepeater","_viewportRuler","_stickyPositioningListener","_onDestroy","_columnDefsByName","Map","_customColumnDefs","Set","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_cachedRenderRowsMap","stickyCssClass","needsPositionStickyOnElement","_isShowingNoDataRow","contentChanged","viewChange","Number","MAX_VALUE","nodeName","ngOnInit","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","dataIndex","change","ngAfterContentChecked","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","columnsChanged","_renderUpdatedColumns","rowDefsChanged","_forceRenderHeaderRows","_forceRenderFooterRows","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","_headerRowOutlet","_footerRowOutlet","forEach","def","clear","_defaultRowDef","disconnect","renderRows","_renderRows","_getAllRenderRows","_updateNoDataRow","applyChanges","record","_adjustedPreviousIndex","currentIndex","_getEmbeddedViewArgs","item","operation","context","_renderCellTemplateForItem","rowDef","_updateRowIndexContext","forEachIdentityChange","rowView","get","isInAngularZone","addColumnDef","removeColumnDef","delete","addRowDef","removeRowDef","addHeaderRowDef","headerRowDef","removeHeaderRowDef","addFooterRowDef","footerRowDef","removeFooterRowDef","setNoDataRow","noDataRow","_customNoDataRow","updateStickyHeaderRowStyles","headerRows","_getRenderedRows","thead","display","_stickyStyler","updateStickyFooterRowStyles","footerRows","dataRows","headerRow","_addStickyColumnStyles","footerRow","values","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","has","set","WeakMap","j","renderRow","cache","rowDefs","_getRowDefs","cachedRenderRows","columnDefs","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","filter","columnsDiffReducer","acc","dataColumnsChanged","reduce","headerColumnsChanged","footerColumnsChanged","dataStream","connect","isArray","_renderRow","columnName","rowOutlet","renderedRows","viewRef","rootNodes","outlet","view","createEmbeddedView","cellTemplate","_getCellTemplates","markForCheck","renderIndex","last","even","odd","columnId","documentFragment","createDocumentFragment","sections","tag","outlets","_noDataRowOutlet","section","createElement","appendChild","stickyCheckReducer","d","isBrowser","items","_noDataRow","shouldShow","container","rootNode","CdkTable_Factory","ChangeDetectorRef","ɵɵinjectAttribute","Directionality","Platform","ViewportRuler","CdkTable_ContentQueries","viewQuery","CdkTable_Query","ɵɵviewQuery","hostVars","hostBindings","CdkTable_HostBindings","ɵɵclassProp","outputs","exportAs","useValue","ngContentSelectors","CdkTable_Template","ɵɵprojectionDef","ɵɵprojection","styles","static","descendants","array","concat","CdkTextColumn","_syncColumnDefName","_options","_createDefaultHeaderText","defaultDataAccessor","defaultHeaderTextTransform","toUpperCase","CdkTextColumn_Factory","CdkTextColumn_Query","CdkTextColumn_Template","ɵɵelementContainerStart","ɵɵtemplate","ɵɵelementContainerEnd","EXPORTED_DECLARATIONS","CdkTableModule","CdkTableModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10]}