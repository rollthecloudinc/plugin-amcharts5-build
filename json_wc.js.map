{"version":3,"file":"json_wc.js","mappings":"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","sources":["./node_modules/@amcharts/amcharts5/.internal/charts/wordcloud/WordCloud.js","./node_modules/@amcharts/amcharts5/.internal/charts/wordcloud/WordCloudDefaultTheme.js","./node_modules/@amcharts/amcharts5/wc.js"],"sourcesContent":["import { WordCloudDefaultTheme } from \"./WordCloudDefaultTheme\";\r\nimport { Series } from \"../../core/render/Series\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { Label } from \"../../core/render/Label\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $type from \"../../core/util/Type\";\r\n/**\r\n * Creates a [[WordlCloud]] series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/word-cloud/} for more info\r\n * @important\r\n */\r\nexport class WordCloud extends Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_currentIndex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_timeoutDP\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_ghostContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { layer: 99, opacity: 0.01 }))\r\n        });\r\n        Object.defineProperty(this, \"_pointSets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_sets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 3\r\n        });\r\n        Object.defineProperty(this, \"_process\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_buffer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_boundsToAdd\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A [[ListTemplate]] of all labels in series.\r\n         *\r\n         * `labels.template` can also be used to configure labels.\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._makeLabels()\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._defaultThemes.push(WordCloudDefaultTheme.new(this._root));\r\n        this.fields.push(\"category\", \"fill\");\r\n        this._setDefault(\"valueField\", \"value\");\r\n        this._setDefault(\"categoryField\", \"category\");\r\n        this._setDefault(\"fillField\", \"fill\");\r\n        super._afterNew();\r\n        this._root.events.on(\"frameended\", () => {\r\n            this.set(\"progress\", this._currentIndex / this.dataItems.length);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeLabel(dataItem) {\r\n        const label = this.children.push(this.labels.make());\r\n        label._setDataItem(dataItem);\r\n        const fill = dataItem.get(\"fill\");\r\n        if (fill != null) {\r\n            label.set(\"fill\", fill);\r\n        }\r\n        label.set(\"x\", -999999); // do not change!\r\n        dataItem.set(\"label\", label);\r\n        this.labels.push(label);\r\n        const ghostLabel = this._ghostContainer.children.push(this.labels.make());\r\n        ghostLabel._setDataItem(dataItem);\r\n        ghostLabel.setAll({ fill: Color.fromHex(0x000000), fontWeight: \"900\" });\r\n        dataItem.set(\"ghostLabel\", ghostLabel);\r\n        this.labels.push(ghostLabel);\r\n        return label;\r\n    }\r\n    _makeLabels() {\r\n        return new ListTemplate(Template.new({}), () => Label._new(this._root, {\r\n            themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"wordcloud\", \"series\"])\r\n        }, [this.labels.template]));\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        if (dataItem.get(\"fill\") == null) {\r\n            let colors = this.get(\"colors\");\r\n            if (colors) {\r\n                dataItem.setRaw(\"fill\", colors.next());\r\n            }\r\n        }\r\n        this.makeLabel(dataItem);\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"text\")) {\r\n            this.data.setAll(this._getWords(this.get(\"text\")));\r\n            this._dirty[\"text\"] = false;\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        const resolution = this._root._renderer.resolution;\r\n        const cols = Math.round(this._root.width() * resolution);\r\n        //const rows = Math.round(this._root.height() * resolution);\r\n        let step = this.get(\"step\", 1) * 2;\r\n        if (this._valuesDirty || this._sizeDirty || this.isPrivateDirty(\"adjustedFontSize\")) {\r\n            const adjustedFontSize = this.getPrivate(\"adjustedFontSize\", 1);\r\n            const w = this.innerWidth();\r\n            const h = this.innerHeight();\r\n            const smaller = Math.min(w, h);\r\n            const bigger = Math.max(w, h);\r\n            this._buffer = Array(Math.ceil(this._root.width() * this._root.height() * resolution * resolution)).fill(0);\r\n            if (smaller < 800) {\r\n                step = step / 2;\r\n            }\r\n            this._ghostContainer._display.clear();\r\n            this._pointSets = [];\r\n            for (let i = 0; i < this._sets; i++) {\r\n                // bigger step at the beginning\r\n                const setStep = step * (this._sets - i);\r\n                const points = this._spiralPoints(w / 2, h / 2, w, h, 0, setStep * h / bigger, setStep * w / bigger, 0, 0);\r\n                // generated more points and remove those out of bounds\r\n                for (let i = points.length - 1; i >= 0; i--) {\r\n                    let point = points[i];\r\n                    if (point.x < 0 || point.x > w || point.y < 0 || point.y > h) {\r\n                        points.splice(i, 1);\r\n                        continue;\r\n                    }\r\n                }\r\n                this._pointSets.push(points);\r\n            }\r\n            let sum = 0;\r\n            let absSum = 0;\r\n            let valueHigh = 0;\r\n            let valueLow = Infinity;\r\n            let count = 0;\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                const valueWorking = dataItem.get(\"valueWorking\", 0);\r\n                sum += valueWorking;\r\n                absSum += Math.abs(valueWorking);\r\n            });\r\n            this._dataItems.sort((a, b) => {\r\n                let aValue = a.get(\"value\");\r\n                let bValue = b.get(\"value\");\r\n                if (aValue > bValue)\r\n                    return -1;\r\n                if (aValue < bValue)\r\n                    return 1;\r\n                return 0;\r\n            });\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                const value = dataItem.get(\"valueWorking\", 0);\r\n                if (value >= absSum) {\r\n                    sum = dataItem.get(\"value\", 0);\r\n                }\r\n                if (value > valueHigh) {\r\n                    valueHigh = value;\r\n                }\r\n                if (value < valueLow) {\r\n                    valueLow = value;\r\n                }\r\n                count++;\r\n            });\r\n            this.setPrivateRaw(\"valueLow\", valueLow);\r\n            this.setPrivateRaw(\"valueHigh\", valueHigh);\r\n            this.setPrivateRaw(\"valueSum\", sum);\r\n            this.setPrivateRaw(\"valueAverage\", sum / count);\r\n            this.setPrivateRaw(\"valueAbsoluteSum\", absSum);\r\n            const smallerSize = Math.min(w, h);\r\n            const minFontSize = $utils.relativeToValue(this.get(\"minFontSize\", 10), smallerSize) * adjustedFontSize;\r\n            const maxFontSize = $utils.relativeToValue(this.get(\"maxFontSize\", 100), smallerSize) * adjustedFontSize;\r\n            const angles = this.get(\"angles\", [0]);\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                const value = dataItem.get(\"valueWorking\", 0);\r\n                const ghostLabel = dataItem.get(\"ghostLabel\");\r\n                let fontSize = minFontSize + (maxFontSize - minFontSize) * (value - valueLow) / (valueHigh - valueLow);\r\n                if ($type.isNaN(fontSize)) {\r\n                    fontSize = maxFontSize;\r\n                }\r\n                const set = this._sets - 1 - Math.floor((fontSize - minFontSize) / (maxFontSize - minFontSize) * (this._sets - 1));\r\n                dataItem.setRaw(\"set\", set);\r\n                dataItem.setRaw(\"fontSize\", fontSize);\r\n                let angle = angles[Math.floor(Math.random() * (angles.length))];\r\n                dataItem.setRaw(\"angle\", angle);\r\n                ghostLabel.setAll({ fontSize: fontSize, rotation: angle, x: -10000 });\r\n            });\r\n            this._process = false;\r\n            this._currentIndex = 0;\r\n            this._root.events.once(\"frameended\", () => {\r\n                this.setTimeout(() => {\r\n                    this._process = true;\r\n                    this._markDirtyKey(\"progress\");\r\n                }, 50);\r\n            });\r\n        }\r\n        const boundsToAdd = this._boundsToAdd;\r\n        if (boundsToAdd) {\r\n            const context = this._ghostContainer._display.getLayer().context;\r\n            const y = Math.round(boundsToAdd.top);\r\n            const x = Math.round(boundsToAdd.left);\r\n            const w = Math.round(boundsToAdd.right - boundsToAdd.left);\r\n            const h = Math.round(boundsToAdd.bottom - boundsToAdd.top);\r\n            const imageData = context.getImageData(x, y, w, h).data;\r\n            const buffer = this._buffer;\r\n            let n = 3;\r\n            for (let r = y; r < y + h; r++) {\r\n                for (let c = x; c < x + w; c++) {\r\n                    let i = ((r + 1) * cols - (cols - c));\r\n                    if (imageData[n] != 0) {\r\n                        buffer[i] = 1;\r\n                    }\r\n                    n += 4;\r\n                }\r\n            }\r\n            this._boundsToAdd = undefined;\r\n        }\r\n        if (this._process && this.isDirty(\"progress\")) {\r\n            this._processItem();\r\n        }\r\n    }\r\n    _processItem() {\r\n        this._boundsToAdd = undefined;\r\n        if (this._currentIndex < this.dataItems.length) {\r\n            const dataItem = this.dataItems[this._currentIndex];\r\n            const label = dataItem.get(\"label\");\r\n            const ghostLabel = dataItem.get(\"ghostLabel\");\r\n            const resolution = this._root._renderer.resolution;\r\n            let lw = ghostLabel.width();\r\n            let lh = ghostLabel.height();\r\n            const context = ghostLabel._display.getLayer().context;\r\n            const set = dataItem.get(\"set\");\r\n            const points = this._pointSets[set];\r\n            const w = this.innerWidth();\r\n            const h = this.innerHeight();\r\n            const cols = Math.round(this._root.width() * resolution);\r\n            const x = this.x();\r\n            const y = this.y();\r\n            const angles = this.get(\"angles\", [0]);\r\n            if (w > h) {\r\n                if (lw >= w / 2) {\r\n                    $array.each(angles, (angle) => {\r\n                        if (angle == 0 && dataItem.get(\"angle\") != 0) {\r\n                            dataItem.setRaw(\"angle\", 0);\r\n                            ghostLabel.set(\"rotation\", 0);\r\n                            [lw, lh] = [lh, lw];\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (h > w) {\r\n                if (lw >= w / 2) {\r\n                    $array.each(angles, (angle) => {\r\n                        if (Math.abs(angle) == 90 && dataItem.get(\"angle\") == 0) {\r\n                            dataItem.setRaw(\"angle\", angle);\r\n                            ghostLabel.set(\"rotation\", angle);\r\n                            [lw, lh] = [lh, lw];\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            const rw = Math.ceil(lw * resolution);\r\n            const rh = Math.ceil(lh * resolution);\r\n            if (context && lw > 0 && lh > 0) {\r\n                let pIndex = Math.round(Math.random() * points.length * this.get(\"randomness\", 0));\r\n                let intersects = true;\r\n                while (intersects) {\r\n                    let p = points[pIndex];\r\n                    if (p) {\r\n                        intersects = false;\r\n                        if (this._currentIndex > 0) {\r\n                            let cx = Math.round((p.x + x) * resolution - rw / 2);\r\n                            let cy = Math.round((p.y + y) * resolution - rh / 2);\r\n                            intersects = this._hasColor(cx, cy, rw, rh, cols);\r\n                        }\r\n                        if (p.x - lw / 2 < 0 || p.x + lw / 2 > w || p.y - lh / 2 < 0 || p.y + lh / 2 > h) {\r\n                            pIndex++;\r\n                            intersects = true;\r\n                        }\r\n                        else {\r\n                            if (!intersects) {\r\n                                const angle = dataItem.get(\"angle\", 0);\r\n                                const fontSize = dataItem.get(\"fontSize\", 0);\r\n                                if (label.get(\"x\") != -999999) {\r\n                                    label.animate({ key: \"x\", to: p.x, duration: this.get(\"animationDuration\", 0), easing: this.get(\"animationEasing\") });\r\n                                    label.animate({ key: \"y\", to: p.y, duration: this.get(\"animationDuration\", 0), easing: this.get(\"animationEasing\") });\r\n                                    label.animate({ key: \"rotation\", to: angle, duration: this.get(\"animationDuration\", 0), easing: this.get(\"animationEasing\") });\r\n                                    label.animate({ key: \"fontSize\", to: fontSize, duration: this.get(\"animationDuration\", 0), easing: this.get(\"animationEasing\") });\r\n                                }\r\n                                else {\r\n                                    label.setAll({ x: p.x, y: p.y, rotation: angle, fontSize: fontSize });\r\n                                    label.appear();\r\n                                }\r\n                                ghostLabel.setAll({ x: p.x, y: p.y });\r\n                                for (let i = points.length - 1; i >= 0; i--) {\r\n                                    let point = points[i];\r\n                                    if (point.x >= p.x - lw / 2 && point.x <= p.x + lw / 2 && point.y >= p.y - lh / 2 && point.y <= p.y + lh / 2) {\r\n                                        points.splice(i, 1);\r\n                                    }\r\n                                }\r\n                                this._boundsToAdd = { left: (p.x + x - lw / 2) * resolution, right: (p.x + x + lw / 2) * resolution, top: (p.y + y - lh / 2) * resolution, bottom: (p.y + y + lh / 2) * resolution };\r\n                            }\r\n                            else {\r\n                                pIndex += 2;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (this.get(\"autoFit\")) {\r\n                            this.setTimeout(() => {\r\n                                this.setPrivate(\"adjustedFontSize\", this.getPrivate(\"adjustedFontSize\", 1) * 0.9);\r\n                            }, 50);\r\n                            return;\r\n                        }\r\n                        label.set(\"x\", -999999);\r\n                        intersects = false;\r\n                    }\r\n                }\r\n            }\r\n            this._currentIndex++;\r\n        }\r\n    }\r\n    /**\r\n* @ignore\r\n*/\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        const label = dataItem.get(\"label\");\r\n        if (label) {\r\n            this.labels.removeValue(label);\r\n            label.dispose();\r\n        }\r\n        const ghostLabel = dataItem.get(\"ghostLabel\");\r\n        if (ghostLabel) {\r\n            this.labels.removeValue(ghostLabel);\r\n            ghostLabel.dispose();\r\n        }\r\n    }\r\n    /**\r\n* Extracts words and number of their appearances from a text.\r\n*\r\n* @ignore\r\n* @param  input  Source text\r\n*/\r\n    _getWords(input) {\r\n        let words = [];\r\n        if (input) {\r\n            const chars = \"\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376-\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0523\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0621-\\u064A\\u066E-\\u066F\\u0671-\\u06D3\\u06D5\\u06E5-\\u06E6\\u06EE-\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4-\\u07F5\\u07FA\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0972\\u097B-\\u097F\\u0985-\\u098C\\u098F-\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC-\\u09DD\\u09DF-\\u09E1\\u09F0-\\u09F1\\u0A05-\\u0A0A\\u0A0F-\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32-\\u0A33\\u0A35-\\u0A36\\u0A38-\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2-\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0-\\u0AE1\\u0B05-\\u0B0C\\u0B0F-\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32-\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C-\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99-\\u0B9A\\u0B9C\\u0B9E-\\u0B9F\\u0BA3-\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58-\\u0C59\\u0C60-\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0-\\u0CE1\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D28\\u0D2A-\\u0D39\\u0D3D\\u0D60-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32-\\u0E33\\u0E40-\\u0E46\\u0E81-\\u0E82\\u0E84\\u0E87-\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA-\\u0EAB\\u0EAD-\\u0EB0\\u0EB2-\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDD\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8B\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065-\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10D0-\\u10FA\\u10FC\\u1100-\\u1159\\u115F-\\u11A2\\u11A8-\\u11F9\\u1200-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u1676\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19A9\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE-\\u1BAF\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u2094\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2C6F\\u2C71-\\u2C7D\\u2C80-\\u2CE4\\u2D00-\\u2D25\\u2D30-\\u2D65\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31B7\\u31F0-\\u31FF\\u3400\\u4DB5\\u4E00\\u9FC3\\uA000-\\uA48C\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A-\\uA62B\\uA640-\\uA65F\\uA662-\\uA66E\\uA67F-\\uA697\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78C\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA90A-\\uA925\\uA930-\\uA946\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAC00-\\uD7A3\\uF900-\\uFA2D\\uFA30-\\uFA6A\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40-\\uFB41\\uFB43-\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC0-9@+\";\r\n            const reg = new RegExp(\"([\" + chars + \"]+[\\-\" + chars + \"]*[\" + chars + \"]+)|([\" + chars + \"]+)\", \"ig\");\r\n            let res = input.match(reg);\r\n            if (!res) {\r\n                return [];\r\n            }\r\n            let word;\r\n            while (true) {\r\n                word = res.pop();\r\n                if (!word) {\r\n                    break;\r\n                }\r\n                let item;\r\n                for (let i = 0; i < words.length; i++) {\r\n                    if (words[i].category.toLowerCase() == word.toLowerCase()) {\r\n                        item = words[i];\r\n                        break;\r\n                    }\r\n                }\r\n                if (item) {\r\n                    item.value++;\r\n                    if (!this.isCapitalized(word)) {\r\n                        item.category = word;\r\n                    }\r\n                }\r\n                else {\r\n                    words.push({\r\n                        category: word,\r\n                        value: 1\r\n                    });\r\n                }\r\n            }\r\n            let excludeWords = this.get(\"excludeWords\");\r\n            const minValue = this.get(\"minValue\", 1);\r\n            const minWordLength = this.get(\"minWordLength\", 1);\r\n            if (minValue > 1 || minWordLength > 1 || (excludeWords && excludeWords.length > 0)) {\r\n                for (let i = words.length - 1; i >= 0; i--) {\r\n                    let w = words[i];\r\n                    let word = w.category;\r\n                    if (w.value < minValue) {\r\n                        words.splice(i, 1);\r\n                    }\r\n                    if (word.length < minWordLength) {\r\n                        words.splice(i, 1);\r\n                    }\r\n                    if (excludeWords && excludeWords.indexOf(word) !== -1) {\r\n                        words.splice(i, 1);\r\n                    }\r\n                }\r\n            }\r\n            words.sort(function (a, b) {\r\n                if (a.value == b.value) {\r\n                    return 0;\r\n                }\r\n                else if (a.value > b.value) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            });\r\n            const maxCount = this.get(\"maxCount\", Infinity);\r\n            if (words.length > maxCount) {\r\n                words = words.slice(0, maxCount);\r\n            }\r\n        }\r\n        return words;\r\n    }\r\n    /**\r\n* Checks if word is capitalized (starts with an uppercase) or not.\r\n*\r\n* @ignore\r\n* @param   word  Word\r\n* @return        Capitalized?\r\n*/\r\n    isCapitalized(word) {\r\n        let lword = word.toLowerCase();\r\n        return word[0] != lword[0]\r\n            && word.substr(1) == lword.substr(1)\r\n            && word != lword;\r\n    }\r\n    _spiralPoints(cx, cy, radius, radiusY, innerRadius, step, radiusStep, startAngle, endAngle) {\r\n        let r = innerRadius + 0.01;\r\n        let angle = startAngle * $math.RADIANS;\r\n        let points = [];\r\n        while (r < radius + radiusStep) {\r\n            let stepSize = step;\r\n            if (stepSize / 2 > r) {\r\n                stepSize = 2 * r;\r\n            }\r\n            angle += 2 * Math.asin(stepSize / 2 / r);\r\n            if (angle * $math.DEGREES > endAngle + ((radius - innerRadius) / radiusStep) * 360) {\r\n                break;\r\n            }\r\n            let degrees = angle * $math.DEGREES;\r\n            let point = { x: cx + r * Math.cos(angle), y: cy + r * radiusY / radius * Math.sin(angle) };\r\n            points.push(point);\r\n            r = innerRadius + degrees / 360 * radiusStep;\r\n        }\r\n        points.shift();\r\n        return points;\r\n    }\r\n    _hasColor(x, y, w, h, cols) {\r\n        const buffer = this._buffer;\r\n        if (buffer) {\r\n            for (let r = y; r < y + h; r += 4) {\r\n                for (let c = x; c < x + w; c += 4) {\r\n                    let i = ((r + 1) * cols - (cols - c));\r\n                    if (buffer[i] != 0) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nObject.defineProperty(WordCloud, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"WordCloud\"\r\n});\r\nObject.defineProperty(WordCloud, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Series.classNames.concat([WordCloud.className])\r\n});\r\n","import { Theme } from \"../../core/Theme\";\r\nimport { percent, p100, p50 } from \"../../core/util/Percent\";\r\nimport { Rectangle } from \"../../core/render/Rectangle\";\r\nimport * as $ease from \"../../core/util/Ease\";\r\n/**\r\n * @ignore\r\n */\r\nexport class WordCloudDefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const ic = this._root.interfaceColors;\r\n        const r = this.rule.bind(this);\r\n        r(\"WordCloud\").setAll({\r\n            width: p100,\r\n            height: p100,\r\n            minFontSize: percent(2),\r\n            maxFontSize: percent(15),\r\n            excludeWords: [],\r\n            angles: [0, -90],\r\n            minWordLength: 1,\r\n            step: 15,\r\n            randomness: 0,\r\n            autoFit: true,\r\n            animationEasing: $ease.out($ease.cubic)\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"wordcloud\"]);\r\n            rule.setAll({\r\n                text: \"{category}\",\r\n                centerX: p50,\r\n                centerY: p50,\r\n                position: \"absolute\",\r\n                lineHeight: p100,\r\n                populateText: true\r\n            });\r\n            rule.setup = (target) => {\r\n                target.set(\"background\", Rectangle.new(this._root, {\r\n                    fill: ic.get(\"background\"),\r\n                    fillOpacity: 0\r\n                }));\r\n            };\r\n        }\r\n    }\r\n}\r\n","export { WordCloud } from \"./.internal/charts/wordcloud/WordCloud\";\r\nimport { WordCloudDefaultTheme } from \"./.internal/charts/wordcloud/WordCloudDefaultTheme\";\r\nexport { WordCloudDefaultTheme as DefaultTheme };\r\n"],"names":["WordCloudDefaultTheme","Series","Template","Label","Container","ListTemplate","Color","$utils","$array","$math","$type","WordCloud","constructor","arguments","Object","defineProperty","enumerable","configurable","writable","value","children","push","new","_root","layer","opacity","_makeLabels","_afterNew","_defaultThemes","fields","_setDefault","events","on","set","_currentIndex","dataItems","length","makeLabel","dataItem","label","labels","make","_setDataItem","fill","get","ghostLabel","_ghostContainer","setAll","fromHex","fontWeight","_new","themeTags","mergeTags","template","processDataItem","colors","setRaw","next","_prepareChildren","isDirty","data","_getWords","_dirty","_updateChildren","resolution","_renderer","cols","Math","round","width","step","_valuesDirty","_sizeDirty","isPrivateDirty","adjustedFontSize","getPrivate","w","innerWidth","h","innerHeight","smaller","min","bigger","max","_buffer","Array","ceil","height","_display","clear","_pointSets","i","_sets","setStep","points","_spiralPoints","point","x","y","splice","sum","absSum","valueHigh","valueLow","Infinity","count","each","_dataItems","valueWorking","abs","sort","a","b","aValue","bValue","setPrivateRaw","smallerSize","minFontSize","relativeToValue","maxFontSize","angles","fontSize","isNaN","floor","angle","random","rotation","_process","once","setTimeout","_markDirtyKey","boundsToAdd","_boundsToAdd","context","getLayer","top","left","right","bottom","imageData","getImageData","buffer","n","r","c","undefined","_processItem","lw","lh","rw","rh","pIndex","intersects","p","cx","cy","_hasColor","animate","key","to","duration","easing","appear","setPrivate","disposeDataItem","removeValue","dispose","input","words","chars","reg","RegExp","res","match","word","pop","item","category","toLowerCase","isCapitalized","excludeWords","minValue","minWordLength","indexOf","maxCount","slice","lword","substr","radius","radiusY","innerRadius","radiusStep","startAngle","endAngle","RADIANS","stepSize","asin","DEGREES","degrees","cos","sin","shift","classNames","concat","className","Theme","percent","p100","p50","Rectangle","$ease","setupDefaultRules","ic","interfaceColors","rule","bind","randomness","autoFit","animationEasing","out","cubic","text","centerX","centerY","position","lineHeight","populateText","setup","target","fillOpacity","DefaultTheme"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2]}