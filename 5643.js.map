{"version":3,"file":"5643.js","mappings":"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","sources":["./node_modules/rxjs/dist/esm/internal/BehaviorSubject.js","./node_modules/rxjs/dist/esm/internal/Scheduler.js","./node_modules/rxjs/dist/esm/internal/Subject.js","./node_modules/rxjs/dist/esm/internal/observable/empty.js","./node_modules/rxjs/dist/esm/internal/observable/of.js","./node_modules/rxjs/dist/esm/internal/operators/OperatorSubscriber.js","./node_modules/rxjs/dist/esm/internal/operators/debounceTime.js","./node_modules/rxjs/dist/esm/internal/operators/distinctUntilChanged.js","./node_modules/rxjs/dist/esm/internal/operators/filter.js","./node_modules/rxjs/dist/esm/internal/operators/map.js","./node_modules/rxjs/dist/esm/internal/operators/skip.js","./node_modules/rxjs/dist/esm/internal/operators/take.js","./node_modules/rxjs/dist/esm/internal/operators/takeUntil.js","./node_modules/rxjs/dist/esm/internal/operators/tap.js","./node_modules/rxjs/dist/esm/internal/scheduler/Action.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsyncAction.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsyncScheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/async.js","./node_modules/rxjs/dist/esm/internal/scheduler/dateTimestampProvider.js","./node_modules/rxjs/dist/esm/internal/scheduler/intervalProvider.js","./node_modules/rxjs/dist/esm/internal/util/ObjectUnsubscribedError.js","./node_modules/rxjs/dist/esm/internal/util/lift.js","./node_modules/@angular/cdk/fesm2022/a11y.mjs"],"sourcesContent":["import { Subject } from './Subject';\nexport class BehaviorSubject extends Subject {\n    constructor(_value) {\n        super();\n        this._value = _value;\n    }\n    get value() {\n        return this.getValue();\n    }\n    _subscribe(subscriber) {\n        const subscription = super._subscribe(subscriber);\n        !subscription.closed && subscriber.next(this._value);\n        return subscription;\n    }\n    getValue() {\n        const { hasError, thrownError, _value } = this;\n        if (hasError) {\n            throw thrownError;\n        }\n        this._throwIfClosed();\n        return _value;\n    }\n    next(value) {\n        super.next((this._value = value));\n    }\n}\n","import { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class Scheduler {\n    constructor(schedulerActionCtor, now = Scheduler.now) {\n        this.schedulerActionCtor = schedulerActionCtor;\n        this.now = now;\n    }\n    schedule(work, delay = 0, state) {\n        return new this.schedulerActionCtor(this, work).schedule(state, delay);\n    }\n}\nScheduler.now = dateTimestampProvider.now;\n","import { Observable } from './Observable';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\nexport class Subject extends Observable {\n    constructor() {\n        super();\n        this.closed = false;\n        this.currentObservers = null;\n        this.observers = [];\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    lift(operator) {\n        const subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    }\n    _throwIfClosed() {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n    }\n    next(value) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                if (!this.currentObservers) {\n                    this.currentObservers = Array.from(this.observers);\n                }\n                for (const observer of this.currentObservers) {\n                    observer.next(value);\n                }\n            }\n        });\n    }\n    error(err) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.hasError = this.isStopped = true;\n                this.thrownError = err;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().error(err);\n                }\n            }\n        });\n    }\n    complete() {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.isStopped = true;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().complete();\n                }\n            }\n        });\n    }\n    unsubscribe() {\n        this.isStopped = this.closed = true;\n        this.observers = this.currentObservers = null;\n    }\n    get observed() {\n        var _a;\n        return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n    _trySubscribe(subscriber) {\n        this._throwIfClosed();\n        return super._trySubscribe(subscriber);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._checkFinalizedStatuses(subscriber);\n        return this._innerSubscribe(subscriber);\n    }\n    _innerSubscribe(subscriber) {\n        const { hasError, isStopped, observers } = this;\n        if (hasError || isStopped) {\n            return EMPTY_SUBSCRIPTION;\n        }\n        this.currentObservers = null;\n        observers.push(subscriber);\n        return new Subscription(() => {\n            this.currentObservers = null;\n            arrRemove(observers, subscriber);\n        });\n    }\n    _checkFinalizedStatuses(subscriber) {\n        const { hasError, thrownError, isStopped } = this;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped) {\n            subscriber.complete();\n        }\n    }\n    asObservable() {\n        const observable = new Observable();\n        observable.source = this;\n        return observable;\n    }\n}\nSubject.create = (destination, source) => {\n    return new AnonymousSubject(destination, source);\n};\nexport class AnonymousSubject extends Subject {\n    constructor(destination, source) {\n        super();\n        this.destination = destination;\n        this.source = source;\n    }\n    next(value) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n    }\n    error(err) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n    }\n    complete() {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    _subscribe(subscriber) {\n        var _a, _b;\n        return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;\n    }\n}\n","import { Observable } from '../Observable';\nexport const EMPTY = new Observable((subscriber) => subscriber.complete());\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nfunction emptyScheduled(scheduler) {\n    return new Observable((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n","import { popScheduler } from '../util/args';\nimport { from } from './from';\nexport function of(...args) {\n    const scheduler = popScheduler(args);\n    return from(args, scheduler);\n}\n","import { Subscriber } from '../Subscriber';\nexport function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {\n    return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\nexport class OperatorSubscriber extends Subscriber {\n    constructor(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {\n        super(destination);\n        this.onFinalize = onFinalize;\n        this.shouldUnsubscribe = shouldUnsubscribe;\n        this._next = onNext\n            ? function (value) {\n                try {\n                    onNext(value);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n            }\n            : super._next;\n        this._error = onError\n            ? function (err) {\n                try {\n                    onError(err);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : super._error;\n        this._complete = onComplete\n            ? function () {\n                try {\n                    onComplete();\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : super._complete;\n    }\n    unsubscribe() {\n        var _a;\n        if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n            const { closed } = this;\n            super.unsubscribe();\n            !closed && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));\n        }\n    }\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function debounceTime(dueTime, scheduler = asyncScheduler) {\n    return operate((source, subscriber) => {\n        let activeTask = null;\n        let lastValue = null;\n        let lastTime = null;\n        const emit = () => {\n            if (activeTask) {\n                activeTask.unsubscribe();\n                activeTask = null;\n                const value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        function emitWhenIdle() {\n            const targetTime = lastTime + dueTime;\n            const now = scheduler.now();\n            if (now < targetTime) {\n                activeTask = this.schedule(undefined, targetTime - now);\n                subscriber.add(activeTask);\n                return;\n            }\n            emit();\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            lastValue = value;\n            lastTime = scheduler.now();\n            if (!activeTask) {\n                activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n                subscriber.add(activeTask);\n            }\n        }, () => {\n            emit();\n            subscriber.complete();\n        }, undefined, () => {\n            lastValue = activeTask = null;\n        }));\n    });\n}\n","import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function distinctUntilChanged(comparator, keySelector = identity) {\n    comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;\n    return operate((source, subscriber) => {\n        let previousKey;\n        let first = true;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            const currentKey = keySelector(value);\n            if (first || !comparator(previousKey, currentKey)) {\n                first = false;\n                previousKey = currentKey;\n                subscriber.next(value);\n            }\n        }));\n    });\n}\nfunction defaultCompare(a, b) {\n    return a === b;\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function filter(predicate, thisArg) {\n    return operate((source, subscriber) => {\n        let index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value)));\n    });\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function map(project, thisArg) {\n    return operate((source, subscriber) => {\n        let index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            subscriber.next(project.call(thisArg, value, index++));\n        }));\n    });\n}\n","import { filter } from './filter';\nexport function skip(count) {\n    return filter((_, index) => count <= index);\n}\n","import { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function take(count) {\n    return count <= 0\n        ?\n            () => EMPTY\n        : operate((source, subscriber) => {\n            let seen = 0;\n            source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n                if (++seen <= count) {\n                    subscriber.next(value);\n                    if (count <= seen) {\n                        subscriber.complete();\n                    }\n                }\n            }));\n        });\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\nexport function takeUntil(notifier) {\n    return operate((source, subscriber) => {\n        innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, () => subscriber.complete(), noop));\n        !subscriber.closed && source.subscribe(subscriber);\n    });\n}\n","import { isFunction } from '../util/isFunction';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\nexport function tap(observerOrNext, error, complete) {\n    const tapObserver = isFunction(observerOrNext) || error || complete\n        ?\n            { next: observerOrNext, error, complete }\n        : observerOrNext;\n    return tapObserver\n        ? operate((source, subscriber) => {\n            var _a;\n            (_a = tapObserver.subscribe) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n            let isUnsub = true;\n            source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n                var _a;\n                (_a = tapObserver.next) === null || _a === void 0 ? void 0 : _a.call(tapObserver, value);\n                subscriber.next(value);\n            }, () => {\n                var _a;\n                isUnsub = false;\n                (_a = tapObserver.complete) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n                subscriber.complete();\n            }, (err) => {\n                var _a;\n                isUnsub = false;\n                (_a = tapObserver.error) === null || _a === void 0 ? void 0 : _a.call(tapObserver, err);\n                subscriber.error(err);\n            }, () => {\n                var _a, _b;\n                if (isUnsub) {\n                    (_a = tapObserver.unsubscribe) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n                }\n                (_b = tapObserver.finalize) === null || _b === void 0 ? void 0 : _b.call(tapObserver);\n            }));\n        })\n        :\n            identity;\n}\n","import { Subscription } from '../Subscription';\nexport class Action extends Subscription {\n    constructor(scheduler, work) {\n        super();\n    }\n    schedule(state, delay = 0) {\n        return this;\n    }\n}\n","import { Action } from './Action';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nexport class AsyncAction extends Action {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    schedule(state, delay = 0) {\n        var _a;\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        const id = this.id;\n        const scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = (_a = this.id) !== null && _a !== void 0 ? _a : this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    }\n    requestAsyncId(scheduler, _id, delay = 0) {\n        return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    }\n    recycleAsyncId(_scheduler, id, delay = 0) {\n        if (delay != null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        if (id != null) {\n            intervalProvider.clearInterval(id);\n        }\n        return undefined;\n    }\n    execute(state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        const error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    }\n    _execute(state, _delay) {\n        let errored = false;\n        let errorValue;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = e ? e : new Error('Scheduled action threw falsy error');\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    }\n    unsubscribe() {\n        if (!this.closed) {\n            const { id, scheduler } = this;\n            const { actions } = scheduler;\n            this.work = this.state = this.scheduler = null;\n            this.pending = false;\n            arrRemove(actions, this);\n            if (id != null) {\n                this.id = this.recycleAsyncId(scheduler, id, null);\n            }\n            this.delay = null;\n            super.unsubscribe();\n        }\n    }\n}\n","import { Scheduler } from '../Scheduler';\nexport class AsyncScheduler extends Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        super(SchedulerAction, now);\n        this.actions = [];\n        this._active = false;\n    }\n    flush(action) {\n        const { actions } = this;\n        if (this._active) {\n            actions.push(action);\n            return;\n        }\n        let error;\n        this._active = true;\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while ((action = actions.shift()));\n        this._active = false;\n        if (error) {\n            while ((action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\nexport const async = asyncScheduler;\n","export const dateTimestampProvider = {\n    now() {\n        return (dateTimestampProvider.delegate || Date).now();\n    },\n    delegate: undefined,\n};\n","export const intervalProvider = {\n    setInterval(handler, timeout, ...args) {\n        const { delegate } = intervalProvider;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) {\n            return delegate.setInterval(handler, timeout, ...args);\n        }\n        return setInterval(handler, timeout, ...args);\n    },\n    clearInterval(handle) {\n        const { delegate } = intervalProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);\n    },\n    delegate: undefined,\n};\n","import { createErrorClass } from './createErrorClass';\nexport const ObjectUnsubscribedError = createErrorClass((_super) => function ObjectUnsubscribedErrorImpl() {\n    _super(this);\n    this.name = 'ObjectUnsubscribedError';\n    this.message = 'object unsubscribed';\n});\n","import { isFunction } from './isFunction';\nexport function hasLift(source) {\n    return isFunction(source === null || source === void 0 ? void 0 : source.lift);\n}\nexport function operate(init) {\n    return (source) => {\n        if (hasLift(source)) {\n            return source.lift(function (liftedSource) {\n                try {\n                    return init(liftedSource, this);\n                }\n                catch (err) {\n                    this.error(err);\n                }\n            });\n        }\n        throw new TypeError('Unable to lift unknown Observable type');\n    };\n}\n","import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, APP_ID, Injectable, Inject, QueryList, Directive, Input, InjectionToken, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getFocusedElementPierceShadowDom, normalizePassiveListenerOptions, _getEventTarget, _getShadowRoot } from '@angular/cdk/platform';\nimport { Subject, Subscription, BehaviorSubject, of } from 'rxjs';\nimport { hasModifierKey, A, Z, ZERO, NINE, PAGE_DOWN, PAGE_UP, END, HOME, LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, TAB, ALT, CONTROL, MAC_META, META, SHIFT } from '@angular/cdk/keycodes';\nimport { tap, debounceTime, filter, map, take, skip, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { BreakpointObserver } from '@angular/cdk/layout';\n\n/** IDs are delimited by an empty space, as per the spec. */\nconst ID_DELIMITER = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction addAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    if (ids.some(existingId => existingId.trim() == id.trim())) {\n        return;\n    }\n    ids.push(id.trim());\n    el.setAttribute(attr, ids.join(ID_DELIMITER));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    const filteredIds = ids.filter(val => val != id.trim());\n    if (filteredIds.length) {\n        el.setAttribute(attr, filteredIds.join(ID_DELIMITER));\n    }\n    else {\n        el.removeAttribute(attr);\n    }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace delimited) in the attribute value\n    return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n\n/**\n * ID used for the body container where all messages are appended.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 14.0.0\n */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/** Global incremental identifier for each registered message element. */\nlet nextId = 0;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n    constructor(_document, \n    /**\n     * @deprecated To be turned into a required parameter.\n     * @breaking-change 14.0.0\n     */\n    _platform) {\n        this._platform = _platform;\n        /** Map of all registered message elements that have been placed into the document. */\n        this._messageRegistry = new Map();\n        /** Container for all registered messages. */\n        this._messagesContainer = null;\n        /** Unique ID for the service. */\n        this._id = `${nextId++}`;\n        this._document = _document;\n        this._id = inject(APP_ID) + '-' + nextId++;\n    }\n    describe(hostElement, message, role) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (typeof message !== 'string') {\n            // We need to ensure that the element has an ID.\n            setMessageId(message, this._id);\n            this._messageRegistry.set(key, { messageElement: message, referenceCount: 0 });\n        }\n        else if (!this._messageRegistry.has(key)) {\n            this._createMessageElement(message, role);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, key)) {\n            this._addMessageReference(hostElement, key);\n        }\n    }\n    removeDescription(hostElement, message, role) {\n        if (!message || !this._isElementNode(hostElement)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (this._isElementDescribedByMessage(hostElement, key)) {\n            this._removeMessageReference(hostElement, key);\n        }\n        // If the message is a string, it means that it's one that we created for the\n        // consumer so we can remove it safely, otherwise we should leave it in place.\n        if (typeof message === 'string') {\n            const registeredMessage = this._messageRegistry.get(key);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(key);\n            }\n        }\n        if (this._messagesContainer?.childNodes.length === 0) {\n            this._messagesContainer.remove();\n            this._messagesContainer = null;\n        }\n    }\n    /** Unregisters all created message elements and removes the message container. */\n    ngOnDestroy() {\n        const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}=\"${this._id}\"]`);\n        for (let i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        this._messagesContainer?.remove();\n        this._messagesContainer = null;\n        this._messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     */\n    _createMessageElement(message, role) {\n        const messageElement = this._document.createElement('div');\n        setMessageId(messageElement, this._id);\n        messageElement.textContent = message;\n        if (role) {\n            messageElement.setAttribute('role', role);\n        }\n        this._createMessagesContainer();\n        this._messagesContainer.appendChild(messageElement);\n        this._messageRegistry.set(getKey(message, role), { messageElement, referenceCount: 0 });\n    }\n    /** Deletes the message element from the global messages container. */\n    _deleteMessageElement(key) {\n        this._messageRegistry.get(key)?.messageElement?.remove();\n        this._messageRegistry.delete(key);\n    }\n    /** Creates the global container for all aria-describedby messages. */\n    _createMessagesContainer() {\n        if (this._messagesContainer) {\n            return;\n        }\n        const containerClassName = 'cdk-describedby-message-container';\n        const serverContainers = this._document.querySelectorAll(`.${containerClassName}[platform=\"server\"]`);\n        for (let i = 0; i < serverContainers.length; i++) {\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            serverContainers[i].remove();\n        }\n        const messagesContainer = this._document.createElement('div');\n        // We add `visibility: hidden` in order to prevent text in this container from\n        // being searchable by the browser's Ctrl + F functionality.\n        // Screen-readers will still read the description for elements with aria-describedby even\n        // when the description element is not visible.\n        messagesContainer.style.visibility = 'hidden';\n        // Even though we use `visibility: hidden`, we still apply `cdk-visually-hidden` so that\n        // the description element doesn't impact page layout.\n        messagesContainer.classList.add(containerClassName);\n        messagesContainer.classList.add('cdk-visually-hidden');\n        // @breaking-change 14.0.0 Remove null check for `_platform`.\n        if (this._platform && !this._platform.isBrowser) {\n            messagesContainer.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(messagesContainer);\n        this._messagesContainer = messagesContainer;\n    }\n    /** Removes all cdk-describedby messages that are hosted through the element. */\n    _removeCdkDescribedByReferenceIds(element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby').filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     */\n    _addMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, this._id);\n        registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     */\n    _removeMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /** Returns true if the element has been described by the provided message ID. */\n    _isElementDescribedByMessage(element, key) {\n        const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        const registeredMessage = this._messageRegistry.get(key);\n        const messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /** Determines whether a message can be described on a particular element. */\n    _canBeDescribed(element, message) {\n        if (!this._isElementNode(element)) {\n            return false;\n        }\n        if (message && typeof message === 'object') {\n            // We'd have to make some assumptions about the description element's text, if the consumer\n            // passed in an element. Assume that if an element is passed in, the consumer has verified\n            // that it can be used as a description.\n            return true;\n        }\n        const trimmedMessage = message == null ? '' : `${message}`.trim();\n        const ariaLabel = element.getAttribute('aria-label');\n        // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n        // element, because screen readers will end up reading out the same text twice in a row.\n        return trimmedMessage ? !ariaLabel || ariaLabel.trim() !== trimmedMessage : false;\n    }\n    /** Checks whether a node is an Element node. */\n    _isElementNode(element) {\n        return element.nodeType === this._document.ELEMENT_NODE;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: AriaDescriber, deps: [{ token: DOCUMENT }, { token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: AriaDescriber, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: AriaDescriber, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1.Platform }]; } });\n/** Gets a key that can be used to look messages up in the registry. */\nfunction getKey(message, role) {\n    return typeof message === 'string' ? `${role || ''}/${message}` : message;\n}\n/** Assigns a unique ID to an element, if it doesn't have one already. */\nfunction setMessageId(element, serviceId) {\n    if (!element.id) {\n        element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${serviceId}-${nextId++}`;\n    }\n}\n\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nclass ListKeyManager {\n    constructor(_items) {\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._activeItem = null;\n        this._wrap = false;\n        this._letterKeyStream = new Subject();\n        this._typeaheadSubscription = Subscription.EMPTY;\n        this._vertical = true;\n        this._allowedModifierKeys = [];\n        this._homeAndEnd = false;\n        this._pageUpAndDown = { enabled: false, delta: 10 };\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = (item) => item.disabled;\n        // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /** Stream that emits whenever the active item of the list manager changes. */\n        this.change = new Subject();\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            this._itemChangesSubscription = _items.changes.subscribe((newItems) => {\n                if (this._activeItem) {\n                    const itemArray = newItems.toArray();\n                    const newIndex = itemArray.indexOf(this._activeItem);\n                    if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                        this._activeItemIndex = newIndex;\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param predicate Function that determines whether the given item should be skipped.\n     */\n    skipPredicate(predicate) {\n        this._skipPredicateFn = predicate;\n        return this;\n    }\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @param shouldWrap Whether the list should wrap when reaching the end.\n     */\n    withWrap(shouldWrap = true) {\n        this._wrap = shouldWrap;\n        return this;\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param enabled Whether vertical selection should be enabled.\n     */\n    withVerticalOrientation(enabled = true) {\n        this._vertical = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param direction Direction in which the selection can be moved.\n     */\n    withHorizontalOrientation(direction) {\n        this._horizontal = direction;\n        return this;\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     */\n    withAllowedModifierKeys(keys) {\n        this._allowedModifierKeys = keys;\n        return this;\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n     */\n    withTypeAhead(debounceInterval = 200) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n            this._items.length &&\n            this._items.some(item => typeof item.getLabel !== 'function')) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        this._typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        this._typeaheadSubscription = this._letterKeyStream\n            .pipe(tap(letter => this._pressedLetters.push(letter)), debounceTime(debounceInterval), filter(() => this._pressedLetters.length > 0), map(() => this._pressedLetters.join('')))\n            .subscribe(inputString => {\n            const items = this._getItemsArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                const index = (this._activeItemIndex + i) % items.length;\n                const item = items[index];\n                if (!this._skipPredicateFn(item) &&\n                    item.getLabel().toUpperCase().trim().indexOf(inputString) === 0) {\n                    this.setActiveItem(index);\n                    break;\n                }\n            }\n            this._pressedLetters = [];\n        });\n        return this;\n    }\n    /** Cancels the current typeahead sequence. */\n    cancelTypeahead() {\n        this._pressedLetters = [];\n        return this;\n    }\n    /**\n     * Configures the key manager to activate the first and last items\n     * respectively when the Home or End key is pressed.\n     * @param enabled Whether pressing the Home or End key activates the first/last item.\n     */\n    withHomeAndEnd(enabled = true) {\n        this._homeAndEnd = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to activate every 10th, configured or first/last element in up/down direction\n     * respectively when the Page-Up or Page-Down key is pressed.\n     * @param enabled Whether pressing the Page-Up or Page-Down key activates the first/last item.\n     * @param delta Whether pressing the Home or End key activates the first/last item.\n     */\n    withPageUpDown(enabled = true, delta = 10) {\n        this._pageUpAndDown = { enabled, delta };\n        return this;\n    }\n    setActiveItem(item) {\n        const previousActiveItem = this._activeItem;\n        this.updateActiveItem(item);\n        if (this._activeItem !== previousActiveItem) {\n            this.change.next(this._activeItemIndex);\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param event Keyboard event to be used for determining which element should be active.\n     */\n    onKeydown(event) {\n        const keyCode = event.keyCode;\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        const isModifierAllowed = modifiers.every(modifier => {\n            return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n        });\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case HOME:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setFirstItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case END:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setLastItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case PAGE_UP:\n                if (this._pageUpAndDown.enabled && isModifierAllowed) {\n                    const targetIndex = this._activeItemIndex - this._pageUpAndDown.delta;\n                    this._setActiveItemByIndex(targetIndex > 0 ? targetIndex : 0, 1);\n                    break;\n                }\n                else {\n                    return;\n                }\n            case PAGE_DOWN:\n                if (this._pageUpAndDown.enabled && isModifierAllowed) {\n                    const targetIndex = this._activeItemIndex + this._pageUpAndDown.delta;\n                    const itemsLength = this._getItemsArray().length;\n                    this._setActiveItemByIndex(targetIndex < itemsLength ? targetIndex : itemsLength - 1, -1);\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n                    // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                    // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                    if (event.key && event.key.length === 1) {\n                        this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                    }\n                    else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                        this._letterKeyStream.next(String.fromCharCode(keyCode));\n                    }\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._pressedLetters = [];\n        event.preventDefault();\n    }\n    /** Index of the currently active item. */\n    get activeItemIndex() {\n        return this._activeItemIndex;\n    }\n    /** The active item. */\n    get activeItem() {\n        return this._activeItem;\n    }\n    /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n    isTyping() {\n        return this._pressedLetters.length > 0;\n    }\n    /** Sets the active item to the first enabled item in the list. */\n    setFirstItemActive() {\n        this._setActiveItemByIndex(0, 1);\n    }\n    /** Sets the active item to the last enabled item in the list. */\n    setLastItemActive() {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    }\n    /** Sets the active item to the next enabled item in the list. */\n    setNextItemActive() {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n    /** Sets the active item to a previous enabled item in the list. */\n    setPreviousItemActive() {\n        this._activeItemIndex < 0 && this._wrap\n            ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n    updateActiveItem(item) {\n        const itemArray = this._getItemsArray();\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        const activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem = activeItem == null ? null : activeItem;\n        this._activeItemIndex = index;\n    }\n    /** Cleans up the key manager. */\n    destroy() {\n        this._typeaheadSubscription.unsubscribe();\n        this._itemChangesSubscription?.unsubscribe();\n        this._letterKeyStream.complete();\n        this.tabOut.complete();\n        this.change.complete();\n        this._pressedLetters = [];\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     */\n    _setActiveItemByDelta(delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     */\n    _setActiveInWrapMode(delta) {\n        const items = this._getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            const index = (this._activeItemIndex + delta * i + items.length) % items.length;\n            const item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     */\n    _setActiveInDefaultMode(delta) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     */\n    _setActiveItemByIndex(index, fallbackDelta) {\n        const items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    }\n    /** Returns the items as an array. */\n    _getItemsArray() {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n}\n\nclass ActiveDescendantKeyManager extends ListKeyManager {\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n\nclass FocusKeyManager extends ListKeyManager {\n    constructor() {\n        super(...arguments);\n        this._origin = 'program';\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param origin Focus origin to be used when focusing items.\n     */\n    setFocusOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\n\n/**\n * Configuration for the isFocusable method.\n */\nclass IsFocusableConfig {\n    constructor() {\n        /**\n         * Whether to count an element as focusable even if it is not currently visible.\n         */\n        this.ignoreVisibility = false;\n    }\n}\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nclass InteractivityChecker {\n    constructor(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is disabled.\n     */\n    isDisabled(element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @returns Whether the element is visible.\n     */\n    isVisible(element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is tabbable.\n     */\n    isTabbable(element) {\n        // Nothing is tabbable on the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        const frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Browsers disable tabbing to an element inside of an invisible frame.\n            if (!this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        let nodeName = element.nodeName.toLowerCase();\n        let tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe' || nodeName === 'object') {\n            // The frame or object's content may be tabbable depending on the content, but it's\n            // not possibly to reliably detect the content of the frames. We always consider such\n            // elements as non-tabbable.\n            return false;\n        }\n        // In iOS, the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        if (nodeName === 'audio') {\n            // Audio elements without controls enabled are never tabbable, regardless\n            // of the tabindex attribute explicitly being set.\n            if (!element.hasAttribute('controls')) {\n                return false;\n            }\n            // Audio elements with controls are by default tabbable unless the\n            // tabindex attribute is set to `-1` explicitly.\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'video') {\n            // For all video elements, if the tabindex attribute is set to `-1`, the video\n            // is not tabbable. Note: We cannot rely on the default `HTMLElement.tabIndex`\n            // property as that one is set to `-1` in Chrome, Edge and Safari v13.1. The\n            // tabindex attribute is the source of truth here.\n            if (tabIndexValue === -1) {\n                return false;\n            }\n            // If the tabindex is explicitly set, and not `-1` (as per check before), the\n            // video element is always tabbable (regardless of whether it has controls or not).\n            if (tabIndexValue !== null) {\n                return true;\n            }\n            // Otherwise (when no explicit tabindex is set), a video is only tabbable if it\n            // has controls enabled. Firefox is special as videos are always tabbable regardless\n            // of whether there are controls or not.\n            return this._platform.FIREFOX || element.hasAttribute('controls');\n        }\n        return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param element Element to be checked.\n     * @param config The config object with options to customize this method's behavior\n     * @returns Whether the element is focusable.\n     */\n    isFocusable(element, config) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return (isPotentiallyFocusable(element) &&\n            !this.isDisabled(element) &&\n            (config?.ignoreVisibility || this.isVisible(element)));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: InteractivityChecker, deps: [{ token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: InteractivityChecker, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: InteractivityChecker, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }]; } });\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n */\nfunction getFrameElement(window) {\n    try {\n        return window.frameElement;\n    }\n    catch {\n        return null;\n    }\n}\n/** Checks whether the specified element has any geometry / rectangles. */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth ||\n        element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/** Gets whether an element's  */\nfunction isNativeFormElement(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    return (nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea');\n}\n/** Gets whether an element is an `<input type=\"hidden\">`. */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/** Gets whether an element is an input element. */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    let tabIndex = element.getAttribute('tabindex');\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/** Checks whether the specified element is potentially tabbable on iOS */\nfunction isPotentiallyTabbableIOS(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    let inputType = nodeName === 'input' && element.type;\n    return (inputType === 'text' ||\n        inputType === 'password' ||\n        nodeName === 'select' ||\n        nodeName === 'textarea');\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return (isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element));\n}\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\nfunction getWindow(node) {\n    // ownerDocument is null if `node` itself *is* a document.\n    return (node.ownerDocument && node.ownerDocument.defaultView) || window;\n}\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause the two to be misaligned.\n *\n * @deprecated Use `ConfigurableFocusTrap` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrap {\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(value, this._startAnchor);\n            this._toggleAnchorTabIndex(value, this._endAnchor);\n        }\n    }\n    constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._hasAttached = false;\n        // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n        this.startAnchorListener = () => this.focusLastTabbableElement();\n        this.endAnchorListener = () => this.focusFirstTabbableElement();\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    /** Destroys the focus trap by cleaning up the anchors. */\n    destroy() {\n        const startAnchor = this._startAnchor;\n        const endAnchor = this._endAnchor;\n        if (startAnchor) {\n            startAnchor.removeEventListener('focus', this.startAnchorListener);\n            startAnchor.remove();\n        }\n        if (endAnchor) {\n            endAnchor.removeEventListener('focus', this.endAnchorListener);\n            endAnchor.remove();\n        }\n        this._startAnchor = this._endAnchor = null;\n        this._hasAttached = false;\n    }\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @returns Whether the focus trap managed to attach successfully. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    attachAnchors() {\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular(() => {\n            if (!this._startAnchor) {\n                this._startAnchor = this._createAnchor();\n                this._startAnchor.addEventListener('focus', this.startAnchorListener);\n            }\n            if (!this._endAnchor) {\n                this._endAnchor = this._createAnchor();\n                this._endAnchor.addEventListener('focus', this.endAnchorListener);\n            }\n        });\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore(this._startAnchor, this._element);\n            this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses the first tabbable element.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusInitialElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusInitialElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusFirstTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusFirstTabbableElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusLastTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusLastTabbableElement(options)));\n        });\n    }\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @param bound The boundary to get (start or end of trapped region).\n     * @returns The boundary element.\n     */\n    _getRegionBoundary(bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` + `[cdkFocusRegion${bound}], ` + `[cdk-focus-${bound}]`);\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            for (let i = 0; i < markers.length; i++) {\n                // @breaking-change 8.0.0\n                if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                        `attribute will be removed in 8.0.0.`, markers[i]);\n                }\n                else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                        `will be removed in 8.0.0.`, markers[i]);\n                }\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length\n            ? markers[markers.length - 1]\n            : this._getLastTabbableElement(this._element);\n    }\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @returns Whether focus was moved successfully.\n     */\n    focusInitialElement(options) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` + `[cdkFocusInitial]`);\n        if (redirectToElement) {\n            // @breaking-change 8.0.0\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n            }\n            // Warn the consumer if the element they've pointed to\n            // isn't focusable, when not in production mode.\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                !this._checker.isFocusable(redirectToElement)) {\n                console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n            }\n            if (!this._checker.isFocusable(redirectToElement)) {\n                const focusableChild = this._getFirstTabbableElement(redirectToElement);\n                focusableChild?.focus(options);\n                return !!focusableChild;\n            }\n            redirectToElement.focus(options);\n            return true;\n        }\n        return this.focusFirstTabbableElement(options);\n    }\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusFirstTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusLastTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Checks whether the focus trap has successfully been attached.\n     */\n    hasAttached() {\n        return this._hasAttached;\n    }\n    /** Get the first tabbable element from a DOM subtree (inclusive). */\n    _getFirstTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        const children = root.children;\n        for (let i = 0; i < children.length; i++) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getFirstTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Get the last tabbable element from a DOM subtree (inclusive). */\n    _getLastTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        const children = root.children;\n        for (let i = children.length - 1; i >= 0; i--) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getLastTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Creates an anchor element. */\n    _createAnchor() {\n        const anchor = this._document.createElement('div');\n        this._toggleAnchorTabIndex(this._enabled, anchor);\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        anchor.setAttribute('aria-hidden', 'true');\n        return anchor;\n    }\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @param isEnabled Whether the focus trap is enabled.\n     * @param anchor Anchor on which to toggle the tabindex.\n     */\n    _toggleAnchorTabIndex(isEnabled, anchor) {\n        // Remove the tabindex completely, rather than setting it to -1, because if the\n        // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n        isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n    }\n    /**\n     * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n     * @param enabled: Whether the anchors should trap Tab.\n     */\n    toggleAnchors(enabled) {\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(enabled, this._startAnchor);\n            this._toggleAnchorTabIndex(enabled, this._endAnchor);\n        }\n    }\n    /** Executes a function when the zone is stable. */\n    _executeOnStable(fn) {\n        if (this._ngZone.isStable) {\n            fn();\n        }\n        else {\n            this._ngZone.onStable.pipe(take(1)).subscribe(fn);\n        }\n    }\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n * @deprecated Use `ConfigurableFocusTrapFactory` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrapFactory {\n    constructor(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param element The element around which focus will be trapped.\n     * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @returns The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: FocusTrapFactory, deps: [{ token: InteractivityChecker }, { token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: FocusTrapFactory, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: FocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: InteractivityChecker }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/** Directive for trapping focus within a region. */\nclass CdkTrapFocus {\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this.focusTrap.enabled;\n    }\n    set enabled(value) {\n        this.focusTrap.enabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the directive should automatically move focus into the trapped region upon\n     * initialization and return focus to the previous activeElement upon destruction.\n     */\n    get autoCapture() {\n        return this._autoCapture;\n    }\n    set autoCapture(value) {\n        this._autoCapture = coerceBooleanProperty(value);\n    }\n    constructor(_elementRef, _focusTrapFactory, \n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 13.0.0\n     */\n    _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /** Previously focused element to restore focus to upon destroy when using autoCapture. */\n        this._previouslyFocusedElement = null;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    ngOnDestroy() {\n        this.focusTrap.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    }\n    ngAfterContentInit() {\n        this.focusTrap.attachAnchors();\n        if (this.autoCapture) {\n            this._captureFocus();\n        }\n    }\n    ngDoCheck() {\n        if (!this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    }\n    ngOnChanges(changes) {\n        const autoCaptureChange = changes['autoCapture'];\n        if (autoCaptureChange &&\n            !autoCaptureChange.firstChange &&\n            this.autoCapture &&\n            this.focusTrap.hasAttached()) {\n            this._captureFocus();\n        }\n    }\n    _captureFocus() {\n        this._previouslyFocusedElement = _getFocusedElementPierceShadowDom();\n        this.focusTrap.focusInitialElementWhenReady();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTrapFocus, deps: [{ token: i0.ElementRef }, { token: FocusTrapFactory }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkTrapFocus, selector: \"[cdkTrapFocus]\", inputs: { enabled: [\"cdkTrapFocus\", \"enabled\"], autoCapture: [\"cdkTrapFocusAutoCapture\", \"autoCapture\"] }, exportAs: [\"cdkTrapFocus\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTrapFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTrapFocus]',\n                    exportAs: 'cdkTrapFocus',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: FocusTrapFactory }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { enabled: [{\n                type: Input,\n                args: ['cdkTrapFocus']\n            }], autoCapture: [{\n                type: Input,\n                args: ['cdkTrapFocusAutoCapture']\n            }] } });\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n    /** Whether the FocusTrap is enabled. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._enabled) {\n            this._focusTrapManager.register(this);\n        }\n        else {\n            this._focusTrapManager.deregister(this);\n        }\n    }\n    constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config) {\n        super(_element, _checker, _ngZone, _document, config.defer);\n        this._focusTrapManager = _focusTrapManager;\n        this._inertStrategy = _inertStrategy;\n        this._focusTrapManager.register(this);\n    }\n    /** Notifies the FocusTrapManager that this FocusTrap will be destroyed. */\n    destroy() {\n        this._focusTrapManager.deregister(this);\n        super.destroy();\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _enable() {\n        this._inertStrategy.preventFocus(this);\n        this.toggleAnchors(true);\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _disable() {\n        this._inertStrategy.allowFocus(this);\n        this.toggleAnchors(false);\n    }\n}\n\n/** The injection token used to specify the inert strategy. */\nconst FOCUS_TRAP_INERT_STRATEGY = new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n    constructor() {\n        /** Focus event handler. */\n        this._listener = null;\n    }\n    /** Adds a document event listener that keeps focus inside the FocusTrap. */\n    preventFocus(focusTrap) {\n        // Ensure there's only one listener per document\n        if (this._listener) {\n            focusTrap._document.removeEventListener('focus', this._listener, true);\n        }\n        this._listener = (e) => this._trapFocus(focusTrap, e);\n        focusTrap._ngZone.runOutsideAngular(() => {\n            focusTrap._document.addEventListener('focus', this._listener, true);\n        });\n    }\n    /** Removes the event listener added in preventFocus. */\n    allowFocus(focusTrap) {\n        if (!this._listener) {\n            return;\n        }\n        focusTrap._document.removeEventListener('focus', this._listener, true);\n        this._listener = null;\n    }\n    /**\n     * Refocuses the first element in the FocusTrap if the focus event target was outside\n     * the FocusTrap.\n     *\n     * This is an event listener callback. The event listener is added in runOutsideAngular,\n     * so all this code runs outside Angular as well.\n     */\n    _trapFocus(focusTrap, event) {\n        const target = event.target;\n        const focusTrapRoot = focusTrap._element;\n        // Don't refocus if target was in an overlay, because the overlay might be associated\n        // with an element inside the FocusTrap, ex. mat-select.\n        if (target && !focusTrapRoot.contains(target) && !target.closest?.('div.cdk-overlay-pane')) {\n            // Some legacy FocusTrap usages have logic that focuses some element on the page\n            // just before FocusTrap is destroyed. For backwards compatibility, wait\n            // to be sure FocusTrap is still enabled before refocusing.\n            setTimeout(() => {\n                // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n                if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n                    focusTrap.focusFirstTabbableElement();\n                }\n            });\n        }\n    }\n}\n\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\nclass FocusTrapManager {\n    constructor() {\n        // A stack of the FocusTraps on the page. Only the FocusTrap at the\n        // top of the stack is active.\n        this._focusTrapStack = [];\n    }\n    /**\n     * Disables the FocusTrap at the top of the stack, and then pushes\n     * the new FocusTrap onto the stack.\n     */\n    register(focusTrap) {\n        // Dedupe focusTraps that register multiple times.\n        this._focusTrapStack = this._focusTrapStack.filter(ft => ft !== focusTrap);\n        let stack = this._focusTrapStack;\n        if (stack.length) {\n            stack[stack.length - 1]._disable();\n        }\n        stack.push(focusTrap);\n        focusTrap._enable();\n    }\n    /**\n     * Removes the FocusTrap from the stack, and activates the\n     * FocusTrap that is the new top of the stack.\n     */\n    deregister(focusTrap) {\n        focusTrap._disable();\n        const stack = this._focusTrapStack;\n        const i = stack.indexOf(focusTrap);\n        if (i !== -1) {\n            stack.splice(i, 1);\n            if (stack.length) {\n                stack[stack.length - 1]._enable();\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: FocusTrapManager, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: FocusTrapManager, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: FocusTrapManager, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/** Factory that allows easy instantiation of configurable focus traps. */\nclass ConfigurableFocusTrapFactory {\n    constructor(_checker, _ngZone, _focusTrapManager, _document, _inertStrategy) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._focusTrapManager = _focusTrapManager;\n        this._document = _document;\n        // TODO split up the strategies into different modules, similar to DateAdapter.\n        this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();\n    }\n    create(element, config = { defer: false }) {\n        let configObject;\n        if (typeof config === 'boolean') {\n            configObject = { defer: config };\n        }\n        else {\n            configObject = config;\n        }\n        return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ConfigurableFocusTrapFactory, deps: [{ token: InteractivityChecker }, { token: i0.NgZone }, { token: FocusTrapManager }, { token: DOCUMENT }, { token: FOCUS_TRAP_INERT_STRATEGY, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ConfigurableFocusTrapFactory, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ConfigurableFocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: InteractivityChecker }, { type: i0.NgZone }, { type: FocusTrapManager }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FOCUS_TRAP_INERT_STRATEGY]\n                }] }]; } });\n\n/** Gets whether an event could be a faked `mousedown` event dispatched by a screen reader. */\nfunction isFakeMousedownFromScreenReader(event) {\n    // Some screen readers will dispatch a fake `mousedown` event when pressing enter or space on\n    // a clickable element. We can distinguish these events when both `offsetX` and `offsetY` are\n    // zero or `event.buttons` is zero, depending on the browser:\n    // - `event.buttons` works on Firefox, but fails on Chrome.\n    // - `offsetX` and `offsetY` work on Chrome, but fail on Firefox.\n    // Note that there's an edge case where the user could click the 0x0 spot of the\n    // screen themselves, but that is unlikely to contain interactive elements.\n    return event.buttons === 0 || (event.offsetX === 0 && event.offsetY === 0);\n}\n/** Gets whether an event could be a faked `touchstart` event dispatched by a screen reader. */\nfunction isFakeTouchstartFromScreenReader(event) {\n    const touch = (event.touches && event.touches[0]) || (event.changedTouches && event.changedTouches[0]);\n    // A fake `touchstart` can be distinguished from a real one by looking at the `identifier`\n    // which is typically >= 0 on a real device versus -1 from a screen reader. Just to be safe,\n    // we can also look at `radiusX` and `radiusY`. This behavior was observed against a Windows 10\n    // device with a touch screen running NVDA v2020.4 and Firefox 85 or Chrome 88.\n    return (!!touch &&\n        touch.identifier === -1 &&\n        (touch.radiusX == null || touch.radiusX === 1) &&\n        (touch.radiusY == null || touch.radiusY === 1));\n}\n\n/**\n * Injectable options for the InputModalityDetector. These are shallowly merged with the default\n * options.\n */\nconst INPUT_MODALITY_DETECTOR_OPTIONS = new InjectionToken('cdk-input-modality-detector-options');\n/**\n * Default options for the InputModalityDetector.\n *\n * Modifier keys are ignored by default (i.e. when pressed won't cause the service to detect\n * keyboard input modality) for two reasons:\n *\n * 1. Modifier keys are commonly used with mouse to perform actions such as 'right click' or 'open\n *    in new tab', and are thus less representative of actual keyboard interaction.\n * 2. VoiceOver triggers some keyboard events when linearly navigating with Control + Option (but\n *    confusingly not with Caps Lock). Thus, to have parity with other screen readers, we ignore\n *    these keys so as to not update the input modality.\n *\n * Note that we do not by default ignore the right Meta key on Safari because it has the same key\n * code as the ContextMenu key on other browsers. When we switch to using event.key, we can\n * distinguish between the two.\n */\nconst INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS = {\n    ignoreKeys: [ALT, CONTROL, MAC_META, META, SHIFT],\n};\n/**\n * The amount of time needed to pass after a touchstart event in order for a subsequent mousedown\n * event to be attributed as mouse and not touch.\n *\n * This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n * that a value of around 650ms seems appropriate.\n */\nconst TOUCH_BUFFER_MS = 650;\n/**\n * Event listener options that enable capturing and also mark the listener as passive if the browser\n * supports it.\n */\nconst modalityEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/**\n * Service that detects the user's input modality.\n *\n * This service does not update the input modality when a user navigates with a screen reader\n * (e.g. linear navigation with VoiceOver, object navigation / browse mode with NVDA, virtual PC\n * cursor mode with JAWS). This is in part due to technical limitations (i.e. keyboard events do not\n * fire as expected in these modes) but is also arguably the correct behavior. Navigating with a\n * screen reader is akin to visually scanning a page, and should not be interpreted as actual user\n * input interaction.\n *\n * When a user is not navigating but *interacting* with a screen reader, this service attempts to\n * update the input modality to keyboard, but in general this service's behavior is largely\n * undefined.\n */\nclass InputModalityDetector {\n    /** The most recently detected input modality. */\n    get mostRecentModality() {\n        return this._modality.value;\n    }\n    constructor(_platform, ngZone, document, options) {\n        this._platform = _platform;\n        /**\n         * The most recently detected input modality event target. Is null if no input modality has been\n         * detected or if the associated event target is null for some unknown reason.\n         */\n        this._mostRecentTarget = null;\n        /** The underlying BehaviorSubject that emits whenever an input modality is detected. */\n        this._modality = new BehaviorSubject(null);\n        /**\n         * The timestamp of the last touch input modality. Used to determine whether mousedown events\n         * should be attributed to mouse or touch.\n         */\n        this._lastTouchMs = 0;\n        /**\n         * Handles keydown events. Must be an arrow function in order to preserve the context when it gets\n         * bound.\n         */\n        this._onKeydown = (event) => {\n            // If this is one of the keys we should ignore, then ignore it and don't update the input\n            // modality to keyboard.\n            if (this._options?.ignoreKeys?.some(keyCode => keyCode === event.keyCode)) {\n                return;\n            }\n            this._modality.next('keyboard');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        /**\n         * Handles mousedown events. Must be an arrow function in order to preserve the context when it\n         * gets bound.\n         */\n        this._onMousedown = (event) => {\n            // Touches trigger both touch and mouse events, so we need to distinguish between mouse events\n            // that were triggered via mouse vs touch. To do so, check if the mouse event occurs closely\n            // after the previous touch event.\n            if (Date.now() - this._lastTouchMs < TOUCH_BUFFER_MS) {\n                return;\n            }\n            // Fake mousedown events are fired by some screen readers when controls are activated by the\n            // screen reader. Attribute them to keyboard input modality.\n            this._modality.next(isFakeMousedownFromScreenReader(event) ? 'keyboard' : 'mouse');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        /**\n         * Handles touchstart events. Must be an arrow function in order to preserve the context when it\n         * gets bound.\n         */\n        this._onTouchstart = (event) => {\n            // Same scenario as mentioned in _onMousedown, but on touch screen devices, fake touchstart\n            // events are fired. Again, attribute to keyboard input modality.\n            if (isFakeTouchstartFromScreenReader(event)) {\n                this._modality.next('keyboard');\n                return;\n            }\n            // Store the timestamp of this touch event, as it's used to distinguish between mouse events\n            // triggered via mouse vs touch.\n            this._lastTouchMs = Date.now();\n            this._modality.next('touch');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        this._options = {\n            ...INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS,\n            ...options,\n        };\n        // Skip the first emission as it's null.\n        this.modalityDetected = this._modality.pipe(skip(1));\n        this.modalityChanged = this.modalityDetected.pipe(distinctUntilChanged());\n        // If we're not in a browser, this service should do nothing, as there's no relevant input\n        // modality to detect.\n        if (_platform.isBrowser) {\n            ngZone.runOutsideAngular(() => {\n                document.addEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n                document.addEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n                document.addEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n            });\n        }\n    }\n    ngOnDestroy() {\n        this._modality.complete();\n        if (this._platform.isBrowser) {\n            document.removeEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n            document.removeEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n            document.removeEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: InputModalityDetector, deps: [{ token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT }, { token: INPUT_MODALITY_DETECTOR_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: InputModalityDetector, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: InputModalityDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }, { type: i0.NgZone }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [INPUT_MODALITY_DETECTOR_OPTIONS]\n                }] }]; } });\n\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/** @docs-private */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n/** Injection token that can be used to configure the default options for the LiveAnnouncer. */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n\nlet uniqueIds = 0;\nclass LiveAnnouncer {\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        // We inject the live element and document as `any` because the constructor signature cannot\n        // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n        // a class decorator causes TypeScript to preserve the constructor signature types.\n        this._document = _document;\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    announce(message, ...args) {\n        const defaultOptions = this._defaultOptions;\n        let politeness;\n        let duration;\n        if (args.length === 1 && typeof args[0] === 'number') {\n            duration = args[0];\n        }\n        else {\n            [politeness, duration] = args;\n        }\n        this.clear();\n        clearTimeout(this._previousTimeout);\n        if (!politeness) {\n            politeness =\n                defaultOptions && defaultOptions.politeness ? defaultOptions.politeness : 'polite';\n        }\n        if (duration == null && defaultOptions) {\n            duration = defaultOptions.duration;\n        }\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        if (this._liveElement.id) {\n            this._exposeAnnouncerToModals(this._liveElement.id);\n        }\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return this._ngZone.runOutsideAngular(() => {\n            if (!this._currentPromise) {\n                this._currentPromise = new Promise(resolve => (this._currentResolve = resolve));\n            }\n            clearTimeout(this._previousTimeout);\n            this._previousTimeout = setTimeout(() => {\n                this._liveElement.textContent = message;\n                if (typeof duration === 'number') {\n                    this._previousTimeout = setTimeout(() => this.clear(), duration);\n                }\n                this._currentResolve();\n                this._currentPromise = this._currentResolve = undefined;\n            }, 100);\n            return this._currentPromise;\n        });\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     */\n    clear() {\n        if (this._liveElement) {\n            this._liveElement.textContent = '';\n        }\n    }\n    ngOnDestroy() {\n        clearTimeout(this._previousTimeout);\n        this._liveElement?.remove();\n        this._liveElement = null;\n        this._currentResolve?.();\n        this._currentPromise = this._currentResolve = undefined;\n    }\n    _createLiveElement() {\n        const elementClass = 'cdk-live-announcer-element';\n        const previousElements = this._document.getElementsByClassName(elementClass);\n        const liveEl = this._document.createElement('div');\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (let i = 0; i < previousElements.length; i++) {\n            previousElements[i].remove();\n        }\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        liveEl.id = `cdk-live-announcer-${uniqueIds++}`;\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    }\n    /**\n     * Some browsers won't expose the accessibility node of the live announcer element if there is an\n     * `aria-modal` and the live announcer is outside of it. This method works around the issue by\n     * pointing the `aria-owns` of all modals to the live announcer element.\n     */\n    _exposeAnnouncerToModals(id) {\n        // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n        // section of the DOM we need to look through. This should cover all the cases we support, but\n        // the selector can be expanded if it turns out to be too narrow.\n        const modals = this._document.querySelectorAll('body > .cdk-overlay-container [aria-modal=\"true\"]');\n        for (let i = 0; i < modals.length; i++) {\n            const modal = modals[i];\n            const ariaOwns = modal.getAttribute('aria-owns');\n            if (!ariaOwns) {\n                modal.setAttribute('aria-owns', id);\n            }\n            else if (ariaOwns.indexOf(id) === -1) {\n                modal.setAttribute('aria-owns', ariaOwns + ' ' + id);\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: LiveAnnouncer, deps: [{ token: LIVE_ANNOUNCER_ELEMENT_TOKEN, optional: true }, { token: i0.NgZone }, { token: DOCUMENT }, { token: LIVE_ANNOUNCER_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: LiveAnnouncer, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: LiveAnnouncer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LIVE_ANNOUNCER_ELEMENT_TOKEN]\n                }] }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS]\n                }] }]; } });\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nclass CdkAriaLive {\n    /** The aria-live politeness level to use when announcing messages. */\n    get politeness() {\n        return this._politeness;\n    }\n    set politeness(value) {\n        this._politeness = value === 'off' || value === 'assertive' ? value : 'polite';\n        if (this._politeness === 'off') {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n                this._subscription = null;\n            }\n        }\n        else if (!this._subscription) {\n            this._subscription = this._ngZone.runOutsideAngular(() => {\n                return this._contentObserver.observe(this._elementRef).subscribe(() => {\n                    // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n                    const elementText = this._elementRef.nativeElement.textContent;\n                    // The `MutationObserver` fires also for attribute\n                    // changes which we don't want to announce.\n                    if (elementText !== this._previousAnnouncedText) {\n                        this._liveAnnouncer.announce(elementText, this._politeness, this.duration);\n                        this._previousAnnouncedText = elementText;\n                    }\n                });\n            });\n        }\n    }\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n        this._elementRef = _elementRef;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._contentObserver = _contentObserver;\n        this._ngZone = _ngZone;\n        this._politeness = 'polite';\n    }\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkAriaLive, deps: [{ token: i0.ElementRef }, { token: LiveAnnouncer }, { token: i1$1.ContentObserver }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkAriaLive, selector: \"[cdkAriaLive]\", inputs: { politeness: [\"cdkAriaLive\", \"politeness\"], duration: [\"cdkAriaLiveDuration\", \"duration\"] }, exportAs: [\"cdkAriaLive\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkAriaLive, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkAriaLive]',\n                    exportAs: 'cdkAriaLive',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: LiveAnnouncer }, { type: i1$1.ContentObserver }, { type: i0.NgZone }]; }, propDecorators: { politeness: [{\n                type: Input,\n                args: ['cdkAriaLive']\n            }], duration: [{\n                type: Input,\n                args: ['cdkAriaLiveDuration']\n            }] } });\n\n/** InjectionToken for FocusMonitorOptions. */\nconst FOCUS_MONITOR_DEFAULT_OPTIONS = new InjectionToken('cdk-focus-monitor-default-options');\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\nclass FocusMonitor {\n    constructor(_ngZone, _platform, _inputModalityDetector, \n    /** @breaking-change 11.0.0 make document required */\n    document, options) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._inputModalityDetector = _inputModalityDetector;\n        /** The focus origin that the next focus event is a result of. */\n        this._origin = null;\n        /** Whether the window has just been focused. */\n        this._windowFocused = false;\n        /**\n         * Whether the origin was determined via a touch interaction. Necessary as properly attributing\n         * focus events to touch interactions requires special logic.\n         */\n        this._originFromTouchInteraction = false;\n        /** Map of elements being monitored to their info. */\n        this._elementInfo = new Map();\n        /** The number of elements currently being monitored. */\n        this._monitoredElementCount = 0;\n        /**\n         * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n         * as well as the number of monitored elements that they contain. We have to treat focus/blur\n         * handlers differently from the rest of the events, because the browser won't emit events\n         * to the document when focus moves inside of a shadow root.\n         */\n        this._rootNodeFocusListenerCount = new Map();\n        /**\n         * Event listener for `focus` events on the window.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._windowFocusListener = () => {\n            // Make a note of when the window regains focus, so we can\n            // restore the origin info for the focused element.\n            this._windowFocused = true;\n            this._windowFocusTimeoutId = window.setTimeout(() => (this._windowFocused = false));\n        };\n        /** Subject for stopping our InputModalityDetector subscription. */\n        this._stopInputModalityDetector = new Subject();\n        /**\n         * Event listener for `focus` and 'blur' events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._rootNodeFocusAndBlurListener = (event) => {\n            const target = _getEventTarget(event);\n            // We need to walk up the ancestor chain in order to support `checkChildren`.\n            for (let element = target; element; element = element.parentElement) {\n                if (event.type === 'focus') {\n                    this._onFocus(event, element);\n                }\n                else {\n                    this._onBlur(event, element);\n                }\n            }\n        };\n        this._document = document;\n        this._detectionMode = options?.detectionMode || 0 /* FocusMonitorDetectionMode.IMMEDIATE */;\n    }\n    monitor(element, checkChildren = false) {\n        const nativeElement = coerceElement(element);\n        // Do nothing if we're not on the browser platform or the passed in node isn't an element.\n        if (!this._platform.isBrowser || nativeElement.nodeType !== 1) {\n            return of(null);\n        }\n        // If the element is inside the shadow DOM, we need to bind our focus/blur listeners to\n        // the shadow root, rather than the `document`, because the browser won't emit focus events\n        // to the `document`, if focus is moving within the same shadow root.\n        const rootNode = _getShadowRoot(nativeElement) || this._getDocument();\n        const cachedInfo = this._elementInfo.get(nativeElement);\n        // Check if we're already monitoring this element.\n        if (cachedInfo) {\n            if (checkChildren) {\n                // TODO(COMP-318): this can be problematic, because it'll turn all non-checkChildren\n                // observers into ones that behave as if `checkChildren` was turned on. We need a more\n                // robust solution.\n                cachedInfo.checkChildren = true;\n            }\n            return cachedInfo.subject;\n        }\n        // Create monitored element info.\n        const info = {\n            checkChildren: checkChildren,\n            subject: new Subject(),\n            rootNode,\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._registerGlobalListeners(info);\n        return info.subject;\n    }\n    stopMonitoring(element) {\n        const nativeElement = coerceElement(element);\n        const elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._removeGlobalListeners(elementInfo);\n        }\n    }\n    focusVia(element, origin, options) {\n        const nativeElement = coerceElement(element);\n        const focusedElement = this._getDocument().activeElement;\n        // If the element is focused already, calling `focus` again won't trigger the event listener\n        // which means that the focus classes won't be updated. If that's the case, update the classes\n        // directly without waiting for an event.\n        if (nativeElement === focusedElement) {\n            this._getClosestElementsInfo(nativeElement).forEach(([currentElement, info]) => this._originChanged(currentElement, origin, info));\n        }\n        else {\n            this._setOrigin(origin);\n            // `focus` isn't available on the server\n            if (typeof nativeElement.focus === 'function') {\n                nativeElement.focus(options);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    _getFocusOrigin(focusEventTarget) {\n        if (this._origin) {\n            // If the origin was realized via a touch interaction, we need to perform additional checks\n            // to determine whether the focus origin should be attributed to touch or program.\n            if (this._originFromTouchInteraction) {\n                return this._shouldBeAttributedToTouch(focusEventTarget) ? 'touch' : 'program';\n            }\n            else {\n                return this._origin;\n            }\n        }\n        // If the window has just regained focus, we can restore the most recent origin from before the\n        // window blurred. Otherwise, we've reached the point where we can't identify the source of the\n        // focus. This typically means one of two things happened:\n        //\n        // 1) The element was programmatically focused, or\n        // 2) The element was focused via screen reader navigation (which generally doesn't fire\n        //    events).\n        //\n        // Because we can't distinguish between these two cases, we default to setting `program`.\n        if (this._windowFocused && this._lastFocusOrigin) {\n            return this._lastFocusOrigin;\n        }\n        // If the interaction is coming from an input label, we consider it a mouse interactions.\n        // This is a special case where focus moves on `click`, rather than `mousedown` which breaks\n        // our detection, because all our assumptions are for `mousedown`. We need to handle this\n        // special case, because it's very common for checkboxes and radio buttons.\n        if (focusEventTarget && this._isLastInteractionFromInputLabel(focusEventTarget)) {\n            return 'mouse';\n        }\n        return 'program';\n    }\n    /**\n     * Returns whether the focus event should be attributed to touch. Recall that in IMMEDIATE mode, a\n     * touch origin isn't immediately reset at the next tick (see _setOrigin). This means that when we\n     * handle a focus event following a touch interaction, we need to determine whether (1) the focus\n     * event was directly caused by the touch interaction or (2) the focus event was caused by a\n     * subsequent programmatic focus call triggered by the touch interaction.\n     * @param focusEventTarget The target of the focus event under examination.\n     */\n    _shouldBeAttributedToTouch(focusEventTarget) {\n        // Please note that this check is not perfect. Consider the following edge case:\n        //\n        // <div #parent tabindex=\"0\">\n        //   <div #child tabindex=\"0\" (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // Suppose there is a FocusMonitor in IMMEDIATE mode attached to #parent. When the user touches\n        // #child, #parent is programmatically focused. This code will attribute the focus to touch\n        // instead of program. This is a relatively minor edge-case that can be worked around by using\n        // focusVia(parent, 'program') to focus #parent.\n        return (this._detectionMode === 1 /* FocusMonitorDetectionMode.EVENTUAL */ ||\n            !!focusEventTarget?.contains(this._inputModalityDetector._mostRecentTarget));\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param element The element to update the classes on.\n     * @param origin The focus origin.\n     */\n    _setClasses(element, origin) {\n        element.classList.toggle('cdk-focused', !!origin);\n        element.classList.toggle('cdk-touch-focused', origin === 'touch');\n        element.classList.toggle('cdk-keyboard-focused', origin === 'keyboard');\n        element.classList.toggle('cdk-mouse-focused', origin === 'mouse');\n        element.classList.toggle('cdk-program-focused', origin === 'program');\n    }\n    /**\n     * Updates the focus origin. If we're using immediate detection mode, we schedule an async\n     * function to clear the origin at the end of a timeout. The duration of the timeout depends on\n     * the origin being set.\n     * @param origin The origin to set.\n     * @param isFromInteraction Whether we are setting the origin from an interaction event.\n     */\n    _setOrigin(origin, isFromInteraction = false) {\n        this._ngZone.runOutsideAngular(() => {\n            this._origin = origin;\n            this._originFromTouchInteraction = origin === 'touch' && isFromInteraction;\n            // If we're in IMMEDIATE mode, reset the origin at the next tick (or in `TOUCH_BUFFER_MS` ms\n            // for a touch event). We reset the origin at the next tick because Firefox focuses one tick\n            // after the interaction event. We wait `TOUCH_BUFFER_MS` ms before resetting the origin for\n            // a touch event because when a touch event is fired, the associated focus event isn't yet in\n            // the event queue. Before doing so, clear any pending timeouts.\n            if (this._detectionMode === 0 /* FocusMonitorDetectionMode.IMMEDIATE */) {\n                clearTimeout(this._originTimeoutId);\n                const ms = this._originFromTouchInteraction ? TOUCH_BUFFER_MS : 1;\n                this._originTimeoutId = setTimeout(() => (this._origin = null), ms);\n            }\n        });\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @param event The focus event.\n     * @param element The monitored element.\n     */\n    _onFocus(event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        const elementInfo = this._elementInfo.get(element);\n        const focusEventTarget = _getEventTarget(event);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== focusEventTarget)) {\n            return;\n        }\n        this._originChanged(element, this._getFocusOrigin(focusEventTarget), elementInfo);\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param event The blur event.\n     * @param element The monitored element.\n     */\n    _onBlur(event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo ||\n            (elementInfo.checkChildren &&\n                event.relatedTarget instanceof Node &&\n                element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo, null);\n    }\n    _emitOrigin(info, origin) {\n        if (info.subject.observers.length) {\n            this._ngZone.run(() => info.subject.next(origin));\n        }\n    }\n    _registerGlobalListeners(elementInfo) {\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        const rootNode = elementInfo.rootNode;\n        const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode) || 0;\n        if (!rootNodeFocusListeners) {\n            this._ngZone.runOutsideAngular(() => {\n                rootNode.addEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.addEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n            });\n        }\n        this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners + 1);\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount === 1) {\n            // Note: we listen to events in the capture phase so we\n            // can detect them even if the user stops propagation.\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                window.addEventListener('focus', this._windowFocusListener);\n            });\n            // The InputModalityDetector is also just a collection of global listeners.\n            this._inputModalityDetector.modalityDetected\n                .pipe(takeUntil(this._stopInputModalityDetector))\n                .subscribe(modality => {\n                this._setOrigin(modality, true /* isFromInteraction */);\n            });\n        }\n    }\n    _removeGlobalListeners(elementInfo) {\n        const rootNode = elementInfo.rootNode;\n        if (this._rootNodeFocusListenerCount.has(rootNode)) {\n            const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode);\n            if (rootNodeFocusListeners > 1) {\n                this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners - 1);\n            }\n            else {\n                rootNode.removeEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.removeEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                this._rootNodeFocusListenerCount.delete(rootNode);\n            }\n        }\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            const window = this._getWindow();\n            window.removeEventListener('focus', this._windowFocusListener);\n            // Equivalently, stop our InputModalityDetector subscription.\n            this._stopInputModalityDetector.next();\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        }\n    }\n    /** Updates all the state on an element once its focus origin has changed. */\n    _originChanged(element, origin, elementInfo) {\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo, origin);\n        this._lastFocusOrigin = origin;\n    }\n    /**\n     * Collects the `MonitoredElementInfo` of a particular element and\n     * all of its ancestors that have enabled `checkChildren`.\n     * @param element Element from which to start the search.\n     */\n    _getClosestElementsInfo(element) {\n        const results = [];\n        this._elementInfo.forEach((info, currentElement) => {\n            if (currentElement === element || (info.checkChildren && currentElement.contains(element))) {\n                results.push([currentElement, info]);\n            }\n        });\n        return results;\n    }\n    /**\n     * Returns whether an interaction is likely to have come from the user clicking the `label` of\n     * an `input` or `textarea` in order to focus it.\n     * @param focusEventTarget Target currently receiving focus.\n     */\n    _isLastInteractionFromInputLabel(focusEventTarget) {\n        const { _mostRecentTarget: mostRecentTarget, mostRecentModality } = this._inputModalityDetector;\n        // If the last interaction used the mouse on an element contained by one of the labels\n        // of an `input`/`textarea` that is currently focused, it is very likely that the\n        // user redirected focus using the label.\n        if (mostRecentModality !== 'mouse' ||\n            !mostRecentTarget ||\n            mostRecentTarget === focusEventTarget ||\n            (focusEventTarget.nodeName !== 'INPUT' && focusEventTarget.nodeName !== 'TEXTAREA') ||\n            focusEventTarget.disabled) {\n            return false;\n        }\n        const labels = focusEventTarget.labels;\n        if (labels) {\n            for (let i = 0; i < labels.length; i++) {\n                if (labels[i].contains(mostRecentTarget)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: FocusMonitor, deps: [{ token: i0.NgZone }, { token: i1.Platform }, { token: InputModalityDetector }, { token: DOCUMENT, optional: true }, { token: FOCUS_MONITOR_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: FocusMonitor, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: FocusMonitor, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i1.Platform }, { type: InputModalityDetector }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FOCUS_MONITOR_DEFAULT_OPTIONS]\n                }] }]; } });\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nclass CdkMonitorFocus {\n    constructor(_elementRef, _focusMonitor) {\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._focusOrigin = null;\n        this.cdkFocusChange = new EventEmitter();\n    }\n    get focusOrigin() {\n        return this._focusOrigin;\n    }\n    ngAfterViewInit() {\n        const element = this._elementRef.nativeElement;\n        this._monitorSubscription = this._focusMonitor\n            .monitor(element, element.nodeType === 1 && element.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe(origin => {\n            this._focusOrigin = origin;\n            this.cdkFocusChange.emit(origin);\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        if (this._monitorSubscription) {\n            this._monitorSubscription.unsubscribe();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkMonitorFocus, deps: [{ token: i0.ElementRef }, { token: FocusMonitor }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: { cdkFocusChange: \"cdkFocusChange\" }, exportAs: [\"cdkMonitorFocus\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkMonitorFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n                    exportAs: 'cdkMonitorFocus',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: FocusMonitor }]; }, propDecorators: { cdkFocusChange: [{\n                type: Output\n            }] } });\n\n/** CSS class applied to the document body when in black-on-white high-contrast mode. */\nconst BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n/** CSS class applied to the document body when in white-on-black high-contrast mode. */\nconst WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n/** CSS class applied to the document body when in high-contrast mode. */\nconst HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n/**\n * Service to determine whether the browser is currently in a high-contrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\nclass HighContrastModeDetector {\n    constructor(_platform, document) {\n        this._platform = _platform;\n        this._document = document;\n        this._breakpointSubscription = inject(BreakpointObserver)\n            .observe('(forced-colors: active)')\n            .subscribe(() => {\n            if (this._hasCheckedHighContrastMode) {\n                this._hasCheckedHighContrastMode = false;\n                this._applyBodyHighContrastModeCssClasses();\n            }\n        });\n    }\n    /** Gets the current high-contrast-mode for the page. */\n    getHighContrastMode() {\n        if (!this._platform.isBrowser) {\n            return 0 /* HighContrastMode.NONE */;\n        }\n        // Create a test element with an arbitrary background-color that is neither black nor\n        // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n        // appending the test element to the DOM does not affect layout by absolutely positioning it\n        const testElement = this._document.createElement('div');\n        testElement.style.backgroundColor = 'rgb(1,2,3)';\n        testElement.style.position = 'absolute';\n        this._document.body.appendChild(testElement);\n        // Get the computed style for the background color, collapsing spaces to normalize between\n        // browsers. Once we get this color, we no longer need the test element. Access the `window`\n        // via the document so we can fake it in tests. Note that we have extra null checks, because\n        // this logic will likely run during app bootstrap and throwing can break the entire app.\n        const documentWindow = this._document.defaultView || window;\n        const computedStyle = documentWindow && documentWindow.getComputedStyle\n            ? documentWindow.getComputedStyle(testElement)\n            : null;\n        const computedColor = ((computedStyle && computedStyle.backgroundColor) || '').replace(/ /g, '');\n        testElement.remove();\n        switch (computedColor) {\n            // Pre Windows 11 dark theme.\n            case 'rgb(0,0,0)':\n            // Windows 11 dark themes.\n            case 'rgb(45,50,54)':\n            case 'rgb(32,32,32)':\n                return 2 /* HighContrastMode.WHITE_ON_BLACK */;\n            // Pre Windows 11 light theme.\n            case 'rgb(255,255,255)':\n            // Windows 11 light theme.\n            case 'rgb(255,250,239)':\n                return 1 /* HighContrastMode.BLACK_ON_WHITE */;\n        }\n        return 0 /* HighContrastMode.NONE */;\n    }\n    ngOnDestroy() {\n        this._breakpointSubscription.unsubscribe();\n    }\n    /** Applies CSS classes indicating high-contrast mode to document body (browser-only). */\n    _applyBodyHighContrastModeCssClasses() {\n        if (!this._hasCheckedHighContrastMode && this._platform.isBrowser && this._document.body) {\n            const bodyClasses = this._document.body.classList;\n            bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n            this._hasCheckedHighContrastMode = true;\n            const mode = this.getHighContrastMode();\n            if (mode === 1 /* HighContrastMode.BLACK_ON_WHITE */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS);\n            }\n            else if (mode === 2 /* HighContrastMode.WHITE_ON_BLACK */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: HighContrastModeDetector, deps: [{ token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: HighContrastModeDetector, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: HighContrastModeDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\nclass A11yModule {\n    constructor(highContrastModeDetector) {\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: A11yModule, deps: [{ token: HighContrastModeDetector }], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: A11yModule, declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus], imports: [ObserversModule], exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: A11yModule, imports: [ObserversModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: A11yModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ObserversModule],\n                    declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                    exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                }]\n        }], ctorParameters: function () { return [{ type: HighContrastModeDetector }]; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A11yModule, ActiveDescendantKeyManager, AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, CdkAriaLive, CdkMonitorFocus, CdkTrapFocus, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_MONITOR_DEFAULT_OPTIONS, FOCUS_TRAP_INERT_STRATEGY, FocusKeyManager, FocusMonitor, FocusTrap, FocusTrapFactory, HighContrastModeDetector, INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS, INPUT_MODALITY_DETECTOR_OPTIONS, InputModalityDetector, InteractivityChecker, IsFocusableConfig, LIVE_ANNOUNCER_DEFAULT_OPTIONS, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, ListKeyManager, LiveAnnouncer, MESSAGES_CONTAINER_ID, isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader };\n"],"names":["Subject","BehaviorSubject","constructor","_value","value","getValue","_subscribe","subscriber","subscription","closed","next","hasError","thrownError","_throwIfClosed","dateTimestampProvider","Scheduler","schedulerActionCtor","now","schedule","work","delay","state","Observable","Subscription","EMPTY_SUBSCRIPTION","ObjectUnsubscribedError","arrRemove","errorContext","currentObservers","observers","isStopped","lift","operator","subject","AnonymousSubject","Array","from","observer","error","err","length","shift","complete","unsubscribe","observed","_a","_trySubscribe","_checkFinalizedStatuses","_innerSubscribe","push","asObservable","observable","source","create","destination","_b","call","subscribe","EMPTY","empty","scheduler","emptyScheduled","popScheduler","of","args","Subscriber","createOperatorSubscriber","onNext","onComplete","onError","onFinalize","OperatorSubscriber","shouldUnsubscribe","_next","_error","_complete","asyncScheduler","operate","debounceTime","dueTime","activeTask","lastValue","lastTime","emit","emitWhenIdle","targetTime","undefined","add","identity","distinctUntilChanged","comparator","keySelector","defaultCompare","previousKey","first","currentKey","a","b","filter","predicate","thisArg","index","map","project","skip","count","_","take","seen","innerFrom","noop","takeUntil","notifier","isFunction","tap","observerOrNext","tapObserver","isUnsub","finalize","Action","intervalProvider","AsyncAction","pending","id","recycleAsyncId","requestAsyncId","_id","setInterval","flush","bind","_scheduler","clearInterval","execute","Error","_execute","_delay","errored","errorValue","e","actions","AsyncScheduler","SchedulerAction","_active","action","async","delegate","Date","handler","timeout","handle","createErrorClass","_super","ObjectUnsubscribedErrorImpl","name","message","hasLift","init","liftedSource","TypeError","DOCUMENT","i0","inject","APP_ID","Injectable","Inject","QueryList","Directive","Input","InjectionToken","Optional","EventEmitter","Output","NgModule","i1","_getFocusedElementPierceShadowDom","normalizePassiveListenerOptions","_getEventTarget","_getShadowRoot","hasModifierKey","A","Z","ZERO","NINE","PAGE_DOWN","PAGE_UP","END","HOME","LEFT_ARROW","RIGHT_ARROW","UP_ARROW","DOWN_ARROW","TAB","ALT","CONTROL","MAC_META","META","SHIFT","coerceBooleanProperty","coerceElement","i1$1","ObserversModule","BreakpointObserver","ID_DELIMITER","addAriaReferencedId","el","attr","ids","getAriaReferenceIds","some","existingId","trim","setAttribute","join","removeAriaReferencedId","filteredIds","val","removeAttribute","getAttribute","match","MESSAGES_CONTAINER_ID","CDK_DESCRIBEDBY_ID_PREFIX","CDK_DESCRIBEDBY_HOST_ATTRIBUTE","nextId","AriaDescriber","_document","_platform","_messageRegistry","Map","_messagesContainer","describe","hostElement","role","_canBeDescribed","key","getKey","setMessageId","set","messageElement","referenceCount","has","_createMessageElement","_isElementDescribedByMessage","_addMessageReference","removeDescription","_isElementNode","_removeMessageReference","registeredMessage","get","_deleteMessageElement","childNodes","remove","ngOnDestroy","describedElements","querySelectorAll","i","_removeCdkDescribedByReferenceIds","clear","createElement","textContent","_createMessagesContainer","appendChild","delete","containerClassName","serverContainers","messagesContainer","style","visibility","classList","isBrowser","body","element","originalReferenceIds","indexOf","referenceIds","messageId","trimmedMessage","ariaLabel","nodeType","ELEMENT_NODE","ɵfac","AriaDescriber_Factory","t","ɵɵinject","Platform","_2","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","decorators","serviceId","ListKeyManager","_items","_activeItemIndex","_activeItem","_wrap","_letterKeyStream","_typeaheadSubscription","_vertical","_allowedModifierKeys","_homeAndEnd","_pageUpAndDown","enabled","delta","_skipPredicateFn","item","disabled","_pressedLetters","tabOut","change","_itemChangesSubscription","changes","newItems","itemArray","toArray","newIndex","skipPredicate","withWrap","shouldWrap","withVerticalOrientation","withHorizontalOrientation","direction","_horizontal","withAllowedModifierKeys","keys","withTypeAhead","debounceInterval","getLabel","pipe","letter","inputString","items","_getItemsArray","toUpperCase","setActiveItem","cancelTypeahead","withHomeAndEnd","withPageUpDown","previousActiveItem","updateActiveItem","onKeydown","event","keyCode","modifiers","isModifierAllowed","every","modifier","setNextItemActive","setPreviousItemActive","setFirstItemActive","setLastItemActive","targetIndex","_setActiveItemByIndex","itemsLength","toLocaleUpperCase","String","fromCharCode","preventDefault","activeItemIndex","activeItem","isTyping","_setActiveItemByDelta","destroy","_setActiveInWrapMode","_setActiveInDefaultMode","fallbackDelta","ActiveDescendantKeyManager","setInactiveStyles","setActiveStyles","FocusKeyManager","arguments","_origin","setFocusOrigin","origin","focus","IsFocusableConfig","ignoreVisibility","InteractivityChecker","isDisabled","hasAttribute","isVisible","hasGeometry","getComputedStyle","isTabbable","frameElement","getFrameElement","getWindow","getTabIndexValue","nodeName","toLowerCase","tabIndexValue","WEBKIT","IOS","isPotentiallyTabbableIOS","FIREFOX","tabIndex","isFocusable","config","isPotentiallyFocusable","InteractivityChecker_Factory","window","offsetWidth","offsetHeight","getClientRects","isNativeFormElement","isHiddenInput","isInputElement","isAnchorWithHref","isAnchorElement","hasValidTabIndex","isNaN","parseInt","inputType","node","ownerDocument","defaultView","FocusTrap","_enabled","_startAnchor","_endAnchor","_toggleAnchorTabIndex","_element","_checker","_ngZone","deferAnchors","_hasAttached","startAnchorListener","focusLastTabbableElement","endAnchorListener","focusFirstTabbableElement","attachAnchors","startAnchor","endAnchor","removeEventListener","runOutsideAngular","_createAnchor","addEventListener","parentNode","insertBefore","nextSibling","focusInitialElementWhenReady","options","Promise","resolve","_executeOnStable","focusInitialElement","focusFirstTabbableElementWhenReady","focusLastTabbableElementWhenReady","_getRegionBoundary","bound","markers","console","warn","_getFirstTabbableElement","_getLastTabbableElement","redirectToElement","querySelector","focusableChild","hasAttached","root","children","tabbableChild","anchor","isEnabled","toggleAnchors","fn","isStable","onStable","FocusTrapFactory","deferCaptureElements","FocusTrapFactory_Factory","NgZone","CdkTrapFocus","focusTrap","autoCapture","_autoCapture","_elementRef","_focusTrapFactory","_previouslyFocusedElement","nativeElement","ngAfterContentInit","_captureFocus","ngDoCheck","ngOnChanges","autoCaptureChange","firstChange","CdkTrapFocus_Factory","ɵɵdirectiveInject","ElementRef","ɵdir","ɵɵdefineDirective","selectors","inputs","exportAs","features","ɵɵNgOnChangesFeature","selector","ConfigurableFocusTrap","_focusTrapManager","register","deregister","_inertStrategy","defer","_enable","preventFocus","_disable","allowFocus","FOCUS_TRAP_INERT_STRATEGY","EventListenerFocusTrapInertStrategy","_listener","_trapFocus","target","focusTrapRoot","contains","closest","setTimeout","activeElement","FocusTrapManager","_focusTrapStack","ft","stack","splice","FocusTrapManager_Factory","ConfigurableFocusTrapFactory","configObject","ConfigurableFocusTrapFactory_Factory","isFakeMousedownFromScreenReader","buttons","offsetX","offsetY","isFakeTouchstartFromScreenReader","touch","touches","changedTouches","identifier","radiusX","radiusY","INPUT_MODALITY_DETECTOR_OPTIONS","INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS","ignoreKeys","TOUCH_BUFFER_MS","modalityEventListenerOptions","passive","capture","InputModalityDetector","mostRecentModality","_modality","ngZone","document","_mostRecentTarget","_lastTouchMs","_onKeydown","_options","_onMousedown","_onTouchstart","modalityDetected","modalityChanged","InputModalityDetector_Factory","Document","LIVE_ANNOUNCER_ELEMENT_TOKEN","LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY","LIVE_ANNOUNCER_DEFAULT_OPTIONS","uniqueIds","LiveAnnouncer","elementToken","_defaultOptions","_liveElement","_createLiveElement","announce","defaultOptions","politeness","duration","clearTimeout","_previousTimeout","_exposeAnnouncerToModals","_currentPromise","_currentResolve","elementClass","previousElements","getElementsByClassName","liveEl","modals","modal","ariaOwns","LiveAnnouncer_Factory","CdkAriaLive","_politeness","_subscription","_contentObserver","observe","elementText","_previousAnnouncedText","_liveAnnouncer","CdkAriaLive_Factory","ContentObserver","FOCUS_MONITOR_DEFAULT_OPTIONS","captureEventListenerOptions","FocusMonitor","_inputModalityDetector","_windowFocused","_originFromTouchInteraction","_elementInfo","_monitoredElementCount","_rootNodeFocusListenerCount","_windowFocusListener","_windowFocusTimeoutId","_stopInputModalityDetector","_rootNodeFocusAndBlurListener","parentElement","_onFocus","_onBlur","_detectionMode","detectionMode","monitor","checkChildren","rootNode","_getDocument","cachedInfo","info","_registerGlobalListeners","stopMonitoring","elementInfo","_setClasses","_removeGlobalListeners","focusVia","focusedElement","_getClosestElementsInfo","forEach","currentElement","_originChanged","_setOrigin","_info","_getWindow","doc","_getFocusOrigin","focusEventTarget","_shouldBeAttributedToTouch","_lastFocusOrigin","_isLastInteractionFromInputLabel","toggle","isFromInteraction","_originTimeoutId","ms","relatedTarget","Node","_emitOrigin","run","rootNodeFocusListeners","modality","results","mostRecentTarget","labels","FocusMonitor_Factory","CdkMonitorFocus","_focusMonitor","_focusOrigin","cdkFocusChange","focusOrigin","ngAfterViewInit","_monitorSubscription","CdkMonitorFocus_Factory","outputs","BLACK_ON_WHITE_CSS_CLASS","WHITE_ON_BLACK_CSS_CLASS","HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS","HighContrastModeDetector","_breakpointSubscription","_hasCheckedHighContrastMode","_applyBodyHighContrastModeCssClasses","getHighContrastMode","testElement","backgroundColor","position","documentWindow","computedStyle","computedColor","replace","bodyClasses","mode","HighContrastModeDetector_Factory","A11yModule","highContrastModeDetector","A11yModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","declarations","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]}