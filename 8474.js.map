{"version":3,"file":"8474.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAoC;AAC8E;AACzE;AAC4W;AACtR;AACtE;AACK;AAAA,MAAAoC,GAAA;AAAA,MAAAC,GAAA;AAAA,SAAAC,kCAAAC,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAUsCvC,4DAAE,YAwX7B;IAxX2BA,oDAAE,GA0XhG;IA1X8FA,0DAAE,EA0X3F;EAAA;EAAA,IAAAuC,EAAA;IAAA,MAAAK,MAAA,GA1XyF5C,2DAAE;IAAFA,yDAAE,eAAA4C,MAAA,CAAAG,OAAA,CAwX9B;IAxX4B/C,uDAAE,GA0XhG;IA1X8FA,gEAAE,MAAA4C,MAAA,CAAAM,UAAA,MA0XhG;EAAA;AAAA;AAAA,SAAAC,kCAAAZ,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA1X8FvC,4DAAE,YA2X/B;IA3X6BA,oDAAE,GA6XhG;IA7X8FA,0DAAE,EA6X3F;EAAA;EAAA,IAAAuC,EAAA;IAAA,MAAAa,OAAA,GAAAZ,GAAA,CAAAa,SAAA;IAAA,MAAAC,MAAA,GA7XyFtD,2DAAE;IAAFA,yDAAE,eAAAsD,MAAA,CAAAP,OAAA,CA2XhC;IA3X8B/C,uDAAE,GA6XhG;IA7X8FA,gEAAE,MAAAsD,MAAA,CAAAC,YAAA,CAAAH,OAAA,EAAAE,MAAA,CAAAE,IAAA,OA6XhG;EAAA;AAAA;AAtYqF;;AAE3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,oBAAoB,CAAC;EAAA,QAAAC,CAAA,GACd,IAAI,CAACC,IAAI,YAAAC,6BAAAC,CAAA;IAAA,YAAAA,CAAA,IAAwFJ,oBAAoB;EAAA,CAAmD;EAAA,QAAAK,EAAA,GACxK,IAAI,CAACC,IAAI,kBAD8EhE,+DAAE;IAAAkE,IAAA,EACJR,oBAAoB;IAAAS,SAAA;IAAAC,QAAA,GADlBpE,gEAAE,CACgG,CAAC;MAAEsE,OAAO,EAAEvC,6EAAuB;MAAEwC,QAAQ,EAAEvC,kFAA4BA;IAAC,CAAC,CAAC;EAAA,EAAiB;AACrS;AACA;EAAA,QAAAwC,SAAA,oBAAAA,SAAA,KAHoGxE,+DAAE,CAGX0D,oBAAoB,EAAc,CAAC;IAClHQ,IAAI,EAAEjE,oDAAS;IACfyE,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,uDAAuD;MACjEC,SAAS,EAAE,CAAC;QAAEN,OAAO,EAAEvC,6EAAuB;QAAEwC,QAAQ,EAAEvC,kFAA4BA;MAAC,CAAC;IAC5F,CAAC;EACT,CAAC,CAAC;AAAA;AACV;AACA;AACA;AACA;AACA;AACA,MAAM6C,cAAc,SAASrE,wDAAQ,CAAC;EAClCsE,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAGC,SAAS,CAAC;IACnB;IACA,IAAI,CAACC,cAAc,GAAG,kBAAkB;IACxC;IACA,IAAI,CAACC,4BAA4B,GAAG,KAAK;EAC7C;EAAC,QAAAtB,CAAA,GACQ,IAAI,CAACC,IAAI;IAAA,IAAAsB,2BAAA;IAAA,gBAAAC,uBAAArB,CAAA;MAAA,QAAAoB,2BAAA,KAAAA,2BAAA,GAvB8ElF,mEAAE,CAuBQ6E,cAAc,IAAAf,CAAA,IAAde,cAAc;IAAA;EAAA,GAAqD;EAAA,QAAAd,EAAA,GACpK,IAAI,CAACsB,IAAI,kBAxB8ErF,+DAAE;IAAAkE,IAAA,EAwBJW,cAAc;IAAAV,SAAA;IAAAoB,SAAA,sBAAoF,EAAE;IAAAC,QAAA;IAAAC,YAAA,WAAAC,4BAAAnD,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAxBlGvC,yDAAE,2BAAAwC,GAAA,CAAAoD,WAAA;MAAA;IAAA;IAAAC,QAAA;IAAAzB,QAAA,GAAFpE,gEAAE,CAwB6M;IACvS;IACA;IACA;MAAEsE,OAAO,EAAEvC,6EAAuB;MAAEwC,QAAQ,EAAEtC,kFAA4BA;IAAC,CAAC,EAC5E;MAAEqC,OAAO,EAAE9D,wDAAQ;MAAEsF,WAAW,EAAEjB;IAAe,CAAC,EAClD;MAAEP,OAAO,EAAE7D,yDAAS;MAAEqF,WAAW,EAAEjB;IAAe,CAAC,EACnD;MAAEP,OAAO,EAAE5D,0EAA0B;MAAE6D,QAAQ,EAAE5D,wEAAwBA;IAAC,CAAC;IAC3E;IACA;MAAE2D,OAAO,EAAE1D,2EAA2B;MAAEmF,QAAQ,EAAE;IAAK,CAAC,CAC3D,GAjC2F/F,wEAAE;IAAAiG,kBAAA,EAAA5D,GAAA;IAAA6D,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAA/D,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAAFvC,6DAAE,CAAAoC,GAAA;QAAFpC,0DAAE,GAiC6B;QAjC/BA,0DAAE,MAiCmF;QAjCrFA,gEAAE,MAiCoI;MAAA;IAAA;IAAA0G,YAAA,GAAmrEnG,6DAAgB,EAAwDA,+DAAkB,EAA8DA,+DAAkB,EAA8DA,+DAAkB;IAAAwG,MAAA;IAAAC,aAAA;EAAA,EAAoI;AAC3xF;AACA;EAAA,QAAAxC,SAAA,oBAAAA,SAAA,KAnCoGxE,+DAAE,CAmCX6E,cAAc,EAAc,CAAC;IAC5GX,IAAI,EAAEhE,oDAAS;IACfwE,IAAI,EAAE,CAAC;MAAEC,QAAQ,EAAE,6BAA6B;MAAEkB,QAAQ,EAAE,UAAU;MAAEQ,QAAQ,EAAExF,kEAAkB;MAAEoG,IAAI,EAAE;QAChG,OAAO,EAAE,WAAW;QACpB,gCAAgC,EAAE,aAAa;QAC/C,iBAAiB,EAAE;MACvB,CAAC;MAAErC,SAAS,EAAE;MACV;MACA;MACA;QAAEN,OAAO,EAAEvC,6EAAuB;QAAEwC,QAAQ,EAAEtC,kFAA4BA;MAAC,CAAC,EAC5E;QAAEqC,OAAO,EAAE9D,wDAAQ;QAAEsF,WAAW,EAAEjB;MAAe,CAAC,EAClD;QAAEP,OAAO,EAAE7D,yDAAS;QAAEqF,WAAW,EAAEjB;MAAe,CAAC,EACnD;QAAEP,OAAO,EAAE5D,0EAA0B;QAAE6D,QAAQ,EAAE5D,wEAAwBA;MAAC,CAAC;MAC3E;MACA;QAAE2D,OAAO,EAAE1D,2EAA2B;QAAEmF,QAAQ,EAAE;MAAK,CAAC,CAC3D;MAAEiB,aAAa,EAAE7G,iEAAsB;MAAEgH,eAAe,EAAE/G,0EAA+B;MAAE2G,MAAM,EAAE,CAAC,29DAA29D;IAAE,CAAC;EAC/kE,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA,MAAMM,gBAAgB,SAASvG,0DAAU,CAAC;EAAA,QAAA6C,CAAA,GAC7B,IAAI,CAACC,IAAI;IAAA,IAAA0D,6BAAA;IAAA,gBAAAC,yBAAAzD,CAAA;MAAA,QAAAwD,6BAAA,KAAAA,6BAAA,GA5D8EtH,mEAAE,CA4DQqH,gBAAgB,IAAAvD,CAAA,IAAhBuD,gBAAgB;IAAA;EAAA,GAAqD;EAAA,QAAAtD,EAAA,GACtK,IAAI,CAACC,IAAI,kBA7D8EhE,+DAAE;IAAAkE,IAAA,EA6DJmD,gBAAgB;IAAAlD,SAAA;IAAAC,QAAA,GA7DdpE,gEAAE,CA6DmD,CAAC;MAAEsE,OAAO,EAAExD,0DAAU;MAAEgF,WAAW,EAAEuB;IAAiB,CAAC,CAAC,GA7D7GrH,wEAAE;EAAA,EA6DmJ;AACzP;AACA;EAAA,QAAAwE,SAAA,oBAAAA,SAAA,KA/DoGxE,+DAAE,CA+DXqH,gBAAgB,EAAc,CAAC;IAC9GnD,IAAI,EAAEjE,oDAAS;IACfyE,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,cAAc;MACxBC,SAAS,EAAE,CAAC;QAAEN,OAAO,EAAExD,0DAAU;QAAEgF,WAAW,EAAEuB;MAAiB,CAAC;IACtE,CAAC;EACT,CAAC,CAAC;AAAA;AACV;AACA;AACA;AACA;AACA;AACA;AACA,MAAMG,sBAAsB,SAASzG,gEAAgB,CAAC;EAAA,QAAA4C,CAAA,GACzC,IAAI,CAACC,IAAI;IAAA,IAAA6D,mCAAA;IAAA,gBAAAC,+BAAA5D,CAAA;MAAA,QAAA2D,mCAAA,KAAAA,mCAAA,GA7E8EzH,mEAAE,CA6EQwH,sBAAsB,IAAA1D,CAAA,IAAtB0D,sBAAsB;IAAA;EAAA,GAAqD;EAAA,QAAAzD,EAAA,GAC5K,IAAI,CAACC,IAAI,kBA9E8EhE,+DAAE;IAAAkE,IAAA,EA8EJsD,sBAAsB;IAAArD,SAAA;IAAAC,QAAA,GA9EpBpE,gEAAE,CA8E+D,CAAC;MAAEsE,OAAO,EAAEvD,gEAAgB;MAAE+E,WAAW,EAAE0B;IAAuB,CAAC,CAAC,GA9ErIxH,wEAAE;EAAA,EA8E2K;AACjR;AACA;EAAA,QAAAwE,SAAA,oBAAAA,SAAA,KAhFoGxE,+DAAE,CAgFXwH,sBAAsB,EAAc,CAAC;IACpHtD,IAAI,EAAEjE,oDAAS;IACfyE,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,oBAAoB;MAC9BC,SAAS,EAAE,CAAC;QAAEN,OAAO,EAAEvD,gEAAgB;QAAE+E,WAAW,EAAE0B;MAAuB,CAAC;IAClF,CAAC;EACT,CAAC,CAAC;AAAA;AACV;AACA;AACA;AACA;AACA;AACA;AACA,MAAMG,sBAAsB,SAAS3G,gEAAgB,CAAC;EAAA,QAAA2C,CAAA,GACzC,IAAI,CAACC,IAAI;IAAA,IAAAgE,mCAAA;IAAA,gBAAAC,+BAAA/D,CAAA;MAAA,QAAA8D,mCAAA,KAAAA,mCAAA,GA9F8E5H,mEAAE,CA8FQ2H,sBAAsB,IAAA7D,CAAA,IAAtB6D,sBAAsB;IAAA;EAAA,GAAqD;EAAA,QAAA5D,EAAA,GAC5K,IAAI,CAACC,IAAI,kBA/F8EhE,+DAAE;IAAAkE,IAAA,EA+FJyD,sBAAsB;IAAAxD,SAAA;IAAAC,QAAA,GA/FpBpE,gEAAE,CA+F+D,CAAC;MAAEsE,OAAO,EAAEtD,gEAAgB;MAAE8E,WAAW,EAAE6B;IAAuB,CAAC,CAAC,GA/FrI3H,wEAAE;EAAA,EA+F2K;AACjR;AACA;EAAA,QAAAwE,SAAA,oBAAAA,SAAA,KAjGoGxE,+DAAE,CAiGX2H,sBAAsB,EAAc,CAAC;IACpHzD,IAAI,EAAEjE,oDAAS;IACfyE,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,oBAAoB;MAC9BC,SAAS,EAAE,CAAC;QAAEN,OAAO,EAAEtD,gEAAgB;QAAE8E,WAAW,EAAE6B;MAAuB,CAAC;IAClF,CAAC;EACT,CAAC,CAAC;AAAA;AACV;AACA;AACA;AACA;AACA;AACA;AACA,MAAMG,kBAAkB,SAAS7G,4DAAY,CAAC;EAC1C;EACA,IAAIuC,IAAIA,CAAA,EAAG;IACP,OAAO,IAAI,CAACuE,KAAK;EACrB;EACA,IAAIvE,IAAIA,CAACA,IAAI,EAAE;IACX,IAAI,CAACwE,aAAa,CAACxE,IAAI,CAAC;EAC5B;EACA;AACJ;AACA;AACA;AACA;AACA;EACIyE,yBAAyBA,CAAA,EAAG;IACxB,KAAK,CAACA,yBAAyB,EAAE;IACjC,IAAI,CAACC,mBAAmB,CAACC,IAAI,CAAE,cAAa,IAAI,CAACC,oBAAqB,EAAC,CAAC;EAC5E;EAAC,QAAAzE,CAAA,GACQ,IAAI,CAACC,IAAI;IAAA,IAAAyE,+BAAA;IAAA,gBAAAC,2BAAAxE,CAAA;MAAA,QAAAuE,+BAAA,KAAAA,+BAAA,GAhI8ErI,mEAAE,CAgIQ8H,kBAAkB,IAAAhE,CAAA,IAAlBgE,kBAAkB;IAAA;EAAA,GAAqD;EAAA,QAAA/D,EAAA,GACxK,IAAI,CAACC,IAAI,kBAjI8EhE,+DAAE;IAAAkE,IAAA,EAiIJ4D,kBAAkB;IAAA3D,SAAA;IAAAoE,MAAA;MAAAC,MAAA;MAAAhF,IAAA;IAAA;IAAAY,QAAA,GAjIhBpE,gEAAE,CAiIqH,CAC/M;MAAEsE,OAAO,EAAErD,4DAAY;MAAE6E,WAAW,EAAEgC;IAAmB,CAAC,EAC1D;MAAExD,OAAO,EAAE,4BAA4B;MAAEwB,WAAW,EAAEgC;IAAmB,CAAC,CAC7E,GApI2F9H,wEAAE;EAAA,EAoIrD;AACjD;AACA;EAAA,QAAAwE,SAAA,oBAAAA,SAAA,KAtIoGxE,+DAAE,CAsIX8H,kBAAkB,EAAc,CAAC;IAChH5D,IAAI,EAAEjE,oDAAS;IACfyE,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,gBAAgB;MAC1B4D,MAAM,EAAE,CAAC,QAAQ,CAAC;MAClB3D,SAAS,EAAE,CACP;QAAEN,OAAO,EAAErD,4DAAY;QAAE6E,WAAW,EAAEgC;MAAmB,CAAC,EAC1D;QAAExD,OAAO,EAAE,4BAA4B;QAAEwB,WAAW,EAAEgC;MAAmB,CAAC;IAElF,CAAC;EACT,CAAC,CAAC,QAAkB;IAAEtE,IAAI,EAAE,CAAC;MACrBU,IAAI,EAAE7D,gDAAK;MACXqE,IAAI,EAAE,CAAC,cAAc;IACzB,CAAC;EAAE,CAAC;AAAA;AAChB;AACA;AACA;AACA;AACA;AACA,MAAM+D,mBAAmB,SAASvH,6DAAa,CAAC;EAAA,QAAAyC,CAAA,GACnC,IAAI,CAACC,IAAI;IAAA,IAAA8E,gCAAA;IAAA,gBAAAC,4BAAA7E,CAAA;MAAA,QAAA4E,gCAAA,KAAAA,gCAAA,GA1J8E1I,mEAAE,CA0JQyI,mBAAmB,IAAA3E,CAAA,IAAnB2E,mBAAmB;IAAA;EAAA,GAAqD;EAAA,QAAA1E,EAAA,GACzK,IAAI,CAACC,IAAI,kBA3J8EhE,+DAAE;IAAAkE,IAAA,EA2JJuE,mBAAmB;IAAAtE,SAAA;IAAAoB,SAAA,WAAkF,cAAc;IAAAnB,QAAA,GA3JjHpE,wEAAE;EAAA,EA2J8L;AACpS;AACA;EAAA,QAAAwE,SAAA,oBAAAA,SAAA,KA7JoGxE,+DAAE,CA6JXyI,mBAAmB,EAAc,CAAC;IACjHvE,IAAI,EAAEjE,oDAAS;IACfyE,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,sCAAsC;MAChDsC,IAAI,EAAE;QACF,OAAO,EAAE,iBAAiB;QAC1B,MAAM,EAAE;MACZ;IACJ,CAAC;EACT,CAAC,CAAC;AAAA;AACV;AACA;AACA;AACA;AACA;AACA,MAAM2B,mBAAmB,SAASzH,6DAAa,CAAC;EAAA,QAAAwC,CAAA,GACnC,IAAI,CAACC,IAAI;IAAA,IAAAiF,gCAAA;IAAA,gBAAAC,4BAAAhF,CAAA;MAAA,QAAA+E,gCAAA,KAAAA,gCAAA,GA7K8E7I,mEAAE,CA6KQ4I,mBAAmB,IAAA9E,CAAA,IAAnB8E,mBAAmB;IAAA;EAAA,GAAqD;EAAA,QAAA7E,EAAA,GACzK,IAAI,CAACC,IAAI,kBA9K8EhE,+DAAE;IAAAkE,IAAA,EA8KJ0E,mBAAmB;IAAAzE,SAAA;IAAAoB,SAAA,WAAkF,UAAU;IAAAnB,QAAA,GA9K7GpE,wEAAE;EAAA,EA8K0L;AAChS;AACA;EAAA,QAAAwE,SAAA,oBAAAA,SAAA,KAhLoGxE,+DAAE,CAgLX4I,mBAAmB,EAAc,CAAC;IACjH1E,IAAI,EAAEjE,oDAAS;IACfyE,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,sCAAsC;MAChDsC,IAAI,EAAE;QACF,OAAO,EAAE,iBAAiB;QAC1B,MAAM,EAAE;MACZ;IACJ,CAAC;EACT,CAAC,CAAC;AAAA;AACV;AACA;AACA;AACA;AACA;AACA,MAAM8B,aAAa,SAAS3H,uDAAO,CAAC;EAAA,QAAAuC,CAAA,GACvB,IAAI,CAACC,IAAI;IAAA,IAAAoF,0BAAA;IAAA,gBAAAC,sBAAAnF,CAAA;MAAA,QAAAkF,0BAAA,KAAAA,0BAAA,GAhM8EhJ,mEAAE,CAgMQ+I,aAAa,IAAAjF,CAAA,IAAbiF,aAAa;IAAA;EAAA,GAAqD;EAAA,QAAAhF,EAAA,GACnK,IAAI,CAACC,IAAI,kBAjM8EhE,+DAAE;IAAAkE,IAAA,EAiMJ6E,aAAa;IAAA5E,SAAA;IAAAoB,SAAA,WAAoE,UAAU;IAAAnB,QAAA,GAjMzFpE,wEAAE;EAAA,EAiM+J;AACrQ;AACA;EAAA,QAAAwE,SAAA,oBAAAA,SAAA,KAnMoGxE,+DAAE,CAmMX+I,aAAa,EAAc,CAAC;IAC3G7E,IAAI,EAAEjE,oDAAS;IACfyE,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,wBAAwB;MAClCsC,IAAI,EAAE;QACF,OAAO,EAAE,UAAU;QACnB,MAAM,EAAE;MACZ;IACJ,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA,MAAMiC,qBAAqB,SAAS7H,+DAAe,CAAC;EAAA,QAAAsC,CAAA,GACvC,IAAI,CAACC,IAAI;IAAA,IAAAuF,kCAAA;IAAA,gBAAAC,8BAAAtF,CAAA;MAAA,QAAAqF,kCAAA,KAAAA,kCAAA,GArN8EnJ,mEAAE,CAqNQkJ,qBAAqB,IAAApF,CAAA,IAArBoF,qBAAqB;IAAA;EAAA,GAAqD;EAAA,QAAAnF,EAAA,GAC3K,IAAI,CAACC,IAAI,kBAtN8EhE,+DAAE;IAAAkE,IAAA,EAsNJgF,qBAAqB;IAAA/E,SAAA;IAAAoE,MAAA;MAAAc,OAAA;MAAAb,MAAA;IAAA;IAAApE,QAAA,GAtNnBpE,gEAAE,CAsN+J,CAAC;MAAEsE,OAAO,EAAEjD,+DAAe;MAAEyE,WAAW,EAAEoD;IAAsB,CAAC,CAAC,GAtNnOlJ,wEAAE;EAAA,EAsNyQ;AAC/W;AACA;EAAA,QAAAwE,SAAA,oBAAAA,SAAA,KAxNoGxE,+DAAE,CAwNXkJ,qBAAqB,EAAc,CAAC;IACnHhF,IAAI,EAAEjE,oDAAS;IACfyE,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,mBAAmB;MAC7BC,SAAS,EAAE,CAAC;QAAEN,OAAO,EAAEjD,+DAAe;QAAEyE,WAAW,EAAEoD;MAAsB,CAAC,CAAC;MAC7EX,MAAM,EAAE,CAAC,0BAA0B,EAAE,+BAA+B;IACxE,CAAC;EACT,CAAC,CAAC;AAAA;AACV;AACA;AACA;AACA;AACA;AACA;AACA,MAAMe,qBAAqB,SAAShI,+DAAe,CAAC;EAAA,QAAAqC,CAAA,GACvC,IAAI,CAACC,IAAI;IAAA,IAAA2F,kCAAA;IAAA,gBAAAC,8BAAA1F,CAAA;MAAA,QAAAyF,kCAAA,KAAAA,kCAAA,GAvO8EvJ,mEAAE,CAuOQsJ,qBAAqB,IAAAxF,CAAA,IAArBwF,qBAAqB;IAAA;EAAA,GAAqD;EAAA,QAAAvF,EAAA,GAC3K,IAAI,CAACC,IAAI,kBAxO8EhE,+DAAE;IAAAkE,IAAA,EAwOJoF,qBAAqB;IAAAnF,SAAA;IAAAoE,MAAA;MAAAc,OAAA;MAAAb,MAAA;IAAA;IAAApE,QAAA,GAxOnBpE,gEAAE,CAwO+J,CAAC;MAAEsE,OAAO,EAAEhD,+DAAe;MAAEwE,WAAW,EAAEwD;IAAsB,CAAC,CAAC,GAxOnOtJ,wEAAE;EAAA,EAwOyQ;AAC/W;AACA;EAAA,QAAAwE,SAAA,oBAAAA,SAAA,KA1OoGxE,+DAAE,CA0OXsJ,qBAAqB,EAAc,CAAC;IACnHpF,IAAI,EAAEjE,oDAAS;IACfyE,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,mBAAmB;MAC7BC,SAAS,EAAE,CAAC;QAAEN,OAAO,EAAEhD,+DAAe;QAAEwE,WAAW,EAAEwD;MAAsB,CAAC,CAAC;MAC7Ef,MAAM,EAAE,CAAC,0BAA0B,EAAE,+BAA+B;IACxE,CAAC;EACT,CAAC,CAAC;AAAA;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMkB,eAAe,SAASlI,yDAAS,CAAC;EAAA,QAAAoC,CAAA,GAC3B,IAAI,CAACC,IAAI;IAAA,IAAA8F,4BAAA;IAAA,gBAAAC,wBAAA7F,CAAA;MAAA,QAAA4F,4BAAA,KAAAA,4BAAA,GA1P8E1J,mEAAE,CA0PQyJ,eAAe,IAAA3F,CAAA,IAAf2F,eAAe;IAAA;EAAA,GAAqD;EAAA,QAAA1F,EAAA,GACrK,IAAI,CAACC,IAAI,kBA3P8EhE,+DAAE;IAAAkE,IAAA,EA2PJuF,eAAe;IAAAtF,SAAA;IAAAoE,MAAA;MAAAc,OAAA;MAAAO,IAAA;IAAA;IAAAxF,QAAA,GA3PbpE,gEAAE,CA2PwI,CAAC;MAAEsE,OAAO,EAAE/C,yDAAS;MAAEuE,WAAW,EAAE2D;IAAgB,CAAC,CAAC,GA3PhMzJ,wEAAE;EAAA,EA2PsO;AAC5U;AACA;EAAA,QAAAwE,SAAA,oBAAAA,SAAA,KA7PoGxE,+DAAE,CA6PXyJ,eAAe,EAAc,CAAC;IAC7GvF,IAAI,EAAEjE,oDAAS;IACfyE,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,aAAa;MACvBC,SAAS,EAAE,CAAC;QAAEN,OAAO,EAAE/C,yDAAS;QAAEuE,WAAW,EAAE2D;MAAgB,CAAC,CAAC;MACjElB,MAAM,EAAE,CAAC,2BAA2B,EAAE,qBAAqB;IAC/D,CAAC;EACT,CAAC,CAAC;AAAA;AACV;AACA;AACA;AACA;AACA;AACA,MAAMsB,kBAAkB,SAASrI,4DAAY,CAAC;EAAA,QAAAmC,CAAA,GACjC,IAAI,CAACC,IAAI;IAAA,IAAAkG,+BAAA;IAAA,gBAAAC,2BAAAjG,CAAA;MAAA,QAAAgG,+BAAA,KAAAA,+BAAA,GA3Q8E9J,mEAAE,CA2QQ6J,kBAAkB,IAAA/F,CAAA,IAAlB+F,kBAAkB;IAAA;EAAA,GAAqD;EAAA,QAAA9F,EAAA,GACxK,IAAI,CAACsB,IAAI,kBA5Q8ErF,+DAAE;IAAAkE,IAAA,EA4QJ2F,kBAAkB;IAAA1F,SAAA;IAAAoB,SAAA,WAAgF,KAAK;IAAAM,QAAA;IAAAzB,QAAA,GA5QrGpE,gEAAE,CA4QsJ,CAAC;MAAEsE,OAAO,EAAE9C,4DAAY;MAAEsE,WAAW,EAAE+D;IAAmB,CAAC,CAAC,GA5QpN7J,wEAAE;IAAAkG,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA2D,4BAAAzH,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAAFvC,gEAAE,MA4Q2U;MAAA;IAAA;IAAA0G,YAAA,GAA6DnG,6DAAgB;IAAAyG,aAAA;EAAA,EAAkI;AAChoB;AACA;EAAA,QAAAxC,SAAA,oBAAAA,SAAA,KA9QoGxE,+DAAE,CA8QX6J,kBAAkB,EAAc,CAAC;IAChH3F,IAAI,EAAEhE,oDAAS;IACfwE,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,oCAAoC;MAC9C0B,QAAQ,EAAE5E,gEAAgB;MAC1BwF,IAAI,EAAE;QACF,OAAO,EAAE,gBAAgB;QACzB,MAAM,EAAE;MACZ,CAAC;MACD;MACA;MACAE,eAAe,EAAE/G,0EAA+B;MAChD4G,aAAa,EAAE7G,iEAAsB;MACrC0F,QAAQ,EAAE,cAAc;MACxBjB,SAAS,EAAE,CAAC;QAAEN,OAAO,EAAE9C,4DAAY;QAAEsE,WAAW,EAAE+D;MAAmB,CAAC;IAC1E,CAAC;EACT,CAAC,CAAC;AAAA;AACV;AACA;AACA;AACA;AACA;AACA,MAAMK,kBAAkB,SAASxI,4DAAY,CAAC;EAAA,QAAAiC,CAAA,GACjC,IAAI,CAACC,IAAI;IAAA,IAAAuG,+BAAA;IAAA,gBAAAC,2BAAAtG,CAAA;MAAA,QAAAqG,+BAAA,KAAAA,+BAAA,GArS8EnK,mEAAE,CAqSQkK,kBAAkB,IAAApG,CAAA,IAAlBoG,kBAAkB;IAAA;EAAA,GAAqD;EAAA,QAAAnG,EAAA,GACxK,IAAI,CAACsB,IAAI,kBAtS8ErF,+DAAE;IAAAkE,IAAA,EAsSJgG,kBAAkB;IAAA/F,SAAA;IAAAoB,SAAA,WAAgF,KAAK;IAAAM,QAAA;IAAAzB,QAAA,GAtSrGpE,gEAAE,CAsSsJ,CAAC;MAAEsE,OAAO,EAAE5C,4DAAY;MAAEoE,WAAW,EAAEoE;IAAmB,CAAC,CAAC,GAtSpNlK,wEAAE;IAAAkG,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAgE,4BAAA9H,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAAFvC,gEAAE,MAsS2U;MAAA;IAAA;IAAA0G,YAAA,GAA6DnG,6DAAgB;IAAAyG,aAAA;EAAA,EAAkI;AAChoB;AACA;EAAA,QAAAxC,SAAA,oBAAAA,SAAA,KAxSoGxE,+DAAE,CAwSXkK,kBAAkB,EAAc,CAAC;IAChHhG,IAAI,EAAEhE,oDAAS;IACfwE,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,oCAAoC;MAC9C0B,QAAQ,EAAE5E,gEAAgB;MAC1BwF,IAAI,EAAE;QACF,OAAO,EAAE,gBAAgB;QACzB,MAAM,EAAE;MACZ,CAAC;MACD;MACA;MACAE,eAAe,EAAE/G,0EAA+B;MAChD4G,aAAa,EAAE7G,iEAAsB;MACrC0F,QAAQ,EAAE,cAAc;MACxBjB,SAAS,EAAE,CAAC;QAAEN,OAAO,EAAE5C,4DAAY;QAAEoE,WAAW,EAAEoE;MAAmB,CAAC;IAC1E,CAAC;EACT,CAAC,CAAC;AAAA;AACV;AACA;AACA;AACA;AACA;AACA,MAAMI,YAAY,SAAS3I,sDAAM,CAAC;EAAA,QAAAgC,CAAA,GACrB,IAAI,CAACC,IAAI;IAAA,IAAA2G,yBAAA;IAAA,gBAAAC,qBAAA1G,CAAA;MAAA,QAAAyG,yBAAA,KAAAA,yBAAA,GA/T8EvK,mEAAE,CA+TQsK,YAAY,IAAAxG,CAAA,IAAZwG,YAAY;IAAA;EAAA,GAAqD;EAAA,QAAAvG,EAAA,GAClK,IAAI,CAACsB,IAAI,kBAhU8ErF,+DAAE;IAAAkE,IAAA,EAgUJoG,YAAY;IAAAnG,SAAA;IAAAoB,SAAA,WAAkE,KAAK;IAAAM,QAAA;IAAAzB,QAAA,GAhUjFpE,gEAAE,CAgU2H,CAAC;MAAEsE,OAAO,EAAE3C,sDAAM;MAAEmE,WAAW,EAAEwE;IAAa,CAAC,CAAC,GAhU7KtK,wEAAE;IAAAkG,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAoE,sBAAAlI,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAAFvC,gEAAE,MAgU8R;MAAA;IAAA;IAAA0G,YAAA,GAA6DnG,6DAAgB;IAAAyG,aAAA;EAAA,EAAkI;AACnlB;AACA;EAAA,QAAAxC,SAAA,oBAAAA,SAAA,KAlUoGxE,+DAAE,CAkUXsK,YAAY,EAAc,CAAC;IAC1GpG,IAAI,EAAEhE,oDAAS;IACfwE,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,sBAAsB;MAChC0B,QAAQ,EAAE5E,gEAAgB;MAC1BwF,IAAI,EAAE;QACF,OAAO,EAAE,SAAS;QAClB,MAAM,EAAE;MACZ,CAAC;MACD;MACA;MACAE,eAAe,EAAE/G,0EAA+B;MAChD4G,aAAa,EAAE7G,iEAAsB;MACrC0F,QAAQ,EAAE,QAAQ;MAClBjB,SAAS,EAAE,CAAC;QAAEN,OAAO,EAAE3C,sDAAM;QAAEmE,WAAW,EAAEwE;MAAa,CAAC;IAC9D,CAAC;EACT,CAAC,CAAC;AAAA;AACV;AACA;AACA;AACA;AACA;AACA,MAAMI,kBAAkB,SAAS9I,4DAAY,CAAC;EAC1CkD,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAGC,SAAS,CAAC;IACnB,IAAI,CAAC4F,iBAAiB,GAAG,iBAAiB;EAC9C;EAAC,QAAAhH,CAAA,GACQ,IAAI,CAACC,IAAI;IAAA,IAAAgH,+BAAA;IAAA,gBAAAC,2BAAA/G,CAAA;MAAA,QAAA8G,+BAAA,KAAAA,+BAAA,GA7V8E5K,mEAAE,CA6VQ0K,kBAAkB,IAAA5G,CAAA,IAAlB4G,kBAAkB;IAAA;EAAA,GAAqD;EAAA,QAAA3G,EAAA,GACxK,IAAI,CAACC,IAAI,kBA9V8EhE,+DAAE;IAAAkE,IAAA,EA8VJwG,kBAAkB;IAAAvG,SAAA;IAAAC,QAAA,GA9VhBpE,gEAAE,CA8VkE,CAAC;MAAEsE,OAAO,EAAE1C,4DAAY;MAAEkE,WAAW,EAAE4E;IAAmB,CAAC,CAAC,GA9VhI1K,wEAAE;EAAA,EA8VsK;AAC5Q;AACA;EAAA,QAAAwE,SAAA,oBAAAA,SAAA,KAhWoGxE,+DAAE,CAgWX0K,kBAAkB,EAAc,CAAC;IAChHxG,IAAI,EAAEjE,oDAAS;IACfyE,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,2BAA2B;MACrCC,SAAS,EAAE,CAAC;QAAEN,OAAO,EAAE1C,4DAAY;QAAEkE,WAAW,EAAE4E;MAAmB,CAAC;IAC1E,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMI,mBAAmB,SAASjJ,6DAAa,CAAC;EAAA,QAAA8B,CAAA,GACnC,IAAI,CAACC,IAAI;IAAA,IAAAmH,gCAAA;IAAA,gBAAAC,4BAAAlH,CAAA;MAAA,QAAAiH,gCAAA,KAAAA,gCAAA,GArX8E/K,mEAAE,CAqXQ8K,mBAAmB,IAAAhH,CAAA,IAAnBgH,mBAAmB;IAAA;EAAA,GAAqD;EAAA,QAAA/G,EAAA,GACzK,IAAI,CAACsB,IAAI,kBAtX8ErF,+DAAE;IAAAkE,IAAA,EAsXJ4G,mBAAmB;IAAA3G,SAAA;IAAAC,QAAA,GAtXjBpE,wEAAE;IAAAkG,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA4E,6BAAA1I,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAAFvC,qEAAE,MAuXvE;QAvXqEA,wDAAE,IAAAsC,iCAAA,gBA0X3F;QA1XyFtC,wDAAE,IAAAmD,iCAAA,gBA6X3F;QA7XyFnD,mEAAE,EA8XnF;MAAA;IAAA;IAAA0G,YAAA,GAC4Cc,sBAAsB,EAA+DM,kBAAkB,EAA+FT,gBAAgB,EAAyDoB,mBAAmB,EAAiFM,aAAa;IAAA/B,aAAA;EAAA,EAAyI;AACxkB;AACA;EAAA,QAAAxC,SAAA,oBAAAA,SAAA,KAjYoGxE,+DAAE,CAiYX8K,mBAAmB,EAAc,CAAC;IACjH5G,IAAI,EAAEhE,oDAAS;IACfwE,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,iBAAiB;MAC3B0B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBW,aAAa,EAAE7G,iEAAsB;MACrC;MACA;MACA;MACA;MACA;MACA;MACAgH,eAAe,EAAE/G,0EAA+BgH;IACpD,CAAC;EACT,CAAC,CAAC;AAAA;AAEV,MAAMiE,qBAAqB,GAAG;AAC1B;AACAxG,cAAc,EACdnB,oBAAoB;AACpB;AACA8D,sBAAsB,EACtB0B,qBAAqB,EACrBpB,kBAAkB,EAClBT,gBAAgB,EAChBoC,eAAe,EACf9B,sBAAsB,EACtB2B,qBAAqB;AACrB;AACAb,mBAAmB,EACnBM,aAAa,EACbH,mBAAmB;AACnB;AACAiB,kBAAkB,EAClBS,YAAY,EACZJ,kBAAkB,EAClBQ,kBAAkB,EAClBI,mBAAmB,CACtB;AACD;AACA;AACA;AACA;AACA,MAAMQ,oBAAoB,CAAC;EAAA,QAAA3H,CAAA,GACd,IAAI,CAACC,IAAI,YAAA2H,6BAAAzH,CAAA;IAAA,YAAAA,CAAA,IAAwFwH,oBAAoB;EAAA,CAAkD;EAAA,QAAAvH,EAAA,GACvK,IAAI,CAACyH,IAAI,kBAvb8ExL,8DAAE;IAAAkE,IAAA,EAubSoH;EAAoB,EA0ChG;EAAA,QAAAI,EAAA,GACtB,IAAI,CAACC,IAAI,kBAle8E3L,8DAAE;IAAA6L,OAAA,GAkeyC/J,8DAAc,EAAEI,mEAAe,EAAEA,mEAAe;EAAA,EAAI;AACnM;AACA;EAAA,QAAAsC,SAAA,oBAAAA,SAAA,KApeoGxE,+DAAE,CAoeXsL,oBAAoB,EAAc,CAAC;IAClHpH,IAAI,EAAE5D,mDAAQ;IACdoE,IAAI,EAAE,CAAC;MACCmH,OAAO,EAAE,CAAC/J,8DAAc,EAAEI,mEAAe,CAAC;MAC1C4J,OAAO,EAAE,CAAC5J,mEAAe,EAAEmJ,qBAAqB,CAAC;MACjDU,YAAY,EAAEV;IAClB,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMW,wBAAwB,SAAS7J,wEAAmB,CAAC;;AAG3D;AACA;AACA","sources":["./node_modules/@angular/material/fesm2022/legacy-table.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Directive, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/table';\nimport { CdkTable, CDK_TABLE, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, STICKY_POSITIONING_LISTENER, CDK_TABLE_TEMPLATE, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CDK_ROW_TEMPLATE, CdkFooterRow, CdkRow, CdkNoDataRow, CdkTextColumn, CdkTableModule } from '@angular/cdk/table';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _MatTableDataSource } from '@angular/material/table';\nexport { _MatTableDataSource as _MatLegacyTableDataSource } from '@angular/material/table';\n\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n * @deprecated Use `MatRecycleRows` from `@angular/material/table` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyRecycleRows {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyRecycleRows, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyRecycleRows, selector: \"mat-table[recycleRows], table[mat-table][recycleRows]\", providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyRecycleRows, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-table[recycleRows], table[mat-table][recycleRows]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }] });\n/**\n * Wrapper for the CdkTable with Material design styles.\n * @deprecated Use `MatTable` from `@angular/material/table` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /** Overrides the sticky CSS class set by the `CdkTable`. */\n        this.stickyCssClass = 'mat-table-sticky';\n        /** Overrides the need to add position: sticky on every sticky cell element in `CdkTable`. */\n        this.needsPositionStickyOnElement = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyTable, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyTable, selector: \"mat-table, table[mat-table]\", host: { attributes: { \"ngSkipHydration\": \"\" }, properties: { \"class.mat-table-fixed-layout\": \"fixedLayout\" }, classAttribute: \"mat-table\" }, providers: [\n            // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n            //  is only included in the build if used.\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n            { provide: CdkTable, useExisting: MatLegacyTable },\n            { provide: CDK_TABLE, useExisting: MatLegacyTable },\n            { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n            // Prevent nested tables from seeing this table's StickyPositioningListener.\n            { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n        ], exportAs: [\"matTable\"], usesInheritance: true, ngImport: i0, template: \"\\n  <ng-content select=\\\"caption\\\"></ng-content>\\n  <ng-content select=\\\"colgroup, col\\\"></ng-content>\\n  <ng-container headerRowOutlet></ng-container>\\n  <ng-container rowOutlet></ng-container>\\n  <ng-container noDataRowOutlet></ng-container>\\n  <ng-container footerRowOutlet></ng-container>\\n\", isInline: true, styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\"], dependencies: [{ kind: \"directive\", type: i1.DataRowOutlet, selector: \"[rowOutlet]\" }, { kind: \"directive\", type: i1.HeaderRowOutlet, selector: \"[headerRowOutlet]\" }, { kind: \"directive\", type: i1.FooterRowOutlet, selector: \"[footerRowOutlet]\" }, { kind: \"directive\", type: i1.NoDataRowOutlet, selector: \"[noDataRowOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyTable, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-table, table[mat-table]', exportAs: 'matTable', template: CDK_TABLE_TEMPLATE, host: {\n                        'class': 'mat-table',\n                        '[class.mat-table-fixed-layout]': 'fixedLayout',\n                        'ngSkipHydration': '',\n                    }, providers: [\n                        // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n                        //  is only included in the build if used.\n                        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                        { provide: CdkTable, useExisting: MatLegacyTable },\n                        { provide: CDK_TABLE, useExisting: MatLegacyTable },\n                        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                        // Prevent nested tables from seeing this table's StickyPositioningListener.\n                        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\"] }]\n        }] });\n\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n * @deprecated Use `MatCellDef` from `@angular/material/table` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyCellDef extends CdkCellDef {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyCellDef, selector: \"[matCellDef]\", providers: [{ provide: CdkCellDef, useExisting: MatLegacyCellDef }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matCellDef]',\n                    providers: [{ provide: CdkCellDef, useExisting: MatLegacyCellDef }],\n                }]\n        }] });\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n * @deprecated Use `MatHeaderCellDef` from `@angular/material/table` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyHeaderCellDef extends CdkHeaderCellDef {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyHeaderCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyHeaderCellDef, selector: \"[matHeaderCellDef]\", providers: [{ provide: CdkHeaderCellDef, useExisting: MatLegacyHeaderCellDef }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyHeaderCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matHeaderCellDef]',\n                    providers: [{ provide: CdkHeaderCellDef, useExisting: MatLegacyHeaderCellDef }],\n                }]\n        }] });\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n * @deprecated Use `MatFooterCellDef` from `@angular/material/table` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyFooterCellDef extends CdkFooterCellDef {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyFooterCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyFooterCellDef, selector: \"[matFooterCellDef]\", providers: [{ provide: CdkFooterCellDef, useExisting: MatLegacyFooterCellDef }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyFooterCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matFooterCellDef]',\n                    providers: [{ provide: CdkFooterCellDef, useExisting: MatLegacyFooterCellDef }],\n                }]\n        }] });\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n * @deprecated Use `MatColumnDef` from `@angular/material/table` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyColumnDef extends CdkColumnDef {\n    /** Unique name for this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._setNameInput(name);\n    }\n    /**\n     * Add \"mat-column-\" prefix in addition to \"cdk-column-\" prefix.\n     * In the future, this will only add \"mat-column-\" and columnCssClassName\n     * will change from type string[] to string.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        super._updateColumnCssClassName();\n        this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyColumnDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyColumnDef, selector: \"[matColumnDef]\", inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, providers: [\n            { provide: CdkColumnDef, useExisting: MatLegacyColumnDef },\n            { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatLegacyColumnDef },\n        ], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyColumnDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matColumnDef]',\n                    inputs: ['sticky'],\n                    providers: [\n                        { provide: CdkColumnDef, useExisting: MatLegacyColumnDef },\n                        { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatLegacyColumnDef },\n                    ],\n                }]\n        }], propDecorators: { name: [{\n                type: Input,\n                args: ['matColumnDef']\n            }] } });\n/**\n * Header cell template container that adds the right classes and role.\n * @deprecated Use `MatHeaderCell` from `@angular/material/table` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyHeaderCell extends CdkHeaderCell {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyHeaderCell, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyHeaderCell, selector: \"mat-header-cell, th[mat-header-cell]\", host: { attributes: { \"role\": \"columnheader\" }, classAttribute: \"mat-header-cell\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyHeaderCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-header-cell, th[mat-header-cell]',\n                    host: {\n                        'class': 'mat-header-cell',\n                        'role': 'columnheader',\n                    },\n                }]\n        }] });\n/**\n * Footer cell template container that adds the right classes and role.\n * @deprecated Use `MatFooterCell` from `@angular/material/table` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyFooterCell extends CdkFooterCell {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyFooterCell, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyFooterCell, selector: \"mat-footer-cell, td[mat-footer-cell]\", host: { attributes: { \"role\": \"gridcell\" }, classAttribute: \"mat-footer-cell\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyFooterCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-footer-cell, td[mat-footer-cell]',\n                    host: {\n                        'class': 'mat-footer-cell',\n                        'role': 'gridcell',\n                    },\n                }]\n        }] });\n/**\n * Cell template container that adds the right classes and role.\n * @deprecated Use `MatCell` from `@angular/material/table` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyCell extends CdkCell {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyCell, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyCell, selector: \"mat-cell, td[mat-cell]\", host: { attributes: { \"role\": \"gridcell\" }, classAttribute: \"mat-cell\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-cell, td[mat-cell]',\n                    host: {\n                        'class': 'mat-cell',\n                        'role': 'gridcell',\n                    },\n                }]\n        }] });\n\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n * @deprecated Use `MatHeaderRowDef` from `@angular/material/table` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyHeaderRowDef extends CdkHeaderRowDef {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyHeaderRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyHeaderRowDef, selector: \"[matHeaderRowDef]\", inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, providers: [{ provide: CdkHeaderRowDef, useExisting: MatLegacyHeaderRowDef }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyHeaderRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matHeaderRowDef]',\n                    providers: [{ provide: CdkHeaderRowDef, useExisting: MatLegacyHeaderRowDef }],\n                    inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky'],\n                }]\n        }] });\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n * @deprecated Use `MatFooterRowDef` from `@angular/material/table` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyFooterRowDef extends CdkFooterRowDef {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyFooterRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyFooterRowDef, selector: \"[matFooterRowDef]\", inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, providers: [{ provide: CdkFooterRowDef, useExisting: MatLegacyFooterRowDef }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyFooterRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matFooterRowDef]',\n                    providers: [{ provide: CdkFooterRowDef, useExisting: MatLegacyFooterRowDef }],\n                    inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky'],\n                }]\n        }] });\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @deprecated Use `MatRowDef` from `@angular/material/table` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyRowDef extends CdkRowDef {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyRowDef, selector: \"[matRowDef]\", inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, providers: [{ provide: CdkRowDef, useExisting: MatLegacyRowDef }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matRowDef]',\n                    providers: [{ provide: CdkRowDef, useExisting: MatLegacyRowDef }],\n                    inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen'],\n                }]\n        }] });\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n * @deprecated Use `MatHeaderRow` from `@angular/material/table` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyHeaderRow extends CdkHeaderRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyHeaderRow, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyHeaderRow, selector: \"mat-header-row, tr[mat-header-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-header-row\" }, providers: [{ provide: CdkHeaderRow, useExisting: MatLegacyHeaderRow }], exportAs: [\"matHeaderRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyHeaderRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-header-row, tr[mat-header-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matHeaderRow',\n                    providers: [{ provide: CdkHeaderRow, useExisting: MatLegacyHeaderRow }],\n                }]\n        }] });\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n * @deprecated Use `MatFooterRow` from `@angular/material/table` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyFooterRow extends CdkFooterRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyFooterRow, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyFooterRow, selector: \"mat-footer-row, tr[mat-footer-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-footer-row\" }, providers: [{ provide: CdkFooterRow, useExisting: MatLegacyFooterRow }], exportAs: [\"matFooterRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyFooterRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-footer-row, tr[mat-footer-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-footer-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matFooterRow',\n                    providers: [{ provide: CdkFooterRow, useExisting: MatLegacyFooterRow }],\n                }]\n        }] });\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n * @deprecated Use `MatRow` from `@angular/material/table` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyRow extends CdkRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyRow, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyRow, selector: \"mat-row, tr[mat-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-row\" }, providers: [{ provide: CdkRow, useExisting: MatLegacyRow }], exportAs: [\"matRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-row, tr[mat-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matRow',\n                    providers: [{ provide: CdkRow, useExisting: MatLegacyRow }],\n                }]\n        }] });\n/**\n * Row that can be used to display a message when no data is shown in the table.\n * @deprecated Use `MatNoDataRow` from `@angular/material/table` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyNoDataRow extends CdkNoDataRow {\n    constructor() {\n        super(...arguments);\n        this._contentClassName = 'mat-no-data-row';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyNoDataRow, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyNoDataRow, selector: \"ng-template[matNoDataRow]\", providers: [{ provide: CdkNoDataRow, useExisting: MatLegacyNoDataRow }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyNoDataRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matNoDataRow]',\n                    providers: [{ provide: CdkNoDataRow, useExisting: MatLegacyNoDataRow }],\n                }]\n        }] });\n\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n *\n * @deprecated Use `MatTextColumn` from `@angular/material/table` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyTextColumn extends CdkTextColumn {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyTextColumn, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyTextColumn, selector: \"mat-text-column\", usesInheritance: true, ngImport: i0, template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: MatLegacyHeaderCellDef, selector: \"[matHeaderCellDef]\" }, { kind: \"directive\", type: MatLegacyColumnDef, selector: \"[matColumnDef]\", inputs: [\"sticky\", \"matColumnDef\"] }, { kind: \"directive\", type: MatLegacyCellDef, selector: \"[matCellDef]\" }, { kind: \"directive\", type: MatLegacyHeaderCell, selector: \"mat-header-cell, th[mat-header-cell]\" }, { kind: \"directive\", type: MatLegacyCell, selector: \"mat-cell, td[mat-cell]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyTextColumn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-text-column',\n                    template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                }]\n        }] });\n\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatLegacyTable,\n    MatLegacyRecycleRows,\n    // Template defs\n    MatLegacyHeaderCellDef,\n    MatLegacyHeaderRowDef,\n    MatLegacyColumnDef,\n    MatLegacyCellDef,\n    MatLegacyRowDef,\n    MatLegacyFooterCellDef,\n    MatLegacyFooterRowDef,\n    // Cell directives\n    MatLegacyHeaderCell,\n    MatLegacyCell,\n    MatLegacyFooterCell,\n    // Row directives\n    MatLegacyHeaderRow,\n    MatLegacyRow,\n    MatLegacyFooterRow,\n    MatLegacyNoDataRow,\n    MatLegacyTextColumn,\n];\n/**\n * @deprecated Use `MatTableModule` from `@angular/material/table` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyTableModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyTableModule, declarations: [\n            // Table\n            MatLegacyTable,\n            MatLegacyRecycleRows,\n            // Template defs\n            MatLegacyHeaderCellDef,\n            MatLegacyHeaderRowDef,\n            MatLegacyColumnDef,\n            MatLegacyCellDef,\n            MatLegacyRowDef,\n            MatLegacyFooterCellDef,\n            MatLegacyFooterRowDef,\n            // Cell directives\n            MatLegacyHeaderCell,\n            MatLegacyCell,\n            MatLegacyFooterCell,\n            // Row directives\n            MatLegacyHeaderRow,\n            MatLegacyRow,\n            MatLegacyFooterRow,\n            MatLegacyNoDataRow,\n            MatLegacyTextColumn], imports: [CdkTableModule, MatCommonModule], exports: [MatCommonModule, \n            // Table\n            MatLegacyTable,\n            MatLegacyRecycleRows,\n            // Template defs\n            MatLegacyHeaderCellDef,\n            MatLegacyHeaderRowDef,\n            MatLegacyColumnDef,\n            MatLegacyCellDef,\n            MatLegacyRowDef,\n            MatLegacyFooterCellDef,\n            MatLegacyFooterRowDef,\n            // Cell directives\n            MatLegacyHeaderCell,\n            MatLegacyCell,\n            MatLegacyFooterCell,\n            // Row directives\n            MatLegacyHeaderRow,\n            MatLegacyRow,\n            MatLegacyFooterRow,\n            MatLegacyNoDataRow,\n            MatLegacyTextColumn] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyTableModule, imports: [CdkTableModule, MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkTableModule, MatCommonModule],\n                    exports: [MatCommonModule, EXPORTED_DECLARATIONS],\n                    declarations: EXPORTED_DECLARATIONS,\n                }]\n        }] });\n\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using paginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterPredicate,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n *\n * @deprecated Use `MatTableDataSource` from `@angular/material/table` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyTableDataSource extends _MatTableDataSource {\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatLegacyCell, MatLegacyCellDef, MatLegacyColumnDef, MatLegacyFooterCell, MatLegacyFooterCellDef, MatLegacyFooterRow, MatLegacyFooterRowDef, MatLegacyHeaderCell, MatLegacyHeaderCellDef, MatLegacyHeaderRow, MatLegacyHeaderRowDef, MatLegacyNoDataRow, MatLegacyRecycleRows, MatLegacyRow, MatLegacyRowDef, MatLegacyTable, MatLegacyTableDataSource, MatLegacyTableModule, MatLegacyTextColumn };\n"],"names":["i0","Directive","Component","ViewEncapsulation","ChangeDetectionStrategy","Input","NgModule","i1","CdkTable","CDK_TABLE","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","STICKY_POSITIONING_LISTENER","CDK_TABLE_TEMPLATE","CdkCellDef","CdkHeaderCellDef","CdkFooterCellDef","CdkColumnDef","CdkHeaderCell","CdkFooterCell","CdkCell","CdkHeaderRowDef","CdkFooterRowDef","CdkRowDef","CdkHeaderRow","CDK_ROW_TEMPLATE","CdkFooterRow","CdkRow","CdkNoDataRow","CdkTextColumn","CdkTableModule","_VIEW_REPEATER_STRATEGY","_RecycleViewRepeaterStrategy","_DisposeViewRepeaterStrategy","MatCommonModule","_MatTableDataSource","_c0","_c1","MatLegacyTextColumn_th_1_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵstyleProp","justify","ɵɵadvance","ɵɵtextInterpolate1","headerText","MatLegacyTextColumn_td_2_Template","data_r2","$implicit","ctx_r1","dataAccessor","name","_MatLegacyTableDataSource","MatLegacyRecycleRows","_","ɵfac","MatLegacyRecycleRows_Factory","t","_2","ɵdir","ɵɵdefineDirective","type","selectors","features","ɵɵProvidersFeature","provide","useClass","ngDevMode","ɵsetClassMetadata","args","selector","providers","MatLegacyTable","constructor","arguments","stickyCssClass","needsPositionStickyOnElement","ɵMatLegacyTable_BaseFactory","MatLegacyTable_Factory","ɵɵgetInheritedFactory","ɵcmp","ɵɵdefineComponent","hostAttrs","hostVars","hostBindings","MatLegacyTable_HostBindings","ɵɵclassProp","fixedLayout","exportAs","useExisting","useValue","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","consts","template","MatLegacyTable_Template","ɵɵprojectionDef","ɵɵprojection","ɵɵelementContainer","dependencies","DataRowOutlet","HeaderRowOutlet","FooterRowOutlet","NoDataRowOutlet","styles","encapsulation","host","None","changeDetection","Default","MatLegacyCellDef","ɵMatLegacyCellDef_BaseFactory","MatLegacyCellDef_Factory","MatLegacyHeaderCellDef","ɵMatLegacyHeaderCellDef_BaseFactory","MatLegacyHeaderCellDef_Factory","MatLegacyFooterCellDef","ɵMatLegacyFooterCellDef_BaseFactory","MatLegacyFooterCellDef_Factory","MatLegacyColumnDef","_name","_setNameInput","_updateColumnCssClassName","_columnCssClassName","push","cssClassFriendlyName","ɵMatLegacyColumnDef_BaseFactory","MatLegacyColumnDef_Factory","inputs","sticky","MatLegacyHeaderCell","ɵMatLegacyHeaderCell_BaseFactory","MatLegacyHeaderCell_Factory","MatLegacyFooterCell","ɵMatLegacyFooterCell_BaseFactory","MatLegacyFooterCell_Factory","MatLegacyCell","ɵMatLegacyCell_BaseFactory","MatLegacyCell_Factory","MatLegacyHeaderRowDef","ɵMatLegacyHeaderRowDef_BaseFactory","MatLegacyHeaderRowDef_Factory","columns","MatLegacyFooterRowDef","ɵMatLegacyFooterRowDef_BaseFactory","MatLegacyFooterRowDef_Factory","MatLegacyRowDef","ɵMatLegacyRowDef_BaseFactory","MatLegacyRowDef_Factory","when","MatLegacyHeaderRow","ɵMatLegacyHeaderRow_BaseFactory","MatLegacyHeaderRow_Factory","MatLegacyHeaderRow_Template","CdkCellOutlet","MatLegacyFooterRow","ɵMatLegacyFooterRow_BaseFactory","MatLegacyFooterRow_Factory","MatLegacyFooterRow_Template","MatLegacyRow","ɵMatLegacyRow_BaseFactory","MatLegacyRow_Factory","MatLegacyRow_Template","MatLegacyNoDataRow","_contentClassName","ɵMatLegacyNoDataRow_BaseFactory","MatLegacyNoDataRow_Factory","MatLegacyTextColumn","ɵMatLegacyTextColumn_BaseFactory","MatLegacyTextColumn_Factory","MatLegacyTextColumn_Template","ɵɵelementContainerStart","ɵɵtemplate","ɵɵelementContainerEnd","EXPORTED_DECLARATIONS","MatLegacyTableModule","MatLegacyTableModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","exports","declarations","MatLegacyTableDataSource"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}