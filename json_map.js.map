{"version":3,"file":"json_map.js","mappings":"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","sources":["./node_modules/@amcharts/amcharts5/.internal/charts/map/GraticuleSeries.js","./node_modules/@amcharts/amcharts5/.internal/charts/map/MapChart.js","./node_modules/@amcharts/amcharts5/.internal/charts/map/MapChartDefaultTheme.js","./node_modules/@amcharts/amcharts5/.internal/charts/map/MapLine.js","./node_modules/@amcharts/amcharts5/.internal/charts/map/MapLineSeries.js","./node_modules/@amcharts/amcharts5/.internal/charts/map/MapPointSeries.js","./node_modules/@amcharts/amcharts5/.internal/charts/map/MapPolygon.js","./node_modules/@amcharts/amcharts5/.internal/charts/map/MapPolygonSeries.js","./node_modules/@amcharts/amcharts5/.internal/charts/map/MapSeries.js","./node_modules/@amcharts/amcharts5/.internal/charts/map/MapUtils.js","./node_modules/@amcharts/amcharts5/.internal/charts/map/ZoomControl.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Button.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Chart.js","./node_modules/@amcharts/amcharts5/.internal/core/render/SerialChart.js","./node_modules/@amcharts/amcharts5/map.js","./node_modules/polylabel/polylabel.js","./node_modules/tinyqueue/index.js"],"sourcesContent":["import { MapLineSeries } from \"./MapLineSeries\";\r\nimport { geoGraticule } from \"d3-geo\";\r\n/**\r\n * A [[MapChart]] series to draw a map grid.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/graticule-series/} for more info\r\n * @important\r\n */\r\nexport class GraticuleSeries extends MapLineSeries {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_dataItem\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.makeDataItem({})\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.dataItems.push(this._dataItem);\r\n        this._generate();\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        if (this.isDirty(\"step\")) {\r\n            this._generate();\r\n        }\r\n        if (this.isDirty(\"clipExtent\")) {\r\n            if (this.get(\"clipExtent\")) {\r\n                const chart = this.chart;\r\n                if (chart) {\r\n                    chart.events.on(\"geoboundschanged\", () => {\r\n                        this._generate();\r\n                    });\r\n                }\r\n                this._generate();\r\n            }\r\n        }\r\n    }\r\n    _generate() {\r\n        let graticule = geoGraticule();\r\n        if (graticule) {\r\n            if (this.get(\"clipExtent\")) {\r\n                const chart = this.chart;\r\n                if (chart) {\r\n                    const geoBounds = chart.geoBounds();\r\n                    if (geoBounds) {\r\n                        graticule.extent([[geoBounds.left, geoBounds.bottom], [geoBounds.right, geoBounds.top]]);\r\n                    }\r\n                }\r\n            }\r\n            const step = this.get(\"step\", 10);\r\n            graticule.stepMinor([360, 360]);\r\n            graticule.stepMajor([step, step]);\r\n            this._dataItem.set(\"geometry\", graticule());\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(GraticuleSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"GraticuleSeries\"\r\n});\r\nObject.defineProperty(GraticuleSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: MapLineSeries.classNames.concat([GraticuleSeries.className])\r\n});\r\n","import { MapChartDefaultTheme } from \"./MapChartDefaultTheme\";\r\nimport { SerialChart } from \"../../core/render/SerialChart\";\r\nimport { Rectangle } from \"../../core/render/Rectangle\";\r\nimport { geoPath } from \"d3-geo\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $mapUtils from \"./MapUtils\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nexport class MapChart extends SerialChart {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_downTranslateX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downTranslateY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downRotationX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downRotationY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downRotationZ\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_pLat\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_pLon\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_movePoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_downZoomLevel\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_doubleDownDistance\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_dirtyGeometries\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_geometryColection\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { type: \"GeometryCollection\", geometries: [] }\r\n        });\r\n        Object.defineProperty(this, \"_centerLocation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_za\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rxa\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rya\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_txa\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tya\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_mapBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [[0, 0], [0, 0]]\r\n        });\r\n        Object.defineProperty(this, \"_geoCentroid\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { longitude: 0, latitude: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_geoBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { left: 0, right: 0, top: 0, bottom: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_prevGeoBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { left: 0, right: 0, top: 0, bottom: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_dispatchBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_wheelDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_pw\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_ph\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_mapFitted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_centerX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_centerY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    _makeGeoPath() {\r\n        const projection = this.get(\"projection\");\r\n        const path = geoPath();\r\n        path.projection(projection);\r\n        this.setPrivateRaw(\"geoPath\", path);\r\n    }\r\n    /**\r\n     * Returns a geoPoint of the current zoom position.\r\n     *\r\n     * You can later use it to restore zoom position, e.g.: `chart.zoomToGeoPoint(geoPoint, zoomLevel, true)`.\r\n     *\r\n     * @since 5.2.19\r\n     */\r\n    geoPoint() {\r\n        return this.invert(this.seriesContainer.toGlobal({ x: this.width() / 2, y: this.height() / 2 }));\r\n    }\r\n    /**\r\n     * Returns coordinates to geographical center of the map.\r\n     */\r\n    geoCentroid() {\r\n        return this._geoCentroid;\r\n    }\r\n    /**\r\n     * Returns geographical bounds of the map.\r\n     */\r\n    geoBounds() {\r\n        return this._geoBounds;\r\n    }\r\n    _handleSetWheel() {\r\n        const wheelX = this.get(\"wheelX\");\r\n        const wheelY = this.get(\"wheelY\");\r\n        const chartContainer = this.chartContainer;\r\n        if (wheelX != \"none\" || wheelY != \"none\") {\r\n            if (this._wheelDp) {\r\n                this._wheelDp.dispose();\r\n            }\r\n            this._wheelDp = chartContainer.events.on(\"wheel\", (event) => {\r\n                const wheelEasing = this.get(\"wheelEasing\");\r\n                const wheelSensitivity = this.get(\"wheelSensitivity\", 1);\r\n                const wheelDuration = this.get(\"wheelDuration\", 0);\r\n                const wheelEvent = event.originalEvent;\r\n                // Ignore wheel event if it is happening on a non-chart element, e.g. if\r\n                // some page element is over the chart.\r\n                if ($utils.isLocalEvent(wheelEvent, this)) {\r\n                    wheelEvent.preventDefault();\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n                const point = chartContainer._display.toLocal(event.point);\r\n                if ((wheelY == \"zoom\")) {\r\n                    this._handleWheelZoom(wheelEvent.deltaY, point);\r\n                }\r\n                else if (wheelY == \"rotateY\") {\r\n                    this._handleWheelRotateY(wheelEvent.deltaY / 5 * wheelSensitivity, wheelDuration, wheelEasing);\r\n                }\r\n                else if (wheelY == \"rotateX\") {\r\n                    this._handleWheelRotateX(wheelEvent.deltaY / 5 * wheelSensitivity, wheelDuration, wheelEasing);\r\n                }\r\n                if ((wheelX == \"zoom\")) {\r\n                    this._handleWheelZoom(wheelEvent.deltaX, point);\r\n                }\r\n                else if (wheelX == \"rotateY\") {\r\n                    this._handleWheelRotateY(wheelEvent.deltaX / 5 * wheelSensitivity, wheelDuration, wheelEasing);\r\n                }\r\n                else if (wheelX == \"rotateX\") {\r\n                    this._handleWheelRotateX(wheelEvent.deltaX / 5 * wheelSensitivity, wheelDuration, wheelEasing);\r\n                }\r\n            });\r\n            this._disposers.push(this._wheelDp);\r\n        }\r\n        else {\r\n            if (this._wheelDp) {\r\n                this._wheelDp.dispose();\r\n            }\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        const projection = this.get(\"projection\");\r\n        const w = this.innerWidth();\r\n        const h = this.innerHeight();\r\n        const previousGeometries = this._geometryColection.geometries;\r\n        if (this.isDirty(\"projection\")) {\r\n            this._makeGeoPath();\r\n            this.markDirtyProjection();\r\n            this._fitMap();\r\n            projection.scale(this.getPrivate(\"mapScale\") * this.get(\"zoomLevel\", 1));\r\n            if (projection.rotate) {\r\n                projection.rotate([this.get(\"rotationX\", 0), this.get(\"rotationY\", 0), this.get(\"rotationZ\", 0)]);\r\n            }\r\n            let prev = this._prevSettings.projection;\r\n            if (prev && prev != projection) {\r\n                let hw = w / 2;\r\n                let hh = h / 2;\r\n                if (prev.invert) {\r\n                    let centerLocation = prev.invert([hw, hh]);\r\n                    if (centerLocation) {\r\n                        let xy = projection(centerLocation);\r\n                        if (xy) {\r\n                            let translate = projection.translate();\r\n                            let xx = hw - ((xy[0] - translate[0]));\r\n                            let yy = hh - ((xy[1] - translate[1]));\r\n                            projection.translate([xx, yy]);\r\n                            this.setRaw(\"translateX\", xx);\r\n                            this.setRaw(\"translateY\", yy);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\r\n            this._handleSetWheel();\r\n        }\r\n        if (this._dirtyGeometries) {\r\n            this._geometryColection.geometries = [];\r\n            this.series.each((series) => {\r\n                $array.pushAll(this._geometryColection.geometries, series._geometries);\r\n            });\r\n            this._fitMap();\r\n        }\r\n        if (previousGeometries.length != 0 && (w != this._pw || h != this._ph || this._dirtyGeometries)) {\r\n            if (w > 0 && h > 0) {\r\n                let hw = w / 2;\r\n                let hh = h / 2;\r\n                projection.fitSize([w, h], this._geometryColection);\r\n                const newScale = projection.scale();\r\n                this.setPrivateRaw(\"mapScale\", newScale);\r\n                projection.scale(newScale * this.get(\"zoomLevel\", 1));\r\n                if (this._centerLocation) {\r\n                    let xy = projection(this._centerLocation);\r\n                    if (xy) {\r\n                        let translate = projection.translate();\r\n                        let xx = hw - ((xy[0] - translate[0]));\r\n                        let yy = hh - ((xy[1] - translate[1]));\r\n                        projection.translate([xx, yy]);\r\n                        this.setRaw(\"translateX\", xx);\r\n                        this.setRaw(\"translateY\", yy);\r\n                        this._centerX = translate[0];\r\n                        this._centerY = translate[1];\r\n                    }\r\n                }\r\n                this.markDirtyProjection();\r\n                const geoPath = this.getPrivate(\"geoPath\");\r\n                this._mapBounds = geoPath.bounds(this._geometryColection);\r\n            }\r\n        }\r\n        this._pw = w;\r\n        this._ph = h;\r\n        if (this.isDirty(\"zoomControl\")) {\r\n            const previous = this._prevSettings.zoomControl;\r\n            const zoomControl = this.get(\"zoomControl\");\r\n            if (zoomControl !== previous) {\r\n                this._disposeProperty(\"zoomControl\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (zoomControl) {\r\n                    zoomControl.setPrivate(\"chart\", this);\r\n                    this.children.push(zoomControl);\r\n                }\r\n                this.setRaw(\"zoomControl\", zoomControl);\r\n            }\r\n        }\r\n        if (this.isDirty(\"zoomLevel\")) {\r\n            projection.scale(this.getPrivate(\"mapScale\") * this.get(\"zoomLevel\", 1));\r\n            this.markDirtyProjection();\r\n            this.series.each((series) => {\r\n                if (series.isType(\"MapPointSeries\")) {\r\n                    if (series.get(\"autoScale\")) {\r\n                        $array.each(series.dataItems, (dataItem) => {\r\n                            const bullets = dataItem.bullets;\r\n                            if (bullets) {\r\n                                $array.each(bullets, (bullet) => {\r\n                                    const sprite = bullet.get(\"sprite\");\r\n                                    if (sprite) {\r\n                                        sprite.set(\"scale\", this.get(\"zoomLevel\"));\r\n                                    }\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if (this.isDirty(\"translateX\") || this.isDirty(\"translateY\")) {\r\n            projection.translate([this.get(\"translateX\", this.width() / 2), this.get(\"translateY\", this.height() / 2)]);\r\n            this.markDirtyProjection();\r\n        }\r\n        if (projection.rotate) {\r\n            if (this.isDirty(\"rotationX\") || this.isDirty(\"rotationY\") || this.isDirty(\"rotationZ\")) {\r\n                projection.rotate([this.get(\"rotationX\", 0), this.get(\"rotationY\", 0), this.get(\"rotationZ\", 0)]);\r\n                this.markDirtyProjection();\r\n            }\r\n        }\r\n        if (this.isDirty(\"pinchZoom\") || this.get(\"panX\") || this.get(\"panY\")) {\r\n            this._setUpTouch();\r\n        }\r\n    }\r\n    _fitMap() {\r\n        const projection = this.get(\"projection\");\r\n        let w = this.innerWidth();\r\n        let h = this.innerHeight();\r\n        if (w > 0 && h > 0) {\r\n            projection.fitSize([w, h], this._geometryColection);\r\n            this.setPrivateRaw(\"mapScale\", projection.scale());\r\n            const translate = projection.translate();\r\n            this.setRaw(\"translateX\", translate[0]);\r\n            this.setRaw(\"translateY\", translate[1]);\r\n            this._centerX = translate[0];\r\n            this._centerY = translate[1];\r\n            const geoPath = this.getPrivate(\"geoPath\");\r\n            this._mapBounds = geoPath.bounds(this._geometryColection);\r\n            this._geoCentroid = $mapUtils.getGeoCentroid(this._geometryColection);\r\n            const bounds = $mapUtils.getGeoBounds(this._geometryColection);\r\n            this._geoBounds = bounds;\r\n            if (this._geometryColection.geometries.length > 0) {\r\n                bounds.left = $math.round(this._geoBounds.left, 3);\r\n                bounds.right = $math.round(this._geoBounds.right, 3);\r\n                bounds.top = $math.round(this._geoBounds.top, 3);\r\n                bounds.bottom = $math.round(this._geoBounds.bottom, 3);\r\n                const prevGeoBounds = this._prevGeoBounds;\r\n                if (prevGeoBounds && !$utils.sameBounds(bounds, prevGeoBounds)) {\r\n                    this._dispatchBounds = true;\r\n                    this._prevGeoBounds = bounds;\r\n                }\r\n            }\r\n            this._mapFitted = true;\r\n        }\r\n    }\r\n    /**\r\n     * Returns geographical coordinates for calculated or manual center of the\r\n     * map.\r\n     */\r\n    homeGeoPoint() {\r\n        let homeGeoPoint = this.get(\"homeGeoPoint\");\r\n        if (!homeGeoPoint) {\r\n            const geoPath = this.getPrivate(\"geoPath\");\r\n            const bounds = geoPath.bounds(this._geometryColection);\r\n            const left = bounds[0][0];\r\n            const top = bounds[0][1];\r\n            const right = bounds[1][0];\r\n            const bottom = bounds[1][1];\r\n            homeGeoPoint = this.invert({ x: left + (right - left) / 2, y: top + (bottom - top) / 2 });\r\n        }\r\n        return homeGeoPoint;\r\n    }\r\n    /**\r\n     * Repositions the map to the \"home\" zoom level and center coordinates.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Resetting_position_level} for more info\r\n     * @param  duration  Animation duration in milliseconds\r\n     */\r\n    goHome(duration) {\r\n        this.zoomToGeoPoint(this.homeGeoPoint(), this.get(\"homeZoomLevel\", 1), true, duration, this.get(\"homeRotationX\"), this.get(\"homeRotationY\"));\r\n    }\r\n    _updateChildren() {\r\n        const projection = this.get(\"projection\");\r\n        if (projection.invert) {\r\n            let w = this.innerWidth();\r\n            let h = this.innerHeight();\r\n            if (w > 0 && h > 0) {\r\n                this._centerLocation = projection.invert([this.innerWidth() / 2, this.innerHeight() / 2]);\r\n            }\r\n        }\r\n        super._updateChildren();\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._dispatchBounds) {\r\n            this._dispatchBounds = false;\r\n            const type = \"geoboundschanged\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this });\r\n            }\r\n        }\r\n    }\r\n    _setUpTouch() {\r\n        if (!this.chartContainer._display.cancelTouch) {\r\n            this.chartContainer._display.cancelTouch = (this.get(\"pinchZoom\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyGeometries() {\r\n        this._dirtyGeometries = true;\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyProjection() {\r\n        this.series.each((series) => {\r\n            series.markDirtyProjection();\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._defaultThemes.push(MapChartDefaultTheme.new(this._root));\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"map\"]);\r\n        this.children.push(this.bulletsContainer);\r\n        super._afterNew();\r\n        this._makeGeoPath();\r\n        this.chartContainer.children.push(this.seriesContainer);\r\n        if (this.get(\"translateX\") == null) {\r\n            this.set(\"translateX\", this.width() / 2);\r\n        }\r\n        if (this.get(\"translateY\") == null) {\r\n            this.set(\"translateY\", this.height() / 2);\r\n        }\r\n        // Setting trasnparent background so that full body of the plot container\r\n        // is interactive\r\n        this.chartContainer.set(\"interactive\", true);\r\n        this.chartContainer.set(\"interactiveChildren\", false);\r\n        this.chartContainer.set(\"background\", Rectangle.new(this._root, {\r\n            themeTags: [\"map\", \"background\"],\r\n            fill: Color.fromHex(0x000000),\r\n            fillOpacity: 0\r\n        }));\r\n        this._disposers.push(this.chartContainer.events.on(\"pointerdown\", (event) => {\r\n            this._handleChartDown(event);\r\n        }));\r\n        this._disposers.push(this.chartContainer.events.on(\"globalpointerup\", (event) => {\r\n            this._handleChartUp(event);\r\n        }));\r\n        this._disposers.push(this.chartContainer.events.on(\"globalpointermove\", (event) => {\r\n            this._handleChartMove(event);\r\n        }));\r\n        let license = false;\r\n        for (let i = 0; i < registry.licenses.length; i++) {\r\n            if (registry.licenses[i].match(/^AM5M.{5,}/i)) {\r\n                license = true;\r\n            }\r\n        }\r\n        if (!license) {\r\n            this._root._showBranding();\r\n        }\r\n        this._setUpTouch();\r\n    }\r\n    _handleChartDown(event) {\r\n        this._downZoomLevel = this.get(\"zoomLevel\", 1);\r\n        let count = $object.keys(this.chartContainer._downPoints).length;\r\n        if (count == 1) {\r\n            // workaround to solve a problem when events are added to some children of chart container (rotation stops working)\r\n            const downPoint = this.chartContainer._downPoints[1];\r\n            if (downPoint && (downPoint.x == event.point.x && downPoint.y == event.point.y)) {\r\n                count = 0;\r\n            }\r\n        }\r\n        if (count > 0) {\r\n            this._downTranslateX = this.get(\"translateX\");\r\n            this._downTranslateY = this.get(\"translateY\");\r\n            this._downRotationX = this.get(\"rotationX\");\r\n            this._downRotationY = this.get(\"rotationY\");\r\n            this._downRotationZ = this.get(\"rotationZ\");\r\n            const downId = this.chartContainer._getDownPointId();\r\n            if (downId) {\r\n                let movePoint = this._movePoints[downId];\r\n                if (movePoint) {\r\n                    this.chartContainer._downPoints[downId] = movePoint;\r\n                }\r\n            }\r\n        }\r\n        else if (count == 0) {\r\n            let bg = this.chartContainer.get(\"background\");\r\n            if (bg) {\r\n                bg.events.enableType(\"click\");\r\n            }\r\n            if (this.get(\"panX\") || this.get(\"panY\")) {\r\n                if (this._za) {\r\n                    this._za.stop();\r\n                }\r\n                if (this._txa) {\r\n                    this._txa.stop();\r\n                }\r\n                if (this._tya) {\r\n                    this._tya.stop();\r\n                }\r\n                if (this._rxa) {\r\n                    this._rxa.stop();\r\n                }\r\n                if (this._rya) {\r\n                    this._rya.stop();\r\n                }\r\n                const downPoint = this.chartContainer._display.toLocal(event.point);\r\n                this._downTranslateX = this.get(\"translateX\");\r\n                this._downTranslateY = this.get(\"translateY\");\r\n                this._downRotationX = this.get(\"rotationX\");\r\n                this._downRotationY = this.get(\"rotationY\");\r\n                this._downRotationZ = this.get(\"rotationZ\");\r\n                let projection = this.get(\"projection\");\r\n                if (projection.invert) {\r\n                    let l0 = projection.invert([downPoint.x, downPoint.y]);\r\n                    let l1 = projection.invert([downPoint.x + 1, downPoint.y + 1]);\r\n                    if (l0 && l1) {\r\n                        this._pLon = Math.abs(l1[0] - l0[0]);\r\n                        this._pLat = Math.abs(l1[1] - l0[1]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Converts screen coordinates (X and Y) within chart to latitude and\r\n     * longitude.\r\n     *\r\n     * @param  point  Screen coordinates\r\n     * @return        Geographical coordinates\r\n     */\r\n    invert(point) {\r\n        let projection = this.get(\"projection\");\r\n        if (projection.invert) {\r\n            const ll = projection.invert([point.x, point.y]);\r\n            if (ll) {\r\n                return { longitude: ll[0], latitude: ll[1] };\r\n            }\r\n        }\r\n        return { longitude: 0, latitude: 0 };\r\n    }\r\n    /**\r\n     * Converts latitude/longitude to screen coordinates (X and Y).\r\n     *\r\n     * @param  point  Geographical coordinates\r\n     * @param  rotationX  X rotation of a map if different from current\r\n     * @param  rotationY  Y rotation of a map if different from current\r\n     *\r\n     * @return Screen coordinates\r\n     */\r\n    convert(point, rotationX, rotationY) {\r\n        let projection = this.get(\"projection\");\r\n        let xy;\r\n        if (!projection.rotate) {\r\n            rotationX = undefined;\r\n            rotationY = undefined;\r\n        }\r\n        if (rotationX != null || rotationY != null) {\r\n            if (rotationX == null) {\r\n                rotationX = 0;\r\n            }\r\n            if (rotationY == null) {\r\n                rotationY = 0;\r\n            }\r\n            let rotation = projection.rotate();\r\n            projection.rotate([rotationX, rotationY, 0]);\r\n            xy = projection([point.longitude, point.latitude]);\r\n            projection.rotate(rotation);\r\n        }\r\n        else {\r\n            xy = projection([point.longitude, point.latitude]);\r\n        }\r\n        if (xy) {\r\n            return { x: xy[0], y: xy[1] };\r\n        }\r\n        return { x: 0, y: 0 };\r\n    }\r\n    _handleChartUp(_event) {\r\n        this.chartContainer._downPoints = {};\r\n    }\r\n    _handlePinch() {\r\n        const chartContainer = this.chartContainer;\r\n        let i = 0;\r\n        let downPoints = [];\r\n        let movePoints = [];\r\n        $object.each(chartContainer._downPoints, (k, point) => {\r\n            downPoints[i] = point;\r\n            let movePoint = this._movePoints[k];\r\n            if (movePoint) {\r\n                movePoints[i] = movePoint;\r\n            }\r\n            i++;\r\n        });\r\n        if (downPoints.length > 1 && movePoints.length > 1) {\r\n            const display = chartContainer._display;\r\n            let downPoint0 = downPoints[0];\r\n            let downPoint1 = downPoints[1];\r\n            let movePoint0 = movePoints[0];\r\n            let movePoint1 = movePoints[1];\r\n            if (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\r\n                downPoint0 = display.toLocal(downPoint0);\r\n                downPoint1 = display.toLocal(downPoint1);\r\n                movePoint0 = display.toLocal(movePoint0);\r\n                movePoint1 = display.toLocal(movePoint1);\r\n                let initialDistance = Math.hypot(downPoint1.x - downPoint0.x, downPoint1.y - downPoint0.y);\r\n                let currentDistance = Math.hypot(movePoint1.x - movePoint0.x, movePoint1.y - movePoint0.y);\r\n                let level = currentDistance / initialDistance * this._downZoomLevel;\r\n                level = $math.fitToRange(level, this.get(\"minZoomLevel\", 1), this.get(\"maxZoomLevel\", 32));\r\n                let moveCenter = { x: movePoint0.x + (movePoint1.x - movePoint0.x) / 2, y: movePoint0.y + (movePoint1.y - movePoint0.y) / 2 };\r\n                let downCenter = { x: downPoint0.x + (downPoint1.x - downPoint0.x) / 2, y: downPoint0.y + (downPoint1.y - downPoint0.y) / 2 };\r\n                let tx = this._downTranslateX || 0;\r\n                let ty = this._downTranslateY || 0;\r\n                let zoomLevel = this._downZoomLevel;\r\n                let xx = moveCenter.x - (-tx + downCenter.x) / zoomLevel * level;\r\n                let yy = moveCenter.y - (-ty + downCenter.y) / zoomLevel * level;\r\n                this.set(\"zoomLevel\", level);\r\n                this.set(\"translateX\", xx);\r\n                this.set(\"translateY\", yy);\r\n            }\r\n        }\r\n    }\r\n    _handleChartMove(event) {\r\n        const chartContainer = this.chartContainer;\r\n        let downPoint = chartContainer._getDownPoint();\r\n        const downPointId = chartContainer._getDownPointId();\r\n        const originalEvent = event.originalEvent;\r\n        const pointerId = originalEvent.pointerId;\r\n        if (this.get(\"pinchZoom\")) {\r\n            if (pointerId) {\r\n                this._movePoints[pointerId] = event.point;\r\n                if ($object.keys(chartContainer._downPoints).length > 1) {\r\n                    this._handlePinch();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        if (downPointId && pointerId && pointerId != downPointId) {\r\n            return;\r\n        }\r\n        else {\r\n            if (downPoint) {\r\n                const panX = this.get(\"panX\");\r\n                const panY = this.get(\"panY\");\r\n                if (panX != \"none\" || panY != \"none\") {\r\n                    const display = chartContainer._display;\r\n                    let local = display.toLocal(event.point);\r\n                    downPoint = display.toLocal(downPoint);\r\n                    let x = this._downTranslateX;\r\n                    let y = this._downTranslateY;\r\n                    if (Math.hypot(downPoint.x - local.x, downPoint.y - local.y) > 5) {\r\n                        let bg = chartContainer.get(\"background\");\r\n                        if (bg) {\r\n                            bg.events.disableType(\"click\");\r\n                        }\r\n                        if ($type.isNumber(x) && $type.isNumber(y)) {\r\n                            let projection = this.get(\"projection\");\r\n                            const zoomLevel = this.get(\"zoomLevel\", 1);\r\n                            const maxPanOut = this.get(\"maxPanOut\", 0.4);\r\n                            const bounds = this._mapBounds;\r\n                            const w = this.width();\r\n                            const h = this.height();\r\n                            const ww = bounds[1][0] - bounds[0][0];\r\n                            const hh = bounds[1][1] - bounds[0][1];\r\n                            if (panX == \"translateX\") {\r\n                                x += local.x - downPoint.x;\r\n                                const cx = w / 2 - (w / 2 - this._centerX) * zoomLevel;\r\n                                x = Math.min(x, cx + ww * maxPanOut * zoomLevel);\r\n                                x = Math.max(x, cx - ww * maxPanOut * zoomLevel);\r\n                            }\r\n                            if (panY == \"translateY\") {\r\n                                y += local.y - downPoint.y;\r\n                                const cy = h / 2 - (h / 2 - this._centerY) * zoomLevel;\r\n                                y = Math.min(y, cy + hh * maxPanOut * zoomLevel);\r\n                                y = Math.max(y, cy - hh * maxPanOut * zoomLevel);\r\n                            }\r\n                            this.set(\"translateX\", x);\r\n                            this.set(\"translateY\", y);\r\n                            if (projection.invert) {\r\n                                let downLocation = projection.invert([downPoint.x, downPoint.y]);\r\n                                if (location && downLocation) {\r\n                                    if (panX == \"rotateX\") {\r\n                                        this.set(\"rotationX\", this._downRotationX - (downPoint.x - local.x) * this._pLon);\r\n                                    }\r\n                                    if (panY == \"rotateY\") {\r\n                                        this.set(\"rotationY\", this._downRotationY + (downPoint.y - local.y) * this._pLat);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleWheelRotateY(delta, duration, easing) {\r\n        this._rya = this.animate({ key: \"rotationY\", to: this.get(\"rotationY\", 0) - delta, duration: duration, easing: easing });\r\n    }\r\n    _handleWheelRotateX(delta, duration, easing) {\r\n        this._rxa = this.animate({ key: \"rotationX\", to: this.get(\"rotationX\", 0) - delta, duration: duration, easing: easing });\r\n    }\r\n    _handleWheelZoom(delta, point) {\r\n        let step = this.get(\"zoomStep\", 2);\r\n        let zoomLevel = this.get(\"zoomLevel\", 1);\r\n        let newZoomLevel = zoomLevel;\r\n        if (delta > 0) {\r\n            newZoomLevel = zoomLevel / step;\r\n        }\r\n        else if (delta < 0) {\r\n            newZoomLevel = zoomLevel * step;\r\n        }\r\n        if (newZoomLevel != zoomLevel) {\r\n            this.zoomToPoint(point, newZoomLevel);\r\n        }\r\n    }\r\n    /**\r\n     * Zoom the map to geographical bounds.\r\n     *\r\n     * @param  geoBounds  Bounds\r\n     * @param  duration   Animation duration in milliseconds\r\n     * @param  rotationX  X rotation of a map at the end of zoom\r\n     * @param  rotationY  Y rotation of a map at the end of zoom\r\n     */\r\n    zoomToGeoBounds(geoBounds, duration, rotationX, rotationY) {\r\n        if (geoBounds.right < geoBounds.left) {\r\n            geoBounds.right = 180;\r\n            geoBounds.left = -180;\r\n        }\r\n        const geoPath = this.getPrivate(\"geoPath\");\r\n        const mapBounds = geoPath.bounds(this._geometryColection);\r\n        let p0 = this.convert({ longitude: geoBounds.left, latitude: geoBounds.top }, rotationX, rotationY);\r\n        let p1 = this.convert({ longitude: geoBounds.right, latitude: geoBounds.bottom }, rotationX, rotationY);\r\n        if (p0.y < mapBounds[0][1]) {\r\n            p0.y = mapBounds[0][1];\r\n        }\r\n        if (p1.y > mapBounds[1][1]) {\r\n            p1.y = mapBounds[1][1];\r\n        }\r\n        let zl = this.get(\"zoomLevel\", 1);\r\n        let bounds = { left: p0.x, right: p1.x, top: p0.y, bottom: p1.y };\r\n        let seriesContainer = this.seriesContainer;\r\n        let zoomLevel = .9 * Math.min(seriesContainer.innerWidth() / (bounds.right - bounds.left) * zl, seriesContainer.innerHeight() / (bounds.bottom - bounds.top) * zl);\r\n        let x = bounds.left + (bounds.right - bounds.left) / 2;\r\n        let y = bounds.top + (bounds.bottom - bounds.top) / 2;\r\n        let geoPoint = this.invert({ x, y });\r\n        if (rotationX != null || rotationY != null) {\r\n            this.rotate(rotationX, rotationY);\r\n        }\r\n        return this.zoomToGeoPoint(geoPoint, zoomLevel, true, duration);\r\n    }\r\n    /**\r\n     * Zooms the map to specific screen point.\r\n     *\r\n     * @param  point    Point\r\n     * @param  level    Zoom level\r\n     * @param  center   Center the map\r\n     * @param  duration Duration of the animation in milliseconds\r\n     */\r\n    zoomToPoint(point, level, center, duration) {\r\n        if (level) {\r\n            level = $math.fitToRange(level, this.get(\"minZoomLevel\", 1), this.get(\"maxZoomLevel\", 32));\r\n        }\r\n        if (!$type.isNumber(duration)) {\r\n            duration = this.get(\"animationDuration\", 0);\r\n        }\r\n        const easing = this.get(\"animationEasing\");\r\n        const zoomLevel = this.get(\"zoomLevel\", 1);\r\n        if (this.get(\"centerMapOnZoomOut\") && level == this.get(\"homeZoomLevel\", 1)) {\r\n            point = this.convert(this.homeGeoPoint());\r\n            center = true;\r\n        }\r\n        let x = point.x;\r\n        let y = point.y;\r\n        let tx = this.get(\"translateX\", 0);\r\n        let ty = this.get(\"translateY\", 0);\r\n        let cx = x;\r\n        let cy = y;\r\n        if (center) {\r\n            cx = this.width() / 2;\r\n            cy = this.height() / 2;\r\n        }\r\n        let xx = cx - ((x - tx) / zoomLevel * level);\r\n        let yy = cy - ((y - ty) / zoomLevel * level);\r\n        this._txa = this.animate({ key: \"translateX\", to: xx, duration: duration, easing: easing });\r\n        this._tya = this.animate({ key: \"translateY\", to: yy, duration: duration, easing: easing });\r\n        this._za = this.animate({ key: \"zoomLevel\", to: level, duration: duration, easing: easing });\r\n        if (zoomLevel != level) {\r\n            this._root.readerAlert(this._t(\"Zoom level changed to %1\", this._root.locale, $type.numberToString(level)));\r\n        }\r\n        return this._za;\r\n    }\r\n    /**\r\n     * Zooms the map to specific geographical point.\r\n     *\r\n     * @param  geoPoint  Point\r\n     * @param  level     Zoom level\r\n     * @param  center    Center the map\r\n     * @param  duration  Duration of the animation in milliseconds\r\n     * @param  rotationX  X rotation of a map at the end of zoom\r\n     * @param  rotationY  Y rotation of a map at the end of zoom\r\n     *\r\n     */\r\n    zoomToGeoPoint(geoPoint, level, center, duration, rotationX, rotationY) {\r\n        let xy = this.convert(geoPoint, rotationX, rotationY);\r\n        if (rotationX != null || rotationY != null) {\r\n            this.rotate(rotationX, rotationY, duration);\r\n        }\r\n        if (xy) {\r\n            return this.zoomToPoint(xy, level, center, duration);\r\n        }\r\n    }\r\n    rotate(rotationX, rotationY, duration) {\r\n        const projection = this.get(\"projection\");\r\n        if (!projection.rotate) {\r\n        }\r\n        else {\r\n            if (!$type.isNumber(duration)) {\r\n                duration = this.get(\"animationDuration\", 0);\r\n            }\r\n            const easing = this.get(\"animationEasing\");\r\n            if (rotationX != null) {\r\n                this.animate({ key: \"rotationX\", to: rotationX, duration: duration, easing: easing });\r\n            }\r\n            if (rotationY != null) {\r\n                this.animate({ key: \"rotationY\", to: rotationY, duration: duration, easing: easing });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Zooms the map in.\r\n     */\r\n    zoomIn() {\r\n        return this.zoomToPoint({ x: this.width() / 2, y: this.height() / 2 }, this.get(\"zoomLevel\", 1) * this.get(\"zoomStep\", 2));\r\n    }\r\n    /**\r\n     * Zooms the map out.\r\n     */\r\n    zoomOut() {\r\n        return this.zoomToPoint({ x: this.width() / 2, y: this.height() / 2 }, this.get(\"zoomLevel\", 1) / this.get(\"zoomStep\", 2));\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._dirtyGeometries = false;\r\n        this._mapFitted = false;\r\n    }\r\n    /**\r\n     * Returns area of a mapPolygon in square pixels.\r\n     */\r\n    getArea(dataItem) {\r\n        const geoPath = this.getPrivate(\"geoPath\");\r\n        const geometry = dataItem.get(\"geometry\");\r\n        if (geometry) {\r\n            return geoPath.area(geometry);\r\n        }\r\n        return 0;\r\n    }\r\n}\r\nObject.defineProperty(MapChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"MapChart\"\r\n});\r\nObject.defineProperty(MapChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: SerialChart.classNames.concat([MapChart.className])\r\n});\r\n","import { Theme } from \"../../core/Theme\";\r\nimport { p50, p100 } from \"../../core/util/Percent\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\nimport { geoMercator } from \"d3-geo\";\r\nimport * as $ease from \"../../core/util/Ease\";\r\n/**\r\n * @ignore\r\n */\r\nexport class MapChartDefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const ic = this._root.interfaceColors;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * charts/map\r\n         * ========================================================================\r\n         */\r\n        r(\"MapChart\").setAll({\r\n            projection: geoMercator(),\r\n            panX: \"translateX\",\r\n            panY: \"translateY\",\r\n            pinchZoom: true,\r\n            zoomStep: 2,\r\n            zoomLevel: 1,\r\n            rotationX: 0,\r\n            rotationY: 0,\r\n            rotationZ: 0,\r\n            maxZoomLevel: 32,\r\n            minZoomLevel: 1,\r\n            wheelY: \"zoom\",\r\n            wheelX: \"none\",\r\n            animationEasing: $ease.out($ease.cubic),\r\n            wheelEasing: $ease.out($ease.cubic),\r\n            wheelDuration: 0,\r\n            wheelSensitivity: 1,\r\n            maxPanOut: 0.4,\r\n            centerMapOnZoomOut: true\r\n        });\r\n        {\r\n            const rule = r(\"MapLine\");\r\n            rule.setAll({\r\n                precision: 0.5,\r\n                role: \"figure\",\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"MapPolygonSeries\").setAll({\r\n            affectsBounds: true\r\n        });\r\n        r(\"MapPointSeries\").setAll({\r\n            affectsBounds: false,\r\n            clipFront: false,\r\n            clipBack: true,\r\n            autoScale: false\r\n        });\r\n        r(\"MapLineSeries\").setAll({\r\n            affectsBounds: false\r\n        });\r\n        {\r\n            const rule = r(\"MapPolygon\");\r\n            rule.setAll({\r\n                precision: 0.5,\r\n                isMeasured: false,\r\n                role: \"figure\",\r\n                fillOpacity: 1,\r\n                position: \"absolute\",\r\n                strokeWidth: 0.2,\r\n                strokeOpacity: 1,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n            setColor(rule, \"stroke\", ic, \"background\");\r\n        }\r\n        r(\"Button\", [\"zoomcontrol\"]).setAll({\r\n            marginTop: 1,\r\n            marginBottom: 1\r\n        });\r\n        r(\"Graphics\", [\"map\", \"button\", \"plus\", \"icon\"]).setAll({\r\n            x: p50,\r\n            y: p50,\r\n            draw: (display) => {\r\n                display.moveTo(-4, 0);\r\n                display.lineTo(4, 0);\r\n                display.moveTo(0, -4);\r\n                display.lineTo(0, 4);\r\n            }\r\n        });\r\n        r(\"Graphics\", [\"map\", \"button\", \"minus\", \"icon\"]).setAll({\r\n            x: p50,\r\n            y: p50,\r\n            draw: (display) => {\r\n                display.moveTo(-4, 0);\r\n                display.lineTo(4, 0);\r\n            }\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/map: Series\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"GraticuleSeries\").setAll({\r\n            step: 10\r\n        });\r\n        r(\"ZoomControl\").setAll({\r\n            x: p100,\r\n            centerX: p100,\r\n            y: p100,\r\n            centerY: p100,\r\n            paddingRight: 10,\r\n            paddingBottom: 10\r\n        });\r\n    }\r\n}\r\n","import * as $type from \"../../core/util/Type\";\r\nimport { Percent } from \"../../core/util/Percent\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { geoLength, geoInterpolate, geoDistance } from \"d3-geo\";\r\n/**\r\n * A line object in a [[MapLineSeries]].\r\n */\r\nexport class MapLine extends Graphics {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_projectionDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this._projectionDirty || this.isDirty(\"geometry\") || this.isDirty(\"precision\")) {\r\n            const geometry = this.get(\"geometry\");\r\n            if (geometry) {\r\n                const series = this.getPrivate(\"series\");\r\n                if (series) {\r\n                    const chart = series.chart;\r\n                    if (chart) {\r\n                        const projection = chart.get(\"projection\");\r\n                        let clipAngle = null;\r\n                        if (projection && projection.clipAngle) {\r\n                            clipAngle = projection.clipAngle();\r\n                            projection.precision(this.get(\"precision\", 0.5));\r\n                        }\r\n                        const dataItem = this.dataItem;\r\n                        const geoPath = chart.getPrivate(\"geoPath\");\r\n                        if (geoPath && dataItem) {\r\n                            this._clear = true;\r\n                            if (dataItem.get(\"lineType\", series.get(\"lineType\")) == \"straight\") {\r\n                                const geometry = this.get(\"geometry\");\r\n                                if (geometry) {\r\n                                    let coordinates = geometry.coordinates;\r\n                                    if (coordinates) {\r\n                                        let segments;\r\n                                        if (geometry.type == \"LineString\") {\r\n                                            segments = [coordinates];\r\n                                        }\r\n                                        else if (geometry.type == \"MultiLineString\") {\r\n                                            segments = coordinates;\r\n                                        }\r\n                                        this.set(\"draw\", (display) => {\r\n                                            for (let s = 0; s < segments.length; s++) {\r\n                                                let segment = segments[s];\r\n                                                if (segment.length > 0) {\r\n                                                    const gp0 = segment[0];\r\n                                                    const p0 = chart.convert({ longitude: gp0[0], latitude: gp0[1] });\r\n                                                    display.lineTo(p0.x, p0.y);\r\n                                                    for (let p = 0; p < segment.length; p++) {\r\n                                                        const gp = segment[p];\r\n                                                        const pn = chart.convert({ longitude: gp[0], latitude: gp[1] });\r\n                                                        display.lineTo(pn.x, pn.y);\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                this.set(\"draw\", (_display) => {\r\n                                    if (projection && series.get(\"clipBack\") === false) {\r\n                                        projection.clipAngle(180);\r\n                                    }\r\n                                    geoPath.context(this._display);\r\n                                    geoPath(geometry);\r\n                                    geoPath.context(null);\r\n                                    if (projection && projection.clipAngle) {\r\n                                        projection.clipAngle(clipAngle);\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            const type = \"linechanged\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyProjection() {\r\n        this.markDirty();\r\n        this._projectionDirty = true;\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._projectionDirty = false;\r\n    }\r\n    _getTooltipPoint() {\r\n        let tooltipX = this.get(\"tooltipX\");\r\n        let tooltipY = this.get(\"tooltipY\");\r\n        let x = 0;\r\n        let y = 0;\r\n        if ($type.isNumber(tooltipX)) {\r\n            x = tooltipX;\r\n        }\r\n        if ($type.isNumber(tooltipY)) {\r\n            y = tooltipY;\r\n        }\r\n        if (tooltipX instanceof Percent) {\r\n            const geoPoint = this.positionToGeoPoint(tooltipX.value);\r\n            const series = this.getPrivate(\"series\");\r\n            if (series) {\r\n                const chart = series.chart;\r\n                if (chart) {\r\n                    const point = chart.convert(geoPoint);\r\n                    x = point.x;\r\n                    y = point.y;\r\n                }\r\n            }\r\n        }\r\n        return { x, y };\r\n    }\r\n    /**\r\n     * Converts relative position along the line (0-1) into pixel coordinates.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Coordinates\r\n     */\r\n    positionToGeoPoint(position) {\r\n        const geometry = this.get(\"geometry\");\r\n        const series = this.getPrivate(\"series\");\r\n        const chart = series.chart;\r\n        const dataItem = this.dataItem;\r\n        if (geometry && series && chart && dataItem) {\r\n            const lineType = dataItem.get(\"lineType\", series.get(\"lineType\"));\r\n            let totalDistance = geoLength(geometry);\r\n            let currentDistance = 0;\r\n            let distanceAB;\r\n            let positionA = 0;\r\n            let positionB = 0;\r\n            let pointA;\r\n            let pointB;\r\n            let coordinates = geometry.coordinates;\r\n            if (coordinates) {\r\n                let segments;\r\n                if (geometry.type == \"LineString\") {\r\n                    segments = [coordinates];\r\n                }\r\n                else if (geometry.type == \"MultiLineString\") {\r\n                    segments = coordinates;\r\n                }\r\n                for (let s = 0; s < segments.length; s++) {\r\n                    let segment = segments[s];\r\n                    if (segment.length > 1) {\r\n                        for (let p = 1; p < segment.length; p++) {\r\n                            pointA = segment[p - 1];\r\n                            pointB = segment[p];\r\n                            positionA = currentDistance / totalDistance;\r\n                            distanceAB = geoDistance(pointA, pointB);\r\n                            currentDistance += distanceAB;\r\n                            positionB = currentDistance / totalDistance;\r\n                            if (positionA <= position && positionB > position) {\r\n                                s = segments.length;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (segment.length == 1) {\r\n                        pointA = segment[0];\r\n                        pointB = segment[0];\r\n                        positionA = 0;\r\n                        positionB = 1;\r\n                    }\r\n                }\r\n                if (pointA && pointB) {\r\n                    let positionAB = (position - positionA) / (positionB - positionA);\r\n                    let location;\r\n                    if (lineType == \"straight\") {\r\n                        let p0 = chart.convert({ longitude: pointA[0], latitude: pointA[1] });\r\n                        let p1 = chart.convert({ longitude: pointB[0], latitude: pointB[1] });\r\n                        let x = p0.x + (p1.x - p0.x) * positionAB;\r\n                        let y = p0.y + (p1.y - p0.y) * positionAB;\r\n                        return chart.invert({ x: x, y: y });\r\n                    }\r\n                    else {\r\n                        location = geoInterpolate(pointA, pointB)(positionAB);\r\n                        return { longitude: location[0], latitude: location[1] };\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return { longitude: 0, latitude: 0 };\r\n    }\r\n}\r\nObject.defineProperty(MapLine, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"MapLine\"\r\n});\r\nObject.defineProperty(MapLine, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([MapLine.className])\r\n});\r\n","import { MapSeries } from \"./MapSeries\";\r\nimport { MapLine } from \"./MapLine\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport * as $array from \"../../core/util/Array\";\r\n/**\r\n * Creates a map series for displaying lines on the map.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-line-series/} for more info\r\n * @important\r\n */\r\nexport class MapLineSeries extends MapSeries {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[ListTemplate]] of all lines in series.\r\n         *\r\n         * `mapLines.template` can also be used to configure lines.\r\n         *\r\n         * @default new ListTemplate<MapLine>\r\n         */\r\n        Object.defineProperty(this, \"mapLines\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => MapLine._new(this._root, {}, [this.mapLines.template]))\r\n        });\r\n        Object.defineProperty(this, \"_types\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"LineString\", \"MultiLineString\"]\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.fields.push(\"lineType\");\r\n        this._setRawDefault(\"lineTypeField\", \"lineType\");\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeMapLine(dataItem) {\r\n        const mapLine = this.children.push(this.mapLines.make());\r\n        mapLine._setDataItem(dataItem);\r\n        this.mapLines.push(mapLine);\r\n        return mapLine;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyProjection() {\r\n        $array.each(this.dataItems, (dataItem) => {\r\n            let mapLine = dataItem.get(\"mapLine\");\r\n            if (mapLine) {\r\n                mapLine.markDirtyProjection();\r\n            }\r\n        });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"stroke\")) {\r\n            this.mapLines.template.set(\"stroke\", this.get(\"stroke\"));\r\n        }\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        let mapLine = dataItem.get(\"mapLine\");\r\n        if (!mapLine) {\r\n            mapLine = this.makeMapLine(dataItem);\r\n        }\r\n        this._handlePointsToConnect(dataItem);\r\n        dataItem.on(\"pointsToConnect\", () => {\r\n            this._handlePointsToConnect(dataItem);\r\n        });\r\n        dataItem.set(\"mapLine\", mapLine);\r\n        this._addGeometry(dataItem.get(\"geometry\"), this);\r\n        mapLine.setPrivate(\"series\", this);\r\n    }\r\n    _handlePointsToConnect(dataItem) {\r\n        const pointsToConnect = dataItem.get(\"pointsToConnect\");\r\n        if (pointsToConnect) {\r\n            $array.each(pointsToConnect, (point) => {\r\n                point.on(\"geometry\", () => {\r\n                    this.markDirtyValues(dataItem);\r\n                });\r\n                point.on(\"longitude\", () => {\r\n                    this.markDirtyValues(dataItem);\r\n                });\r\n                point.on(\"latitude\", () => {\r\n                    this.markDirtyValues(dataItem);\r\n                });\r\n            });\r\n            this.markDirtyValues(dataItem);\r\n        }\r\n    }\r\n    /**\r\n     * Forces a repaint of the element which relies on data.\r\n     *\r\n     * @since 5.0.21\r\n     */\r\n    markDirtyValues(dataItem) {\r\n        super.markDirtyValues();\r\n        if (dataItem) {\r\n            const mapLine = dataItem.get(\"mapLine\");\r\n            if (mapLine) {\r\n                const pointsToConnect = dataItem.get(\"pointsToConnect\");\r\n                if (pointsToConnect) {\r\n                    let coordinates = [];\r\n                    $array.each(pointsToConnect, (point) => {\r\n                        const longitude = point.get(\"longitude\");\r\n                        const latitude = point.get(\"latitude\");\r\n                        if (longitude != null && latitude != null) {\r\n                            coordinates.push([longitude, latitude]);\r\n                        }\r\n                        else {\r\n                            const geometry = point.get(\"geometry\");\r\n                            if (geometry) {\r\n                                const coords = geometry.coordinates;\r\n                                if (coords) {\r\n                                    coordinates.push([coords[0], coords[1]]);\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                    let geometry = { type: \"LineString\", coordinates: coordinates };\r\n                    dataItem.setRaw(\"geometry\", geometry);\r\n                    mapLine.set(\"geometry\", geometry);\r\n                }\r\n                else {\r\n                    mapLine.set(\"geometry\", dataItem.get(\"geometry\"));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        const mapLine = dataItem.get(\"mapLine\");\r\n        if (mapLine) {\r\n            this.mapLines.removeValue(mapLine);\r\n            mapLine.dispose();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _excludeDataItem(dataItem) {\r\n        super._excludeDataItem(dataItem);\r\n        const mapLine = dataItem.get(\"mapLine\");\r\n        if (mapLine) {\r\n            mapLine.setPrivate(\"visible\", false);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _unexcludeDataItem(dataItem) {\r\n        super._unexcludeDataItem(dataItem);\r\n        const mapLine = dataItem.get(\"mapLine\");\r\n        if (mapLine) {\r\n            mapLine.setPrivate(\"visible\", true);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _notIncludeDataItem(dataItem) {\r\n        super._notIncludeDataItem(dataItem);\r\n        const mapLine = dataItem.get(\"mapLine\");\r\n        if (mapLine) {\r\n            mapLine.setPrivate(\"visible\", false);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _unNotIncludeDataItem(dataItem) {\r\n        super._unNotIncludeDataItem(dataItem);\r\n        const mapLine = dataItem.get(\"mapLine\");\r\n        if (mapLine) {\r\n            mapLine.setPrivate(\"visible\", true);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(MapLineSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"MapLineSeries\"\r\n});\r\nObject.defineProperty(MapLineSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: MapSeries.classNames.concat([MapLineSeries.className])\r\n});\r\n","import { MapSeries } from \"./MapSeries\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\n;\r\n/**\r\n * Creates a map series for displaying markers on the map.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-point-series/} for more info\r\n * @important\r\n */\r\nexport class MapPointSeries extends MapSeries {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_types\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"Point\", \"MultiPoint\"]\r\n        });\r\n        Object.defineProperty(this, \"_lineChangedDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.fields.push(\"polygonId\", \"lineId\", \"longitude\", \"latitude\", \"fixed\");\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyProjection() {\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * Forces a repaint of the element which relies on data.\r\n     *\r\n     * @since 5.0.21\r\n     */\r\n    markDirtyValues(dataItem) {\r\n        super.markDirtyValues();\r\n        if (dataItem) {\r\n            this._positionBullets(dataItem);\r\n        }\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        let geometry = dataItem.get(\"geometry\");\r\n        if (!geometry) {\r\n            geometry = { type: \"Point\", coordinates: [dataItem.get(\"longitude\", 0), dataItem.get(\"latitude\", 0)] };\r\n            dataItem.set(\"geometry\", geometry);\r\n        }\r\n        else {\r\n            if (geometry.type == \"Point\") {\r\n                const coordinates = geometry.coordinates;\r\n                if (coordinates) {\r\n                    dataItem.set(\"longitude\", coordinates[0]);\r\n                    dataItem.set(\"latitude\", coordinates[1]);\r\n                }\r\n            }\r\n            else if (geometry.type == \"MultiPoint\") {\r\n                const coordinates = geometry.coordinates;\r\n                if (coordinates && coordinates[0]) {\r\n                    dataItem.set(\"longitude\", coordinates[0][0]);\r\n                    dataItem.set(\"latitude\", coordinates[0][1]);\r\n                }\r\n            }\r\n        }\r\n        this._addGeometry(geometry, this);\r\n    }\r\n    _makeBullets(dataItem) {\r\n        dataItem.bullets = [];\r\n        this.bullets.each((bulletFunction) => {\r\n            const geometry = dataItem.get(\"geometry\");\r\n            if (geometry) {\r\n                if (geometry.type == \"Point\") {\r\n                    this._setBulletParent(this._makeBullet(dataItem, bulletFunction));\r\n                }\r\n                else if (geometry.type = \"MultiPoint\") {\r\n                    let i = 0;\r\n                    $array.each(geometry.coordinates, () => {\r\n                        this._setBulletParent(this._makeBullet(dataItem, bulletFunction, i));\r\n                        i++;\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _setBulletParent(bullet) {\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            const chart = this.chart;\r\n            if (sprite && chart) {\r\n                const dataItem = sprite.dataItem;\r\n                if (dataItem) {\r\n                    if (dataItem.get(\"fixed\")) {\r\n                        if (sprite.parent != chart.bulletsContainer) {\r\n                            chart.bulletsContainer.children.moveValue(sprite);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (sprite.parent != this.bulletsContainer) {\r\n                            this.bulletsContainer.children.moveValue(sprite);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _positionBullet(bullet) {\r\n        const sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            const dataItem = sprite.dataItem;\r\n            if (dataItem && dataItem.get(\"fixed\")) {\r\n                return;\r\n            }\r\n            const latitude = dataItem.get(\"latitude\");\r\n            const longitude = dataItem.get(\"longitude\");\r\n            const lineDataItem = dataItem.get(\"lineDataItem\");\r\n            const fixed = dataItem.get(\"fixed\");\r\n            const chart = this.chart;\r\n            let line;\r\n            if (lineDataItem) {\r\n                line = lineDataItem.get(\"mapLine\");\r\n            }\r\n            else {\r\n                const lineId = dataItem.get(\"lineId\");\r\n                if (lineId && chart) {\r\n                    chart.series.each((series) => {\r\n                        if (series.isType(\"MapLineSeries\")) {\r\n                            let lineDI = series.getDataItemById(lineId);\r\n                            if (lineDI) {\r\n                                dataItem.set(\"lineDataItem\", lineDI);\r\n                                line = lineDI.get(\"mapLine\");\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (this._lineChangedDp) {\r\n                this._lineChangedDp.dispose();\r\n            }\r\n            if (line) {\r\n                this._lineChangedDp = line.events.on(\"linechanged\", () => {\r\n                    this._positionBullets(dataItem);\r\n                });\r\n            }\r\n            const polygonDataItem = dataItem.get(\"polygonDataItem\");\r\n            let polygon;\r\n            if (polygonDataItem) {\r\n                polygon = polygonDataItem.get(\"mapPolygon\");\r\n            }\r\n            else {\r\n                const polygonId = dataItem.get(\"polygonId\");\r\n                if (polygonId && chart) {\r\n                    chart.series.each((series) => {\r\n                        if (series.isType(\"MapPolygonSeries\")) {\r\n                            let polygonDI = series.getDataItemById(polygonId);\r\n                            if (polygonDI) {\r\n                                dataItem.set(\"polygonDataItem\", polygonDI);\r\n                                polygon = polygonDI.get(\"mapPolygon\");\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            const positionOnLine = dataItem.get(\"positionOnLine\");\r\n            let coordinates;\r\n            let angle;\r\n            if (polygon) {\r\n                let geoPoint = polygon.visualCentroid();\r\n                coordinates = [geoPoint.longitude, geoPoint.latitude];\r\n                dataItem.setRaw(\"longitude\", geoPoint.longitude);\r\n                dataItem.setRaw(\"latitude\", geoPoint.latitude);\r\n            }\r\n            else if (line && $type.isNumber(positionOnLine)) {\r\n                let geoPoint = line.positionToGeoPoint(positionOnLine);\r\n                coordinates = [geoPoint.longitude, geoPoint.latitude];\r\n                if (dataItem.get(\"autoRotate\", bullet.get(\"autoRotate\")) && chart) {\r\n                    const geoPoint0 = line.positionToGeoPoint(positionOnLine - 0.002);\r\n                    const geoPoint1 = line.positionToGeoPoint(positionOnLine + 0.002);\r\n                    const point0 = chart.convert(geoPoint0);\r\n                    const point1 = chart.convert(geoPoint1);\r\n                    //dataItem.set(\"autoRotateAngle\", $math.getAngle(point0, point1));\r\n                    angle = $math.getAngle(point0, point1);\r\n                }\r\n                dataItem.setRaw(\"longitude\", geoPoint.longitude);\r\n                dataItem.setRaw(\"latitude\", geoPoint.latitude);\r\n            }\r\n            else if ($type.isNumber(longitude) && $type.isNumber(latitude)) {\r\n                coordinates = [longitude, latitude];\r\n            }\r\n            else {\r\n                const geometry = dataItem.get(\"geometry\");\r\n                if (geometry) {\r\n                    if (geometry.type == \"Point\") {\r\n                        this._positionBulletReal(bullet, geometry, geometry.coordinates, angle);\r\n                    }\r\n                    else if (geometry.type == \"MultiPoint\") {\r\n                        let index = bullet._index || 0;\r\n                        coordinates = geometry.coordinates[index];\r\n                    }\r\n                }\r\n            }\r\n            if (!fixed && coordinates) {\r\n                this._positionBulletReal(bullet, { type: \"Point\", coordinates: coordinates }, coordinates, angle);\r\n            }\r\n        }\r\n    }\r\n    _positionBulletReal(bullet, geometry, coordinates, angle) {\r\n        const sprite = bullet.get(\"sprite\");\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            const projection = chart.get(\"projection\");\r\n            const geoPath = chart.getPrivate(\"geoPath\");\r\n            const dataItem = sprite.dataItem;\r\n            const xy = projection(coordinates);\r\n            if (xy) {\r\n                sprite.setAll({ x: xy[0], y: xy[1] });\r\n            }\r\n            let visible = true;\r\n            if (geoPath(geometry)) {\r\n                if (this.get(\"clipFront\")) {\r\n                    visible = false;\r\n                }\r\n            }\r\n            else {\r\n                if (this.get(\"clipBack\")) {\r\n                    visible = false;\r\n                }\r\n            }\r\n            sprite.setPrivate(\"visible\", visible);\r\n            if (dataItem && angle != null && dataItem.get(\"autoRotate\", bullet.get(\"autoRotate\"))) {\r\n                sprite.set(\"rotation\", angle + dataItem.get(\"autoRotateAngle\", bullet.get(\"autoRotateAngle\", 0)));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Centers the map to specific series' data item and zooms to the level\r\n     * specified in the parameters.\r\n     *\r\n     * @param  dataItem   Map point\r\n     * @param  zoomLevel  Zoom level\r\n     * @param  rotate If it's true, the map will rotate so that this point would be in the center. Mostly usefull with geoOrthographic projection.\r\n     */\r\n    zoomToDataItem(dataItem, zoomLevel, rotate) {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            const longitude = dataItem.get(\"longitude\", 0);\r\n            const latitude = dataItem.get(\"latitude\", 0);\r\n            if (rotate) {\r\n                return chart.zoomToGeoPoint({ longitude: longitude, latitude: latitude }, zoomLevel, true, undefined, -longitude, -latitude);\r\n            }\r\n            return chart.zoomToGeoPoint({ longitude: longitude, latitude: latitude }, zoomLevel, true);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart.series.each((series) => {\r\n                if (series.isType(\"MapLineSeries\")) {\r\n                    $array.each(series.dataItems, (di) => {\r\n                        const pointsToConnect = di.get(\"pointsToConnect\");\r\n                        if (pointsToConnect) {\r\n                            $array.each(pointsToConnect, (point) => {\r\n                                if (point == dataItem) {\r\n                                    $array.remove(pointsToConnect, point);\r\n                                    series.markDirtyValues(di);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        super.disposeDataItem(dataItem);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _excludeDataItem(dataItem) {\r\n        super._excludeDataItem(dataItem);\r\n        const bullets = dataItem.bullets;\r\n        if (bullets) {\r\n            $array.each(bullets, (bullet) => {\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setPrivate(\"visible\", false);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _unexcludeDataItem(dataItem) {\r\n        super._unexcludeDataItem(dataItem);\r\n        const bullets = dataItem.bullets;\r\n        if (bullets) {\r\n            $array.each(bullets, (bullet) => {\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setPrivate(\"visible\", true);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _notIncludeDataItem(dataItem) {\r\n        super._notIncludeDataItem(dataItem);\r\n        const bullets = dataItem.bullets;\r\n        if (bullets) {\r\n            $array.each(bullets, (bullet) => {\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setPrivate(\"visible\", false);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _unNotIncludeDataItem(dataItem) {\r\n        super._unNotIncludeDataItem(dataItem);\r\n        const bullets = dataItem.bullets;\r\n        if (bullets) {\r\n            $array.each(bullets, (bullet) => {\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setPrivate(\"visible\", true);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(MapPointSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"MapPointSeries\"\r\n});\r\nObject.defineProperty(MapPointSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: MapSeries.classNames.concat([MapPointSeries.className])\r\n});\r\n","import { Graphics } from \"../../core/render/Graphics\";\r\nimport * as $mapUtils from \"./MapUtils\";\r\nimport $polylabel from \"polylabel\";\r\nimport { geoArea } from \"d3-geo\";\r\n/**\r\n * A polygon in a [[MapPolygonSeries]].\r\n */\r\nexport class MapPolygon extends Graphics {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_projectionDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A [[MapPolygonSeries]] polygon belongs to.\r\n         */\r\n        Object.defineProperty(this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this._projectionDirty || this.isDirty(\"geometry\") || this.isDirty(\"precision\")) {\r\n            const geometry = this.get(\"geometry\");\r\n            if (geometry) {\r\n                const series = this.series;\r\n                if (series) {\r\n                    const projection = series.projection();\r\n                    if (projection) {\r\n                        projection.precision(this.get(\"precision\", 0.5));\r\n                    }\r\n                    const geoPath = series.geoPath();\r\n                    if (geoPath) {\r\n                        this._clear = true;\r\n                        this.set(\"draw\", (_display) => {\r\n                            geoPath.context(this._display);\r\n                            geoPath(geometry);\r\n                            geoPath.context(null);\r\n                        });\r\n                        if (this.isHover()) {\r\n                            this.showTooltip();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyProjection() {\r\n        this.markDirty();\r\n        this._projectionDirty = true;\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._projectionDirty = false;\r\n    }\r\n    /**\r\n     * Returns latitude/longitude of the geometrical center of the polygon.\r\n     *\r\n     * @return Center\r\n     */\r\n    geoCentroid() {\r\n        const geometry = this.get(\"geometry\");\r\n        if (geometry) {\r\n            return $mapUtils.getGeoCentroid(geometry);\r\n        }\r\n        else {\r\n            return { latitude: 0, longitude: 0 };\r\n        }\r\n    }\r\n    /**\r\n     * Returns latitude/longitude of the visual center of the polygon.\r\n     *\r\n     * @return Center\r\n     */\r\n    visualCentroid() {\r\n        let biggestArea = 0;\r\n        let coordinates = [];\r\n        const geometry = this.get(\"geometry\");\r\n        if (geometry) {\r\n            if (geometry.type == \"Polygon\") {\r\n                coordinates = geometry.coordinates;\r\n            }\r\n            else if (geometry.type == \"MultiPolygon\") {\r\n                for (let i = 0; i < geometry.coordinates.length; i++) {\r\n                    let coords = geometry.coordinates[i];\r\n                    let area = geoArea({ type: \"Polygon\", coordinates: coords });\r\n                    if (area > biggestArea) {\r\n                        coordinates = coords;\r\n                        biggestArea = area;\r\n                    }\r\n                }\r\n            }\r\n            let center = $polylabel(coordinates);\r\n            return { longitude: center[0], latitude: center[1] };\r\n        }\r\n        return { longitude: 0, latitude: 0 };\r\n    }\r\n    _getTooltipPoint() {\r\n        const series = this.series;\r\n        if (series) {\r\n            const projection = series.projection();\r\n            if (projection) {\r\n                const geoPoint = this.visualCentroid();\r\n                const xy = projection([geoPoint.longitude, geoPoint.latitude]);\r\n                if (xy) {\r\n                    return { x: xy[0], y: xy[1] };\r\n                }\r\n            }\r\n        }\r\n        return { x: 0, y: 0 };\r\n    }\r\n}\r\nObject.defineProperty(MapPolygon, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"MapPolygon\"\r\n});\r\nObject.defineProperty(MapPolygon, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([MapPolygon.className])\r\n});\r\n","import { MapSeries } from \"./MapSeries\";\r\nimport { MapPolygon } from \"./MapPolygon\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $mapUtils from \"./MapUtils\";\r\n/**\r\n * Creates a map series for displaying polygons.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-polygon-series/} for more info\r\n * @important\r\n */\r\nexport class MapPolygonSeries extends MapSeries {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[ListTemplate]] of all polygons in series.\r\n         *\r\n         * `mapPolygons.template` can also be used to configure polygons.\r\n         *\r\n         * @default new ListTemplate<MapPolygon>\r\n         */\r\n        Object.defineProperty(this, \"mapPolygons\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => MapPolygon._new(this._root, {}, [this.mapPolygons.template]))\r\n        });\r\n        Object.defineProperty(this, \"_types\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"Polygon\", \"MultiPolygon\"]\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeMapPolygon(dataItem) {\r\n        const mapPolygon = this.children.push(this.mapPolygons.make());\r\n        mapPolygon._setDataItem(dataItem);\r\n        this.mapPolygons.push(mapPolygon);\r\n        return mapPolygon;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyProjection() {\r\n        $array.each(this.dataItems, (dataItem) => {\r\n            let mapPolygon = dataItem.get(\"mapPolygon\");\r\n            if (mapPolygon) {\r\n                mapPolygon.markDirtyProjection();\r\n            }\r\n        });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"fill\")) {\r\n            this.mapPolygons.template.set(\"fill\", this.get(\"fill\"));\r\n        }\r\n        if (this.isDirty(\"stroke\")) {\r\n            this.mapPolygons.template.set(\"stroke\", this.get(\"stroke\"));\r\n        }\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        let mapPolygon = dataItem.get(\"mapPolygon\");\r\n        if (!mapPolygon) {\r\n            mapPolygon = this.makeMapPolygon(dataItem);\r\n        }\r\n        dataItem.set(\"mapPolygon\", mapPolygon);\r\n        let geometry = dataItem.get(\"geometry\");\r\n        if (geometry) {\r\n            if (this.get(\"reverseGeodata\")) {\r\n                const coordinates = geometry.coordinates;\r\n                if (coordinates) {\r\n                    for (let x = 0; x < geometry.coordinates.length; x++) {\r\n                        if (geometry.type == \"MultiPolygon\") {\r\n                            for (let y = 0; y < geometry.coordinates[x].length; y++) {\r\n                                geometry.coordinates[x][y].reverse();\r\n                            }\r\n                        }\r\n                        else {\r\n                            geometry.coordinates[x].reverse();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            mapPolygon.set(\"geometry\", geometry);\r\n        }\r\n        mapPolygon.series = this;\r\n        this._addGeometry(dataItem.get(\"geometry\"), this);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        const mapPolygon = dataItem.get(\"mapPolygon\");\r\n        if (mapPolygon) {\r\n            this.mapPolygons.removeValue(mapPolygon);\r\n            mapPolygon.dispose();\r\n        }\r\n        this._removeGeometry(dataItem.get(\"geometry\"));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _excludeDataItem(dataItem) {\r\n        super._excludeDataItem(dataItem);\r\n        const mapPolygon = dataItem.get(\"mapPolygon\");\r\n        if (mapPolygon) {\r\n            mapPolygon.setPrivate(\"visible\", false);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _unexcludeDataItem(dataItem) {\r\n        super._unexcludeDataItem(dataItem);\r\n        const mapPolygon = dataItem.get(\"mapPolygon\");\r\n        if (mapPolygon) {\r\n            mapPolygon.setPrivate(\"visible\", true);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _notIncludeDataItem(dataItem) {\r\n        super._notIncludeDataItem(dataItem);\r\n        const mapPolygon = dataItem.get(\"mapPolygon\");\r\n        if (mapPolygon) {\r\n            mapPolygon.setPrivate(\"visible\", false);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _unNotIncludeDataItem(dataItem) {\r\n        super._unNotIncludeDataItem(dataItem);\r\n        const mapPolygon = dataItem.get(\"mapPolygon\");\r\n        if (mapPolygon) {\r\n            mapPolygon.setPrivate(\"visible\", true);\r\n        }\r\n    }\r\n    /**\r\n     * Forces a repaint of the element which relies on data.\r\n     *\r\n     * @since 5.0.21\r\n     */\r\n    markDirtyValues(dataItem) {\r\n        super.markDirtyValues();\r\n        if (dataItem) {\r\n            const mapPolygon = dataItem.get(\"mapPolygon\");\r\n            if (mapPolygon) {\r\n                mapPolygon.set(\"geometry\", dataItem.get(\"geometry\"));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Centers and zooms in on the specific polygon.\r\n     *\r\n     * @param  dataItem  Target data item\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Zooming_to_clicked_object} for more info\r\n     * @param  rotate If it's true, the map will rotate so that this polygon would be in the center. Mostly usefull with geoOrthographic projection.\r\n     */\r\n    zoomToDataItem(dataItem, rotate) {\r\n        const polygon = dataItem.get(\"mapPolygon\");\r\n        if (polygon) {\r\n            const geometry = polygon.get(\"geometry\");\r\n            const chart = this.chart;\r\n            if (geometry && chart) {\r\n                if (rotate) {\r\n                    const centroid = $mapUtils.getGeoCentroid(geometry);\r\n                    chart.rotate(-centroid.longitude, -centroid.latitude);\r\n                    return chart.zoomToGeoBounds($mapUtils.getGeoBounds(geometry), undefined, -centroid.longitude, -centroid.latitude);\r\n                }\r\n                return chart.zoomToGeoBounds($mapUtils.getGeoBounds(geometry));\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(MapPolygonSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"MapPolygonSeries\"\r\n});\r\nObject.defineProperty(MapPolygonSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: MapSeries.classNames.concat([MapPolygonSeries.className])\r\n});\r\n","import { Series } from \"../../core/render/Series\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $object from \"../../core/util/Object\";\r\n/**\r\n * Base class for map series.\r\n */\r\nexport class MapSeries extends Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_types\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_geometries\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_geoJSONparsed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_excluded\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_notIncluded\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.fields.push(\"geometry\", \"geometryType\");\r\n        this._setRawDefault(\"geometryField\", \"geometry\");\r\n        this._setRawDefault(\"geometryTypeField\", \"geometryType\");\r\n        this._setRawDefault(\"idField\", \"id\");\r\n        this.on(\"geoJSON\", (geoJSON) => {\r\n            let previous = this._prevSettings.geoJSON;\r\n            if (previous && previous != geoJSON) {\r\n                this.data.clear();\r\n            }\r\n        });\r\n        super._afterNew();\r\n    }\r\n    _handleDirties() {\r\n        const geoJSON = this.get(\"geoJSON\");\r\n        let previous = this._prevSettings.geoJSON;\r\n        if (previous && previous != geoJSON) {\r\n            this._prevSettings.geoJSON = undefined;\r\n            this._geoJSONparsed = false;\r\n        }\r\n        if (!this._geoJSONparsed) {\r\n            this._parseGeoJSON();\r\n            this._geoJSONparsed = true;\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this._valuesDirty) {\r\n            this._handleDirties();\r\n        }\r\n        if (this.isDirty(\"geoJSON\") || this.isDirty(\"include\") || this.isDirty(\"exclude\")) {\r\n            this._handleDirties();\r\n            const chart = this.chart;\r\n            const exclude = this.get(\"exclude\");\r\n            if (exclude) {\r\n                if (chart) {\r\n                    chart._centerLocation = null;\r\n                }\r\n                $array.each(exclude, (id) => {\r\n                    const dataItem = this.getDataItemById(id);\r\n                    if (dataItem) {\r\n                        this._excludeDataItem(dataItem);\r\n                    }\r\n                });\r\n            }\r\n            if (!exclude || exclude.length == 0) {\r\n                $array.each(this._excluded, (dataItem) => {\r\n                    this._unexcludeDataItem(dataItem);\r\n                });\r\n                this._excluded = [];\r\n            }\r\n            const include = this.get(\"include\");\r\n            if (include) {\r\n                if (chart) {\r\n                    chart._centerLocation = null;\r\n                }\r\n                $array.each(this.dataItems, (dataItem) => {\r\n                    const id = dataItem.get(\"id\");\r\n                    if (id && include.indexOf(id) == -1) {\r\n                        this._notIncludeDataItem(dataItem);\r\n                    }\r\n                    else {\r\n                        this._unNotIncludeDataItem(dataItem);\r\n                    }\r\n                });\r\n            }\r\n            if (!include) {\r\n                $array.each(this._notIncluded, (dataItem) => {\r\n                    this._unNotIncludeDataItem(dataItem);\r\n                });\r\n                this._notIncluded = [];\r\n            }\r\n        }\r\n    }\r\n    _excludeDataItem(dataItem) {\r\n        this._removeGeometry(dataItem.get(\"geometry\"));\r\n        $array.move(this._excluded, dataItem);\r\n    }\r\n    _unexcludeDataItem(dataItem) {\r\n        this._addGeometry(dataItem.get(\"geometry\"), this);\r\n    }\r\n    _notIncludeDataItem(dataItem) {\r\n        this._removeGeometry(dataItem.get(\"geometry\"));\r\n        $array.move(this._notIncluded, dataItem);\r\n    }\r\n    _unNotIncludeDataItem(dataItem) {\r\n        this._addGeometry(dataItem.get(\"geometry\"), this);\r\n    }\r\n    checkInclude(id, includes, excludes) {\r\n        if (includes) {\r\n            if (includes.length == 0) {\r\n                return false;\r\n            }\r\n            else {\r\n                if (includes.indexOf(id) == -1) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        if (excludes && excludes.length > 0) {\r\n            if (excludes.indexOf(id) != -1) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    _parseGeoJSON() {\r\n        const geoJSON = this.get(\"geoJSON\");\r\n        if (geoJSON) {\r\n            let features;\r\n            if (geoJSON.type == \"FeatureCollection\") {\r\n                features = geoJSON.features;\r\n            }\r\n            else if (geoJSON.type == \"Feature\") {\r\n                features = [geoJSON];\r\n            }\r\n            else if ([\"Point\", \"LineString\", \"Polygon\", \"MultiPoint\", \"MultiLineString\", \"MultiPolygon\"].indexOf(geoJSON.type) != -1) {\r\n                features = [{ geometry: geoJSON }];\r\n            }\r\n            else {\r\n                console.log(\"nothing found in geoJSON\");\r\n            }\r\n            const geodataNames = this.get(\"geodataNames\");\r\n            if (features) {\r\n                const idField = this.get(\"idField\", \"id\");\r\n                for (let i = 0, len = features.length; i < len; i++) {\r\n                    let feature = features[i];\r\n                    let geometry = feature.geometry;\r\n                    if (geometry) {\r\n                        let type = geometry.type;\r\n                        let id = feature[idField];\r\n                        if (geodataNames && geodataNames[id]) {\r\n                            feature.properties.name = geodataNames[id];\r\n                        }\r\n                        if (this._types.indexOf(type) != -1) {\r\n                            //if (!this.checkInclude(id, this.get(\"include\"), this.get(\"exclude\"))) {\r\n                            //\tcontinue;\r\n                            //}\r\n                            let dataItem;\r\n                            if (id != null) {\r\n                                // find data object in user-provided data\r\n                                dataItem = $array.find(this.dataItems, (value) => {\r\n                                    return value.get(\"id\") == id;\r\n                                });\r\n                            }\r\n                            let dataObject;\r\n                            if (dataItem) {\r\n                                dataObject = dataItem.dataContext;\r\n                            }\r\n                            // create one if not found\r\n                            if (!dataItem) {\r\n                                dataObject = { geometry: geometry, geometryType: type, madeFromGeoData: true };\r\n                                dataObject[idField] = id;\r\n                                this.data.push(dataObject);\r\n                            }\r\n                            // in case found\r\n                            else {\r\n                                // if user-provided object doesn't have points data provided in any way:\r\n                                if (!dataObject.geometry) {\r\n                                    dataObject.geometry = geometry;\r\n                                    dataObject.geometryType = type;\r\n                                    dataItem.set(\"geometry\", geometry);\r\n                                    dataItem.set(\"geometryType\", type);\r\n                                    this.processDataItem(dataItem);\r\n                                }\r\n                            }\r\n                            // copy properties data to datacontext\r\n                            $object.softCopyProperties(feature.properties, dataObject);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            const type = \"geodataprocessed\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this });\r\n            }\r\n        }\r\n    }\r\n    _placeBulletsContainer(_chart) {\r\n        this.children.moveValue(this.bulletsContainer);\r\n    }\r\n    _removeBulletsContainer() {\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    projection() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            return chart.get(\"projection\");\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    geoPath() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            return chart.getPrivate(\"geoPath\");\r\n        }\r\n    }\r\n    _addGeometry(geometry, series) {\r\n        if (geometry && series.get(\"affectsBounds\", true)) {\r\n            this._geometries.push(geometry);\r\n            const chart = this.chart;\r\n            if (chart) {\r\n                chart.markDirtyGeometries();\r\n            }\r\n        }\r\n    }\r\n    _removeGeometry(geometry) {\r\n        if (geometry) {\r\n            $array.remove(this._geometries, geometry);\r\n            const chart = this.chart;\r\n            if (chart) {\r\n                chart.markDirtyGeometries();\r\n            }\r\n        }\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart.series.removeValue(this);\r\n        }\r\n    }\r\n    _onDataClear() {\r\n        super._onDataClear();\r\n        this._geoJSONparsed = false;\r\n    }\r\n}\r\nObject.defineProperty(MapSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"MapSeries\"\r\n});\r\nObject.defineProperty(MapSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Series.classNames.concat([MapSeries.className])\r\n});\r\n","import * as $math from \"../../core/util/Math\";\r\nimport { geoCircle, geoCentroid, geoBounds, geoArea } from \"d3-geo\";\r\n/**\r\n * Returns a GeoJSON representation of a circle, suitable for use as `geometry` value\r\n * in a [[MapPolygon]] in a [[MapPolygonSeries]].\r\n *\r\n * @param   geoPoint  Coordinates\r\n * @param   radius    Circle radius in degrees\r\n * @return            Polygon geometry\r\n */\r\nexport function getGeoCircle(geoPoint, radius) {\r\n    return geoCircle().center([geoPoint.longitude, geoPoint.latitude]).radius(radius)();\r\n}\r\n/**\r\n * Returns geo centroid of a geometry\r\n */\r\nexport function getGeoCentroid(geometry) {\r\n    const centroid = geoCentroid(geometry);\r\n    return { longitude: centroid[0], latitude: centroid[1] };\r\n}\r\n/**\r\n * Returns geo area of a geometry\r\n */\r\nexport function getGeoArea(geometry) {\r\n    return geoArea(geometry);\r\n}\r\n/**\r\n * Returns bounds of a geometry\r\n */\r\nexport function getGeoBounds(geometry) {\r\n    const bounds = geoBounds(geometry);\r\n    if (bounds) {\r\n        const geoBounds = { left: bounds[0][0], right: bounds[1][0], top: bounds[1][1], bottom: bounds[0][1] };\r\n        if (geoBounds.right < geoBounds.left) {\r\n            geoBounds.right = 180;\r\n            geoBounds.left = -180;\r\n        }\r\n        return geoBounds;\r\n    }\r\n    return { left: 0, right: 0, top: 0, bottom: 0 };\r\n}\r\n/**\r\n * Returns a GeoJSON representation of a rectangle, suitable for use\r\n * as `geometry` value in a [[MapPolygon]] in a [[MapPolygonSeries]].\r\n *\r\n * @param   north  North latitude\r\n * @param   east   East longitude\r\n * @param   south  South latitude\r\n * @param   west   West longitude\r\n * @return         polygon geometry\r\n */\r\nexport function getGeoRectangle(north, east, south, west) {\r\n    let multiPolygon = [];\r\n    if (west <= -180) {\r\n        west = -179.9999;\r\n    }\r\n    if (south <= -90) {\r\n        south = -89.9999;\r\n    }\r\n    if (north >= 90) {\r\n        north = 89.9999;\r\n    }\r\n    if (east >= 180) {\r\n        east = 179.9999;\r\n    }\r\n    let stepLong = Math.min(90, (east - west) / Math.ceil((east - west) / 90));\r\n    let stepLat = (north - south) / Math.ceil((north - south) / 90);\r\n    for (let ln = west; ln < east; ln = ln + stepLong) {\r\n        let surface = [];\r\n        multiPolygon.push([surface]);\r\n        if (ln + stepLong > east) {\r\n            stepLong = east - ln;\r\n        }\r\n        for (let ll = ln; ll <= ln + stepLong; ll = ll + 5) {\r\n            surface.push([ll, north]);\r\n        }\r\n        for (let lt = north; lt >= south; lt = lt - stepLat) {\r\n            surface.push([ln + stepLong, lt]);\r\n        }\r\n        for (let ll = ln + stepLong; ll >= ln; ll = ll - 5) {\r\n            surface.push([ll, south]);\r\n        }\r\n        for (let lt = south; lt <= north; lt = lt + stepLat) {\r\n            surface.push([ln, lt]);\r\n        }\r\n    }\r\n    return { type: \"MultiPolygon\", coordinates: multiPolygon };\r\n}\r\n/**\r\n * Update longitudes and latitudes that wrap around -180/180 and -90/90 values.\r\n *\r\n * @param   geoPoint  Input coordinates\r\n * @return            Updated coordinates\r\n */\r\nexport function normalizeGeoPoint(geoPoint) {\r\n    let longitude = wrapAngleTo180(geoPoint.longitude);\r\n    let latitude = Math.asin(Math.sin((geoPoint.latitude * $math.RADIANS))) * $math.DEGREES;\r\n    let latitude180 = wrapAngleTo180(geoPoint.latitude);\r\n    if (Math.abs(latitude180) > 90) {\r\n        longitude = wrapAngleTo180(longitude + 180);\r\n    }\r\n    geoPoint.longitude = longitude;\r\n    geoPoint.latitude = latitude;\r\n    return geoPoint;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function wrapAngleTo180(angle) {\r\n    angle = angle % 360;\r\n    if (angle > 180) {\r\n        angle -= 360;\r\n    }\r\n    if (angle < -180) {\r\n        angle += 360;\r\n    }\r\n    return angle;\r\n}\r\n","import { Container } from \"../../core/render/Container\";\r\nimport { Button } from \"../../core/render/Button\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { MultiDisposer } from \"../../core/util/Disposer\";\r\n/**\r\n * A control that displays button for zooming [[MapChart]] in and out.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Zoom_control} for more information\r\n * @important\r\n */\r\nexport class ZoomControl extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Button]] for zoom in.\r\n         *\r\n         * @default Button.new()\r\n         */\r\n        Object.defineProperty(this, \"plusButton\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Button.new(this._root, { width: 36, height: 36, themeTags: [\"plus\"] }))\r\n        });\r\n        /**\r\n         * A [[Button]] for zoom out.\r\n         *\r\n         * @default Button.new()\r\n         */\r\n        Object.defineProperty(this, \"minusButton\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Button.new(this._root, { width: 36, height: 36, themeTags: [\"minus\"] }))\r\n        });\r\n        Object.defineProperty(this, \"_disposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.set(\"position\", \"absolute\");\r\n        this.set(\"layout\", this._root.verticalLayout);\r\n        this.set(\"themeTags\", [\"zoomcontrol\"]);\r\n        this.plusButton.setAll({\r\n            icon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\r\n            layout: undefined\r\n        });\r\n        this.minusButton.setAll({\r\n            icon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\r\n            layout: undefined\r\n        });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isPrivateDirty(\"chart\")) {\r\n            const chart = this.getPrivate(\"chart\");\r\n            const previous = this._prevPrivateSettings.chart;\r\n            if (chart) {\r\n                this._disposer = new MultiDisposer([\r\n                    this.plusButton.events.on(\"click\", () => {\r\n                        chart.zoomIn();\r\n                    }),\r\n                    this.minusButton.events.on(\"click\", () => {\r\n                        chart.zoomOut();\r\n                    })\r\n                ]);\r\n            }\r\n            if (previous && this._disposer) {\r\n                this._disposer.dispose();\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(ZoomControl, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ZoomControl\"\r\n});\r\nObject.defineProperty(ZoomControl, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([ZoomControl.className])\r\n});\r\n","import { RoundedRectangle } from \"../render/RoundedRectangle\";\r\nimport { Container } from \"./Container\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Draws an interactive button.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/buttons/} for more info\r\n * @important\r\n */\r\nexport class Button extends Container {\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"button\"]);\r\n        super._afterNew();\r\n        if (!this._settings.background) {\r\n            this.set(\"background\", RoundedRectangle.new(this._root, {\r\n                themeTags: $utils.mergeTags(this._settings.themeTags, [\"background\"])\r\n            }));\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"icon\")) {\r\n            const previous = this._prevSettings.icon;\r\n            const icon = this.get(\"icon\");\r\n            if (icon !== previous) {\r\n                this._disposeProperty(\"icon\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (icon) {\r\n                    this.children.push(icon);\r\n                }\r\n                this._prevSettings.icon = icon;\r\n            }\r\n        }\r\n        if (this.isDirty(\"label\")) {\r\n            const previous = this._prevSettings.label;\r\n            const label = this.get(\"label\");\r\n            if (label !== previous) {\r\n                this._disposeProperty(\"label\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (label) {\r\n                    this.children.push(label);\r\n                }\r\n                this._prevSettings.label = label;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Button, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Button\"\r\n});\r\nObject.defineProperty(Button, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Button.className])\r\n});\r\n","import { Container } from \"../../core/render/Container\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\n/**\r\n * A base class for all charts.\r\n */\r\nexport class Chart extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] chart places its elements in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"chartContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { width: p100, height: p100, interactiveChildren: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] chart places its bullets in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { interactiveChildren: false, isMeasured: false, position: \"absolute\", width: p100, height: p100 })\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(Chart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Chart\"\r\n});\r\nObject.defineProperty(Chart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Chart.className])\r\n});\r\n","import { Chart } from \"./Chart\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { ListAutoDispose } from \"../../core/util/List\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\n/**\r\n * A base class for all series-based charts.\r\n */\r\nexport class SerialChart extends Chart {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] where chart will store all series.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"seriesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, isMeasured: false })\r\n        });\r\n        /**\r\n         * A list of chart's series.\r\n         */\r\n        Object.defineProperty(this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._disposers.push(this.series);\r\n        const children = this.seriesContainer.children;\r\n        this._disposers.push(this.series.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (series) => {\r\n                    this._removeSeries(series);\r\n                });\r\n                const colors = this.get(\"colors\");\r\n                if (colors) {\r\n                    colors.reset();\r\n                }\r\n            }\r\n            else if (change.type === \"push\") {\r\n                children.moveValue(change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                children.setIndex(change.index, change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                children.insertIndex(change.index, change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._removeSeries(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                children.moveValue(change.value, change.newIndex);\r\n                this._processSeries(change.value);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        }));\r\n    }\r\n    _processSeries(series) {\r\n        series.chart = this;\r\n        series._placeBulletsContainer(this);\r\n    }\r\n    _removeSeries(series) {\r\n        if (!series.isDisposed()) {\r\n            this.seriesContainer.children.removeValue(series);\r\n            series._removeBulletsContainer();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(SerialChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"SerialChart\"\r\n});\r\nObject.defineProperty(SerialChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Chart.classNames.concat([SerialChart.className])\r\n});\r\n","export { GraticuleSeries } from \"./.internal/charts/map/GraticuleSeries\";\r\nexport { MapChart } from \"./.internal/charts/map/MapChart\";\r\nexport { MapLine } from \"./.internal/charts/map/MapLine\";\r\nexport { MapLineSeries } from \"./.internal/charts/map/MapLineSeries\";\r\nexport { MapPointSeries } from \"./.internal/charts/map/MapPointSeries\";\r\nexport { MapPolygon } from \"./.internal/charts/map/MapPolygon\";\r\nexport { MapPolygonSeries } from \"./.internal/charts/map/MapPolygonSeries\";\r\nexport { MapSeries } from \"./.internal/charts/map/MapSeries\";\r\nexport { ZoomControl } from \"./.internal/charts/map/ZoomControl\";\r\nexport { getGeoRectangle, getGeoCircle, normalizeGeoPoint, getGeoCentroid, getGeoBounds, getGeoArea } from \"./.internal/charts/map/MapUtils\";\r\nimport { geoMercator, geoOrthographic, geoEquirectangular, geoAlbersUsa, geoEqualEarth, geoNaturalEarth1 } from \"d3-geo\";\r\nexport { geoMercator, geoOrthographic, geoEquirectangular, geoAlbersUsa, geoEqualEarth, geoNaturalEarth1 };\r\nimport { MapChartDefaultTheme } from \"./.internal/charts/map/MapChartDefaultTheme\";\r\nexport { MapChartDefaultTheme as DefaultTheme };\r\n","'use strict';\n\nvar Queue = require('tinyqueue');\n\nif (Queue.default) Queue = Queue.default; // temporary webpack fix\n\nmodule.exports = polylabel;\nmodule.exports.default = polylabel;\n\nfunction polylabel(polygon, precision, debug) {\n    precision = precision || 1.0;\n\n    // find the bounding box of the outer ring\n    var minX, minY, maxX, maxY;\n    for (var i = 0; i < polygon[0].length; i++) {\n        var p = polygon[0][i];\n        if (!i || p[0] < minX) minX = p[0];\n        if (!i || p[1] < minY) minY = p[1];\n        if (!i || p[0] > maxX) maxX = p[0];\n        if (!i || p[1] > maxY) maxY = p[1];\n    }\n\n    var width = maxX - minX;\n    var height = maxY - minY;\n    var cellSize = Math.min(width, height);\n    var h = cellSize / 2;\n\n    if (cellSize === 0) {\n        var degeneratePoleOfInaccessibility = [minX, minY];\n        degeneratePoleOfInaccessibility.distance = 0;\n        return degeneratePoleOfInaccessibility;\n    }\n\n    // a priority queue of cells in order of their \"potential\" (max distance to polygon)\n    var cellQueue = new Queue(undefined, compareMax);\n\n    // cover polygon with initial cells\n    for (var x = minX; x < maxX; x += cellSize) {\n        for (var y = minY; y < maxY; y += cellSize) {\n            cellQueue.push(new Cell(x + h, y + h, h, polygon));\n        }\n    }\n\n    // take centroid as the first best guess\n    var bestCell = getCentroidCell(polygon);\n\n    // special case for rectangular polygons\n    var bboxCell = new Cell(minX + width / 2, minY + height / 2, 0, polygon);\n    if (bboxCell.d > bestCell.d) bestCell = bboxCell;\n\n    var numProbes = cellQueue.length;\n\n    while (cellQueue.length) {\n        // pick the most promising cell from the queue\n        var cell = cellQueue.pop();\n\n        // update the best cell if we found a better one\n        if (cell.d > bestCell.d) {\n            bestCell = cell;\n            if (debug) console.log('found best %d after %d probes', Math.round(1e4 * cell.d) / 1e4, numProbes);\n        }\n\n        // do not drill down further if there's no chance of a better solution\n        if (cell.max - bestCell.d <= precision) continue;\n\n        // split the cell into four cells\n        h = cell.h / 2;\n        cellQueue.push(new Cell(cell.x - h, cell.y - h, h, polygon));\n        cellQueue.push(new Cell(cell.x + h, cell.y - h, h, polygon));\n        cellQueue.push(new Cell(cell.x - h, cell.y + h, h, polygon));\n        cellQueue.push(new Cell(cell.x + h, cell.y + h, h, polygon));\n        numProbes += 4;\n    }\n\n    if (debug) {\n        console.log('num probes: ' + numProbes);\n        console.log('best distance: ' + bestCell.d);\n    }\n\n    var poleOfInaccessibility = [bestCell.x, bestCell.y];\n    poleOfInaccessibility.distance = bestCell.d;\n    return poleOfInaccessibility;\n}\n\nfunction compareMax(a, b) {\n    return b.max - a.max;\n}\n\nfunction Cell(x, y, h, polygon) {\n    this.x = x; // cell center x\n    this.y = y; // cell center y\n    this.h = h; // half the cell size\n    this.d = pointToPolygonDist(x, y, polygon); // distance from cell center to polygon\n    this.max = this.d + this.h * Math.SQRT2; // max distance to polygon within a cell\n}\n\n// signed distance from point to polygon outline (negative if point is outside)\nfunction pointToPolygonDist(x, y, polygon) {\n    var inside = false;\n    var minDistSq = Infinity;\n\n    for (var k = 0; k < polygon.length; k++) {\n        var ring = polygon[k];\n\n        for (var i = 0, len = ring.length, j = len - 1; i < len; j = i++) {\n            var a = ring[i];\n            var b = ring[j];\n\n            if ((a[1] > y !== b[1] > y) &&\n                (x < (b[0] - a[0]) * (y - a[1]) / (b[1] - a[1]) + a[0])) inside = !inside;\n\n            minDistSq = Math.min(minDistSq, getSegDistSq(x, y, a, b));\n        }\n    }\n\n    return minDistSq === 0 ? 0 : (inside ? 1 : -1) * Math.sqrt(minDistSq);\n}\n\n// get polygon centroid\nfunction getCentroidCell(polygon) {\n    var area = 0;\n    var x = 0;\n    var y = 0;\n    var points = polygon[0];\n\n    for (var i = 0, len = points.length, j = len - 1; i < len; j = i++) {\n        var a = points[i];\n        var b = points[j];\n        var f = a[0] * b[1] - b[0] * a[1];\n        x += (a[0] + b[0]) * f;\n        y += (a[1] + b[1]) * f;\n        area += f * 3;\n    }\n    if (area === 0) return new Cell(points[0][0], points[0][1], 0, polygon);\n    return new Cell(x / area, y / area, 0, polygon);\n}\n\n// get squared distance from a point to a segment\nfunction getSegDistSq(px, py, a, b) {\n\n    var x = a[0];\n    var y = a[1];\n    var dx = b[0] - x;\n    var dy = b[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = b[0];\n            y = b[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n","\nexport default class TinyQueue {\n    constructor(data = [], compare = defaultCompare) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let left = (pos << 1) + 1;\n            let best = data[left];\n            const right = left + 1;\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n"],"names":["MapLineSeries","geoGraticule","GraticuleSeries","constructor","arguments","Object","defineProperty","enumerable","configurable","writable","value","makeDataItem","_afterNew","dataItems","push","_dataItem","_generate","_updateChildren","isDirty","get","chart","events","on","graticule","geoBounds","extent","left","bottom","right","top","step","stepMinor","stepMajor","set","classNames","concat","className","MapChartDefaultTheme","SerialChart","Rectangle","geoPath","Color","registry","$math","$array","$type","$mapUtils","$object","$utils","MapChart","type","geometries","longitude","latitude","_makeGeoPath","projection","path","setPrivateRaw","geoPoint","invert","seriesContainer","toGlobal","x","width","y","height","geoCentroid","_geoCentroid","_geoBounds","_handleSetWheel","wheelX","wheelY","chartContainer","_wheelDp","dispose","event","wheelEasing","wheelSensitivity","wheelDuration","wheelEvent","originalEvent","isLocalEvent","preventDefault","point","_display","toLocal","_handleWheelZoom","deltaY","_handleWheelRotateY","_handleWheelRotateX","deltaX","_disposers","_prepareChildren","w","innerWidth","h","innerHeight","previousGeometries","_geometryColection","markDirtyProjection","_fitMap","scale","getPrivate","rotate","prev","_prevSettings","hw","hh","centerLocation","xy","translate","xx","yy","setRaw","_dirtyGeometries","series","each","pushAll","_geometries","length","_pw","_ph","fitSize","newScale","_centerLocation","_centerX","_centerY","_mapBounds","bounds","previous","zoomControl","_disposeProperty","setPrivate","children","isType","dataItem","bullets","bullet","sprite","_setUpTouch","getGeoCentroid","getGeoBounds","round","prevGeoBounds","_prevGeoBounds","sameBounds","_dispatchBounds","_mapFitted","homeGeoPoint","goHome","duration","zoomToGeoPoint","_afterChanged","isEnabled","dispatch","target","cancelTouch","markDirtyGeometries","markDirty","_defaultThemes","new","_root","_settings","themeTags","mergeTags","bulletsContainer","fill","fromHex","fillOpacity","_handleChartDown","_handleChartUp","_handleChartMove","license","i","licenses","match","_showBranding","_downZoomLevel","count","keys","_downPoints","downPoint","_downTranslateX","_downTranslateY","_downRotationX","_downRotationY","_downRotationZ","downId","_getDownPointId","movePoint","_movePoints","bg","enableType","_za","stop","_txa","_tya","_rxa","_rya","l0","l1","_pLon","Math","abs","_pLat","ll","convert","rotationX","rotationY","undefined","rotation","_event","_handlePinch","downPoints","movePoints","k","display","downPoint0","downPoint1","movePoint0","movePoint1","initialDistance","hypot","currentDistance","level","fitToRange","moveCenter","downCenter","tx","ty","zoomLevel","_getDownPoint","downPointId","pointerId","panX","panY","local","disableType","isNumber","maxPanOut","ww","cx","min","max","cy","downLocation","location","delta","easing","animate","key","to","newZoomLevel","zoomToPoint","zoomToGeoBounds","mapBounds","p0","p1","zl","center","readerAlert","_t","locale","numberToString","zoomIn","zoomOut","_clearDirty","getArea","geometry","area","Theme","p50","p100","setColor","geoMercator","$ease","setupDefaultRules","ic","interfaceColors","r","rule","bind","setAll","pinchZoom","zoomStep","rotationZ","maxZoomLevel","minZoomLevel","animationEasing","out","cubic","centerMapOnZoomOut","precision","role","affectsBounds","clipFront","clipBack","autoScale","isMeasured","position","strokeWidth","strokeOpacity","marginTop","marginBottom","draw","moveTo","lineTo","centerX","centerY","paddingRight","paddingBottom","Percent","Graphics","geoLength","geoInterpolate","geoDistance","MapLine","_beforeChanged","_projectionDirty","clipAngle","_clear","coordinates","segments","s","segment","gp0","p","gp","pn","context","_getTooltipPoint","tooltipX","tooltipY","positionToGeoPoint","lineType","totalDistance","distanceAB","positionA","positionB","pointA","pointB","positionAB","MapSeries","ListTemplate","Template","_new","mapLines","template","fields","_setRawDefault","makeMapLine","mapLine","make","_setDataItem","processDataItem","_handlePointsToConnect","_addGeometry","pointsToConnect","markDirtyValues","coords","disposeDataItem","removeValue","_excludeDataItem","_unexcludeDataItem","_notIncludeDataItem","_unNotIncludeDataItem","MapPointSeries","_positionBullets","_makeBullets","bulletFunction","_setBulletParent","_makeBullet","parent","moveValue","_positionBullet","lineDataItem","fixed","line","lineId","lineDI","getDataItemById","_lineChangedDp","polygonDataItem","polygon","polygonId","polygonDI","positionOnLine","angle","visualCentroid","geoPoint0","geoPoint1","point0","point1","getAngle","_positionBulletReal","index","_index","visible","zoomToDataItem","di","remove","$polylabel","geoArea","MapPolygon","isHover","showTooltip","biggestArea","MapPolygonSeries","mapPolygons","makeMapPolygon","mapPolygon","reverse","_removeGeometry","centroid","Series","geoJSON","data","clear","_handleDirties","_geoJSONparsed","_parseGeoJSON","_valuesDirty","exclude","id","_excluded","include","indexOf","_notIncluded","move","checkInclude","includes","excludes","features","console","log","geodataNames","idField","len","feature","properties","name","_types","find","dataObject","dataContext","geometryType","madeFromGeoData","softCopyProperties","_placeBulletsContainer","_chart","_removeBulletsContainer","_dispose","_onDataClear","geoCircle","getGeoCircle","radius","getGeoArea","getGeoRectangle","north","east","south","west","multiPolygon","stepLong","ceil","stepLat","ln","surface","lt","normalizeGeoPoint","wrapAngleTo180","asin","sin","RADIANS","DEGREES","latitude180","Container","Button","MultiDisposer","ZoomControl","verticalLayout","plusButton","icon","layout","minusButton","isPrivateDirty","_prevPrivateSettings","_disposer","RoundedRectangle","background","label","Chart","interactiveChildren","ListAutoDispose","onAll","change","oldValues","_removeSeries","colors","reset","newValue","_processSeries","setIndex","insertIndex","oldValue","newIndex","Error","isDisposed","geoOrthographic","geoEquirectangular","geoAlbersUsa","geoEqualEarth","geoNaturalEarth1","DefaultTheme","Queue","require","default","module","exports","polylabel","debug","minX","minY","maxX","maxY","cellSize","degeneratePoleOfInaccessibility","distance","cellQueue","compareMax","Cell","bestCell","getCentroidCell","bboxCell","d","numProbes","cell","pop","poleOfInaccessibility","a","b","pointToPolygonDist","SQRT2","inside","minDistSq","Infinity","ring","j","getSegDistSq","sqrt","points","f","px","py","dx","dy","t","TinyQueue","compare","defaultCompare","_down","item","_up","peek","pos","current","halfLength","best"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]}