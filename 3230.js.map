{"version":3,"file":"3230.js","mappings":"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","sources":["./node_modules/rxjs/dist/esm/internal/operators/OperatorSubscriber.js","./node_modules/rxjs/dist/esm/internal/util/lift.js","./node_modules/@angular/material/fesm2022/legacy-autocomplete.mjs"],"sourcesContent":["import { Subscriber } from '../Subscriber';\nexport function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {\n    return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\nexport class OperatorSubscriber extends Subscriber {\n    constructor(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {\n        super(destination);\n        this.onFinalize = onFinalize;\n        this.shouldUnsubscribe = shouldUnsubscribe;\n        this._next = onNext\n            ? function (value) {\n                try {\n                    onNext(value);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n            }\n            : super._next;\n        this._error = onError\n            ? function (err) {\n                try {\n                    onError(err);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : super._error;\n        this._complete = onComplete\n            ? function () {\n                try {\n                    onComplete();\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : super._complete;\n    }\n    unsubscribe() {\n        var _a;\n        if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n            const { closed } = this;\n            super.unsubscribe();\n            !closed && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));\n        }\n    }\n}\n","import { isFunction } from './isFunction';\nexport function hasLift(source) {\n    return isFunction(source === null || source === void 0 ? void 0 : source.lift);\n}\nexport function operate(init) {\n    return (source) => {\n        if (hasLift(source)) {\n            return source.lift(function (liftedSource) {\n                try {\n                    return init(liftedSource, this);\n                }\n                catch (err) {\n                    this.error(err);\n                }\n            });\n        }\n        throw new TypeError('Unable to lift unknown Observable type');\n    };\n}\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, forwardRef, Directive, NgModule } from '@angular/core';\nimport { MAT_LEGACY_OPTION_PARENT_COMPONENT, MAT_LEGACY_OPTGROUP, MatLegacyOption, MatLegacyOptionModule } from '@angular/material/legacy-core';\nimport { _MatAutocompleteBase, _MatAutocompleteTriggerBase, _MatAutocompleteOriginBase, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER } from '@angular/material/autocomplete';\nexport { MAT_AUTOCOMPLETE_DEFAULT_OPTIONS as MAT_LEGACY_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY as MAT_LEGACY_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY as MAT_LEGACY_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY as MAT_LEGACY_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER as MAT_LEGACY_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MatAutocompleteSelectedEvent as MatLegacyAutocompleteSelectedEvent, getMatAutocompleteMissingPanelError as getMatLegacyAutocompleteMissingPanelError } from '@angular/material/autocomplete';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { MatCommonModule } from '@angular/material/core';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * @deprecated Use `MatAutocomplete` from `@angular/material/autocomplete` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyAutocomplete extends _MatAutocompleteBase {\n    constructor() {\n        super(...arguments);\n        this._visibleClass = 'mat-autocomplete-visible';\n        this._hiddenClass = 'mat-autocomplete-hidden';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyAutocomplete, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyAutocomplete, selector: \"mat-autocomplete\", inputs: { disableRipple: \"disableRipple\" }, host: { attributes: { \"ngSkipHydration\": \"\" }, classAttribute: \"mat-autocomplete\" }, providers: [{ provide: MAT_LEGACY_OPTION_PARENT_COMPONENT, useExisting: MatLegacyAutocomplete }], queries: [{ propertyName: \"optionGroups\", predicate: MAT_LEGACY_OPTGROUP, descendants: true }, { propertyName: \"options\", predicate: MatLegacyOption, descendants: true }], exportAs: [\"matAutocomplete\"], usesInheritance: true, ngImport: i0, template: \"<ng-template let-formFieldId=\\\"id\\\">\\n  <div class=\\\"mat-autocomplete-panel\\\"\\n       role=\\\"listbox\\\"\\n       [id]=\\\"id\\\"\\n       [attr.aria-label]=\\\"ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby(formFieldId)\\\"\\n       [ngClass]=\\\"_classList\\\"\\n       #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}mat-autocomplete{display:none}\"], dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyAutocomplete, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-autocomplete', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, exportAs: 'matAutocomplete', inputs: ['disableRipple'], host: {\n                        'class': 'mat-autocomplete',\n                        'ngSkipHydration': '',\n                    }, providers: [{ provide: MAT_LEGACY_OPTION_PARENT_COMPONENT, useExisting: MatLegacyAutocomplete }], template: \"<ng-template let-formFieldId=\\\"id\\\">\\n  <div class=\\\"mat-autocomplete-panel\\\"\\n       role=\\\"listbox\\\"\\n       [id]=\\\"id\\\"\\n       [attr.aria-label]=\\\"ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby(formFieldId)\\\"\\n       [ngClass]=\\\"_classList\\\"\\n       #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}mat-autocomplete{display:none}\"] }]\n        }], propDecorators: { optionGroups: [{\n                type: ContentChildren,\n                args: [MAT_LEGACY_OPTGROUP, { descendants: true }]\n            }], options: [{\n                type: ContentChildren,\n                args: [MatLegacyOption, { descendants: true }]\n            }] } });\n\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n * @deprecated Use `MAT_AUTOCOMPLETE_VALUE_ACCESSOR` from `@angular/material/autocomplete` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nconst MAT_LEGACY_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatLegacyAutocompleteTrigger),\n    multi: true,\n};\n/**\n * @deprecated Use `MatAutocompleteTrigger` from `@angular/material/autocomplete` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyAutocompleteTrigger extends _MatAutocompleteTriggerBase {\n    constructor() {\n        super(...arguments);\n        this._aboveClass = 'mat-autocomplete-panel-above';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyAutocompleteTrigger, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyAutocompleteTrigger, selector: \"input[matAutocomplete], textarea[matAutocomplete]\", host: { listeners: { \"focusin\": \"_handleFocus()\", \"blur\": \"_onTouched()\", \"input\": \"_handleInput($event)\", \"keydown\": \"_handleKeydown($event)\", \"click\": \"_handleClick()\" }, properties: { \"attr.autocomplete\": \"autocompleteAttribute\", \"attr.role\": \"autocompleteDisabled ? null : \\\"combobox\\\"\", \"attr.aria-autocomplete\": \"autocompleteDisabled ? null : \\\"list\\\"\", \"attr.aria-activedescendant\": \"(panelOpen && activeOption) ? activeOption.id : null\", \"attr.aria-expanded\": \"autocompleteDisabled ? null : panelOpen.toString()\", \"attr.aria-owns\": \"(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id\", \"attr.aria-haspopup\": \"autocompleteDisabled ? null : \\\"listbox\\\"\" }, classAttribute: \"mat-autocomplete-trigger\" }, providers: [MAT_LEGACY_AUTOCOMPLETE_VALUE_ACCESSOR], exportAs: [\"matAutocompleteTrigger\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyAutocompleteTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n                    host: {\n                        'class': 'mat-autocomplete-trigger',\n                        '[attr.autocomplete]': 'autocompleteAttribute',\n                        '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n                        '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n                        '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n                        '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n                        '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n                        '[attr.aria-haspopup]': 'autocompleteDisabled ? null : \"listbox\"',\n                        // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n                        // a little earlier. This avoids issues where IE delays the focusing of the input.\n                        '(focusin)': '_handleFocus()',\n                        '(blur)': '_onTouched()',\n                        '(input)': '_handleInput($event)',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(click)': '_handleClick()',\n                    },\n                    exportAs: 'matAutocompleteTrigger',\n                    providers: [MAT_LEGACY_AUTOCOMPLETE_VALUE_ACCESSOR],\n                }]\n        }] });\n\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n * @deprecated Use `MatAutocompleteOrigin` from `@angular/material/autocomplete` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyAutocompleteOrigin extends _MatAutocompleteOriginBase {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyAutocompleteOrigin, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyAutocompleteOrigin, selector: \"[matAutocompleteOrigin]\", exportAs: [\"matAutocompleteOrigin\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyAutocompleteOrigin, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matAutocompleteOrigin]',\n                    exportAs: 'matAutocompleteOrigin',\n                }]\n        }] });\n\n/**\n * @deprecated Use `MatAutocompleteModule` from `@angular/material/autocomplete` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyAutocompleteModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyAutocompleteModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyAutocompleteModule, declarations: [MatLegacyAutocomplete, MatLegacyAutocompleteTrigger, MatLegacyAutocompleteOrigin], imports: [OverlayModule, MatLegacyOptionModule, MatCommonModule, CommonModule], exports: [MatLegacyAutocomplete,\n            MatLegacyAutocompleteTrigger,\n            MatLegacyAutocompleteOrigin,\n            CdkScrollableModule,\n            MatLegacyOptionModule,\n            MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyAutocompleteModule, providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [OverlayModule, MatLegacyOptionModule, MatCommonModule, CommonModule, CdkScrollableModule,\n            MatLegacyOptionModule,\n            MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyAutocompleteModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, MatLegacyOptionModule, MatCommonModule, CommonModule],\n                    exports: [\n                        MatLegacyAutocomplete,\n                        MatLegacyAutocompleteTrigger,\n                        MatLegacyAutocompleteOrigin,\n                        CdkScrollableModule,\n                        MatLegacyOptionModule,\n                        MatCommonModule,\n                    ],\n                    declarations: [MatLegacyAutocomplete, MatLegacyAutocompleteTrigger, MatLegacyAutocompleteOrigin],\n                    providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_LEGACY_AUTOCOMPLETE_VALUE_ACCESSOR, MatLegacyAutocomplete, MatLegacyAutocompleteModule, MatLegacyAutocompleteOrigin, MatLegacyAutocompleteTrigger };\n"],"names":["Subscriber","createOperatorSubscriber","destination","onNext","onComplete","onError","onFinalize","OperatorSubscriber","constructor","shouldUnsubscribe","_next","value","err","error","_error","unsubscribe","_complete","_a","closed","call","isFunction","hasLift","source","lift","operate","init","liftedSource","TypeError","i0","Component","ViewEncapsulation","ChangeDetectionStrategy","ContentChildren","forwardRef","Directive","NgModule","MAT_LEGACY_OPTION_PARENT_COMPONENT","MAT_LEGACY_OPTGROUP","MatLegacyOption","MatLegacyOptionModule","_MatAutocompleteBase","_MatAutocompleteTriggerBase","_MatAutocompleteOriginBase","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS","MAT_LEGACY_AUTOCOMPLETE_DEFAULT_OPTIONS","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY","MAT_LEGACY_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY","MAT_AUTOCOMPLETE_SCROLL_STRATEGY","MAT_LEGACY_AUTOCOMPLETE_SCROLL_STRATEGY","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY","MAT_LEGACY_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY","MAT_LEGACY_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER","MatAutocompleteSelectedEvent","MatLegacyAutocompleteSelectedEvent","getMatAutocompleteMissingPanelError","getMatLegacyAutocompleteMissingPanelError","i1","CommonModule","OverlayModule","MatCommonModule","CdkScrollableModule","NG_VALUE_ACCESSOR","MatLegacyAutocomplete_ng_template_0_Template","rf","ctx","ɵɵelementStart","ɵɵprojection","ɵɵelementEnd","formFieldId_r1","id","ctx_r0","ɵɵnextContext","ɵɵproperty","_classList","ɵɵattribute","ariaLabel","_getPanelAriaLabelledby","_c0","MatLegacyAutocomplete","arguments","_visibleClass","_hiddenClass","_","ɵfac","ɵMatLegacyAutocomplete_BaseFactory","MatLegacyAutocomplete_Factory","t","ɵɵgetInheritedFactory","_2","ɵcmp","ɵɵdefineComponent","type","selectors","contentQueries","MatLegacyAutocomplete_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","optionGroups","options","hostAttrs","inputs","disableRipple","exportAs","features","ɵɵProvidersFeature","provide","useExisting","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","consts","template","MatLegacyAutocomplete_Template","ɵɵprojectionDef","ɵɵtemplate","dependencies","NgClass","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","None","OnPush","host","providers","descendants","MAT_LEGACY_AUTOCOMPLETE_VALUE_ACCESSOR","MatLegacyAutocompleteTrigger","multi","_aboveClass","ɵMatLegacyAutocompleteTrigger_BaseFactory","MatLegacyAutocompleteTrigger_Factory","ɵdir","ɵɵdefineDirective","hostVars","hostBindings","MatLegacyAutocompleteTrigger_HostBindings","ɵɵlistener","MatLegacyAutocompleteTrigger_focusin_HostBindingHandler","_handleFocus","MatLegacyAutocompleteTrigger_blur_HostBindingHandler","_onTouched","MatLegacyAutocompleteTrigger_input_HostBindingHandler","$event","_handleInput","MatLegacyAutocompleteTrigger_keydown_HostBindingHandler","_handleKeydown","MatLegacyAutocompleteTrigger_click_HostBindingHandler","_handleClick","autocompleteAttribute","autocompleteDisabled","panelOpen","activeOption","toString","autocomplete","MatLegacyAutocompleteOrigin","ɵMatLegacyAutocompleteOrigin_BaseFactory","MatLegacyAutocompleteOrigin_Factory","MatLegacyAutocompleteModule","MatLegacyAutocompleteModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","exports","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2]}