{"version":3,"file":"8682.js","mappings":"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","sources":["./node_modules/@amcharts/amcharts5/.internal/core/render/Series.js","./node_modules/@amcharts/amcharts5/.internal/core/util/Time.js"],"sourcesContent":["import { __awaiter } from \"tslib\";\r\nimport { Component } from \"../../core/render/Component\";\r\nimport { List } from \"../../core/util/List\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { percentInterpolate } from \"../../core/util/Animation\";\r\nimport { Percent } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $time from \"../../core/util/Time\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\n/**\r\n * A base class for all series.\r\n */\r\nexport class Series extends Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_aggregatesCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_selectionAggregatesCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataProcessed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_psi\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_pei\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A chart series belongs to.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * List of bullets to use for the series.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\r\n         */\r\n        Object.defineProperty(this, \"bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        /**\r\n         * A [[Container]] series' bullets are stored in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, position: \"absolute\" })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.valueFields.push(\"value\");\r\n        super._afterNew();\r\n        this.setPrivate(\"customData\", {});\r\n        this._disposers.push(this.bullets.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        }));\r\n    }\r\n    _dispose() {\r\n        this.bulletsContainer.dispose(); // can be in a different parent\r\n        super._dispose();\r\n    }\r\n    startIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(this.getPrivate(\"startIndex\", 0), len);\r\n    }\r\n    endIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(this.getPrivate(\"endIndex\", len), len);\r\n    }\r\n    _handleBullets(dataItems) {\r\n        $array.each(dataItems, (dataItem) => {\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    bullet.dispose();\r\n                });\r\n                dataItem.bullets = undefined;\r\n            }\r\n        });\r\n        this.markDirtyValues();\r\n    }\r\n    /**\r\n     * Looks up and returns a data item by its ID.\r\n     *\r\n     * @param   id  ID\r\n     * @return      Data item\r\n     */\r\n    getDataItemById(id) {\r\n        return $array.find(this.dataItems, (dataItem) => {\r\n            return dataItem.get(\"id\") == id;\r\n        });\r\n    }\r\n    _makeBullets(dataItem) {\r\n        if (this._shouldMakeBullet(dataItem)) {\r\n            dataItem.bullets = [];\r\n            this.bullets.each((bulletFunction) => {\r\n                this._makeBullet(dataItem, bulletFunction);\r\n            });\r\n        }\r\n    }\r\n    _shouldMakeBullet(_dataItem) {\r\n        return true;\r\n    }\r\n    _makeBullet(dataItem, bulletFunction, index) {\r\n        const bullet = bulletFunction(this._root, this, dataItem);\r\n        if (bullet) {\r\n            let sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite._setDataItem(dataItem);\r\n                sprite.setRaw(\"position\", \"absolute\");\r\n                this.bulletsContainer.children.push(sprite);\r\n            }\r\n            bullet._index = index;\r\n            bullet.series = this;\r\n            dataItem.bullets.push(bullet);\r\n        }\r\n        return bullet;\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._aggregatesCalculated = false;\r\n        this._selectionAggregatesCalculated = false;\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        let startIndex = this.startIndex();\r\n        let endIndex = this.endIndex();\r\n        if (this.isDirty(\"heatRules\")) {\r\n            this._valuesDirty = true;\r\n        }\r\n        if (this.isPrivateDirty(\"baseValueSeries\")) {\r\n            const baseValueSeries = this.getPrivate(\"baseValueSeries\");\r\n            if (baseValueSeries) {\r\n                this._disposers.push(baseValueSeries.onPrivate(\"startIndex\", () => {\r\n                    this.markDirtyValues();\r\n                }));\r\n            }\r\n        }\r\n        const calculateAggregates = this.get(\"calculateAggregates\");\r\n        if (calculateAggregates) {\r\n            if (this._valuesDirty && !this._dataProcessed) {\r\n                if (!this._aggregatesCalculated) {\r\n                    this._calculateAggregates(0, this.dataItems.length);\r\n                    this._aggregatesCalculated = true;\r\n                }\r\n            }\r\n            if ((this._psi != startIndex || this._pei != endIndex) && !this._selectionAggregatesCalculated) {\r\n                if (startIndex === 0 && endIndex === this.dataItems.length && this._aggregatesCalculated) {\r\n                    // void\r\n                }\r\n                else {\r\n                    this._calculateAggregates(startIndex, endIndex);\r\n                }\r\n                this._selectionAggregatesCalculated = true;\r\n            }\r\n        }\r\n        if (this.isDirty(\"tooltip\")) {\r\n            let tooltip = this.get(\"tooltip\");\r\n            if (tooltip) {\r\n                tooltip.hide(0);\r\n                tooltip.set(\"tooltipTarget\", this);\r\n            }\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"stroke\")) {\r\n            let markerRectangle;\r\n            const legendDataItem = this.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n                if (markerRectangle) {\r\n                    if (this.isVisible()) {\r\n                        if (this.isDirty(\"stroke\")) {\r\n                            let stroke = this.get(\"stroke\");\r\n                            markerRectangle.set(\"stroke\", stroke);\r\n                        }\r\n                        if (this.isDirty(\"fill\")) {\r\n                            let fill = this.get(\"fill\");\r\n                            markerRectangle.set(\"fill\", fill);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.updateLegendMarker(undefined);\r\n        }\r\n        if (this.bullets.length > 0) {\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            if (endIndex < this.dataItems.length) {\r\n                endIndex++;\r\n            }\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                let dataItem = this.dataItems[i];\r\n                if (!dataItem.bullets) {\r\n                    this._makeBullets(dataItem);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _calculateAggregates(startIndex, endIndex) {\r\n        let fields = this._valueFields;\r\n        if (!fields) {\r\n            throw new Error(\"No value fields are set for the series.\");\r\n        }\r\n        const sum = {};\r\n        const absSum = {};\r\n        const count = {};\r\n        const low = {};\r\n        const high = {};\r\n        const open = {};\r\n        const close = {};\r\n        const average = {};\r\n        const previous = {};\r\n        $array.each(fields, (key) => {\r\n            sum[key] = 0;\r\n            absSum[key] = 0;\r\n            count[key] = 0;\r\n        });\r\n        $array.each(fields, (key) => {\r\n            let change = key + \"Change\";\r\n            let changePercent = key + \"ChangePercent\";\r\n            let changePrevious = key + \"ChangePrevious\";\r\n            let changePreviousPercent = key + \"ChangePreviousPercent\";\r\n            let changeSelection = key + \"ChangeSelection\";\r\n            let changeSelectionPercent = key + \"ChangeSelectionPercent\";\r\n            let openKey = \"valueY\";\r\n            if (key == \"valueX\" || key == \"openValueX\" || key == \"lowValueX\" || key == \"highValueX\") {\r\n                openKey = \"valueX\";\r\n            }\r\n            const baseValueSeries = this.getPrivate(\"baseValueSeries\");\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                const dataItem = this.dataItems[i];\r\n                let value = dataItem.get(key);\r\n                if (value != null) {\r\n                    count[key]++;\r\n                    sum[key] += value;\r\n                    absSum[key] += Math.abs(value);\r\n                    average[key] = sum[key] / count[key];\r\n                    if (low[key] > value || low[key] == null) {\r\n                        low[key] = value;\r\n                    }\r\n                    if (high[key] < value || high[key] == null) {\r\n                        high[key] = value;\r\n                    }\r\n                    close[key] = value;\r\n                    if (open[key] == null) {\r\n                        open[key] = value;\r\n                        previous[key] = value;\r\n                        if (baseValueSeries) {\r\n                            open[openKey] = baseValueSeries._getBase(openKey);\r\n                        }\r\n                    }\r\n                    if (startIndex === 0) {\r\n                        dataItem.setRaw((change), value - open[openKey]);\r\n                        dataItem.setRaw((changePercent), (value - open[openKey]) / open[openKey] * 100);\r\n                    }\r\n                    dataItem.setRaw((changePrevious), value - previous[openKey]);\r\n                    dataItem.setRaw((changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\r\n                    dataItem.setRaw((changeSelection), value - open[openKey]);\r\n                    dataItem.setRaw((changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\r\n                    previous[key] = value;\r\n                }\r\n            }\r\n        });\r\n        $array.each(fields, (key) => {\r\n            this.setPrivate((key + \"AverageSelection\"), average[key]);\r\n            this.setPrivate((key + \"CountSelection\"), count[key]);\r\n            this.setPrivate((key + \"SumSelection\"), sum[key]);\r\n            this.setPrivate((key + \"AbsoluteSumSelection\"), absSum[key]);\r\n            this.setPrivate((key + \"LowSelection\"), low[key]);\r\n            this.setPrivate((key + \"HighSelection\"), high[key]);\r\n            this.setPrivate((key + \"OpenSelection\"), open[key]);\r\n            this.setPrivate((key + \"CloseSelection\"), close[key]);\r\n        });\r\n        if (startIndex === 0 && endIndex === this.dataItems.length) {\r\n            $array.each(fields, (key) => {\r\n                this.setPrivate((key + \"Average\"), average[key]);\r\n                this.setPrivate((key + \"Count\"), count[key]);\r\n                this.setPrivate((key + \"Sum\"), sum[key]);\r\n                this.setPrivate((key + \"AbsoluteSum\"), absSum[key]);\r\n                this.setPrivate((key + \"Low\"), low[key]);\r\n                this.setPrivate((key + \"High\"), high[key]);\r\n                this.setPrivate((key + \"Open\"), open[key]);\r\n                this.setPrivate((key + \"Close\"), close[key]);\r\n            });\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        this._psi = this.startIndex();\r\n        this._pei = this.endIndex();\r\n        if (this.isDirty(\"visible\")) {\r\n            this.bulletsContainer.set(\"visible\", this.get(\"visible\"));\r\n        }\r\n        // Apply heat rules\r\n        const rules = this.get(\"heatRules\");\r\n        if (this._valuesDirty && rules && rules.length > 0) {\r\n            $array.each(rules, (rule) => {\r\n                const minValue = rule.minValue || this.getPrivate((rule.dataField + \"Low\")) || 0;\r\n                const maxValue = rule.maxValue || this.getPrivate((rule.dataField + \"High\")) || 0;\r\n                $array.each(rule.target._entities, (target) => {\r\n                    const value = target.dataItem.get(rule.dataField);\r\n                    if (!$type.isNumber(value)) {\r\n                        if (rule.neutral) {\r\n                            target.set(rule.key, rule.neutral);\r\n                        }\r\n                        return;\r\n                    }\r\n                    if (rule.customFunction) {\r\n                        rule.customFunction.call(this, target, minValue, maxValue, value);\r\n                    }\r\n                    else {\r\n                        let percent;\r\n                        if (rule.logarithmic) {\r\n                            percent = (Math.log(value) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / ((Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E));\r\n                        }\r\n                        else {\r\n                            percent = (value - minValue) / (maxValue - minValue);\r\n                        }\r\n                        if ($type.isNumber(value) && (!$type.isNumber(percent) || Math.abs(percent) == Infinity)) {\r\n                            percent = 0.5;\r\n                        }\r\n                        // fixes problems if all values are the same\r\n                        let propertyValue;\r\n                        if ($type.isNumber(rule.min)) {\r\n                            propertyValue = rule.min + (rule.max - rule.min) * percent;\r\n                        }\r\n                        else if (rule.min instanceof Color) {\r\n                            propertyValue = Color.interpolate(percent, rule.min, rule.max);\r\n                        }\r\n                        else if (rule.min instanceof Percent) {\r\n                            propertyValue = percentInterpolate(percent, rule.min, rule.max);\r\n                        }\r\n                        target.set(rule.key, propertyValue);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        if (this.get(\"visible\")) {\r\n            if (this.bullets.length > 0) {\r\n                let count = this.dataItems.length;\r\n                let startIndex = this.startIndex();\r\n                let endIndex = this.endIndex();\r\n                if (endIndex < count) {\r\n                    endIndex++;\r\n                }\r\n                if (startIndex > 0) {\r\n                    startIndex--;\r\n                }\r\n                for (let i = 0; i < startIndex; i++) {\r\n                    this._hideBullets(this.dataItems[i]);\r\n                }\r\n                for (let i = startIndex; i < endIndex; i++) {\r\n                    this._positionBullets(this.dataItems[i]);\r\n                }\r\n                for (let i = endIndex; i < count; i++) {\r\n                    this._hideBullets(this.dataItems[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _positionBullets(dataItem) {\r\n        if (dataItem.bullets) {\r\n            $array.each(dataItem.bullets, (bullet) => {\r\n                this._positionBullet(bullet);\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (bullet.get(\"dynamic\")) {\r\n                    if (sprite) {\r\n                        sprite._markDirtyKey(\"fill\");\r\n                        sprite.markDirtySize();\r\n                    }\r\n                    if (sprite instanceof Container) {\r\n                        sprite.walkChildren((child) => {\r\n                            child._markDirtyKey(\"fill\");\r\n                            child.markDirtySize();\r\n                            if (child instanceof Label) {\r\n                                child.text.markDirtyText();\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                if (sprite instanceof Label && sprite.get(\"populateText\")) {\r\n                    sprite.text.markDirtyText();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _hideBullets(dataItem) {\r\n        if (dataItem.bullets) {\r\n            $array.each(dataItem.bullets, (bullet) => {\r\n                let sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setPrivate(\"visible\", false);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _positionBullet(_bullet) {\r\n    }\r\n    _placeBulletsContainer(chart) {\r\n        chart.bulletsContainer.children.moveValue(this.bulletsContainer);\r\n    }\r\n    _removeBulletsContainer() {\r\n        const bulletsContainer = this.bulletsContainer;\r\n        if (bulletsContainer.parent) {\r\n            bulletsContainer.parent.children.removeValue(bulletsContainer);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        //super.disposeDataItem(dataItem); // does nothing\r\n        const bullets = dataItem.bullets;\r\n        if (bullets) {\r\n            $array.each(bullets, (bullet) => {\r\n                bullet.dispose();\r\n            });\r\n        }\r\n    }\r\n    _getItemReaderLabel() {\r\n        return \"\";\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    promises.push(bullet.get(\"sprite\").show(duration));\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    promises.push(bullet.get(\"sprite\").hide(duration));\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    _sequencedShowHide(show, duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.get(\"sequencedInterpolation\")) {\r\n                if (!$type.isNumber(duration)) {\r\n                    duration = this.get(\"interpolationDuration\", 0);\r\n                }\r\n                if (duration > 0) {\r\n                    const startIndex = this.startIndex();\r\n                    const endIndex = this.endIndex();\r\n                    yield Promise.all($array.map(this.dataItems, (dataItem, i) => __awaiter(this, void 0, void 0, function* () {\r\n                        let realDuration = duration || 0;\r\n                        if (i < startIndex - 10 || i > endIndex + 10) {\r\n                            realDuration = 0;\r\n                        }\r\n                        //let delay = this.get(\"sequencedDelay\", 0) * i + realDuration * (i - startIndex) / (endIndex - startIndex);\r\n                        let delay = this.get(\"sequencedDelay\", 0) + realDuration / (endIndex - startIndex);\r\n                        yield $time.sleep(delay * (i - startIndex));\r\n                        if (show) {\r\n                            yield this.showDataItem(dataItem, realDuration);\r\n                        }\r\n                        else {\r\n                            yield this.hideDataItem(dataItem, realDuration);\r\n                        }\r\n                    })));\r\n                }\r\n                else {\r\n                    yield Promise.all($array.map(this.dataItems, (dataItem) => {\r\n                        if (show) {\r\n                            return this.showDataItem(dataItem, 0);\r\n                        }\r\n                        else {\r\n                            return this.hideDataItem(dataItem, 0);\r\n                        }\r\n                    }));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendValue(dataItem) {\r\n        if (dataItem) {\r\n            const legendDataItem = dataItem.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                const valueLabel = legendDataItem.get(\"valueLabel\");\r\n                if (valueLabel) {\r\n                    const text = valueLabel.text;\r\n                    let txt = \"\";\r\n                    valueLabel._setDataItem(dataItem);\r\n                    txt = this.get(\"legendValueText\", text.get(\"text\", \"\"));\r\n                    valueLabel.set(\"text\", txt);\r\n                    text.markDirtyText();\r\n                }\r\n                const label = legendDataItem.get(\"label\");\r\n                if (label) {\r\n                    const text = label.text;\r\n                    let txt = \"\";\r\n                    label._setDataItem(dataItem);\r\n                    txt = this.get(\"legendLabelText\", text.get(\"text\", \"\"));\r\n                    label.set(\"text\", txt);\r\n                    text.markDirtyText();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendMarker(_dataItem) {\r\n    }\r\n    _onHide() {\r\n        super._onHide();\r\n        const tooltip = this.getTooltip();\r\n        if (tooltip) {\r\n            tooltip.hide();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hoverDataItem(_dataItem) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    unhoverDataItem(_dataItem) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _getBase(key) {\r\n        const dataItem = this.dataItems[this.startIndex()];\r\n        if (dataItem) {\r\n            return dataItem.get(key);\r\n        }\r\n        return 0;\r\n    }\r\n}\r\nObject.defineProperty(Series, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Series\"\r\n});\r\nObject.defineProperty(Series, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Component.classNames.concat([Series.className])\r\n});\r\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * Returns a `Promise` which can be used to execute code after number of\r\n * milliseconds.\r\n *\r\n * @param   ms  Sleep duration in ms\r\n * @return      Promise\r\n */\r\nexport function sleep(ms) {\r\n    return new Promise((resolve, _reject) => {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\r\n/**\r\n * Maps time period names to their numeric representations in milliseconds.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport let timeUnitDurations = {\r\n    millisecond: 1,\r\n    second: 1000,\r\n    minute: 60000,\r\n    hour: 3600000,\r\n    day: 86400000,\r\n    week: 604800000,\r\n    month: 365.242 / 12 * 86400000,\r\n    year: 31536000000\r\n};\r\n/**\r\n * Returns the next time unit that goes after source `unit`.\r\n *\r\n * E.g. \"hour\" is the next unit after \"minute\", etc.\r\n *\r\n * @ignore Exclude from docs\r\n * @param unit  Source time unit\r\n * @return Next time unit\r\n */\r\nexport function getNextUnit(unit) {\r\n    switch (unit) {\r\n        case \"year\":\r\n            return;\r\n        case \"month\":\r\n            return \"year\";\r\n        case \"week\":\r\n            return \"month\";\r\n        case \"day\":\r\n            return \"month\"; // not a mistake\r\n        case \"hour\":\r\n            return \"day\";\r\n        case \"minute\":\r\n            return \"hour\";\r\n        case \"second\":\r\n            return \"minute\";\r\n        case \"millisecond\":\r\n            return \"second\";\r\n    }\r\n}\r\n/**\r\n * Returns number of milliseconds in the `count` of time `unit`.\r\n *\r\n * Available units: \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\",\r\n * \"month\", and \"year\".\r\n *\r\n * @param unit   Time unit\r\n * @param count  Number of units\r\n * @return Milliseconds\r\n */\r\nexport function getDuration(unit, count) {\r\n    if (count == null) {\r\n        count = 1;\r\n    }\r\n    return timeUnitDurations[unit] * count;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getIntervalDuration(interval) {\r\n    if (interval) {\r\n        return timeUnitDurations[interval.timeUnit] * interval.count;\r\n    }\r\n    return 0;\r\n}\r\nexport function getDateIntervalDuration(interval, date, firstDateOfWeek, utc, timezone) {\r\n    const unit = interval.timeUnit;\r\n    const count = interval.count;\r\n    if (unit == \"hour\" || unit == \"minute\" || unit == \"second\" || unit == \"millisecond\") {\r\n        return timeUnitDurations[interval.timeUnit] * interval.count;\r\n    }\r\n    else {\r\n        const firstTime = round(new Date(date.getTime()), unit, count, firstDateOfWeek, utc, undefined, timezone).getTime();\r\n        let lastTime = firstTime + count * getDuration(unit) * 1.05;\r\n        lastTime = round(new Date(lastTime), unit, 1, firstDateOfWeek, utc, undefined, timezone).getTime();\r\n        return lastTime - firstTime;\r\n    }\r\n}\r\n/**\r\n * Returns current `Date` object.\r\n *\r\n * @return Current date\r\n */\r\nexport function now() {\r\n    return new Date();\r\n}\r\n/**\r\n * Returns current timestamp.\r\n *\r\n * @return Current timestamp\r\n */\r\nexport function getTime() {\r\n    return now().getTime();\r\n}\r\n/**\r\n * Returns a copy of the `Date` object.\r\n *\r\n * @param date  Source date\r\n * @return Copy\r\n */\r\nexport function copy(date) {\r\n    return new Date(date.getTime()); // todo: check if this is ok. new Date(date) used to strip milliseconds on FF in v3\r\n}\r\n/**\r\n * Checks if the `unit` part of two `Date` objects do not match. Two dates\r\n * represent a \"range\" of time, rather the same time date.\r\n *\r\n * @param timeOne  timestamp\r\n * @param timeTwo  timestamp\r\n * @param unit     Time unit to check\r\n * @return Range?\r\n */\r\nexport function checkChange(timeOne, timeTwo, unit, utc, timezone) {\r\n    // quick\r\n    if ((timeTwo - timeOne) > getDuration(unit, 1.2)) {\r\n        return true;\r\n    }\r\n    let dateOne = new Date(timeOne);\r\n    let dateTwo = new Date(timeTwo);\r\n    if (timezone) {\r\n        dateOne = timezone.convertLocal(dateOne);\r\n        dateTwo = timezone.convertLocal(dateTwo);\r\n    }\r\n    let timeZoneOffset1 = 0;\r\n    let timeZoneOffset2 = 0;\r\n    if (!utc && unit != \"millisecond\") {\r\n        timeZoneOffset1 = dateOne.getTimezoneOffset();\r\n        dateOne.setUTCMinutes(dateOne.getUTCMinutes() - timeZoneOffset1);\r\n        timeZoneOffset2 = dateTwo.getTimezoneOffset();\r\n        dateTwo.setUTCMinutes(dateTwo.getUTCMinutes() - timeZoneOffset2);\r\n    }\r\n    let changed = false;\r\n    switch (unit) {\r\n        case \"year\":\r\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"month\":\r\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n                changed = true;\r\n            }\r\n            else if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"day\":\r\n            if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n                changed = true;\r\n            }\r\n            else if (dateOne.getUTCDate() != dateTwo.getUTCDate()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"hour\":\r\n            if (dateOne.getUTCHours() != dateTwo.getUTCHours()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"minute\":\r\n            if (dateOne.getUTCMinutes() != dateTwo.getUTCMinutes()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"second\":\r\n            if (dateOne.getUTCSeconds() != dateTwo.getUTCSeconds()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"millisecond\":\r\n            if (dateOne.getTime() != dateTwo.getTime()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n    }\r\n    if (changed) {\r\n        return changed;\r\n    }\r\n    let nextUnit = getNextUnit(unit);\r\n    if (nextUnit) {\r\n        return checkChange(timeOne, timeTwo, nextUnit, utc, timezone);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Adds `count` of time `unit` to the source date. Returns a modified `Date` object.\r\n *\r\n * @param date   Source date\r\n * @param unit   Time unit\r\n * @param count  Number of units to add\r\n * @return Modified date\r\n */\r\nexport function add(date, unit, count, utc, timezone) {\r\n    let timeZoneOffset = 0;\r\n    if (!utc && unit != \"millisecond\") {\r\n        timeZoneOffset = date.getTimezoneOffset();\r\n        if (timezone) {\r\n            timeZoneOffset -= timezone.offsetUTC(date);\r\n        }\r\n        date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n    }\r\n    switch (unit) {\r\n        case \"day\":\r\n            let day = date.getUTCDate();\r\n            date.setUTCDate(day + count);\r\n            break;\r\n        case \"second\":\r\n            let seconds = date.getUTCSeconds();\r\n            date.setUTCSeconds(seconds + count);\r\n            break;\r\n        case \"millisecond\":\r\n            let milliseconds = date.getUTCMilliseconds();\r\n            date.setUTCMilliseconds(milliseconds + count);\r\n            break;\r\n        case \"hour\":\r\n            let hours = date.getUTCHours();\r\n            date.setUTCHours(hours + count);\r\n            break;\r\n        case \"minute\":\r\n            let minutes = date.getUTCMinutes();\r\n            date.setUTCMinutes(minutes + count);\r\n            break;\r\n        case \"year\":\r\n            let year = date.getUTCFullYear();\r\n            date.setUTCFullYear(year + count);\r\n            break;\r\n        case \"month\":\r\n            let month = date.getUTCMonth();\r\n            date.setUTCMonth(month + count);\r\n            break;\r\n        case \"week\":\r\n            let wday = date.getUTCDate();\r\n            date.setUTCDate(wday + count * 7);\r\n            break;\r\n    }\r\n    if (!utc && unit != \"millisecond\") {\r\n        date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n        if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n            let newTimeZoneOffset = date.getTimezoneOffset();\r\n            if (timezone) {\r\n                newTimeZoneOffset += timezone.offsetUTC(date);\r\n            }\r\n            if (newTimeZoneOffset != timeZoneOffset) {\r\n                let diff = newTimeZoneOffset - timeZoneOffset;\r\n                date.setUTCMinutes(date.getUTCMinutes() + diff);\r\n                // solves issues if new time falls back to old time zone\r\n                if (date.getTimezoneOffset() != newTimeZoneOffset) {\r\n                    date.setUTCMinutes(date.getUTCMinutes() - diff);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return date;\r\n}\r\n/**\r\n * \"Rounds\" the date to specific time unit.\r\n *\r\n * @param date             Source date\r\n * @param unit             Time unit\r\n * @param count            Number of units to round to\r\n * @param firstDateOfWeek  First day of week\r\n * @param utc              Use UTC timezone\r\n * @param firstDate        First date to round to\r\n * @param roundMinutes     Minutes to round to (some timezones use non-whole hour)\r\n * @param timezone         Use specific named timezone when rounding\r\n * @return New date\r\n */\r\nexport function round(date, unit, count, firstDateOfWeek, utc, firstDate, timezone) {\r\n    if (!timezone || utc) {\r\n        let timeZoneOffset = 0;\r\n        if (!utc && unit != \"millisecond\") {\r\n            timeZoneOffset = date.getTimezoneOffset();\r\n            date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n        }\r\n        switch (unit) {\r\n            case \"day\":\r\n                let day = date.getUTCDate();\r\n                if (count > 1) {\r\n                    //\tday = Math.floor(day / count) * count;\r\n                    if (firstDate) {\r\n                        firstDate = round(firstDate, \"day\", 1);\r\n                        let difference = date.getTime() - firstDate.getTime();\r\n                        let unitCount = Math.floor(difference / getDuration(\"day\") / count);\r\n                        let duration = getDuration(\"day\", unitCount * count);\r\n                        date.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\r\n                    }\r\n                }\r\n                else {\r\n                    date.setUTCDate(day);\r\n                }\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"second\":\r\n                let seconds = date.getUTCSeconds();\r\n                if (count > 1) {\r\n                    seconds = Math.floor(seconds / count) * count;\r\n                }\r\n                date.setUTCSeconds(seconds, 0);\r\n                break;\r\n            case \"millisecond\":\r\n                if (count == 1) {\r\n                    return date; // much better for perf!\r\n                }\r\n                let milliseconds = date.getUTCMilliseconds();\r\n                milliseconds = Math.floor(milliseconds / count) * count;\r\n                date.setUTCMilliseconds(milliseconds);\r\n                break;\r\n            case \"hour\":\r\n                let hours = date.getUTCHours();\r\n                if (count > 1) {\r\n                    hours = Math.floor(hours / count) * count;\r\n                }\r\n                date.setUTCHours(hours, 0, 0, 0);\r\n                break;\r\n            case \"minute\":\r\n                let minutes = date.getUTCMinutes();\r\n                if (count > 1) {\r\n                    minutes = Math.floor(minutes / count) * count;\r\n                }\r\n                date.setUTCMinutes(minutes, 0, 0);\r\n                break;\r\n            case \"month\":\r\n                let month = date.getUTCMonth();\r\n                if (count > 1) {\r\n                    month = Math.floor(month / count) * count;\r\n                }\r\n                date.setUTCMonth(month, 1);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"year\":\r\n                let year = date.getUTCFullYear();\r\n                if (count > 1) {\r\n                    year = Math.floor(year / count) * count;\r\n                }\r\n                date.setUTCFullYear(year, 0, 1);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"week\":\r\n                let wday = date.getUTCDate();\r\n                let weekDay = date.getUTCDay();\r\n                if (!$type.isNumber(firstDateOfWeek)) {\r\n                    firstDateOfWeek = 1;\r\n                }\r\n                if (weekDay >= firstDateOfWeek) {\r\n                    wday = wday - weekDay + firstDateOfWeek;\r\n                }\r\n                else {\r\n                    wday = wday - (7 + weekDay) + firstDateOfWeek;\r\n                }\r\n                date.setUTCDate(wday);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n        }\r\n        if (!utc && unit != \"millisecond\") {\r\n            date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n            if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n                let newTimeZoneOffset = date.getTimezoneOffset();\r\n                if (newTimeZoneOffset != timeZoneOffset) {\r\n                    let diff = newTimeZoneOffset - timeZoneOffset;\r\n                    date.setUTCMinutes(date.getUTCMinutes() + diff);\r\n                }\r\n            }\r\n        }\r\n        return date;\r\n    }\r\n    else {\r\n        if (isNaN(date.getTime())) {\r\n            return date;\r\n        }\r\n        let tzoffset = timezone.offsetUTC(date);\r\n        let timeZoneOffset = date.getTimezoneOffset();\r\n        let parsedDate = timezone.parseDate(date);\r\n        //console.log(parsedDate)\r\n        let year = parsedDate.year;\r\n        let month = parsedDate.month;\r\n        let day = parsedDate.day;\r\n        let hour = parsedDate.hour;\r\n        let minute = parsedDate.minute;\r\n        let second = parsedDate.second;\r\n        let millisecond = parsedDate.millisecond;\r\n        let weekday = parsedDate.weekday;\r\n        switch (unit) {\r\n            case \"day\":\r\n                if (count > 1 && firstDate) {\r\n                    firstDate = round(firstDate, \"day\", 1, firstDateOfWeek, utc, undefined, timezone);\r\n                    let difference = date.getTime() - firstDate.getTime();\r\n                    let unitCount = Math.floor(difference / getDuration(\"day\") / count);\r\n                    let duration = getDuration(\"day\", unitCount * count);\r\n                    date.setTime(firstDate.getTime() + duration);\r\n                    parsedDate = timezone.parseDate(date);\r\n                    year = parsedDate.year;\r\n                    month = parsedDate.month;\r\n                    day = parsedDate.day;\r\n                }\r\n                hour = 0;\r\n                minute = tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"second\":\r\n                minute += tzoffset - timeZoneOffset;\r\n                if (count > 1) {\r\n                    second = Math.floor(second / count) * count;\r\n                }\r\n                millisecond = 0;\r\n                break;\r\n            case \"millisecond\":\r\n                minute += tzoffset - timeZoneOffset;\r\n                if (count > 1) {\r\n                    millisecond = Math.floor(millisecond / count) * count;\r\n                }\r\n                break;\r\n            case \"hour\":\r\n                if (count > 1) {\r\n                    hour = Math.floor(hour / count) * count;\r\n                }\r\n                minute = tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"minute\":\r\n                if (count > 1) {\r\n                    minute = Math.floor(minute / count) * count;\r\n                }\r\n                minute += tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"month\":\r\n                if (count > 1) {\r\n                    month = Math.floor(month / count) * count;\r\n                }\r\n                day = 1;\r\n                hour = 0;\r\n                minute = tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"year\":\r\n                if (count > 1) {\r\n                    year = Math.floor(year / count) * count;\r\n                }\r\n                month = 0;\r\n                day = 1;\r\n                hour = 0;\r\n                minute = tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"week\":\r\n                if (!$type.isNumber(firstDateOfWeek)) {\r\n                    firstDateOfWeek = 1;\r\n                }\r\n                if (weekday >= firstDateOfWeek) {\r\n                    day = day - weekday + firstDateOfWeek;\r\n                }\r\n                else {\r\n                    day = day - (7 + weekday) + firstDateOfWeek;\r\n                }\r\n                hour = 0;\r\n                minute = tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n        }\r\n        date = new Date(year, month, day, hour, minute, second, millisecond);\r\n        let newOffset = date.getTimezoneOffset();\r\n        if (newOffset != timeZoneOffset) {\r\n            date.setTime(date.getTime() + (timeZoneOffset - newOffset) * 60000);\r\n        }\r\n        return date;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function chooseInterval(index, duration, gridCount, intervals) {\r\n    let gridInterval = intervals[index];\r\n    let intervalDuration = getIntervalDuration(gridInterval);\r\n    let lastIndex = intervals.length - 1;\r\n    if (index >= lastIndex) {\r\n        return Object.assign({}, intervals[lastIndex]);\r\n    }\r\n    let count = Math.ceil(duration / intervalDuration);\r\n    if (duration < intervalDuration && index > 0) {\r\n        return Object.assign({}, intervals[index - 1]);\r\n    }\r\n    if (count <= gridCount) {\r\n        return Object.assign({}, intervals[index]);\r\n    }\r\n    else {\r\n        if (index + 1 < intervals.length) {\r\n            return chooseInterval(index + 1, duration, gridCount, intervals);\r\n        }\r\n        else {\r\n            return Object.assign({}, intervals[index]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getUnitValue(date, unit) {\r\n    switch (unit) {\r\n        case \"day\":\r\n            return date.getDate();\r\n        case \"second\":\r\n            return date.getSeconds();\r\n        case \"millisecond\":\r\n            return date.getMilliseconds();\r\n        case \"hour\":\r\n            return date.getHours();\r\n        case \"minute\":\r\n            return date.getMinutes();\r\n        case \"month\":\r\n            return date.getMonth();\r\n        case \"year\":\r\n            return date.getFullYear();\r\n        case \"week\":\r\n            return $utils.getWeek(date);\r\n    }\r\n}\r\n"],"names":["__awaiter","Component","List","Color","percentInterpolate","Percent","$array","$type","$time","p100","Container","Label","Series","constructor","arguments","Object","defineProperty","enumerable","configurable","writable","value","new","_root","width","height","position","_afterNew","valueFields","push","setPrivate","_disposers","bullets","events","onAll","change","type","_handleBullets","dataItems","Error","_dispose","bulletsContainer","dispose","startIndex","len","length","Math","min","getPrivate","endIndex","each","dataItem","bullet","undefined","markDirtyValues","getDataItemById","id","find","get","_makeBullets","_shouldMakeBullet","bulletFunction","_makeBullet","_dataItem","index","sprite","_setDataItem","setRaw","children","_index","series","_clearDirty","_aggregatesCalculated","_selectionAggregatesCalculated","_prepareChildren","isDirty","_valuesDirty","isPrivateDirty","baseValueSeries","onPrivate","calculateAggregates","_dataProcessed","_calculateAggregates","_psi","_pei","tooltip","hide","set","markerRectangle","legendDataItem","isVisible","stroke","fill","updateLegendMarker","i","fields","_valueFields","sum","absSum","count","low","high","open","close","average","previous","key","changePercent","changePrevious","changePreviousPercent","changeSelection","changeSelectionPercent","openKey","abs","_getBase","_updateChildren","rules","rule","minValue","dataField","maxValue","target","_entities","isNumber","neutral","customFunction","call","percent","logarithmic","log","LOG10E","Infinity","propertyValue","max","interpolate","_hideBullets","_positionBullets","_positionBullet","_markDirtyKey","markDirtySize","walkChildren","child","text","markDirtyText","_bullet","_placeBulletsContainer","chart","moveValue","_removeBulletsContainer","parent","removeValue","disposeDataItem","_getItemReaderLabel","showDataItem","duration","_super","create","promises","show","Promise","all","hideDataItem","_sequencedShowHide","map","realDuration","delay","sleep","updateLegendValue","valueLabel","txt","label","_onHide","getTooltip","hoverDataItem","unhoverDataItem","classNames","concat","className","$utils","ms","resolve","_reject","setTimeout","timeUnitDurations","millisecond","second","minute","hour","day","week","month","year","getNextUnit","unit","getDuration","getIntervalDuration","interval","timeUnit","getDateIntervalDuration","date","firstDateOfWeek","utc","timezone","firstTime","round","Date","getTime","lastTime","now","copy","checkChange","timeOne","timeTwo","dateOne","dateTwo","convertLocal","timeZoneOffset1","timeZoneOffset2","getTimezoneOffset","setUTCMinutes","getUTCMinutes","changed","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCSeconds","nextUnit","add","timeZoneOffset","offsetUTC","setUTCDate","seconds","setUTCSeconds","milliseconds","getUTCMilliseconds","setUTCMilliseconds","hours","setUTCHours","minutes","setUTCFullYear","setUTCMonth","wday","newTimeZoneOffset","diff","firstDate","difference","unitCount","floor","setTime","weekDay","getUTCDay","isNaN","tzoffset","parsedDate","parseDate","weekday","newOffset","chooseInterval","gridCount","intervals","gridInterval","intervalDuration","lastIndex","assign","ceil","getUnitValue","getDate","getSeconds","getMilliseconds","getHours","getMinutes","getMonth","getFullYear","getWeek"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1]}