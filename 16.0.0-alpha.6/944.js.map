{"version":3,"file":"944.js","mappings":"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","sources":["./node_modules/rxjs/dist/esm/internal/Subject.js","./node_modules/rxjs/dist/esm/internal/observable/empty.js","./node_modules/rxjs/dist/esm/internal/operators/OperatorSubscriber.js","./node_modules/rxjs/dist/esm/internal/operators/take.js","./node_modules/rxjs/dist/esm/internal/operators/takeUntil.js","./node_modules/rxjs/dist/esm/internal/util/ObjectUnsubscribedError.js","./node_modules/rxjs/dist/esm/internal/util/lift.js","./node_modules/@angular/material/fesm2022/snack-bar.mjs"],"sourcesContent":["import { Observable } from './Observable';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\nexport class Subject extends Observable {\n    constructor() {\n        super();\n        this.closed = false;\n        this.currentObservers = null;\n        this.observers = [];\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    lift(operator) {\n        const subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    }\n    _throwIfClosed() {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n    }\n    next(value) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                if (!this.currentObservers) {\n                    this.currentObservers = Array.from(this.observers);\n                }\n                for (const observer of this.currentObservers) {\n                    observer.next(value);\n                }\n            }\n        });\n    }\n    error(err) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.hasError = this.isStopped = true;\n                this.thrownError = err;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().error(err);\n                }\n            }\n        });\n    }\n    complete() {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.isStopped = true;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().complete();\n                }\n            }\n        });\n    }\n    unsubscribe() {\n        this.isStopped = this.closed = true;\n        this.observers = this.currentObservers = null;\n    }\n    get observed() {\n        var _a;\n        return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n    _trySubscribe(subscriber) {\n        this._throwIfClosed();\n        return super._trySubscribe(subscriber);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._checkFinalizedStatuses(subscriber);\n        return this._innerSubscribe(subscriber);\n    }\n    _innerSubscribe(subscriber) {\n        const { hasError, isStopped, observers } = this;\n        if (hasError || isStopped) {\n            return EMPTY_SUBSCRIPTION;\n        }\n        this.currentObservers = null;\n        observers.push(subscriber);\n        return new Subscription(() => {\n            this.currentObservers = null;\n            arrRemove(observers, subscriber);\n        });\n    }\n    _checkFinalizedStatuses(subscriber) {\n        const { hasError, thrownError, isStopped } = this;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped) {\n            subscriber.complete();\n        }\n    }\n    asObservable() {\n        const observable = new Observable();\n        observable.source = this;\n        return observable;\n    }\n}\nSubject.create = (destination, source) => {\n    return new AnonymousSubject(destination, source);\n};\nexport class AnonymousSubject extends Subject {\n    constructor(destination, source) {\n        super();\n        this.destination = destination;\n        this.source = source;\n    }\n    next(value) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n    }\n    error(err) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n    }\n    complete() {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    _subscribe(subscriber) {\n        var _a, _b;\n        return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;\n    }\n}\n","import { Observable } from '../Observable';\nexport const EMPTY = new Observable((subscriber) => subscriber.complete());\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nfunction emptyScheduled(scheduler) {\n    return new Observable((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n","import { Subscriber } from '../Subscriber';\nexport function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {\n    return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\nexport class OperatorSubscriber extends Subscriber {\n    constructor(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {\n        super(destination);\n        this.onFinalize = onFinalize;\n        this.shouldUnsubscribe = shouldUnsubscribe;\n        this._next = onNext\n            ? function (value) {\n                try {\n                    onNext(value);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n            }\n            : super._next;\n        this._error = onError\n            ? function (err) {\n                try {\n                    onError(err);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : super._error;\n        this._complete = onComplete\n            ? function () {\n                try {\n                    onComplete();\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : super._complete;\n    }\n    unsubscribe() {\n        var _a;\n        if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n            const { closed } = this;\n            super.unsubscribe();\n            !closed && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));\n        }\n    }\n}\n","import { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function take(count) {\n    return count <= 0\n        ?\n            () => EMPTY\n        : operate((source, subscriber) => {\n            let seen = 0;\n            source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n                if (++seen <= count) {\n                    subscriber.next(value);\n                    if (count <= seen) {\n                        subscriber.complete();\n                    }\n                }\n            }));\n        });\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\nexport function takeUntil(notifier) {\n    return operate((source, subscriber) => {\n        innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, () => subscriber.complete(), noop));\n        !subscriber.closed && source.subscribe(subscriber);\n    });\n}\n","import { createErrorClass } from './createErrorClass';\nexport const ObjectUnsubscribedError = createErrorClass((_super) => function ObjectUnsubscribedErrorImpl() {\n    _super(this);\n    this.name = 'ObjectUnsubscribedError';\n    this.message = 'object unsubscribed';\n});\n","import { isFunction } from './isFunction';\nexport function hasLift(source) {\n    return isFunction(source === null || source === void 0 ? void 0 : source.lift);\n}\nexport function operate(init) {\n    return (source) => {\n        if (hasLift(source)) {\n            return source.lift(function (liftedSource) {\n                try {\n                    return init(liftedSource, this);\n                }\n                catch (err) {\n                    this.error(err);\n                }\n            });\n        }\n        throw new TypeError('Unable to lift unknown Observable type');\n    };\n}\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, inject, ViewChild, NgModule, Injector, TemplateRef, Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i3 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i3$1 from '@angular/cdk/portal';\nimport { BasePortalOutlet, CdkPortalOutlet, PortalModule, ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\nimport * as i1 from '@angular/cdk/platform';\nimport { take, takeUntil } from 'rxjs/operators';\nimport * as i2$1 from '@angular/cdk/a11y';\nimport * as i3$2 from '@angular/cdk/layout';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { OverlayModule, OverlayConfig } from '@angular/cdk/overlay';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Maximum amount of milliseconds that can be passed into setTimeout. */\nconst MAX_TIMEOUT = Math.pow(2, 31) - 1;\n/**\n * Reference to a snack bar dispatched from the snack bar service.\n */\nclass MatSnackBarRef {\n    constructor(containerInstance, _overlayRef) {\n        this._overlayRef = _overlayRef;\n        /** Subject for notifying the user that the snack bar has been dismissed. */\n        this._afterDismissed = new Subject();\n        /** Subject for notifying the user that the snack bar has opened and appeared. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the snack bar action was called. */\n        this._onAction = new Subject();\n        /** Whether the snack bar was dismissed using the action button. */\n        this._dismissedByAction = false;\n        this.containerInstance = containerInstance;\n        containerInstance._onExit.subscribe(() => this._finishDismiss());\n    }\n    /** Dismisses the snack bar. */\n    dismiss() {\n        if (!this._afterDismissed.closed) {\n            this.containerInstance.exit();\n        }\n        clearTimeout(this._durationTimeoutId);\n    }\n    /** Marks the snackbar action clicked. */\n    dismissWithAction() {\n        if (!this._onAction.closed) {\n            this._dismissedByAction = true;\n            this._onAction.next();\n            this._onAction.complete();\n            this.dismiss();\n        }\n        clearTimeout(this._durationTimeoutId);\n    }\n    /**\n     * Marks the snackbar action clicked.\n     * @deprecated Use `dismissWithAction` instead.\n     * @breaking-change 8.0.0\n     */\n    closeWithAction() {\n        this.dismissWithAction();\n    }\n    /** Dismisses the snack bar after some duration */\n    _dismissAfter(duration) {\n        // Note that we need to cap the duration to the maximum value for setTimeout, because\n        // it'll revert to 1 if somebody passes in something greater (e.g. `Infinity`). See #17234.\n        this._durationTimeoutId = setTimeout(() => this.dismiss(), Math.min(duration, MAX_TIMEOUT));\n    }\n    /** Marks the snackbar as opened */\n    _open() {\n        if (!this._afterOpened.closed) {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }\n    }\n    /** Cleans up the DOM after closing. */\n    _finishDismiss() {\n        this._overlayRef.dispose();\n        if (!this._onAction.closed) {\n            this._onAction.complete();\n        }\n        this._afterDismissed.next({ dismissedByAction: this._dismissedByAction });\n        this._afterDismissed.complete();\n        this._dismissedByAction = false;\n    }\n    /** Gets an observable that is notified when the snack bar is finished closing. */\n    afterDismissed() {\n        return this._afterDismissed;\n    }\n    /** Gets an observable that is notified when the snack bar has opened and appeared. */\n    afterOpened() {\n        return this.containerInstance._onEnter;\n    }\n    /** Gets an observable that is notified when the snack bar action is called. */\n    onAction() {\n        return this._onAction;\n    }\n}\n\n/** Injection token that can be used to access the data that was passed in to a snack bar. */\nconst MAT_SNACK_BAR_DATA = new InjectionToken('MatSnackBarData');\n/**\n * Configuration used when opening a snack-bar.\n */\nclass MatSnackBarConfig {\n    constructor() {\n        /** The politeness level for the MatAriaLiveAnnouncer announcement. */\n        this.politeness = 'assertive';\n        /**\n         * Message to be announced by the LiveAnnouncer. When opening a snackbar without a custom\n         * component or template, the announcement message will default to the specified message.\n         */\n        this.announcementMessage = '';\n        /** The length of time in milliseconds to wait before automatically dismissing the snack bar. */\n        this.duration = 0;\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** The horizontal position to place the snack bar. */\n        this.horizontalPosition = 'center';\n        /** The vertical position to place the snack bar. */\n        this.verticalPosition = 'bottom';\n    }\n}\n\n/** Directive that should be applied to the text element to be rendered in the snack bar. */\nclass MatSnackBarLabel {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBarLabel, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatSnackBarLabel, selector: \"[matSnackBarLabel]\", host: { classAttribute: \"mat-mdc-snack-bar-label mdc-snackbar__label\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBarLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[matSnackBarLabel]`,\n                    host: {\n                        'class': 'mat-mdc-snack-bar-label mdc-snackbar__label',\n                    },\n                }]\n        }] });\n/** Directive that should be applied to the element containing the snack bar's action buttons. */\nclass MatSnackBarActions {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBarActions, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatSnackBarActions, selector: \"[matSnackBarActions]\", host: { classAttribute: \"mat-mdc-snack-bar-actions mdc-snackbar__actions\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBarActions, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[matSnackBarActions]`,\n                    host: {\n                        'class': 'mat-mdc-snack-bar-actions mdc-snackbar__actions',\n                    },\n                }]\n        }] });\n/** Directive that should be applied to each of the snack bar's action buttons. */\nclass MatSnackBarAction {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBarAction, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatSnackBarAction, selector: \"[matSnackBarAction]\", host: { classAttribute: \"mat-mdc-snack-bar-action mdc-snackbar__action\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBarAction, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[matSnackBarAction]`,\n                    host: {\n                        'class': 'mat-mdc-snack-bar-action mdc-snackbar__action',\n                    },\n                }]\n        }] });\n\nclass SimpleSnackBar {\n    constructor(snackBarRef, data) {\n        this.snackBarRef = snackBarRef;\n        this.data = data;\n    }\n    /** Performs the action on the snack bar. */\n    action() {\n        this.snackBarRef.dismissWithAction();\n    }\n    /** If the action button should be shown. */\n    get hasAction() {\n        return !!this.data.action;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: SimpleSnackBar, deps: [{ token: MatSnackBarRef }, { token: MAT_SNACK_BAR_DATA }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: SimpleSnackBar, selector: \"simple-snack-bar\", host: { classAttribute: \"mat-mdc-simple-snack-bar\" }, exportAs: [\"matSnackBar\"], ngImport: i0, template: \"<div matSnackBarLabel>\\n  {{data.message}}\\n</div>\\n\\n<div matSnackBarActions *ngIf=\\\"hasAction\\\">\\n  <button mat-button matSnackBarAction (click)=\\\"action()\\\">\\n    {{data.action}}\\n  </button>\\n</div>\\n\", styles: [\".mat-mdc-simple-snack-bar{display:flex}\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i3.MatButton, selector: \"    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  \", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }, { kind: \"directive\", type: MatSnackBarLabel, selector: \"[matSnackBarLabel]\" }, { kind: \"directive\", type: MatSnackBarActions, selector: \"[matSnackBarActions]\" }, { kind: \"directive\", type: MatSnackBarAction, selector: \"[matSnackBarAction]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: SimpleSnackBar, decorators: [{\n            type: Component,\n            args: [{ selector: 'simple-snack-bar', exportAs: 'matSnackBar', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'class': 'mat-mdc-simple-snack-bar',\n                    }, template: \"<div matSnackBarLabel>\\n  {{data.message}}\\n</div>\\n\\n<div matSnackBarActions *ngIf=\\\"hasAction\\\">\\n  <button mat-button matSnackBarAction (click)=\\\"action()\\\">\\n    {{data.action}}\\n  </button>\\n</div>\\n\", styles: [\".mat-mdc-simple-snack-bar{display:flex}\"] }]\n        }], ctorParameters: function () { return [{ type: MatSnackBarRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_SNACK_BAR_DATA]\n                }] }]; } });\n\n/**\n * Animations used by the Material snack bar.\n * @docs-private\n */\nconst matSnackBarAnimations = {\n    /** Animation that shows and hides a snack bar. */\n    snackBarState: trigger('state', [\n        state('void, hidden', style({\n            transform: 'scale(0.8)',\n            opacity: 0,\n        })),\n        state('visible', style({\n            transform: 'scale(1)',\n            opacity: 1,\n        })),\n        transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void, * => hidden', animate('75ms cubic-bezier(0.4, 0.0, 1, 1)', style({\n            opacity: 0,\n        }))),\n    ]),\n};\n\nlet uniqueId = 0;\n/**\n * Base class for snack bar containers.\n * @docs-private\n */\nclass _MatSnackBarContainerBase extends BasePortalOutlet {\n    constructor(_ngZone, _elementRef, _changeDetectorRef, _platform, \n    /** The snack bar configuration. */\n    snackBarConfig) {\n        super();\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._platform = _platform;\n        this.snackBarConfig = snackBarConfig;\n        this._document = inject(DOCUMENT);\n        this._trackedModals = new Set();\n        /** The number of milliseconds to wait before announcing the snack bar's content. */\n        this._announceDelay = 150;\n        /** Whether the component has been destroyed. */\n        this._destroyed = false;\n        /** Subject for notifying that the snack bar has announced to screen readers. */\n        this._onAnnounce = new Subject();\n        /** Subject for notifying that the snack bar has exited from view. */\n        this._onExit = new Subject();\n        /** Subject for notifying that the snack bar has finished entering the view. */\n        this._onEnter = new Subject();\n        /** The state of the snack bar animations. */\n        this._animationState = 'void';\n        /** Unique ID of the aria-live element. */\n        this._liveElementId = `mat-snack-bar-container-live-${uniqueId++}`;\n        /**\n         * Attaches a DOM portal to the snack bar container.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            this._assertNotAttached();\n            const result = this._portalOutlet.attachDomPortal(portal);\n            this._afterPortalAttached();\n            return result;\n        };\n        // Use aria-live rather than a live role like 'alert' or 'status'\n        // because NVDA and JAWS have show inconsistent behavior with live roles.\n        if (snackBarConfig.politeness === 'assertive' && !snackBarConfig.announcementMessage) {\n            this._live = 'assertive';\n        }\n        else if (snackBarConfig.politeness === 'off') {\n            this._live = 'off';\n        }\n        else {\n            this._live = 'polite';\n        }\n        // Only set role for Firefox. Set role based on aria-live because setting role=\"alert\" implies\n        // aria-live=\"assertive\" which may cause issues if aria-live is set to \"polite\" above.\n        if (this._platform.FIREFOX) {\n            if (this._live === 'polite') {\n                this._role = 'status';\n            }\n            if (this._live === 'assertive') {\n                this._role = 'alert';\n            }\n        }\n    }\n    /** Attach a component portal as content to this snack bar container. */\n    attachComponentPortal(portal) {\n        this._assertNotAttached();\n        const result = this._portalOutlet.attachComponentPortal(portal);\n        this._afterPortalAttached();\n        return result;\n    }\n    /** Attach a template portal as content to this snack bar container. */\n    attachTemplatePortal(portal) {\n        this._assertNotAttached();\n        const result = this._portalOutlet.attachTemplatePortal(portal);\n        this._afterPortalAttached();\n        return result;\n    }\n    /** Handle end of animations, updating the state of the snackbar. */\n    onAnimationEnd(event) {\n        const { fromState, toState } = event;\n        if ((toState === 'void' && fromState !== 'void') || toState === 'hidden') {\n            this._completeExit();\n        }\n        if (toState === 'visible') {\n            // Note: we shouldn't use `this` inside the zone callback,\n            // because it can cause a memory leak.\n            const onEnter = this._onEnter;\n            this._ngZone.run(() => {\n                onEnter.next();\n                onEnter.complete();\n            });\n        }\n    }\n    /** Begin animation of snack bar entrance into view. */\n    enter() {\n        if (!this._destroyed) {\n            this._animationState = 'visible';\n            this._changeDetectorRef.detectChanges();\n            this._screenReaderAnnounce();\n        }\n    }\n    /** Begin animation of the snack bar exiting from view. */\n    exit() {\n        // It's common for snack bars to be opened by random outside calls like HTTP requests or\n        // errors. Run inside the NgZone to ensure that it functions correctly.\n        this._ngZone.run(() => {\n            // Note: this one transitions to `hidden`, rather than `void`, in order to handle the case\n            // where multiple snack bars are opened in quick succession (e.g. two consecutive calls to\n            // `MatSnackBar.open`).\n            this._animationState = 'hidden';\n            // Mark this element with an 'exit' attribute to indicate that the snackbar has\n            // been dismissed and will soon be removed from the DOM. This is used by the snackbar\n            // test harness.\n            this._elementRef.nativeElement.setAttribute('mat-exit', '');\n            // If the snack bar hasn't been announced by the time it exits it wouldn't have been open\n            // long enough to visually read it either, so clear the timeout for announcing.\n            clearTimeout(this._announceTimeoutId);\n        });\n        return this._onExit;\n    }\n    /** Makes sure the exit callbacks have been invoked when the element is destroyed. */\n    ngOnDestroy() {\n        this._destroyed = true;\n        this._clearFromModals();\n        this._completeExit();\n    }\n    /**\n     * Waits for the zone to settle before removing the element. Helps prevent\n     * errors where we end up removing an element which is in the middle of an animation.\n     */\n    _completeExit() {\n        this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n            this._ngZone.run(() => {\n                this._onExit.next();\n                this._onExit.complete();\n            });\n        });\n    }\n    /**\n     * Called after the portal contents have been attached. Can be\n     * used to modify the DOM once it's guaranteed to be in place.\n     */\n    _afterPortalAttached() {\n        const element = this._elementRef.nativeElement;\n        const panelClasses = this.snackBarConfig.panelClass;\n        if (panelClasses) {\n            if (Array.isArray(panelClasses)) {\n                // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n                panelClasses.forEach(cssClass => element.classList.add(cssClass));\n            }\n            else {\n                element.classList.add(panelClasses);\n            }\n        }\n        this._exposeToModals();\n    }\n    /**\n     * Some browsers won't expose the accessibility node of the live element if there is an\n     * `aria-modal` and the live element is outside of it. This method works around the issue by\n     * pointing the `aria-owns` of all modals to the live element.\n     */\n    _exposeToModals() {\n        // TODO(crisbeto): consider de-duplicating this with the `LiveAnnouncer`.\n        // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n        // section of the DOM we need to look through. This should cover all the cases we support, but\n        // the selector can be expanded if it turns out to be too narrow.\n        const id = this._liveElementId;\n        const modals = this._document.querySelectorAll('body > .cdk-overlay-container [aria-modal=\"true\"]');\n        for (let i = 0; i < modals.length; i++) {\n            const modal = modals[i];\n            const ariaOwns = modal.getAttribute('aria-owns');\n            this._trackedModals.add(modal);\n            if (!ariaOwns) {\n                modal.setAttribute('aria-owns', id);\n            }\n            else if (ariaOwns.indexOf(id) === -1) {\n                modal.setAttribute('aria-owns', ariaOwns + ' ' + id);\n            }\n        }\n    }\n    /** Clears the references to the live element from any modals it was added to. */\n    _clearFromModals() {\n        this._trackedModals.forEach(modal => {\n            const ariaOwns = modal.getAttribute('aria-owns');\n            if (ariaOwns) {\n                const newValue = ariaOwns.replace(this._liveElementId, '').trim();\n                if (newValue.length > 0) {\n                    modal.setAttribute('aria-owns', newValue);\n                }\n                else {\n                    modal.removeAttribute('aria-owns');\n                }\n            }\n        });\n        this._trackedModals.clear();\n    }\n    /** Asserts that no content is already attached to the container. */\n    _assertNotAttached() {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Attempting to attach snack bar content after content is already attached');\n        }\n    }\n    /**\n     * Starts a timeout to move the snack bar content to the live region so screen readers will\n     * announce it.\n     */\n    _screenReaderAnnounce() {\n        if (!this._announceTimeoutId) {\n            this._ngZone.runOutsideAngular(() => {\n                this._announceTimeoutId = setTimeout(() => {\n                    const inertElement = this._elementRef.nativeElement.querySelector('[aria-hidden]');\n                    const liveElement = this._elementRef.nativeElement.querySelector('[aria-live]');\n                    if (inertElement && liveElement) {\n                        // If an element in the snack bar content is focused before being moved\n                        // track it and restore focus after moving to the live region.\n                        let focusedElement = null;\n                        if (this._platform.isBrowser &&\n                            document.activeElement instanceof HTMLElement &&\n                            inertElement.contains(document.activeElement)) {\n                            focusedElement = document.activeElement;\n                        }\n                        inertElement.removeAttribute('aria-hidden');\n                        liveElement.appendChild(inertElement);\n                        focusedElement?.focus();\n                        this._onAnnounce.next();\n                        this._onAnnounce.complete();\n                    }\n                }, this._announceDelay);\n            });\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: _MatSnackBarContainerBase, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.Platform }, { token: MatSnackBarConfig }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: _MatSnackBarContainerBase, viewQueries: [{ propertyName: \"_portalOutlet\", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: _MatSnackBarContainerBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.Platform }, { type: MatSnackBarConfig }]; }, propDecorators: { _portalOutlet: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet, { static: true }]\n            }] } });\n/**\n * Internal component that wraps user-provided snack bar content.\n * @docs-private\n */\nclass MatSnackBarContainer extends _MatSnackBarContainerBase {\n    /** Applies the correct CSS class to the label based on its content. */\n    _afterPortalAttached() {\n        super._afterPortalAttached();\n        // Check to see if the attached component or template uses the MDC template structure,\n        // specifically the MDC label. If not, the container should apply the MDC label class to this\n        // component's label container, which will apply MDC's label styles to the attached view.\n        const label = this._label.nativeElement;\n        const labelClass = 'mdc-snackbar__label';\n        label.classList.toggle(labelClass, !label.querySelector(`.${labelClass}`));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBarContainer, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatSnackBarContainer, selector: \"mat-snack-bar-container\", host: { listeners: { \"@state.done\": \"onAnimationEnd($event)\" }, properties: { \"@state\": \"_animationState\" }, classAttribute: \"mdc-snackbar mat-mdc-snack-bar-container mdc-snackbar--open\" }, viewQueries: [{ propertyName: \"_label\", first: true, predicate: [\"label\"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mdc-snackbar__surface\\\">\\n  <!--\\n    This outer label wrapper will have the class `mdc-snackbar__label` applied if\\n    the attached template/component does not contain it.\\n  -->\\n  <div class=\\\"mat-mdc-snack-bar-label\\\" #label>\\n    <!-- Initialy holds the snack bar content, will be empty after announcing to screen readers. -->\\n    <div aria-hidden=\\\"true\\\">\\n      <ng-template cdkPortalOutlet></ng-template>\\n    </div>\\n\\n    <!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n    <div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\" [attr.id]=\\\"_liveElementId\\\"></div>\\n  </div>\\n</div>\\n\", styles: [\".mdc-snackbar{display:none;position:fixed;right:0;bottom:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;pointer-events:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mdc-snackbar--opening,.mdc-snackbar--open,.mdc-snackbar--closing{display:flex}.mdc-snackbar--open .mdc-snackbar__label,.mdc-snackbar--open .mdc-snackbar__actions{visibility:visible}.mdc-snackbar__surface{padding-left:0;padding-right:8px;display:flex;align-items:center;justify-content:flex-start;box-sizing:border-box;transform:scale(0.8);opacity:0}.mdc-snackbar__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-snackbar__surface::before{border-color:CanvasText}}[dir=rtl] .mdc-snackbar__surface,.mdc-snackbar__surface[dir=rtl]{padding-left:8px;padding-right:0}.mdc-snackbar--open .mdc-snackbar__surface{transform:scale(1);opacity:1;pointer-events:auto}.mdc-snackbar--closing .mdc-snackbar__surface{transform:scale(1)}.mdc-snackbar__label{padding-left:16px;padding-right:8px;width:100%;flex-grow:1;box-sizing:border-box;margin:0;visibility:hidden;padding-top:14px;padding-bottom:14px}[dir=rtl] .mdc-snackbar__label,.mdc-snackbar__label[dir=rtl]{padding-left:8px;padding-right:16px}.mdc-snackbar__label::before{display:inline;content:attr(data-mdc-snackbar-label-text)}.mdc-snackbar__actions{display:flex;flex-shrink:0;align-items:center;box-sizing:border-box;visibility:hidden}.mdc-snackbar__action+.mdc-snackbar__dismiss{margin-left:8px;margin-right:0}[dir=rtl] .mdc-snackbar__action+.mdc-snackbar__dismiss,.mdc-snackbar__action+.mdc-snackbar__dismiss[dir=rtl]{margin-left:0;margin-right:8px}.mat-mdc-snack-bar-container{margin:8px;--mdc-snackbar-container-shape:4px;position:static}.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:344px}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:100%}}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container{width:100vw}}.mat-mdc-snack-bar-container .mdc-snackbar__surface{max-width:672px}.mat-mdc-snack-bar-container .mdc-snackbar__surface{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)}.mat-mdc-snack-bar-container .mdc-snackbar__surface{background-color:var(--mdc-snackbar-container-color)}.mat-mdc-snack-bar-container .mdc-snackbar__surface{border-radius:var(--mdc-snackbar-container-shape)}.mat-mdc-snack-bar-container .mdc-snackbar__label{color:var(--mdc-snackbar-supporting-text-color)}.mat-mdc-snack-bar-container .mdc-snackbar__label{font-size:var(--mdc-snackbar-supporting-text-size);font-family:var(--mdc-snackbar-supporting-text-font);font-weight:var(--mdc-snackbar-supporting-text-weight);line-height:var(--mdc-snackbar-supporting-text-line-height)}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled){color:var(--mat-snack-bar-button-color);--mat-mdc-button-persistent-ripple-color: currentColor}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled) .mat-ripple-element{background-color:currentColor;opacity:.1}.mat-mdc-snack-bar-container .mdc-snackbar__label::before{display:none}.mat-mdc-snack-bar-handset,.mat-mdc-snack-bar-container,.mat-mdc-snack-bar-label{flex:1 1 auto}.mat-mdc-snack-bar-handset .mdc-snackbar__surface{width:100%}\"], dependencies: [{ kind: \"directive\", type: i3$1.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matSnackBarAnimations.snackBarState], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBarContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-snack-bar-container', changeDetection: ChangeDetectionStrategy.Default, encapsulation: ViewEncapsulation.None, animations: [matSnackBarAnimations.snackBarState], host: {\n                        'class': 'mdc-snackbar mat-mdc-snack-bar-container mdc-snackbar--open',\n                        '[@state]': '_animationState',\n                        '(@state.done)': 'onAnimationEnd($event)',\n                    }, template: \"<div class=\\\"mdc-snackbar__surface\\\">\\n  <!--\\n    This outer label wrapper will have the class `mdc-snackbar__label` applied if\\n    the attached template/component does not contain it.\\n  -->\\n  <div class=\\\"mat-mdc-snack-bar-label\\\" #label>\\n    <!-- Initialy holds the snack bar content, will be empty after announcing to screen readers. -->\\n    <div aria-hidden=\\\"true\\\">\\n      <ng-template cdkPortalOutlet></ng-template>\\n    </div>\\n\\n    <!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n    <div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\" [attr.id]=\\\"_liveElementId\\\"></div>\\n  </div>\\n</div>\\n\", styles: [\".mdc-snackbar{display:none;position:fixed;right:0;bottom:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;pointer-events:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mdc-snackbar--opening,.mdc-snackbar--open,.mdc-snackbar--closing{display:flex}.mdc-snackbar--open .mdc-snackbar__label,.mdc-snackbar--open .mdc-snackbar__actions{visibility:visible}.mdc-snackbar__surface{padding-left:0;padding-right:8px;display:flex;align-items:center;justify-content:flex-start;box-sizing:border-box;transform:scale(0.8);opacity:0}.mdc-snackbar__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-snackbar__surface::before{border-color:CanvasText}}[dir=rtl] .mdc-snackbar__surface,.mdc-snackbar__surface[dir=rtl]{padding-left:8px;padding-right:0}.mdc-snackbar--open .mdc-snackbar__surface{transform:scale(1);opacity:1;pointer-events:auto}.mdc-snackbar--closing .mdc-snackbar__surface{transform:scale(1)}.mdc-snackbar__label{padding-left:16px;padding-right:8px;width:100%;flex-grow:1;box-sizing:border-box;margin:0;visibility:hidden;padding-top:14px;padding-bottom:14px}[dir=rtl] .mdc-snackbar__label,.mdc-snackbar__label[dir=rtl]{padding-left:8px;padding-right:16px}.mdc-snackbar__label::before{display:inline;content:attr(data-mdc-snackbar-label-text)}.mdc-snackbar__actions{display:flex;flex-shrink:0;align-items:center;box-sizing:border-box;visibility:hidden}.mdc-snackbar__action+.mdc-snackbar__dismiss{margin-left:8px;margin-right:0}[dir=rtl] .mdc-snackbar__action+.mdc-snackbar__dismiss,.mdc-snackbar__action+.mdc-snackbar__dismiss[dir=rtl]{margin-left:0;margin-right:8px}.mat-mdc-snack-bar-container{margin:8px;--mdc-snackbar-container-shape:4px;position:static}.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:344px}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:100%}}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container{width:100vw}}.mat-mdc-snack-bar-container .mdc-snackbar__surface{max-width:672px}.mat-mdc-snack-bar-container .mdc-snackbar__surface{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)}.mat-mdc-snack-bar-container .mdc-snackbar__surface{background-color:var(--mdc-snackbar-container-color)}.mat-mdc-snack-bar-container .mdc-snackbar__surface{border-radius:var(--mdc-snackbar-container-shape)}.mat-mdc-snack-bar-container .mdc-snackbar__label{color:var(--mdc-snackbar-supporting-text-color)}.mat-mdc-snack-bar-container .mdc-snackbar__label{font-size:var(--mdc-snackbar-supporting-text-size);font-family:var(--mdc-snackbar-supporting-text-font);font-weight:var(--mdc-snackbar-supporting-text-weight);line-height:var(--mdc-snackbar-supporting-text-line-height)}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled){color:var(--mat-snack-bar-button-color);--mat-mdc-button-persistent-ripple-color: currentColor}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled) .mat-ripple-element{background-color:currentColor;opacity:.1}.mat-mdc-snack-bar-container .mdc-snackbar__label::before{display:none}.mat-mdc-snack-bar-handset,.mat-mdc-snack-bar-container,.mat-mdc-snack-bar-label{flex:1 1 auto}.mat-mdc-snack-bar-handset .mdc-snackbar__surface{width:100%}\"] }]\n        }], propDecorators: { _label: [{\n                type: ViewChild,\n                args: ['label', { static: true }]\n            }] } });\n\nclass MatSnackBarModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBarModule, declarations: [SimpleSnackBar,\n            MatSnackBarContainer,\n            MatSnackBarLabel,\n            MatSnackBarActions,\n            MatSnackBarAction], imports: [OverlayModule, PortalModule, CommonModule, MatButtonModule, MatCommonModule], exports: [MatCommonModule,\n            MatSnackBarContainer,\n            MatSnackBarLabel,\n            MatSnackBarActions,\n            MatSnackBarAction] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBarModule, imports: [OverlayModule, PortalModule, CommonModule, MatButtonModule, MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, PortalModule, CommonModule, MatButtonModule, MatCommonModule],\n                    exports: [\n                        MatCommonModule,\n                        MatSnackBarContainer,\n                        MatSnackBarLabel,\n                        MatSnackBarActions,\n                        MatSnackBarAction,\n                    ],\n                    declarations: [\n                        SimpleSnackBar,\n                        MatSnackBarContainer,\n                        MatSnackBarLabel,\n                        MatSnackBarActions,\n                        MatSnackBarAction,\n                    ],\n                }]\n        }] });\n\n/** @docs-private */\nfunction MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY() {\n    return new MatSnackBarConfig();\n}\n/** Injection token that can be used to specify default snack bar. */\nconst MAT_SNACK_BAR_DEFAULT_OPTIONS = new InjectionToken('mat-snack-bar-default-options', {\n    providedIn: 'root',\n    factory: MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY,\n});\nclass _MatSnackBarBase {\n    /** Reference to the currently opened snackbar at *any* level. */\n    get _openedSnackBarRef() {\n        const parent = this._parentSnackBar;\n        return parent ? parent._openedSnackBarRef : this._snackBarRefAtThisLevel;\n    }\n    set _openedSnackBarRef(value) {\n        if (this._parentSnackBar) {\n            this._parentSnackBar._openedSnackBarRef = value;\n        }\n        else {\n            this._snackBarRefAtThisLevel = value;\n        }\n    }\n    constructor(_overlay, _live, _injector, _breakpointObserver, _parentSnackBar, _defaultConfig) {\n        this._overlay = _overlay;\n        this._live = _live;\n        this._injector = _injector;\n        this._breakpointObserver = _breakpointObserver;\n        this._parentSnackBar = _parentSnackBar;\n        this._defaultConfig = _defaultConfig;\n        /**\n         * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).\n         * If there is a parent snack-bar service, all operations should delegate to that parent\n         * via `_openedSnackBarRef`.\n         */\n        this._snackBarRefAtThisLevel = null;\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom component for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param component Component to be instantiated.\n     * @param config Extra configuration for the snack bar.\n     */\n    openFromComponent(component, config) {\n        return this._attach(component, config);\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom template for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param template Template to be instantiated.\n     * @param config Extra configuration for the snack bar.\n     */\n    openFromTemplate(template, config) {\n        return this._attach(template, config);\n    }\n    /**\n     * Opens a snackbar with a message and an optional action.\n     * @param message The message to show in the snackbar.\n     * @param action The label for the snackbar action.\n     * @param config Additional configuration options for the snackbar.\n     */\n    open(message, action = '', config) {\n        const _config = { ...this._defaultConfig, ...config };\n        // Since the user doesn't have access to the component, we can\n        // override the data to pass in our own message and action.\n        _config.data = { message, action };\n        // Since the snack bar has `role=\"alert\"`, we don't\n        // want to announce the same message twice.\n        if (_config.announcementMessage === message) {\n            _config.announcementMessage = undefined;\n        }\n        return this.openFromComponent(this.simpleSnackBarComponent, _config);\n    }\n    /**\n     * Dismisses the currently-visible snack bar.\n     */\n    dismiss() {\n        if (this._openedSnackBarRef) {\n            this._openedSnackBarRef.dismiss();\n        }\n    }\n    ngOnDestroy() {\n        // Only dismiss the snack bar at the current level on destroy.\n        if (this._snackBarRefAtThisLevel) {\n            this._snackBarRefAtThisLevel.dismiss();\n        }\n    }\n    /**\n     * Attaches the snack bar container component to the overlay.\n     */\n    _attachSnackBarContainer(overlayRef, config) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatSnackBarConfig, useValue: config }],\n        });\n        const containerPortal = new ComponentPortal(this.snackBarContainerComponent, config.viewContainerRef, injector);\n        const containerRef = overlayRef.attach(containerPortal);\n        containerRef.instance.snackBarConfig = config;\n        return containerRef.instance;\n    }\n    /**\n     * Places a new component or a template as the content of the snack bar container.\n     */\n    _attach(content, userConfig) {\n        const config = { ...new MatSnackBarConfig(), ...this._defaultConfig, ...userConfig };\n        const overlayRef = this._createOverlay(config);\n        const container = this._attachSnackBarContainer(overlayRef, config);\n        const snackBarRef = new MatSnackBarRef(container, overlayRef);\n        if (content instanceof TemplateRef) {\n            const portal = new TemplatePortal(content, null, {\n                $implicit: config.data,\n                snackBarRef,\n            });\n            snackBarRef.instance = container.attachTemplatePortal(portal);\n        }\n        else {\n            const injector = this._createInjector(config, snackBarRef);\n            const portal = new ComponentPortal(content, undefined, injector);\n            const contentRef = container.attachComponentPortal(portal);\n            // We can't pass this via the injector, because the injector is created earlier.\n            snackBarRef.instance = contentRef.instance;\n        }\n        // Subscribe to the breakpoint observer and attach the mat-snack-bar-handset class as\n        // appropriate. This class is applied to the overlay element because the overlay must expand to\n        // fill the width of the screen for full width snackbars.\n        this._breakpointObserver\n            .observe(Breakpoints.HandsetPortrait)\n            .pipe(takeUntil(overlayRef.detachments()))\n            .subscribe(state => {\n            overlayRef.overlayElement.classList.toggle(this.handsetCssClass, state.matches);\n        });\n        if (config.announcementMessage) {\n            // Wait until the snack bar contents have been announced then deliver this message.\n            container._onAnnounce.subscribe(() => {\n                this._live.announce(config.announcementMessage, config.politeness);\n            });\n        }\n        this._animateSnackBar(snackBarRef, config);\n        this._openedSnackBarRef = snackBarRef;\n        return this._openedSnackBarRef;\n    }\n    /** Animates the old snack bar out and the new one in. */\n    _animateSnackBar(snackBarRef, config) {\n        // When the snackbar is dismissed, clear the reference to it.\n        snackBarRef.afterDismissed().subscribe(() => {\n            // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\n            if (this._openedSnackBarRef == snackBarRef) {\n                this._openedSnackBarRef = null;\n            }\n            if (config.announcementMessage) {\n                this._live.clear();\n            }\n        });\n        if (this._openedSnackBarRef) {\n            // If a snack bar is already in view, dismiss it and enter the\n            // new snack bar after exit animation is complete.\n            this._openedSnackBarRef.afterDismissed().subscribe(() => {\n                snackBarRef.containerInstance.enter();\n            });\n            this._openedSnackBarRef.dismiss();\n        }\n        else {\n            // If no snack bar is in view, enter the new snack bar.\n            snackBarRef.containerInstance.enter();\n        }\n        // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.\n        if (config.duration && config.duration > 0) {\n            snackBarRef.afterOpened().subscribe(() => snackBarRef._dismissAfter(config.duration));\n        }\n    }\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified snack bar config.\n     */\n    _createOverlay(config) {\n        const overlayConfig = new OverlayConfig();\n        overlayConfig.direction = config.direction;\n        let positionStrategy = this._overlay.position().global();\n        // Set horizontal position.\n        const isRtl = config.direction === 'rtl';\n        const isLeft = config.horizontalPosition === 'left' ||\n            (config.horizontalPosition === 'start' && !isRtl) ||\n            (config.horizontalPosition === 'end' && isRtl);\n        const isRight = !isLeft && config.horizontalPosition !== 'center';\n        if (isLeft) {\n            positionStrategy.left('0');\n        }\n        else if (isRight) {\n            positionStrategy.right('0');\n        }\n        else {\n            positionStrategy.centerHorizontally();\n        }\n        // Set horizontal position.\n        if (config.verticalPosition === 'top') {\n            positionStrategy.top('0');\n        }\n        else {\n            positionStrategy.bottom('0');\n        }\n        overlayConfig.positionStrategy = positionStrategy;\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an injector to be used inside of a snack bar component.\n     * @param config Config that was used to create the snack bar.\n     * @param snackBarRef Reference to the snack bar.\n     */\n    _createInjector(config, snackBarRef) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        return Injector.create({\n            parent: userInjector || this._injector,\n            providers: [\n                { provide: MatSnackBarRef, useValue: snackBarRef },\n                { provide: MAT_SNACK_BAR_DATA, useValue: config.data },\n            ],\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: _MatSnackBarBase, deps: [{ token: i1$1.Overlay }, { token: i2$1.LiveAnnouncer }, { token: i0.Injector }, { token: i3$2.BreakpointObserver }, { token: _MatSnackBarBase, optional: true, skipSelf: true }, { token: MAT_SNACK_BAR_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: _MatSnackBarBase }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: _MatSnackBarBase, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.Overlay }, { type: i2$1.LiveAnnouncer }, { type: i0.Injector }, { type: i3$2.BreakpointObserver }, { type: _MatSnackBarBase, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: MatSnackBarConfig, decorators: [{\n                    type: Inject,\n                    args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]\n                }] }]; } });\n/**\n * Service to dispatch Material Design snack bar messages.\n */\nclass MatSnackBar extends _MatSnackBarBase {\n    constructor(overlay, live, injector, breakpointObserver, parentSnackBar, defaultConfig) {\n        super(overlay, live, injector, breakpointObserver, parentSnackBar, defaultConfig);\n        this.simpleSnackBarComponent = SimpleSnackBar;\n        this.snackBarContainerComponent = MatSnackBarContainer;\n        this.handsetCssClass = 'mat-mdc-snack-bar-handset';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBar, deps: [{ token: i1$1.Overlay }, { token: i2$1.LiveAnnouncer }, { token: i0.Injector }, { token: i3$2.BreakpointObserver }, { token: MatSnackBar, optional: true, skipSelf: true }, { token: MAT_SNACK_BAR_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBar, providedIn: MatSnackBarModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBar, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: MatSnackBarModule }]\n        }], ctorParameters: function () { return [{ type: i1$1.Overlay }, { type: i2$1.LiveAnnouncer }, { type: i0.Injector }, { type: i3$2.BreakpointObserver }, { type: MatSnackBar, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: MatSnackBarConfig, decorators: [{\n                    type: Inject,\n                    args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]\n                }] }]; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SNACK_BAR_DATA, MAT_SNACK_BAR_DEFAULT_OPTIONS, MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY, MatSnackBar, MatSnackBarAction, MatSnackBarActions, MatSnackBarConfig, MatSnackBarContainer, MatSnackBarLabel, MatSnackBarModule, MatSnackBarRef, SimpleSnackBar, _MatSnackBarBase, _MatSnackBarContainerBase, matSnackBarAnimations };\n"],"names":["Observable","Subscription","EMPTY_SUBSCRIPTION","ObjectUnsubscribedError","arrRemove","errorContext","Subject","constructor","closed","currentObservers","observers","isStopped","hasError","thrownError","lift","operator","subject","AnonymousSubject","_throwIfClosed","next","value","Array","from","observer","error","err","length","shift","complete","unsubscribe","observed","_a","_trySubscribe","subscriber","_subscribe","_checkFinalizedStatuses","_innerSubscribe","push","asObservable","observable","source","create","destination","_b","call","subscribe","EMPTY","empty","scheduler","emptyScheduled","schedule","Subscriber","createOperatorSubscriber","onNext","onComplete","onError","onFinalize","OperatorSubscriber","shouldUnsubscribe","_next","_error","_complete","operate","take","count","seen","innerFrom","noop","takeUntil","notifier","createErrorClass","_super","ObjectUnsubscribedErrorImpl","name","message","isFunction","hasLift","init","liftedSource","TypeError","i0","InjectionToken","Directive","Component","ViewEncapsulation","ChangeDetectionStrategy","Inject","inject","ViewChild","NgModule","Injector","TemplateRef","Injectable","Optional","SkipSelf","i2","DOCUMENT","CommonModule","i3","MatButtonModule","trigger","state","style","transition","animate","i3$1","BasePortalOutlet","CdkPortalOutlet","PortalModule","ComponentPortal","TemplatePortal","i1","i2$1","i3$2","Breakpoints","i1$1","OverlayModule","OverlayConfig","MatCommonModule","SimpleSnackBar_div_2_Template","rf","ctx","_r2","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","SimpleSnackBar_div_2_Template_button_click_1_listener","ɵɵrestoreView","ctx_r1","ɵɵnextContext","ɵɵresetView","action","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵadvance","ɵɵtextInterpolate1","data","_c0","MatSnackBarContainer_ng_template_4_Template","MAX_TIMEOUT","Math","pow","MatSnackBarRef","containerInstance","_overlayRef","_afterDismissed","_afterOpened","_onAction","_dismissedByAction","_onExit","_finishDismiss","dismiss","exit","clearTimeout","_durationTimeoutId","dismissWithAction","closeWithAction","_dismissAfter","duration","setTimeout","min","_open","dispose","dismissedByAction","afterDismissed","afterOpened","_onEnter","onAction","MAT_SNACK_BAR_DATA","MatSnackBarConfig","politeness","announcementMessage","horizontalPosition","verticalPosition","MatSnackBarLabel","_","ɵfac","MatSnackBarLabel_Factory","t","_2","ɵdir","ɵɵdefineDirective","type","selectors","hostAttrs","ngDevMode","ɵsetClassMetadata","args","selector","host","MatSnackBarActions","MatSnackBarActions_Factory","MatSnackBarAction","MatSnackBarAction_Factory","SimpleSnackBar","snackBarRef","hasAction","SimpleSnackBar_Factory","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","exportAs","decls","vars","consts","template","SimpleSnackBar_Template","ɵɵtemplate","ɵɵproperty","dependencies","NgIf","MatButton","styles","encapsulation","changeDetection","None","OnPush","undefined","decorators","matSnackBarAnimations","snackBarState","transform","opacity","uniqueId","_MatSnackBarContainerBase","_ngZone","_elementRef","_changeDetectorRef","_platform","snackBarConfig","_document","_trackedModals","Set","_announceDelay","_destroyed","_onAnnounce","_animationState","_liveElementId","attachDomPortal","portal","_assertNotAttached","result","_portalOutlet","_afterPortalAttached","_live","FIREFOX","_role","attachComponentPortal","attachTemplatePortal","onAnimationEnd","event","fromState","toState","_completeExit","onEnter","run","enter","detectChanges","_screenReaderAnnounce","nativeElement","setAttribute","_announceTimeoutId","ngOnDestroy","_clearFromModals","onMicrotaskEmpty","pipe","element","panelClasses","panelClass","isArray","forEach","cssClass","classList","add","_exposeToModals","id","modals","querySelectorAll","i","modal","ariaOwns","getAttribute","indexOf","newValue","replace","trim","removeAttribute","clear","hasAttached","Error","runOutsideAngular","inertElement","querySelector","liveElement","focusedElement","isBrowser","document","activeElement","HTMLElement","contains","appendChild","focus","_MatSnackBarContainerBase_Factory","NgZone","ElementRef","ChangeDetectorRef","Platform","viewQuery","_MatSnackBarContainerBase_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","features","ɵɵInheritDefinitionFeature","static","MatSnackBarContainer","label","_label","labelClass","toggle","ɵMatSnackBarContainer_BaseFactory","MatSnackBarContainer_Factory","ɵɵgetInheritedFactory","MatSnackBarContainer_Query","hostVars","hostBindings","MatSnackBarContainer_HostBindings","ɵɵsyntheticHostListener","MatSnackBarContainer_animation_state_done_HostBindingHandler","$event","ɵɵsyntheticHostProperty","MatSnackBarContainer_Template","ɵɵelement","ɵɵattribute","animation","Default","animations","MatSnackBarModule","MatSnackBarModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","exports","declarations","MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY","MAT_SNACK_BAR_DEFAULT_OPTIONS","providedIn","factory","_MatSnackBarBase","_openedSnackBarRef","parent","_parentSnackBar","_snackBarRefAtThisLevel","_overlay","_injector","_breakpointObserver","_defaultConfig","openFromComponent","component","config","_attach","openFromTemplate","open","_config","simpleSnackBarComponent","_attachSnackBarContainer","overlayRef","userInjector","viewContainerRef","injector","providers","provide","useValue","containerPortal","snackBarContainerComponent","containerRef","attach","instance","content","userConfig","_createOverlay","container","$implicit","_createInjector","contentRef","observe","HandsetPortrait","detachments","overlayElement","handsetCssClass","matches","announce","_animateSnackBar","overlayConfig","direction","positionStrategy","position","global","isRtl","isLeft","isRight","left","right","centerHorizontally","top","bottom","_MatSnackBarBase_Factory","ɵɵinject","Overlay","LiveAnnouncer","BreakpointObserver","ɵprov","ɵɵdefineInjectable","token","MatSnackBar","overlay","live","breakpointObserver","parentSnackBar","defaultConfig","MatSnackBar_Factory"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7]}