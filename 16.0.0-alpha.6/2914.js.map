{"version":3,"file":"2914.js","mappings":"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","sources":["./node_modules/rxjs/dist/esm/internal/Subject.js","./node_modules/rxjs/dist/esm/internal/observable/empty.js","./node_modules/rxjs/dist/esm/internal/observable/from.js","./node_modules/rxjs/dist/esm/internal/observable/merge.js","./node_modules/rxjs/dist/esm/internal/operators/OperatorSubscriber.js","./node_modules/rxjs/dist/esm/internal/operators/filter.js","./node_modules/rxjs/dist/esm/internal/operators/map.js","./node_modules/rxjs/dist/esm/internal/operators/mergeAll.js","./node_modules/rxjs/dist/esm/internal/operators/mergeInternals.js","./node_modules/rxjs/dist/esm/internal/operators/mergeMap.js","./node_modules/rxjs/dist/esm/internal/operators/observeOn.js","./node_modules/rxjs/dist/esm/internal/operators/subscribeOn.js","./node_modules/rxjs/dist/esm/internal/operators/take.js","./node_modules/rxjs/dist/esm/internal/operators/takeUntil.js","./node_modules/rxjs/dist/esm/internal/operators/takeWhile.js","./node_modules/rxjs/dist/esm/internal/scheduled/scheduleArray.js","./node_modules/rxjs/dist/esm/internal/scheduled/scheduleAsyncIterable.js","./node_modules/rxjs/dist/esm/internal/scheduled/scheduleIterable.js","./node_modules/rxjs/dist/esm/internal/scheduled/scheduleObservable.js","./node_modules/rxjs/dist/esm/internal/scheduled/schedulePromise.js","./node_modules/rxjs/dist/esm/internal/scheduled/scheduleReadableStreamLike.js","./node_modules/rxjs/dist/esm/internal/scheduled/scheduled.js","./node_modules/rxjs/dist/esm/internal/util/ObjectUnsubscribedError.js","./node_modules/rxjs/dist/esm/internal/util/args.js","./node_modules/rxjs/dist/esm/internal/util/executeSchedule.js","./node_modules/rxjs/dist/esm/internal/util/isScheduler.js","./node_modules/rxjs/dist/esm/internal/util/lift.js","./node_modules/@angular/cdk/fesm2022/overlay.mjs"],"sourcesContent":["import { Observable } from './Observable';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\nexport class Subject extends Observable {\n    constructor() {\n        super();\n        this.closed = false;\n        this.currentObservers = null;\n        this.observers = [];\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    lift(operator) {\n        const subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    }\n    _throwIfClosed() {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n    }\n    next(value) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                if (!this.currentObservers) {\n                    this.currentObservers = Array.from(this.observers);\n                }\n                for (const observer of this.currentObservers) {\n                    observer.next(value);\n                }\n            }\n        });\n    }\n    error(err) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.hasError = this.isStopped = true;\n                this.thrownError = err;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().error(err);\n                }\n            }\n        });\n    }\n    complete() {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.isStopped = true;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().complete();\n                }\n            }\n        });\n    }\n    unsubscribe() {\n        this.isStopped = this.closed = true;\n        this.observers = this.currentObservers = null;\n    }\n    get observed() {\n        var _a;\n        return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n    _trySubscribe(subscriber) {\n        this._throwIfClosed();\n        return super._trySubscribe(subscriber);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._checkFinalizedStatuses(subscriber);\n        return this._innerSubscribe(subscriber);\n    }\n    _innerSubscribe(subscriber) {\n        const { hasError, isStopped, observers } = this;\n        if (hasError || isStopped) {\n            return EMPTY_SUBSCRIPTION;\n        }\n        this.currentObservers = null;\n        observers.push(subscriber);\n        return new Subscription(() => {\n            this.currentObservers = null;\n            arrRemove(observers, subscriber);\n        });\n    }\n    _checkFinalizedStatuses(subscriber) {\n        const { hasError, thrownError, isStopped } = this;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped) {\n            subscriber.complete();\n        }\n    }\n    asObservable() {\n        const observable = new Observable();\n        observable.source = this;\n        return observable;\n    }\n}\nSubject.create = (destination, source) => {\n    return new AnonymousSubject(destination, source);\n};\nexport class AnonymousSubject extends Subject {\n    constructor(destination, source) {\n        super();\n        this.destination = destination;\n        this.source = source;\n    }\n    next(value) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n    }\n    error(err) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n    }\n    complete() {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    _subscribe(subscriber) {\n        var _a, _b;\n        return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;\n    }\n}\n","import { Observable } from '../Observable';\nexport const EMPTY = new Observable((subscriber) => subscriber.complete());\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nfunction emptyScheduled(scheduler) {\n    return new Observable((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n","import { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\nexport function from(input, scheduler) {\n    return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n","import { mergeAll } from '../operators/mergeAll';\nimport { innerFrom } from './innerFrom';\nimport { EMPTY } from './empty';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from './from';\nexport function merge(...args) {\n    const scheduler = popScheduler(args);\n    const concurrent = popNumber(args, Infinity);\n    const sources = args;\n    return !sources.length\n        ?\n            EMPTY\n        : sources.length === 1\n            ?\n                innerFrom(sources[0])\n            :\n                mergeAll(concurrent)(from(sources, scheduler));\n}\n","import { Subscriber } from '../Subscriber';\nexport function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {\n    return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\nexport class OperatorSubscriber extends Subscriber {\n    constructor(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {\n        super(destination);\n        this.onFinalize = onFinalize;\n        this.shouldUnsubscribe = shouldUnsubscribe;\n        this._next = onNext\n            ? function (value) {\n                try {\n                    onNext(value);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n            }\n            : super._next;\n        this._error = onError\n            ? function (err) {\n                try {\n                    onError(err);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : super._error;\n        this._complete = onComplete\n            ? function () {\n                try {\n                    onComplete();\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : super._complete;\n    }\n    unsubscribe() {\n        var _a;\n        if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n            const { closed } = this;\n            super.unsubscribe();\n            !closed && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));\n        }\n    }\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function filter(predicate, thisArg) {\n    return operate((source, subscriber) => {\n        let index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value)));\n    });\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function map(project, thisArg) {\n    return operate((source, subscriber) => {\n        let index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            subscriber.next(project.call(thisArg, value, index++));\n        }));\n    });\n}\n","import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nexport function mergeAll(concurrent = Infinity) {\n    return mergeMap(identity, concurrent);\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function mergeInternals(source, subscriber, project, concurrent, onBeforeNext, expand, innerSubScheduler, additionalFinalizer) {\n    const buffer = [];\n    let active = 0;\n    let index = 0;\n    let isComplete = false;\n    const checkComplete = () => {\n        if (isComplete && !buffer.length && !active) {\n            subscriber.complete();\n        }\n    };\n    const outerNext = (value) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\n    const doInnerSub = (value) => {\n        expand && subscriber.next(value);\n        active++;\n        let innerComplete = false;\n        innerFrom(project(value, index++)).subscribe(createOperatorSubscriber(subscriber, (innerValue) => {\n            onBeforeNext === null || onBeforeNext === void 0 ? void 0 : onBeforeNext(innerValue);\n            if (expand) {\n                outerNext(innerValue);\n            }\n            else {\n                subscriber.next(innerValue);\n            }\n        }, () => {\n            innerComplete = true;\n        }, undefined, () => {\n            if (innerComplete) {\n                try {\n                    active--;\n                    while (buffer.length && active < concurrent) {\n                        const bufferedValue = buffer.shift();\n                        if (innerSubScheduler) {\n                            executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));\n                        }\n                        else {\n                            doInnerSub(bufferedValue);\n                        }\n                    }\n                    checkComplete();\n                }\n                catch (err) {\n                    subscriber.error(err);\n                }\n            }\n        }));\n    };\n    source.subscribe(createOperatorSubscriber(subscriber, outerNext, () => {\n        isComplete = true;\n        checkComplete();\n    }));\n    return () => {\n        additionalFinalizer === null || additionalFinalizer === void 0 ? void 0 : additionalFinalizer();\n    };\n}\n","import { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\nexport function mergeMap(project, resultSelector, concurrent = Infinity) {\n    if (isFunction(resultSelector)) {\n        return mergeMap((a, i) => map((b, ii) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);\n    }\n    else if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent));\n}\n","import { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function observeOn(scheduler, delay = 0) {\n    return operate((source, subscriber) => {\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay), () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay), (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)));\n    });\n}\n","import { operate } from '../util/lift';\nexport function subscribeOn(scheduler, delay = 0) {\n    return operate((source, subscriber) => {\n        subscriber.add(scheduler.schedule(() => source.subscribe(subscriber), delay));\n    });\n}\n","import { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function take(count) {\n    return count <= 0\n        ?\n            () => EMPTY\n        : operate((source, subscriber) => {\n            let seen = 0;\n            source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n                if (++seen <= count) {\n                    subscriber.next(value);\n                    if (count <= seen) {\n                        subscriber.complete();\n                    }\n                }\n            }));\n        });\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\nexport function takeUntil(notifier) {\n    return operate((source, subscriber) => {\n        innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, () => subscriber.complete(), noop));\n        !subscriber.closed && source.subscribe(subscriber);\n    });\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function takeWhile(predicate, inclusive = false) {\n    return operate((source, subscriber) => {\n        let index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            const result = predicate(value, index++);\n            (result || inclusive) && subscriber.next(value);\n            !result && subscriber.complete();\n        }));\n    });\n}\n","import { Observable } from '../Observable';\nexport function scheduleArray(input, scheduler) {\n    return new Observable((subscriber) => {\n        let i = 0;\n        return scheduler.schedule(function () {\n            if (i === input.length) {\n                subscriber.complete();\n            }\n            else {\n                subscriber.next(input[i++]);\n                if (!subscriber.closed) {\n                    this.schedule();\n                }\n            }\n        });\n    });\n}\n","import { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleAsyncIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    return new Observable((subscriber) => {\n        executeSchedule(subscriber, scheduler, () => {\n            const iterator = input[Symbol.asyncIterator]();\n            executeSchedule(subscriber, scheduler, () => {\n                iterator.next().then((result) => {\n                    if (result.done) {\n                        subscriber.complete();\n                    }\n                    else {\n                        subscriber.next(result.value);\n                    }\n                });\n            }, 0, true);\n        });\n    });\n}\n","import { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleIterable(input, scheduler) {\n    return new Observable((subscriber) => {\n        let iterator;\n        executeSchedule(subscriber, scheduler, () => {\n            iterator = input[Symbol_iterator]();\n            executeSchedule(subscriber, scheduler, () => {\n                let value;\n                let done;\n                try {\n                    ({ value, done } = iterator.next());\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return;\n                }\n                if (done) {\n                    subscriber.complete();\n                }\n                else {\n                    subscriber.next(value);\n                }\n            }, 0, true);\n        });\n        return () => isFunction(iterator === null || iterator === void 0 ? void 0 : iterator.return) && iterator.return();\n    });\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nexport function scheduleObservable(input, scheduler) {\n    return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nexport function schedulePromise(input, scheduler) {\n    return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n","import { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nexport function scheduleReadableStreamLike(input, scheduler) {\n    return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\nexport function scheduled(input, scheduler) {\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return scheduleObservable(input, scheduler);\n        }\n        if (isArrayLike(input)) {\n            return scheduleArray(input, scheduler);\n        }\n        if (isPromise(input)) {\n            return schedulePromise(input, scheduler);\n        }\n        if (isAsyncIterable(input)) {\n            return scheduleAsyncIterable(input, scheduler);\n        }\n        if (isIterable(input)) {\n            return scheduleIterable(input, scheduler);\n        }\n        if (isReadableStreamLike(input)) {\n            return scheduleReadableStreamLike(input, scheduler);\n        }\n    }\n    throw createInvalidObservableTypeError(input);\n}\n","import { createErrorClass } from './createErrorClass';\nexport const ObjectUnsubscribedError = createErrorClass((_super) => function ObjectUnsubscribedErrorImpl() {\n    _super(this);\n    this.name = 'ObjectUnsubscribedError';\n    this.message = 'object unsubscribed';\n});\n","import { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\nfunction last(arr) {\n    return arr[arr.length - 1];\n}\nexport function popResultSelector(args) {\n    return isFunction(last(args)) ? args.pop() : undefined;\n}\nexport function popScheduler(args) {\n    return isScheduler(last(args)) ? args.pop() : undefined;\n}\nexport function popNumber(args, defaultValue) {\n    return typeof last(args) === 'number' ? args.pop() : defaultValue;\n}\n","export function executeSchedule(parentSubscription, scheduler, work, delay = 0, repeat = false) {\n    const scheduleSubscription = scheduler.schedule(function () {\n        work();\n        if (repeat) {\n            parentSubscription.add(this.schedule(null, delay));\n        }\n        else {\n            this.unsubscribe();\n        }\n    }, delay);\n    parentSubscription.add(scheduleSubscription);\n    if (!repeat) {\n        return scheduleSubscription;\n    }\n}\n","import { isFunction } from './isFunction';\nexport function isScheduler(value) {\n    return value && isFunction(value.schedule);\n}\n","import { isFunction } from './isFunction';\nexport function hasLift(source) {\n    return isFunction(source === null || source === void 0 ? void 0 : source.lift);\n}\nexport function operate(init) {\n    return (source) => {\n        if (hasLift(source)) {\n            return source.lift(function (liftedSource) {\n                try {\n                    return init(liftedSource, this);\n                }\n                catch (err) {\n                    this.error(err);\n                }\n            });\n        }\n        throw new TypeError('Unable to lift unknown Observable type');\n    };\n}\n","import * as i1 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport * as i6 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, Optional, ElementRef, ApplicationRef, ANIMATION_MODULE_TYPE, InjectionToken, Directive, EventEmitter, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { supportsScrollBehavior, _getEventTarget, _isTestEnvironment } from '@angular/cdk/platform';\nimport { filter, take, takeUntil, takeWhile } from 'rxjs/operators';\nimport * as i5 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Subject, Subscription, merge } from 'rxjs';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\nconst scrollBehaviorSupported = supportsScrollBehavior();\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach() { }\n    /** Blocks page-level scroll while the attached overlay is open. */\n    enable() {\n        if (this._canBeEnabled()) {\n            const root = this._document.documentElement;\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /** Unblocks page-level scroll while the attached overlay is open. */\n    disable() {\n        if (this._isEnabled) {\n            const html = this._document.documentElement;\n            const body = this._document.body;\n            const htmlStyle = html.style;\n            const bodyStyle = body.style;\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            // Note that we don't mutate the property if the browser doesn't support `scroll-behavior`,\n            // because it can throw off feature detections in `supportsScrollBehavior` which\n            // checks for `'scrollBehavior' in documentElement.style`.\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            }\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n                bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n            }\n        }\n    }\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        const html = this._document.documentElement;\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        const body = this._document.body;\n        const viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    }\n}\n\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /** Detaches the overlay ref and disables the scroll strategy. */\n        this._detach = () => {\n            this.disable();\n            if (this._overlayRef.hasAttached()) {\n                this._ngZone.run(() => this._overlayRef.detach());\n            }\n        };\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables the closing of the attached overlay on scroll. */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        const stream = this._scrollDispatcher.scrolled(0).pipe(filter(scrollable => {\n            return (!scrollable ||\n                !this._overlayRef.overlayElement.contains(scrollable.getElementRef().nativeElement));\n        }));\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe(() => {\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > this._config.threshold) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /** Disables the closing the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/** Scroll strategy that doesn't do anything. */\nclass NoopScrollStrategy {\n    /** Does nothing, as this scroll strategy is a no-op. */\n    enable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    disable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    attach() { }\n}\n\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is scrolled out of view\n * @docs-private\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some(containerBounds => {\n        const outsideAbove = element.bottom < containerBounds.top;\n        const outsideBelow = element.top > containerBounds.bottom;\n        const outsideLeft = element.right < containerBounds.left;\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    });\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is clipped\n * @docs-private\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some(scrollContainerRect => {\n        const clippedAbove = element.top < scrollContainerRect.top;\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        const clippedLeft = element.left < scrollContainerRect.left;\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    });\n}\n\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables repositioning of the attached overlay on scroll. */\n    enable() {\n        if (!this._scrollSubscription) {\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(() => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run(() => this._overlayRef.detach());\n                    }\n                }\n            });\n        }\n    }\n    /** Disables repositioning of the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /** Do nothing on scroll. */\n        this.noop = () => new NoopScrollStrategy();\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = (config) => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config);\n        /** Block scrolling. */\n        this.block = () => new BlockScrollStrategy(this._viewportRuler, this._document);\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = (config) => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config);\n        this._document = document;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ScrollStrategyOptions, deps: [{ token: i1.ScrollDispatcher }, { token: i1.ViewportRuler }, { token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ScrollStrategyOptions, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ScrollStrategyOptions, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.ScrollDispatcher }, { type: i1.ViewportRuler }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/** Initial configuration used when creating an overlay. */\nclass OverlayConfig {\n    constructor(config) {\n        /** Strategy to be used when handling scroll events while the overlay is open. */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /** Custom class to add to the overlay pane. */\n        this.panelClass = '';\n        /** Whether the overlay has a backdrop. */\n        this.hasBackdrop = false;\n        /** Custom class to add to the backdrop */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            const configKeys = Object.keys(config);\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the possible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = config[key];\n                }\n            }\n        }\n    }\n}\n\n/** The points of the origin element and the overlay element to connect. */\nclass ConnectionPositionPair {\n    constructor(origin, overlay, \n    /** Offset along the X axis. */\n    offsetX, \n    /** Offset along the Y axis. */\n    offsetY, \n    /** Class(es) to be applied to the panel while this position is active. */\n    panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  @docs-private\n */\nclass ScrollingVisibility {\n}\n/** The change event emitted by the strategy when a fallback position is used. */\nclass ConnectedOverlayPositionChange {\n    constructor(\n    /** The position used as a result of this change. */\n    connectionPair, \n    /** @docs-private */\n    scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\n/**\n * Validates whether a vertical position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * Service for dispatching events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass BaseOverlayDispatcher {\n    constructor(document) {\n        /** Currently attached overlays in the order they were attached. */\n        this._attachedOverlays = [];\n        this._document = document;\n    }\n    ngOnDestroy() {\n        this.detach();\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        this._attachedOverlays.push(overlayRef);\n    }\n    /** Remove an overlay from the list of attached overlay refs. */\n    remove(overlayRef) {\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this.detach();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: BaseOverlayDispatcher, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: BaseOverlayDispatcher, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: BaseOverlayDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher extends BaseOverlayDispatcher {\n    constructor(document, \n    /** @breaking-change 14.0.0 _ngZone will be required. */\n    _ngZone) {\n        super(document);\n        this._ngZone = _ngZone;\n        /** Keyboard event listener that will be attached to the body. */\n        this._keydownListener = (event) => {\n            const overlays = this._attachedOverlays;\n            for (let i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEvents.observers.length > 0) {\n                    const keydownEvents = overlays[i]._keydownEvents;\n                    /** @breaking-change 14.0.0 _ngZone will be required. */\n                    if (this._ngZone) {\n                        this._ngZone.run(() => keydownEvents.next(event));\n                    }\n                    else {\n                        keydownEvents.next(event);\n                    }\n                    break;\n                }\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            /** @breaking-change 14.0.0 _ngZone will be required. */\n            if (this._ngZone) {\n                this._ngZone.runOutsideAngular(() => this._document.body.addEventListener('keydown', this._keydownListener));\n            }\n            else {\n                this._document.body.addEventListener('keydown', this._keydownListener);\n            }\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener);\n            this._isAttached = false;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: OverlayKeyboardDispatcher, deps: [{ token: DOCUMENT }, { token: i0.NgZone, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: OverlayKeyboardDispatcher, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: OverlayKeyboardDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * Service for dispatching mouse click events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayOutsideClickDispatcher extends BaseOverlayDispatcher {\n    constructor(document, _platform, \n    /** @breaking-change 14.0.0 _ngZone will be required. */\n    _ngZone) {\n        super(document);\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._cursorStyleIsSet = false;\n        /** Store pointerdown event target to track origin of click. */\n        this._pointerDownListener = (event) => {\n            this._pointerDownEventTarget = _getEventTarget(event);\n        };\n        /** Click event listener that will be attached to the body propagate phase. */\n        this._clickListener = (event) => {\n            const target = _getEventTarget(event);\n            // In case of a click event, we want to check the origin of the click\n            // (e.g. in case where a user starts a click inside the overlay and\n            // releases the click outside of it).\n            // This is done by using the event target of the preceding pointerdown event.\n            // Every click event caused by a pointer device has a preceding pointerdown\n            // event, unless the click was programmatically triggered (e.g. in a unit test).\n            const origin = event.type === 'click' && this._pointerDownEventTarget\n                ? this._pointerDownEventTarget\n                : target;\n            // Reset the stored pointerdown event target, to avoid having it interfere\n            // in subsequent events.\n            this._pointerDownEventTarget = null;\n            // We copy the array because the original may be modified asynchronously if the\n            // outsidePointerEvents listener decides to detach overlays resulting in index errors inside\n            // the for loop.\n            const overlays = this._attachedOverlays.slice();\n            // Dispatch the mouse event to the top overlay which has subscribers to its mouse events.\n            // We want to target all overlays for which the click could be considered as outside click.\n            // As soon as we reach an overlay for which the click is not outside click we break off\n            // the loop.\n            for (let i = overlays.length - 1; i > -1; i--) {\n                const overlayRef = overlays[i];\n                if (overlayRef._outsidePointerEvents.observers.length < 1 || !overlayRef.hasAttached()) {\n                    continue;\n                }\n                // If it's a click inside the overlay, just break - we should do nothing\n                // If it's an outside click (both origin and target of the click) dispatch the mouse event,\n                // and proceed with the next overlay\n                if (overlayRef.overlayElement.contains(target) ||\n                    overlayRef.overlayElement.contains(origin)) {\n                    break;\n                }\n                const outsidePointerEvents = overlayRef._outsidePointerEvents;\n                /** @breaking-change 14.0.0 _ngZone will be required. */\n                if (this._ngZone) {\n                    this._ngZone.run(() => outsidePointerEvents.next(event));\n                }\n                else {\n                    outsidePointerEvents.next(event);\n                }\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Safari on iOS does not generate click events for non-interactive\n        // elements. However, we want to receive a click for any element outside\n        // the overlay. We can force a \"clickable\" state by setting\n        // `cursor: pointer` on the document body. See:\n        // https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event#Safari_Mobile\n        // https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html\n        if (!this._isAttached) {\n            const body = this._document.body;\n            /** @breaking-change 14.0.0 _ngZone will be required. */\n            if (this._ngZone) {\n                this._ngZone.runOutsideAngular(() => this._addEventListeners(body));\n            }\n            else {\n                this._addEventListeners(body);\n            }\n            // click event is not fired on iOS. To make element \"clickable\" we are\n            // setting the cursor to pointer\n            if (this._platform.IOS && !this._cursorStyleIsSet) {\n                this._cursorOriginalValue = body.style.cursor;\n                body.style.cursor = 'pointer';\n                this._cursorStyleIsSet = true;\n            }\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            const body = this._document.body;\n            body.removeEventListener('pointerdown', this._pointerDownListener, true);\n            body.removeEventListener('click', this._clickListener, true);\n            body.removeEventListener('auxclick', this._clickListener, true);\n            body.removeEventListener('contextmenu', this._clickListener, true);\n            if (this._platform.IOS && this._cursorStyleIsSet) {\n                body.style.cursor = this._cursorOriginalValue;\n                this._cursorStyleIsSet = false;\n            }\n            this._isAttached = false;\n        }\n    }\n    _addEventListeners(body) {\n        body.addEventListener('pointerdown', this._pointerDownListener, true);\n        body.addEventListener('click', this._clickListener, true);\n        body.addEventListener('auxclick', this._clickListener, true);\n        body.addEventListener('contextmenu', this._clickListener, true);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: OverlayOutsideClickDispatcher, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }, { token: i0.NgZone, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: OverlayOutsideClickDispatcher, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: OverlayOutsideClickDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1$1.Platform }, { type: i0.NgZone, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/** Container inside which all overlays will render. */\nclass OverlayContainer {\n    constructor(document, _platform) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    ngOnDestroy() {\n        this._containerElement?.remove();\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    _createContainer() {\n        const containerClass = 'cdk-overlay-container';\n        // TODO(crisbeto): remove the testing check once we have an overlay testing\n        // module or Angular starts tearing down the testing `NgModule`. See:\n        // https://github.com/angular/angular/issues/18831\n        if (this._platform.isBrowser || _isTestEnvironment()) {\n            const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` + `.${containerClass}[platform=\"test\"]`);\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                oppositePlatformContainers[i].remove();\n            }\n        }\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (_isTestEnvironment()) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!this._platform.isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: OverlayContainer, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: OverlayContainer, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: OverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1$1.Platform }]; } });\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location, _outsideClickDispatcher, _animationsDisabled = false) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n        this._animationsDisabled = _animationsDisabled;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = (event) => this._backdropClick.next(event);\n        this._backdropTransitionendHandler = (event) => {\n            this._disposeBackdrop(event.target);\n        };\n        /** Stream of keydown events dispatched to this overlay. */\n        this._keydownEvents = new Subject();\n        /** Stream of mouse outside events dispatched to this overlay. */\n        this._outsidePointerEvents = new Subject();\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /** The overlay's HTML element */\n    get overlayElement() {\n        return this._pane;\n    }\n    /** The overlay's backdrop HTML element. */\n    get backdropElement() {\n        return this._backdropElement;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param portal Portal instance to which to attach the overlay.\n     * @returns The portal attachment result.\n     */\n    attach(portal) {\n        // Insert the host into the DOM before attaching the portal, otherwise\n        // the animations module will skip animations on repeat attachments.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        const attachResult = this._portalOutlet.attach(portal);\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n            // The overlay could've been detached before the zone has stabilized.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        });\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        if (this._config.disposeOnNavigation) {\n            this._locationChanges = this._location.subscribe(() => this.dispose());\n        }\n        this._outsideClickDispatcher.add(this);\n        // TODO(crisbeto): the null check is here, because the portal outlet returns `any`.\n        // We should be guaranteed for the result to be `ComponentRef | EmbeddedViewRef`, but\n        // `instanceof EmbeddedViewRef` doesn't appear to work at the moment.\n        if (typeof attachResult?.onDestroy === 'function') {\n            // In most cases we control the portal and we know when it is being detached so that\n            // we can finish the disposal process. The exception is if the user passes in a custom\n            // `ViewContainerRef` that isn't destroyed through the overlay API. Note that we use\n            // `detach` here instead of `dispose`, because we don't know if the user intends to\n            // reattach the overlay at a later point. It also has the advantage of waiting for animations.\n            attachResult.onDestroy(() => {\n                if (this.hasAttached()) {\n                    // We have to delay the `detach` call, because detaching immediately prevents\n                    // other destroy hooks from running. This is likely a framework bug similar to\n                    // https://github.com/angular/angular/issues/46119\n                    this._ngZone.runOutsideAngular(() => Promise.resolve().then(() => this.detach()));\n                }\n            });\n        }\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @returns The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        this._locationChanges.unsubscribe();\n        this._outsideClickDispatcher.remove(this);\n        return detachmentResult;\n    }\n    /** Cleans up the overlay from the DOM. */\n    dispose() {\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this._disposeBackdrop(this._backdropElement);\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        this._outsidePointerEvents.complete();\n        this._outsideClickDispatcher.remove(this);\n        this._host?.remove();\n        this._previousHostParent = this._pane = this._host = null;\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    }\n    /** Whether the overlay has attached content. */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /** Gets an observable that emits when the backdrop has been clicked. */\n    backdropClick() {\n        return this._backdropClick;\n    }\n    /** Gets an observable that emits when the overlay has been attached. */\n    attachments() {\n        return this._attachments;\n    }\n    /** Gets an observable that emits when the overlay has been detached. */\n    detachments() {\n        return this._detachments;\n    }\n    /** Gets an observable of keydown events targeted to this overlay. */\n    keydownEvents() {\n        return this._keydownEvents;\n    }\n    /** Gets an observable of pointer events targeted outside this overlay. */\n    outsidePointerEvents() {\n        return this._outsidePointerEvents;\n    }\n    /** Gets the current overlay configuration, which is immutable. */\n    getConfig() {\n        return this._config;\n    }\n    /** Updates the position of the overlay based on the position strategy. */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /** Switches to a new position strategy and updates the overlay position. */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /** Update the size properties of the overlay. */\n    updateSize(sizeConfig) {\n        this._config = { ...this._config, ...sizeConfig };\n        this._updateElementSize();\n    }\n    /** Sets the LTR/RTL direction for the overlay. */\n    setDirection(dir) {\n        this._config = { ...this._config, direction: dir };\n        this._updateElementDirection();\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     */\n    getDirection() {\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /** Switches to a new scroll strategy. */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /** Updates the text direction of the overlay panel. */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /** Updates the size of the overlay element based on the overlay config. */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /** Toggles the pointer events for the overlay pane element. */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? '' : 'none';\n    }\n    /** Attaches a backdrop for this overlay. */\n    _attachBackdrop() {\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._animationsDisabled) {\n            this._backdropElement.classList.add('cdk-overlay-backdrop-noop-animation');\n        }\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        this._host.parentElement.insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (!this._animationsDisabled && typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    if (this._backdropElement) {\n                        this._backdropElement.classList.add(showingClass);\n                    }\n                });\n            });\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            this._host.parentNode.appendChild(this._host);\n        }\n    }\n    /** Detaches the backdrop (if any) associated with the overlay. */\n    detachBackdrop() {\n        const backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        if (this._animationsDisabled) {\n            this._disposeBackdrop(backdropToDetach);\n            return;\n        }\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular(() => {\n            backdropToDetach.addEventListener('transitionend', this._backdropTransitionendHandler);\n        });\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        this._backdropTimeout = this._ngZone.runOutsideAngular(() => setTimeout(() => {\n            this._disposeBackdrop(backdropToDetach);\n        }, 500));\n    }\n    /** Toggles a single CSS class or an array of classes on an element. */\n    _toggleClasses(element, cssClasses, isAdd) {\n        const classes = coerceArray(cssClasses || []).filter(c => !!c);\n        if (classes.length) {\n            isAdd ? element.classList.add(...classes) : element.classList.remove(...classes);\n        }\n    }\n    /** Detaches the overlay content next time the zone stabilizes. */\n    _detachContentWhenStable() {\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular(() => {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            const subscription = this._ngZone.onStable\n                .pipe(takeUntil(merge(this._attachments, this._detachments)))\n                .subscribe(() => {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!this._pane || !this._host || this._pane.children.length === 0) {\n                    if (this._pane && this._config.panelClass) {\n                        this._toggleClasses(this._pane, this._config.panelClass, false);\n                    }\n                    if (this._host && this._host.parentElement) {\n                        this._previousHostParent = this._host.parentElement;\n                        this._host.remove();\n                    }\n                    subscription.unsubscribe();\n                }\n            });\n        });\n    }\n    /** Disposes of a scroll strategy. */\n    _disposeScrollStrategy() {\n        const scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    }\n    /** Removes a backdrop element from the DOM. */\n    _disposeBackdrop(backdrop) {\n        if (backdrop) {\n            backdrop.removeEventListener('click', this._backdropClickHandler);\n            backdrop.removeEventListener('transitionend', this._backdropTransitionendHandler);\n            backdrop.remove();\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (this._backdropElement === backdrop) {\n                this._backdropElement = null;\n            }\n        }\n        if (this._backdropTimeout) {\n            clearTimeout(this._backdropTimeout);\n            this._backdropTimeout = undefined;\n        }\n    }\n}\n\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/** Class to be added to the overlay bounding box. */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    /** Ordered list of preferred positions, from most to least desirable. */\n    get positions() {\n        return this._preferredPositions;\n    }\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /** Last size used for the bounding box. Used to avoid resizing the overlay after open. */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /** Whether the overlay was pushed in a previous positioning. */\n        this._isPushed = false;\n        /** Whether the overlay can be pushed on-screen on the initial open. */\n        this._canPush = true;\n        /** Whether the overlay can grow via flexible width/height after the initial open. */\n        this._growAfterOpen = false;\n        /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n        this._hasFlexibleDimensions = true;\n        /** Whether the overlay position is locked. */\n        this._positionLocked = false;\n        /** Amount of space that must be maintained between the overlay and the edge of the viewport. */\n        this._viewportMargin = 0;\n        /** The Scrollable containers used to check scrollable view properties on position change. */\n        this._scrollables = [];\n        /** Ordered list of preferred positions, from most to least desirable. */\n        this._preferredPositions = [];\n        /** Subject that emits whenever the position changes. */\n        this._positionChanges = new Subject();\n        /** Subscription to viewport size changes. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Default offset for the overlay along the x axis. */\n        this._offsetX = 0;\n        /** Default offset for the overlay along the y axis. */\n        this._offsetY = 0;\n        /** Keeps track of the CSS classes that the position strategy has applied on the overlay panel. */\n        this._appliedPanelClasses = [];\n        /** Observable sequence of position changes. */\n        this.positionChanges = this._positionChanges;\n        this.setOrigin(connectedTo);\n    }\n    /** Attaches this position strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef &&\n            overlayRef !== this._overlayRef &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe(() => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        });\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satisfies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * @docs-private\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin, the overlay and the container to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();\n        const originRect = this._originRect;\n        const overlayRect = this._overlayRect;\n        const viewportRect = this._viewportRect;\n        const containerRect = this._containerRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            let originPoint = this._getOriginPoint(originRect, containerRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos),\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            let bestFit = null;\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition(bestFit.position, bestFit.origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition(fallback.position, fallback.originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition(fallback.position, fallback.originPoint);\n    }\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /** Cleanup after the element gets destroyed. */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, {\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            });\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = null;\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    reapplyLastPosition() {\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        const lastPosition = this._lastPosition;\n        if (lastPosition) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();\n            const originPoint = this._getOriginPoint(this._originRect, this._containerRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n        else {\n            this.apply();\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    withScrollableContainers(scrollables) {\n        this._scrollables = scrollables;\n        return this;\n    }\n    /**\n     * Adds new preferred positions.\n     * @param positions List of positions options for this overlay.\n     */\n    withPositions(positions) {\n        this._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf(this._lastPosition) === -1) {\n            this._lastPosition = null;\n        }\n        this._validatePositions();\n        return this;\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @param margin Required margin between the overlay and the viewport edge in pixels.\n     */\n    withViewportMargin(margin) {\n        this._viewportMargin = margin;\n        return this;\n    }\n    /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        this._hasFlexibleDimensions = flexibleDimensions;\n        return this;\n    }\n    /** Sets whether the overlay can grow after the initial open via flexible width/height. */\n    withGrowAfterOpen(growAfterOpen = true) {\n        this._growAfterOpen = growAfterOpen;\n        return this;\n    }\n    /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    withPush(canPush = true) {\n        this._canPush = canPush;\n        return this;\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    withLockedPosition(isLocked = true) {\n        this._positionLocked = isLocked;\n        return this;\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @param origin Reference to the new origin.\n     */\n    setOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @param offset New offset in the X axis.\n     */\n    withDefaultOffsetX(offset) {\n        this._offsetX = offset;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @param offset New offset in the Y axis.\n     */\n    withDefaultOffsetY(offset) {\n        this._offsetY = offset;\n        return this;\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @param selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     */\n    withTransformOriginOn(selector) {\n        this._transformOriginSelector = selector;\n        return this;\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     */\n    _getOriginPoint(originRect, containerRect, pos) {\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + originRect.width / 2;\n        }\n        else {\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        // When zooming in Safari the container rectangle contains negative values for the position\n        // and we need to re-add them to the calculated coordinates.\n        if (containerRect.left < 0) {\n            x -= containerRect.left;\n        }\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + originRect.height / 2;\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        // Normally the containerRect's top value would be zero, however when the overlay is attached to an input\n        // (e.g. in an autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        // Additionally, when zooming in Safari this fixes the vertical position.\n        if (containerRect.top < 0) {\n            y -= containerRect.top;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /** Gets how well an overlay at the given point will fit within the viewport. */\n    _getOverlayFit(point, rawOverlayRect, viewport, position) {\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        let { x, y } = point;\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        let leftOverflow = 0 - x;\n        let rightOverflow = x + overlay.width - viewport.width;\n        let topOverflow = 0 - y;\n        let bottomOverflow = y + overlay.height - viewport.height;\n        // Visible parts of the element on each axis.\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: overlay.width * overlay.height === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @param fit How well the overlay fits in the viewport at some position.\n     * @param point The (x, y) coordinates of the overlay at some position.\n     * @param viewport The geometry of the viewport.\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            const availableHeight = viewport.bottom - point.y;\n            const availableWidth = viewport.right - point.x;\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            const verticalFit = fit.fitsInViewportVertically || (minHeight != null && minHeight <= availableHeight);\n            const horizontalFit = fit.fitsInViewportHorizontally || (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occurring on the\n     * right and bottom).\n     *\n     * @param start Starting point from which the overlay is pushed.\n     * @param rawOverlayRect Dimensions of the overlay.\n     * @param scrollPosition Current viewport scroll position.\n     * @returns The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, rawOverlayRect, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y,\n            };\n        }\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        const overflowRight = Math.max(start.x + overlay.width - viewport.width, 0);\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.height, 0);\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        let pushX = 0;\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? viewport.left - scrollPosition.left - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? viewport.top - scrollPosition.top - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @param position The position preference\n     * @param originPoint The point on the origin element where the overlay is connected.\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            const scrollableViewProperties = this._getScrollVisibility();\n            const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    }\n    /** Sets the transform origin based on the configured selector and the passed-in position.  */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        const elements = this._boundingBox.querySelectorAll(this._transformOriginSelector);\n        let xOrigin;\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        const viewport = this._viewportRect;\n        const isRtl = this._isRtl();\n        let height, top, bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - previousHeight / 2;\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) || (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) || (position.overlayX === 'start' && isRtl);\n        let width, left, right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - previousWidth / 2;\n            }\n        }\n        return { top: top, left: left, bottom: bottom, right: right, width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stretches to the bounds of the viewport.\n     *\n     * @param origin The point on the origin element where the overlay is connected.\n     * @param position The position preference\n     */\n    _setBoundingBoxStyles(origin, position) {\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        const styles = {};\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles(this._boundingBox.style, styles);\n    }\n    /** Resets the styles for the bounding box so that a new positioning can be computed. */\n    _resetBoundingBoxStyles() {\n        extendStyles(this._boundingBox.style, {\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        });\n    }\n    /** Resets the styles for the overlay pane so that a new positioning can be computed. */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, {\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        });\n    }\n    /** Sets positioning styles to the overlay element. */\n    _setOverlayElementStyles(originPoint, position) {\n        const styles = {};\n        const hasExactPosition = this._hasExactPosition();\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        let transformString = '';\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /** Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        let styles = { top: '', bottom: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            const documentHeight = this._document.documentElement.clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /** Gets the exact left/right for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        let styles = { left: '', right: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            const documentWidth = this._document.documentElement.clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        const originBounds = this._getOriginRect();\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        const scrollContainerBounds = this._scrollables.map(scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        });\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /** Subtracts the amount that an element is overflowing on an axis from its length. */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }, length);\n    }\n    /** Narrows the given viewport rect by the current _viewportMargin. */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        const width = this._document.documentElement.clientWidth;\n        const height = this._document.documentElement.clientHeight;\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - 2 * this._viewportMargin,\n            height: height - 2 * this._viewportMargin,\n        };\n    }\n    /** Whether the we're dealing with an RTL context */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /** Determines whether the overlay uses exact or flexible positioning. */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /** Retrieves the offset of a position along the x or y axis. */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breaking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /** Validates that the current position match the expected values. */\n    _validatePositions() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._preferredPositions.length) {\n                throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n            }\n            // TODO(crisbeto): remove these once Angular's template type\n            // checking is advanced enough to catch these cases.\n            this._preferredPositions.forEach(pair => {\n                validateHorizontalPosition('originX', pair.originX);\n                validateVerticalPosition('originY', pair.originY);\n                validateHorizontalPosition('overlayX', pair.overlayX);\n                validateVerticalPosition('overlayY', pair.overlayY);\n            });\n        }\n    }\n    /** Adds a single CSS class or an array of classes on the overlay panel. */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach(cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            });\n        }\n    }\n    /** Clears the classes that the position strategy has applied from the overlay panel. */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach(cssClass => {\n                this._pane.classList.remove(cssClass);\n            });\n            this._appliedPanelClasses = [];\n        }\n    }\n    /** Returns the ClientRect of the current origin. */\n    _getOriginRect() {\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n        const width = origin.width || 0;\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width,\n        };\n    }\n}\n/** Shallow-extends a stylesheet object with another stylesheet object. */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return !units || units === 'px' ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n/**\n * Gets a version of an element's bounding `ClientRect` where all the values are rounded down to\n * the nearest pixel. This allows us to account for the cases where there may be sub-pixel\n * deviations in the `ClientRect` returned by the browser (e.g. when zoomed in with a percentage\n * size, see #21350).\n */\nfunction getRoundedBoundingClientRect(clientRect) {\n    return {\n        top: Math.floor(clientRect.top),\n        right: Math.floor(clientRect.right),\n        bottom: Math.floor(clientRect.bottom),\n        left: Math.floor(clientRect.left),\n        width: Math.floor(clientRect.width),\n        height: Math.floor(clientRect.height),\n    };\n}\nconst STANDARD_DROPDOWN_BELOW_POSITIONS = [\n    { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n    { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom' },\n    { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' },\n    { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom' },\n];\nconst STANDARD_DROPDOWN_ADJACENT_POSITIONS = [\n    { originX: 'end', originY: 'top', overlayX: 'start', overlayY: 'top' },\n    { originX: 'end', originY: 'bottom', overlayX: 'start', overlayY: 'bottom' },\n    { originX: 'start', originY: 'top', overlayX: 'end', overlayY: 'top' },\n    { originX: 'start', originY: 'bottom', overlayX: 'end', overlayY: 'bottom' },\n];\n\n/** Class to be added to the overlay pane wrapper. */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    constructor() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._alignItems = '';\n        this._xPosition = '';\n        this._xOffset = '';\n        this._width = '';\n        this._height = '';\n        this._isDisposed = false;\n    }\n    attach(overlayRef) {\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param value New top offset.\n     */\n    top(value = '') {\n        this._bottomOffset = '';\n        this._topOffset = value;\n        this._alignItems = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param value New left offset.\n     */\n    left(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'left';\n        return this;\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param value New bottom offset.\n     */\n    bottom(value = '') {\n        this._topOffset = '';\n        this._bottomOffset = value;\n        this._alignItems = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param value New right offset.\n     */\n    right(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'right';\n        return this;\n    }\n    /**\n     * Sets the overlay to the start of the viewport, depending on the overlay direction.\n     * This will be to the left in LTR layouts and to the right in RTL.\n     * @param offset Offset from the edge of the screen.\n     */\n    start(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'start';\n        return this;\n    }\n    /**\n     * Sets the overlay to the end of the viewport, depending on the overlay direction.\n     * This will be to the right in LTR layouts and to the left in RTL.\n     * @param offset Offset from the edge of the screen.\n     */\n    end(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'end';\n        return this;\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @param value New width for the overlay\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    width(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ width: value });\n        }\n        else {\n            this._width = value;\n        }\n        return this;\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @param value New height for the overlay\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    height(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ height: value });\n        }\n        else {\n            this._height = value;\n        }\n        return this;\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param offset Overlay offset from the horizontal center.\n     */\n    centerHorizontally(offset = '') {\n        this.left(offset);\n        this._xPosition = 'center';\n        return this;\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param offset Overlay offset from the vertical center.\n     */\n    centerVertically(offset = '') {\n        this.top(offset);\n        this._alignItems = 'center';\n        return this;\n    }\n    /**\n     * Apply the position to the element.\n     * @docs-private\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parentStyles = this._overlayRef.hostElement.style;\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        const xPosition = this._xPosition;\n        const xOffset = this._xOffset;\n        const isRtl = this._overlayRef.getConfig().direction === 'rtl';\n        let marginLeft = '';\n        let marginRight = '';\n        let justifyContent = '';\n        if (shouldBeFlushHorizontally) {\n            justifyContent = 'flex-start';\n        }\n        else if (xPosition === 'center') {\n            justifyContent = 'center';\n            if (isRtl) {\n                marginRight = xOffset;\n            }\n            else {\n                marginLeft = xOffset;\n            }\n        }\n        else if (isRtl) {\n            if (xPosition === 'left' || xPosition === 'end') {\n                justifyContent = 'flex-end';\n                marginLeft = xOffset;\n            }\n            else if (xPosition === 'right' || xPosition === 'start') {\n                justifyContent = 'flex-start';\n                marginRight = xOffset;\n            }\n        }\n        else if (xPosition === 'left' || xPosition === 'start') {\n            justifyContent = 'flex-start';\n            marginLeft = xOffset;\n        }\n        else if (xPosition === 'right' || xPosition === 'end') {\n            justifyContent = 'flex-end';\n            marginRight = xOffset;\n        }\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : marginLeft;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = shouldBeFlushHorizontally ? '0' : marginRight;\n        parentStyles.justifyContent = justifyContent;\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * @docs-private\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parent = this._overlayRef.hostElement;\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent =\n            parentStyles.alignItems =\n                styles.marginTop =\n                    styles.marginBottom =\n                        styles.marginLeft =\n                            styles.marginRight =\n                                styles.position =\n                                    '';\n        this._overlayRef = null;\n        this._isDisposed = true;\n    }\n}\n\n/** Builder for overlay position strategy. */\nclass OverlayPositionBuilder {\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     */\n    global() {\n        return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param origin Origin relative to which to position the overlay.\n     */\n    flexibleConnectedTo(origin) {\n        return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: OverlayPositionBuilder, deps: [{ token: i1.ViewportRuler }, { token: DOCUMENT }, { token: i1$1.Platform }, { token: OverlayContainer }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: OverlayPositionBuilder, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: OverlayPositionBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.ViewportRuler }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1$1.Platform }, { type: OverlayContainer }]; } });\n\n/** Next overlay unique ID. */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    constructor(\n    /** Scrolling strategies that can be used when creating an overlay. */\n    scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location, _outsideClickDispatcher, _animationsModuleType) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n        this._animationsModuleType = _animationsModuleType;\n    }\n    /**\n     * Creates an overlay.\n     * @param config Configuration applied to the overlay.\n     * @returns Reference to the created overlay.\n     */\n    create(config) {\n        const host = this._createHostElement();\n        const pane = this._createPaneElement(host);\n        const portalOutlet = this._createPortalOutlet(pane);\n        const overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location, this._outsideClickDispatcher, this._animationsModuleType === 'NoopAnimations');\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @returns An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @returns Newly-created pane element\n     */\n    _createPaneElement(host) {\n        const pane = this._document.createElement('div');\n        pane.id = `cdk-overlay-${nextUniqueId++}`;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @returns Newly-create host element.\n     */\n    _createHostElement() {\n        const host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @param pane The DOM element to turn into a portal outlet.\n     * @returns A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: Overlay, deps: [{ token: ScrollStrategyOptions }, { token: OverlayContainer }, { token: i0.ComponentFactoryResolver }, { token: OverlayPositionBuilder }, { token: OverlayKeyboardDispatcher }, { token: i0.Injector }, { token: i0.NgZone }, { token: DOCUMENT }, { token: i5.Directionality }, { token: i6.Location }, { token: OverlayOutsideClickDispatcher }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: Overlay, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: Overlay, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: ScrollStrategyOptions }, { type: OverlayContainer }, { type: i0.ComponentFactoryResolver }, { type: OverlayPositionBuilder }, { type: OverlayKeyboardDispatcher }, { type: i0.Injector }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i5.Directionality }, { type: i6.Location }, { type: OverlayOutsideClickDispatcher }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }, {\n                    type: Optional\n                }] }]; } });\n\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top',\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top',\n    },\n];\n/** Injection token that determines the scroll handling while the connected overlay is open. */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkOverlayOrigin, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkOverlayOrigin, isStandalone: true, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkOverlayOrigin, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                    exportAs: 'cdkOverlayOrigin',\n                    standalone: true,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    /** The offset in pixels for the overlay connection point on the x-axis */\n    get offsetX() {\n        return this._offsetX;\n    }\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** The offset in pixels for the overlay connection point on the y-axis */\n    get offsetY() {\n        return this._offsetY;\n    }\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** Whether or not the overlay should attach a backdrop. */\n    get hasBackdrop() {\n        return this._hasBackdrop;\n    }\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /** Whether or not the overlay should be locked when scrolling. */\n    get lockPosition() {\n        return this._lockPosition;\n    }\n    set lockPosition(value) {\n        this._lockPosition = coerceBooleanProperty(value);\n    }\n    /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n    get flexibleDimensions() {\n        return this._flexibleDimensions;\n    }\n    set flexibleDimensions(value) {\n        this._flexibleDimensions = coerceBooleanProperty(value);\n    }\n    /** Whether the overlay can grow after the initial open when flexible positioning is turned on. */\n    get growAfterOpen() {\n        return this._growAfterOpen;\n    }\n    set growAfterOpen(value) {\n        this._growAfterOpen = coerceBooleanProperty(value);\n    }\n    /** Whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    get push() {\n        return this._push;\n    }\n    set push(value) {\n        this._push = coerceBooleanProperty(value);\n    }\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._hasBackdrop = false;\n        this._lockPosition = false;\n        this._growAfterOpen = false;\n        this._flexibleDimensions = false;\n        this._push = false;\n        this._backdropSubscription = Subscription.EMPTY;\n        this._attachSubscription = Subscription.EMPTY;\n        this._detachSubscription = Subscription.EMPTY;\n        this._positionSubscription = Subscription.EMPTY;\n        /** Margin between the overlay and the viewport edges. */\n        this.viewportMargin = 0;\n        /** Whether the overlay is open. */\n        this.open = false;\n        /** Whether the overlay can be closed by user interaction. */\n        this.disableClose = false;\n        /** Event emitted when the backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Event emitted when the position has changed. */\n        this.positionChange = new EventEmitter();\n        /** Event emitted when the overlay has been attached. */\n        this.attach = new EventEmitter();\n        /** Event emitted when the overlay has been detached. */\n        this.detach = new EventEmitter();\n        /** Emits when there are keyboard events that are targeted at the overlay. */\n        this.overlayKeydown = new EventEmitter();\n        /** Emits when there are mouse outside click events that are targeted at the overlay. */\n        this.overlayOutsideClick = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /** The associated overlay reference. */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /** The element's layout direction. */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    ngOnDestroy() {\n        this._attachSubscription.unsubscribe();\n        this._detachSubscription.unsubscribe();\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n    }\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    }\n    /** Creates an overlay */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        const overlayRef = (this._overlayRef = this._overlay.create(this._buildConfig()));\n        this._attachSubscription = overlayRef.attachments().subscribe(() => this.attach.emit());\n        this._detachSubscription = overlayRef.detachments().subscribe(() => this.detach.emit());\n        overlayRef.keydownEvents().subscribe((event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n                event.preventDefault();\n                this._detachOverlay();\n            }\n        });\n        this._overlayRef.outsidePointerEvents().subscribe((event) => {\n            this.overlayOutsideClick.next(event);\n        });\n    }\n    /** Builds the overlay config based on the directive's inputs */\n    _buildConfig() {\n        const positionStrategy = (this._position =\n            this.positionStrategy || this._createPositionStrategy());\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop,\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /** Updates the state of a position strategy, based on the values of the directive inputs. */\n    _updatePositionStrategy(positionStrategy) {\n        const positions = this.positions.map(currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        }));\n        return positionStrategy\n            .setOrigin(this._getFlexibleConnectedPositionStrategyOrigin())\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    }\n    /** Returns the position strategy of the overlay to be set on the overlay config */\n    _createPositionStrategy() {\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this._getFlexibleConnectedPositionStrategyOrigin());\n        this._updatePositionStrategy(strategy);\n        return strategy;\n    }\n    _getFlexibleConnectedPositionStrategyOrigin() {\n        if (this.origin instanceof CdkOverlayOrigin) {\n            return this.origin.elementRef;\n        }\n        else {\n            return this.origin;\n        }\n    }\n    /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */\n    _attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe(event => {\n                this.backdropClick.emit(event);\n            });\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n        this._positionSubscription.unsubscribe();\n        // Only subscribe to `positionChanges` if requested, because putting\n        // together all the information for it can be expensive.\n        if (this.positionChange.observers.length > 0) {\n            this._positionSubscription = this._position.positionChanges\n                .pipe(takeWhile(() => this.positionChange.observers.length > 0))\n                .subscribe(position => {\n                this.positionChange.emit(position);\n                if (this.positionChange.observers.length === 0) {\n                    this._positionSubscription.unsubscribe();\n                }\n            });\n        }\n    }\n    /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */\n    _detachOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n        }\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkConnectedOverlay, deps: [{ token: Overlay }, { token: i0.TemplateRef }, { token: i0.ViewContainerRef }, { token: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY }, { token: i5.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkConnectedOverlay, isStandalone: true, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: { origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], disableClose: [\"cdkConnectedOverlayDisableClose\", \"disableClose\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\"], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\"], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\"], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\"], push: [\"cdkConnectedOverlayPush\", \"push\"] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\", overlayOutsideClick: \"overlayOutsideClick\" }, exportAs: [\"cdkConnectedOverlay\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkConnectedOverlay, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                    exportAs: 'cdkConnectedOverlay',\n                    standalone: true,\n                }]\n        }], ctorParameters: function () { return [{ type: Overlay }, { type: i0.TemplateRef }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]\n                }] }, { type: i5.Directionality, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { origin: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOrigin']\n            }], positions: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPositions']\n            }], positionStrategy: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPositionStrategy']\n            }], offsetX: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOffsetX']\n            }], offsetY: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOffsetY']\n            }], width: [{\n                type: Input,\n                args: ['cdkConnectedOverlayWidth']\n            }], height: [{\n                type: Input,\n                args: ['cdkConnectedOverlayHeight']\n            }], minWidth: [{\n                type: Input,\n                args: ['cdkConnectedOverlayMinWidth']\n            }], minHeight: [{\n                type: Input,\n                args: ['cdkConnectedOverlayMinHeight']\n            }], backdropClass: [{\n                type: Input,\n                args: ['cdkConnectedOverlayBackdropClass']\n            }], panelClass: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPanelClass']\n            }], viewportMargin: [{\n                type: Input,\n                args: ['cdkConnectedOverlayViewportMargin']\n            }], scrollStrategy: [{\n                type: Input,\n                args: ['cdkConnectedOverlayScrollStrategy']\n            }], open: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOpen']\n            }], disableClose: [{\n                type: Input,\n                args: ['cdkConnectedOverlayDisableClose']\n            }], transformOriginSelector: [{\n                type: Input,\n                args: ['cdkConnectedOverlayTransformOriginOn']\n            }], hasBackdrop: [{\n                type: Input,\n                args: ['cdkConnectedOverlayHasBackdrop']\n            }], lockPosition: [{\n                type: Input,\n                args: ['cdkConnectedOverlayLockPosition']\n            }], flexibleDimensions: [{\n                type: Input,\n                args: ['cdkConnectedOverlayFlexibleDimensions']\n            }], growAfterOpen: [{\n                type: Input,\n                args: ['cdkConnectedOverlayGrowAfterOpen']\n            }], push: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPush']\n            }], backdropClick: [{\n                type: Output\n            }], positionChange: [{\n                type: Output\n            }], attach: [{\n                type: Output\n            }], detach: [{\n                type: Output\n            }], overlayKeydown: [{\n                type: Output\n            }], overlayOutsideClick: [{\n                type: Output\n            }] } });\n/** @docs-private */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\nclass OverlayModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: OverlayModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: OverlayModule, imports: [BidiModule, PortalModule, ScrollingModule, CdkConnectedOverlay, CdkOverlayOrigin], exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: OverlayModule, providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER], imports: [BidiModule, PortalModule, ScrollingModule, ScrollingModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: OverlayModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule, PortalModule, ScrollingModule, CdkConnectedOverlay, CdkOverlayOrigin],\n                    exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                    providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    constructor(_document, platform) {\n        super(_document, platform);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    }\n    _createContainer() {\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener(() => this._adjustParentForFullscreenChange());\n    }\n    _adjustParentForFullscreenChange() {\n        if (!this._containerElement) {\n            return;\n        }\n        const fullscreenElement = this.getFullscreenElement();\n        const parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    }\n    _addFullscreenChangeListener(fn) {\n        const eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    }\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            const _document = this._document;\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     */\n    getFullscreenElement() {\n        const _document = this._document;\n        return (_document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: FullscreenOverlayContainer, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: FullscreenOverlayContainer, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: FullscreenOverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1$1.Platform }]; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayOutsideClickDispatcher, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, STANDARD_DROPDOWN_ADJACENT_POSITIONS, STANDARD_DROPDOWN_BELOW_POSITIONS, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition };\n"],"names":["Observable","Subscription","EMPTY_SUBSCRIPTION","ObjectUnsubscribedError","arrRemove","errorContext","Subject","constructor","closed","currentObservers","observers","isStopped","hasError","thrownError","lift","operator","subject","AnonymousSubject","_throwIfClosed","next","value","Array","from","observer","error","err","length","shift","complete","unsubscribe","observed","_a","_trySubscribe","subscriber","_subscribe","_checkFinalizedStatuses","_innerSubscribe","push","asObservable","observable","source","create","destination","_b","call","subscribe","EMPTY","empty","scheduler","emptyScheduled","schedule","scheduled","innerFrom","input","mergeAll","popNumber","popScheduler","merge","args","concurrent","Infinity","sources","Subscriber","createOperatorSubscriber","onNext","onComplete","onError","onFinalize","OperatorSubscriber","shouldUnsubscribe","_next","_error","_complete","operate","filter","predicate","thisArg","index","map","project","mergeMap","identity","executeSchedule","mergeInternals","onBeforeNext","expand","innerSubScheduler","additionalFinalizer","buffer","active","isComplete","checkComplete","outerNext","doInnerSub","innerComplete","innerValue","undefined","bufferedValue","isFunction","resultSelector","a","i","b","ii","observeOn","delay","subscribeOn","add","take","count","seen","noop","takeUntil","notifier","takeWhile","inclusive","result","scheduleArray","scheduleAsyncIterable","Error","iterator","Symbol","asyncIterator","then","done","Symbol_iterator","scheduleIterable","return","scheduleObservable","pipe","schedulePromise","readableStreamLikeToAsyncGenerator","scheduleReadableStreamLike","isInteropObservable","isPromise","isArrayLike","isIterable","isAsyncIterable","createInvalidObservableTypeError","isReadableStreamLike","createErrorClass","_super","ObjectUnsubscribedErrorImpl","name","message","isScheduler","last","arr","popResultSelector","pop","defaultValue","parentSubscription","work","repeat","scheduleSubscription","hasLift","init","liftedSource","TypeError","i1","ScrollingModule","CdkScrollable","ScrollDispatcher","ViewportRuler","i6","DOCUMENT","i0","Injectable","Inject","Optional","ElementRef","ApplicationRef","ANIMATION_MODULE_TYPE","InjectionToken","Directive","EventEmitter","Input","Output","NgModule","coerceCssPixelValue","coerceArray","coerceBooleanProperty","i1$1","supportsScrollBehavior","_getEventTarget","_isTestEnvironment","i5","BidiModule","DomPortalOutlet","TemplatePortal","PortalModule","ESCAPE","hasModifierKey","scrollBehaviorSupported","BlockScrollStrategy","_viewportRuler","document","_previousHTMLStyles","top","left","_isEnabled","_document","attach","enable","_canBeEnabled","root","documentElement","_previousScrollPosition","getViewportScrollPosition","style","classList","disable","html","body","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","remove","window","scroll","contains","viewport","getViewportSize","scrollHeight","height","scrollWidth","width","getMatScrollStrategyAlreadyAttachedError","CloseScrollStrategy","_scrollDispatcher","_ngZone","_config","_scrollSubscription","_detach","_overlayRef","hasAttached","run","detach","overlayRef","ngDevMode","stream","scrolled","scrollable","overlayElement","getElementRef","nativeElement","threshold","_initialScrollPosition","scrollPosition","Math","abs","updatePosition","NoopScrollStrategy","isElementScrolledOutsideView","element","scrollContainers","some","containerBounds","outsideAbove","bottom","outsideBelow","outsideLeft","right","outsideRight","isElementClippedByScrolling","scrollContainerRect","clippedAbove","clippedBelow","clippedLeft","clippedRight","RepositionScrollStrategy","throttle","scrollThrottle","autoClose","overlayRect","getBoundingClientRect","parentRects","ScrollStrategyOptions","close","config","block","reposition","_","ɵfac","ScrollStrategyOptions_Factory","t","ɵɵinject","NgZone","_2","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ɵsetClassMetadata","type","decorators","OverlayConfig","scrollStrategy","panelClass","hasBackdrop","backdropClass","disposeOnNavigation","configKeys","Object","keys","key","ConnectionPositionPair","origin","overlay","offsetX","offsetY","originX","originY","overlayX","overlayY","ScrollingVisibility","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","validateVerticalPosition","property","validateHorizontalPosition","BaseOverlayDispatcher","_attachedOverlays","ngOnDestroy","indexOf","splice","BaseOverlayDispatcher_Factory","OverlayKeyboardDispatcher","_keydownListener","event","overlays","_keydownEvents","keydownEvents","_isAttached","runOutsideAngular","addEventListener","removeEventListener","OverlayKeyboardDispatcher_Factory","OverlayOutsideClickDispatcher","_platform","_cursorStyleIsSet","_pointerDownListener","_pointerDownEventTarget","_clickListener","target","slice","_outsidePointerEvents","outsidePointerEvents","_addEventListeners","IOS","_cursorOriginalValue","cursor","OverlayOutsideClickDispatcher_Factory","Platform","OverlayContainer","_containerElement","getContainerElement","_createContainer","containerClass","isBrowser","oppositePlatformContainers","querySelectorAll","container","createElement","setAttribute","appendChild","OverlayContainer_Factory","OverlayRef","_portalOutlet","_host","_pane","_keyboardDispatcher","_location","_outsideClickDispatcher","_animationsDisabled","_backdropElement","_backdropClick","_attachments","_detachments","_locationChanges","_backdropClickHandler","_backdropTransitionendHandler","_disposeBackdrop","_scrollStrategy","_positionStrategy","positionStrategy","backdropElement","hostElement","portal","parentElement","_previousHostParent","attachResult","_updateStackingOrder","_updateElementSize","_updateElementDirection","onStable","_togglePointerEvents","_attachBackdrop","_toggleClasses","dispose","onDestroy","Promise","resolve","detachBackdrop","detachmentResult","_detachContentWhenStable","isAttached","_disposeScrollStrategy","backdropClick","attachments","detachments","getConfig","apply","updatePositionStrategy","strategy","updateSize","sizeConfig","setDirection","dir","direction","addPanelClass","classes","removePanelClass","getDirection","updateScrollStrategy","minWidth","minHeight","maxWidth","maxHeight","enablePointer","pointerEvents","showingClass","insertBefore","requestAnimationFrame","nextSibling","parentNode","backdropToDetach","_backdropTimeout","setTimeout","cssClasses","isAdd","c","subscription","children","backdrop","clearTimeout","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","positions","_preferredPositions","connectedTo","_overlayContainer","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","_scrollables","_positionChanges","_resizeSubscription","_offsetX","_offsetY","_appliedPanelClasses","positionChanges","setOrigin","_validatePositions","_boundingBox","_isDisposed","_isInitialRender","_lastPosition","change","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","_containerRect","originRect","viewportRect","containerRect","flexibleFits","fallback","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","position","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","_previousPushAmount","extendStyles","alignItems","justifyContent","lastPosition","withScrollableContainers","scrollables","withPositions","withViewportMargin","margin","withFlexibleDimensions","flexibleDimensions","withGrowAfterOpen","growAfterOpen","withPush","canPush","withLockedPosition","isLocked","_origin","withDefaultOffsetX","offset","withDefaultOffsetY","withTransformOriginOn","selector","_transformOriginSelector","x","startX","_isRtl","endX","y","overlayStartX","overlayStartY","point","rawOverlayRect","getRoundedBoundingClientRect","_getOffset","leftOverflow","rightOverflow","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","verticalFit","horizontalFit","_pushOverlayOnScreen","start","overflowRight","max","overflowBottom","overflowTop","overflowLeft","pushX","pushY","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","_getScrollVisibility","changeEvent","elements","xOrigin","yOrigin","transformOrigin","isRtl","smallestDistanceToViewportEdge","min","previousHeight","isBoundedByRightViewportEdge","isBoundedByLeftViewportEdge","previousWidth","styles","_hasExactPosition","transform","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","trim","documentHeight","clientHeight","horizontalStyleProperty","documentWidth","clientWidth","originBounds","overlayBounds","scrollContainerBounds","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","reduce","currentValue","currentOverflow","axis","forEach","pair","cssClass","Element","hasOwnProperty","units","split","parseFloat","clientRect","floor","STANDARD_DROPDOWN_BELOW_POSITIONS","STANDARD_DROPDOWN_ADJACENT_POSITIONS","wrapperClass","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_alignItems","_xPosition","_xOffset","_width","_height","end","centerHorizontally","centerVertically","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","xPosition","xOffset","marginLeft","marginRight","marginTop","marginBottom","parent","OverlayPositionBuilder","global","flexibleConnectedTo","OverlayPositionBuilder_Factory","nextUniqueId","Overlay","scrollStrategies","_componentFactoryResolver","_positionBuilder","_injector","_directionality","_animationsModuleType","host","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","overlayConfig","id","_appRef","get","Overlay_Factory","ComponentFactoryResolver","Injector","Directionality","Location","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CdkOverlayOrigin","elementRef","CdkOverlayOrigin_Factory","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","selectors","exportAs","standalone","CdkConnectedOverlay","_position","_updatePositionStrategy","_hasBackdrop","lockPosition","_lockPosition","_flexibleDimensions","_push","_overlay","templateRef","viewContainerRef","scrollStrategyFactory","_dir","_backdropSubscription","_attachSubscription","_detachSubscription","_positionSubscription","viewportMargin","open","disableClose","positionChange","overlayKeydown","overlayOutsideClick","_templatePortal","_scrollStrategyFactory","ngOnChanges","changes","_attachOverlay","_detachOverlay","_createOverlay","_buildConfig","emit","keyCode","preventDefault","_createPositionStrategy","currentPosition","_getFlexibleConnectedPositionStrategyOrigin","transformOriginSelector","CdkConnectedOverlay_Factory","TemplateRef","ViewContainerRef","inputs","outputs","features","ɵɵNgOnChangesFeature","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","provide","deps","useFactory","OverlayModule","OverlayModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","providers","imports","exports","FullscreenOverlayContainer","platform","_fullScreenEventName","_fullScreenListener","_adjustParentForFullscreenChange","_addFullscreenChangeListener","fullscreenElement","getFullscreenElement","fn","eventName","_getEventName","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","FullscreenOverlayContainer_Factory"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27]}