{"version":3,"file":"5061.js","mappings":"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","sources":["./node_modules/@angular/material/fesm2022/legacy-slide-toggle.mjs"],"sourcesContent":["import * as i3 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Inject, Optional, ViewChild, NgModule } from '@angular/core';\nimport * as i2 from '@angular/material/core';\nimport { MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { _MatSlideToggleBase, _MatSlideToggleRequiredValidatorModule } from '@angular/material/slide-toggle';\nexport { MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR as MAT_LEGACY_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MatSlideToggleRequiredValidator as MatLegacySlideToggleRequiredValidator, _MatSlideToggleBase as _MatLegacySlideToggleBase, _MatSlideToggleRequiredValidatorModule as _MatLegacySlideToggleRequiredValidatorModule } from '@angular/material/slide-toggle';\n\n/**\n * Injection token to be used to override the default options for `mat-slide-toggle`\n * @deprecated Use `MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS` from `@angular/material/slide-toggle` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nconst MAT_LEGACY_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({ disableToggleValue: false }),\n});\n\n/**\n * @docs-private\n * @deprecated Use `MAT_SLIDE_TOGGLE_VALUE_ACCESSOR` from `@angular/material/slide-toggle` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nconst MAT_LEGACY_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatLegacySlideToggle),\n    multi: true,\n};\n/**\n * Change event object emitted by a slide toggle.\n * @deprecated Use `MatSlideToggleChange` from `@angular/material/slide-toggle` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySlideToggleChange {\n    constructor(\n    /** The source slide toggle of the event. */\n    source, \n    /** The new `checked` value of the slide toggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\n/**\n * Represents a slidable \"switch\" toggle that can be moved between on and off.\n * @deprecated Use `MatSlideToggle` from `@angular/material/slide-toggle` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySlideToggle extends _MatSlideToggleBase {\n    constructor(elementRef, focusMonitor, changeDetectorRef, tabIndex, defaults, animationMode) {\n        super(elementRef, focusMonitor, changeDetectorRef, tabIndex, defaults, animationMode, 'mat-slide-toggle-');\n    }\n    _createChangeEvent(isChecked) {\n        return new MatLegacySlideToggleChange(this, isChecked);\n    }\n    /** Method being called whenever the underlying input emits a change event. */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /** Method being called whenever the slide-toggle has been clicked. */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /** Focuses the slide-toggle. */\n    focus(options, origin) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySlideToggle, deps: [{ token: i0.ElementRef }, { token: i1.FocusMonitor }, { token: i0.ChangeDetectorRef }, { token: 'tabindex', attribute: true }, { token: MAT_LEGACY_SLIDE_TOGGLE_DEFAULT_OPTIONS }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacySlideToggle, selector: \"mat-slide-toggle\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\" }, host: { properties: { \"id\": \"id\", \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"attr.name\": \"null\", \"class.mat-checked\": \"checked\", \"class.mat-disabled\": \"disabled\", \"class.mat-slide-toggle-label-before\": \"labelPosition == \\\"before\\\"\", \"class._mat-animation-noopable\": \"_noopAnimations\" }, classAttribute: \"mat-slide-toggle\" }, providers: [MAT_LEGACY_SLIDE_TOGGLE_VALUE_ACCESSOR], viewQueries: [{ propertyName: \"_inputElement\", first: true, predicate: [\"input\"], descendants: true }], exportAs: [\"matSlideToggle\"], usesInheritance: true, ngImport: i0, template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <span class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <span class=\\\"mat-slide-toggle-thumb-container\\\">\\n      <span class=\\\"mat-slide-toggle-thumb\\\"></span>\\n      <span class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: _noopAnimations ? 0 : 150}\\\">\\n\\n        <span class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></span>\\n      </span>\\n    </span>\\n\\n  </span>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\", styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{-webkit-user-select:none;user-select:none;display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%;display:block}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.mat-slide-toggle-input:focus~.mat-slide-toggle-thumb-container .mat-focus-indicator::before{content:\\\"\\\"}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}\"], dependencies: [{ kind: \"directive\", type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: i3.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySlideToggle, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-slide-toggle', exportAs: 'matSlideToggle', host: {\n                        'class': 'mat-slide-toggle',\n                        '[id]': 'id',\n                        // Needs to be removed since it causes some a11y issues (see #21266).\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[attr.name]': 'null',\n                        '[class.mat-checked]': 'checked',\n                        '[class.mat-disabled]': 'disabled',\n                        '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                    }, providers: [MAT_LEGACY_SLIDE_TOGGLE_VALUE_ACCESSOR], inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <span class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <span class=\\\"mat-slide-toggle-thumb-container\\\">\\n      <span class=\\\"mat-slide-toggle-thumb\\\"></span>\\n      <span class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: _noopAnimations ? 0 : 150}\\\">\\n\\n        <span class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></span>\\n      </span>\\n    </span>\\n\\n  </span>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\", styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{-webkit-user-select:none;user-select:none;display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%;display:block}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.mat-slide-toggle-input:focus~.mat-slide-toggle-thumb-container .mat-focus-indicator::before{content:\\\"\\\"}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.FocusMonitor }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_LEGACY_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _inputElement: [{\n                type: ViewChild,\n                args: ['input']\n            }] } });\n\n/**\n * @deprecated Use `MatSlideToggleModule` from `@angular/material/slide-toggle` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySlideToggleModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySlideToggleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySlideToggleModule, declarations: [MatLegacySlideToggle], imports: [_MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule], exports: [_MatSlideToggleRequiredValidatorModule, MatLegacySlideToggle, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySlideToggleModule, imports: [_MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule, _MatSlideToggleRequiredValidatorModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySlideToggleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        _MatSlideToggleRequiredValidatorModule,\n                        MatRippleModule,\n                        MatCommonModule,\n                        ObserversModule,\n                    ],\n                    exports: [_MatSlideToggleRequiredValidatorModule, MatLegacySlideToggle, MatCommonModule],\n                    declarations: [MatLegacySlideToggle],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_LEGACY_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_LEGACY_SLIDE_TOGGLE_VALUE_ACCESSOR, MatLegacySlideToggle, MatLegacySlideToggleChange, MatLegacySlideToggleModule };\n"],"names":["i3","ObserversModule","i0","InjectionToken","forwardRef","Component","ViewEncapsulation","ChangeDetectionStrategy","Attribute","Inject","Optional","ViewChild","NgModule","i2","MatRippleModule","MatCommonModule","i1","NG_VALUE_ACCESSOR","ANIMATION_MODULE_TYPE","_MatSlideToggleBase","_MatSlideToggleRequiredValidatorModule","_c0","_c1","a0","enterDuration","_c2","MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR","MAT_LEGACY_SLIDE_TOGGLE_REQUIRED_VALIDATOR","MatSlideToggleRequiredValidator","MatLegacySlideToggleRequiredValidator","_MatLegacySlideToggleBase","_MatLegacySlideToggleRequiredValidatorModule","MAT_LEGACY_SLIDE_TOGGLE_DEFAULT_OPTIONS","providedIn","factory","disableToggleValue","MAT_LEGACY_SLIDE_TOGGLE_VALUE_ACCESSOR","provide","useExisting","MatLegacySlideToggle","multi","MatLegacySlideToggleChange","constructor","source","checked","elementRef","focusMonitor","changeDetectorRef","tabIndex","defaults","animationMode","_createChangeEvent","isChecked","_onChangeEvent","event","stopPropagation","toggleChange","emit","_inputElement","nativeElement","_emitChangeEvent","_onInputClick","focus","options","origin","_focusMonitor","focusVia","_onLabelTextChange","_changeDetectorRef","detectChanges","_","ɵfac","MatLegacySlideToggle_Factory","t","ɵɵdirectiveInject","ElementRef","FocusMonitor","ChangeDetectorRef","ɵɵinjectAttribute","_2","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","MatLegacySlideToggle_Query","rf","ctx","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostAttrs","hostVars","hostBindings","MatLegacySlideToggle_HostBindings","ɵɵhostProperty","id","ɵɵattribute","ɵɵclassProp","disabled","labelPosition","_noopAnimations","inputs","disableRipple","color","exportAs","features","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","consts","template","MatLegacySlideToggle_Template","ɵɵprojectionDef","ɵɵelementStart","ɵɵlistener","MatLegacySlideToggle_Template_input_change_3_listener","$event","MatLegacySlideToggle_Template_input_click_3_listener","ɵɵelementEnd","ɵɵelement","MatLegacySlideToggle_Template_span_cdkObserveContent_9_listener","ɵɵtext","ɵɵprojection","_r0","ɵɵreference","_r2","inputId","ɵɵadvance","textContent","trim","ɵɵproperty","required","name","ariaLabel","ariaLabelledby","ariaDescribedby","ɵɵpureFunction1","dependencies","MatRipple","CdkObserveContent","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","host","providers","None","OnPush","undefined","decorators","MatLegacySlideToggleModule","MatLegacySlideToggleModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","exports","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}