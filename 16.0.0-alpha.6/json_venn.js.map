{"version":3,"file":"json_venn.js","mappings":"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","sources":["./node_modules/@amcharts/amcharts5/.internal/charts/venn/Venn.js","./node_modules/@amcharts/amcharts5/.internal/charts/venn/VennDefaultTheme.js","./node_modules/@amcharts/amcharts5/.internal/charts/venn/vennjs/circleintersection.js","./node_modules/@amcharts/amcharts5/.internal/charts/venn/vennjs/diagram.js","./node_modules/@amcharts/amcharts5/.internal/charts/venn/vennjs/fmin/bisect.js","./node_modules/@amcharts/amcharts5/.internal/charts/venn/vennjs/fmin/blas1.js","./node_modules/@amcharts/amcharts5/.internal/charts/venn/vennjs/fmin/conjugateGradient.js","./node_modules/@amcharts/amcharts5/.internal/charts/venn/vennjs/fmin/linesearch.js","./node_modules/@amcharts/amcharts5/.internal/charts/venn/vennjs/fmin/nelderMead.js","./node_modules/@amcharts/amcharts5/.internal/charts/venn/vennjs/layout.js","./node_modules/@amcharts/amcharts5/.internal/core/util/ColorSet.js","./node_modules/@amcharts/amcharts5/venn.js"],"sourcesContent":["import { __awaiter } from \"tslib\";\r\nimport { VennDefaultTheme } from \"./VennDefaultTheme\";\r\nimport { Series } from \"../../core/render/Series\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { Graphics, visualSettings } from \"../../core/render/Graphics\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as venn from \"./vennjs/index.js\";\r\n/**\r\n * Creates a Venn diagram.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/venn/} for more info\r\n * @important\r\n */\r\nexport class Venn extends Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_sets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"\"\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all slices (circles and intersections).\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"slicesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all labels.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"labelsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A [[Graphics]] element that is used to show the shape of the hovered slice\r\n         * or intersection.\r\n         *\r\n         * @default Graphics.new()\r\n         */\r\n        Object.defineProperty(this, \"hoverGraphics\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.slicesContainer.children.push(Graphics.new(this._root, { position: \"absolute\", isMeasured: false }))\r\n        });\r\n        Object.defineProperty(this, \"_hovered\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A [[ListTemplate]] of all slices in series.\r\n         *\r\n         * `slices.template` can also be used to configure slices.\r\n         */\r\n        Object.defineProperty(this, \"slices\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._makeSlices()\r\n        });\r\n        /**\r\n         * A [[ListTemplate]] of all slice labels in series.\r\n         *\r\n         * `labels.template` can also be used to configure slice labels.\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._makeLabels()\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._defaultThemes.push(VennDefaultTheme.new(this._root));\r\n        this.fields.push(\"intersections\", \"category\", \"fill\");\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeSlice(dataItem) {\r\n        const slice = this.slicesContainer.children.push(this.slices.make());\r\n        slice.events.on(\"pointerover\", (e) => {\r\n            this._hovered = e.target;\r\n            this._updateHover();\r\n        });\r\n        slice.events.on(\"pointerout\", () => {\r\n            this._hovered = undefined;\r\n            this.hoverGraphics.hide();\r\n        });\r\n        slice.on(\"fill\", () => {\r\n            this.updateLegendMarker(dataItem);\r\n        });\r\n        slice.on(\"stroke\", () => {\r\n            this.updateLegendMarker(dataItem);\r\n        });\r\n        slice._setDataItem(dataItem);\r\n        dataItem.set(\"slice\", slice);\r\n        this.slices.push(slice);\r\n        return slice;\r\n    }\r\n    _updateHover() {\r\n        if (this._hovered) {\r\n            const hoverGraphics = this.hoverGraphics;\r\n            hoverGraphics.set(\"svgPath\", this._hovered.get(\"svgPath\"));\r\n            hoverGraphics.show();\r\n            hoverGraphics.toFront();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeLabel(dataItem) {\r\n        const label = this.labelsContainer.children.push(this.labels.make());\r\n        label._setDataItem(dataItem);\r\n        dataItem.set(\"label\", label);\r\n        this.labels.push(label);\r\n        return label;\r\n    }\r\n    _makeSlices() {\r\n        return new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n            themeTags: $utils.mergeTags(this.slices.template.get(\"themeTags\", []), [\"venn\", \"series\"])\r\n        }, [this.slices.template]));\r\n    }\r\n    _makeLabels() {\r\n        return new ListTemplate(Template.new({}), () => Label._new(this._root, {\r\n            themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"venn\", \"series\"])\r\n        }, [this.labels.template]));\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        if (dataItem.get(\"fill\") == null) {\r\n            let colors = this.get(\"colors\");\r\n            if (colors) {\r\n                dataItem.setRaw(\"fill\", colors.next());\r\n            }\r\n        }\r\n        this.makeSlice(dataItem);\r\n        this.makeLabel(dataItem);\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this._valuesDirty || this._sizeDirty) {\r\n            const sets = [];\r\n            // prepare data for venn\r\n            $array.each(this.dataItems, (dataItem) => {\r\n                const set = {};\r\n                const intersections = dataItem.get(\"intersections\");\r\n                if (intersections) {\r\n                    set.sets = intersections;\r\n                }\r\n                else {\r\n                    set.sets = [dataItem.get(\"category\")];\r\n                }\r\n                set.size = dataItem.get(\"valueWorking\");\r\n                if (set.size > 0) {\r\n                    sets.push(set);\r\n                }\r\n            });\r\n            const newSets = sets.toString();\r\n            this._sets = newSets;\r\n            if (sets.length > 0) {\r\n                let vennData = venn.venn(sets);\r\n                vennData = venn.normalizeSolution(vennData, null, null);\r\n                vennData = venn.scaleSolution(vennData, this.innerWidth(), this.innerHeight(), 0);\r\n                const circles = {};\r\n                for (let name in vennData) {\r\n                    let item = vennData[name];\r\n                    let r = item.radius;\r\n                    const dataItem = this.getDataItemByCategory(name);\r\n                    if (dataItem) {\r\n                        const slice = dataItem.get(\"slice\");\r\n                        const color = dataItem.get(\"fill\");\r\n                        slice._setDefault(\"fill\", color);\r\n                        slice._setDefault(\"stroke\", color);\r\n                        this.updateLegendMarker(dataItem);\r\n                        slice.set(\"svgPath\", \"M\" + item.x + \",\" + item.y + \" m -\" + r + \", 0 a \" + r + \",\" + r + \" 0 1,1 \" + r * 2 + \",0 a \" + r + \",\" + r + \" 0 1,1 -\" + r * 2 + \",0\");\r\n                        circles[name] = item;\r\n                    }\r\n                }\r\n                let centers = venn.computeTextCentres(circles, sets);\r\n                $array.each(this.dataItems, (dataItem) => {\r\n                    let name = dataItem.get(\"category\");\r\n                    let center = centers[name];\r\n                    const intersections = dataItem.get(\"intersections\");\r\n                    if (intersections) {\r\n                        name = intersections.toString();\r\n                        center = centers[name];\r\n                        if (center) {\r\n                            let set = intersections;\r\n                            let cc = [];\r\n                            for (let s = 0; s < set.length; s++) {\r\n                                cc.push(circles[set[s]]);\r\n                            }\r\n                            let intersectionPath = venn.intersectionAreaPath(cc);\r\n                            let slice = dataItem.get(\"slice\");\r\n                            const color = dataItem.get(\"fill\");\r\n                            slice._setDefault(\"fill\", color);\r\n                            slice._setDefault(\"stroke\", color);\r\n                            slice.setAll({ svgPath: intersectionPath });\r\n                        }\r\n                    }\r\n                    if (center) {\r\n                        let label = dataItem.get(\"label\");\r\n                        label.setAll({ x: center.x, y: center.y });\r\n                    }\r\n                    this.updateLegendValue(dataItem);\r\n                });\r\n            }\r\n            this._updateHover();\r\n        }\r\n    }\r\n    /**\r\n     * Looks up and returns a data item by its category.\r\n     *\r\n     * @param   category  Category\r\n     * @return      Data item\r\n     */\r\n    getDataItemByCategory(id) {\r\n        return $array.find(this.dataItems, (dataItem) => {\r\n            return dataItem.get(\"category\") == id;\r\n        });\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            if (!$type.isNumber(duration)) {\r\n                duration = this.get(\"stateAnimationDuration\", 0);\r\n            }\r\n            const easing = this.get(\"stateAnimationEasing\");\r\n            let value = dataItem.get(\"value\");\r\n            const animation = dataItem.animate({ key: \"valueWorking\", to: value, duration: duration, easing: easing });\r\n            if (animation) {\r\n                promises.push(animation.waitForStop());\r\n            }\r\n            const label = dataItem.get(\"label\");\r\n            if (label) {\r\n                promises.push(label.show(duration));\r\n            }\r\n            const slice = dataItem.get(\"slice\");\r\n            if (slice) {\r\n                promises.push(slice.show(duration));\r\n            }\r\n            const intersections = dataItem.get(\"intersections\");\r\n            if (intersections) {\r\n                $array.each(intersections, (cat) => {\r\n                    const di = this.getDataItemByCategory(cat);\r\n                    if (di && di.isHidden()) {\r\n                        this.showDataItem(di, duration);\r\n                    }\r\n                });\r\n            }\r\n            if (!intersections) {\r\n                const category = dataItem.get(\"category\");\r\n                $array.each(this.dataItems, (di) => {\r\n                    const intersections = di.get(\"intersections\");\r\n                    if (di != dataItem && intersections) {\r\n                        let allVisible = true;\r\n                        $array.each(intersections, (cat) => {\r\n                            const dii = this.getDataItemByCategory(cat);\r\n                            if (dii && dii.isHidden()) {\r\n                                allVisible = false;\r\n                            }\r\n                        });\r\n                        if (allVisible && intersections.indexOf(category) != -1) {\r\n                            if (di.isHidden()) {\r\n                                this.showDataItem(di, duration);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const hiddenState = this.states.create(\"hidden\", {});\r\n            if (!$type.isNumber(duration)) {\r\n                duration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\r\n            }\r\n            const easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\r\n            const animation = dataItem.animate({ key: \"valueWorking\", to: 0, duration: duration, easing: easing });\r\n            if (animation) {\r\n                promises.push(animation.waitForStop());\r\n            }\r\n            const label = dataItem.get(\"label\");\r\n            if (label) {\r\n                promises.push(label.hide(duration));\r\n            }\r\n            const slice = dataItem.get(\"slice\");\r\n            if (slice) {\r\n                promises.push(slice.hide(duration));\r\n                slice.hideTooltip();\r\n            }\r\n            if (!dataItem.get(\"intersections\")) {\r\n                $array.each(this.dataItems, (di) => {\r\n                    const intersections = di.get(\"intersections\");\r\n                    if (di != dataItem && intersections) {\r\n                        if (intersections.indexOf(dataItem.get(\"category\")) != -1) {\r\n                            this.hideDataItem(di, duration);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        let label = dataItem.get(\"label\");\r\n        if (label) {\r\n            this.labels.removeValue(label);\r\n            label.dispose();\r\n        }\r\n        let slice = dataItem.get(\"slice\");\r\n        if (slice) {\r\n            this.slices.removeValue(slice);\r\n            slice.dispose();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendMarker(dataItem) {\r\n        const slice = dataItem.get(\"slice\");\r\n        if (slice) {\r\n            const legendDataItem = dataItem.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                const markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n                $array.each(visualSettings, (setting) => {\r\n                    markerRectangle.set(setting, slice.get(setting));\r\n                });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Triggers hover on a series data item.\r\n     *\r\n     * @since 5.0.7\r\n     * @param  dataItem  Target data item\r\n     */\r\n    hoverDataItem(dataItem) {\r\n        const slice = dataItem.get(\"slice\");\r\n        if (slice && !slice.isHidden()) {\r\n            slice.hover();\r\n        }\r\n    }\r\n    /**\r\n     * Triggers un-hover on a series data item.\r\n     *\r\n     * @since 5.0.7\r\n     * @param  dataItem  Target data item\r\n     */\r\n    unhoverDataItem(dataItem) {\r\n        const slice = dataItem.get(\"slice\");\r\n        if (slice) {\r\n            slice.unhover();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Venn, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Venn\"\r\n});\r\nObject.defineProperty(Venn, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Series.classNames.concat([Venn.className])\r\n});\r\n","import { Theme } from \"../../core/Theme\";\r\nimport { p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\n/**\r\n * @ignore\r\n */\r\nexport class VennDefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const r = this.rule.bind(this);\r\n        r(\"Venn\").setAll({\r\n            legendLabelText: \"{category}\",\r\n            legendValueText: \"{value}\",\r\n            colors: ColorSet.new(this._root, {}),\r\n            width: p100,\r\n            height: p100\r\n        });\r\n        r(\"Label\", [\"venn\"]).setAll({\r\n            text: \"{category}\",\r\n            populateText: true,\r\n            centerX: p50,\r\n            centerY: p50\r\n        });\r\n    }\r\n}\r\n","var SMALL = 1e-10;\n\n/** Returns the intersection area of a bunch of circles (where each circle\n is an object having an x,y and radius property) */\nexport function intersectionArea(circles, stats) {\n    // get all the intersection points of the circles\n    var intersectionPoints = getIntersectionPoints(circles);\n\n    // filter out points that aren't included in all the circles\n    var innerPoints = intersectionPoints.filter(function (p) {\n        return containedInCircles(p, circles);\n    });\n\n    var arcArea = 0, polygonArea = 0, arcs = [], i;\n\n    // if we have intersection points that are within all the circles,\n    // then figure out the area contained by them\n    if (innerPoints.length > 1) {\n        // sort the points by angle from the center of the polygon, which lets\n        // us just iterate over points to get the edges\n        var center = getCenter(innerPoints);\n        for (i = 0; i < innerPoints.length; ++i ) {\n            var p = innerPoints[i];\n            p.angle = Math.atan2(p.x - center.x, p.y - center.y);\n        }\n        innerPoints.sort(function(a,b) { return b.angle - a.angle;});\n\n        // iterate over all points, get arc between the points\n        // and update the areas\n        var p2 = innerPoints[innerPoints.length - 1];\n        for (i = 0; i < innerPoints.length; ++i) {\n            var p1 = innerPoints[i];\n\n            // polygon area updates easily ...\n            polygonArea += (p2.x + p1.x) * (p1.y - p2.y);\n\n            // updating the arc area is a little more involved\n            var midPoint = {x : (p1.x + p2.x) / 2,\n                            y : (p1.y + p2.y) / 2},\n                arc = null;\n\n            for (var j = 0; j < p1.parentIndex.length; ++j) {\n                if (p2.parentIndex.indexOf(p1.parentIndex[j]) > -1) {\n                    // figure out the angle halfway between the two points\n                    // on the current circle\n                    var circle = circles[p1.parentIndex[j]],\n                        a1 = Math.atan2(p1.x - circle.x, p1.y - circle.y),\n                        a2 = Math.atan2(p2.x - circle.x, p2.y - circle.y);\n\n                    var angleDiff = (a2 - a1);\n                    if (angleDiff < 0) {\n                        angleDiff += 2*Math.PI;\n                    }\n\n                    // and use that angle to figure out the width of the\n                    // arc\n                    var a = a2 - angleDiff/2,\n                        width = distance(midPoint, {\n                            x : circle.x + circle.radius * Math.sin(a),\n                            y : circle.y + circle.radius * Math.cos(a)\n                        });\n\n                    // clamp the width to the largest is can actually be\n                    // (sometimes slightly overflows because of FP errors)\n                    if (width > circle.radius * 2) {\n                        width = circle.radius * 2;\n                    }\n\n                    // pick the circle whose arc has the smallest width\n                    if ((arc === null) || (arc.width > width)) {\n                        arc = { circle : circle,\n                                width : width,\n                                p1 : p1,\n                                p2 : p2};\n                    }\n                }\n            }\n\n            if (arc !== null) {\n                arcs.push(arc);\n                arcArea += circleArea(arc.circle.radius, arc.width);\n                p2 = p1;\n            }\n        }\n    } else {\n        // no intersection points, is either disjoint - or is completely\n        // overlapped. figure out which by examining the smallest circle\n        var smallest = circles[0];\n        for (i = 1; i < circles.length; ++i) {\n            if (circles[i].radius < smallest.radius) {\n                smallest = circles[i];\n            }\n        }\n\n        // make sure the smallest circle is completely contained in all\n        // the other circles\n        var disjoint = false;\n        for (i = 0; i < circles.length; ++i) {\n            if (distance(circles[i], smallest) > Math.abs(smallest.radius - circles[i].radius)) {\n                disjoint = true;\n                break;\n            }\n        }\n\n        if (disjoint) {\n            arcArea = polygonArea = 0;\n\n        } else {\n            arcArea = smallest.radius * smallest.radius * Math.PI;\n            arcs.push({circle : smallest,\n                       p1: { x: smallest.x,        y : smallest.y + smallest.radius},\n                       p2: { x: smallest.x - SMALL, y : smallest.y + smallest.radius},\n                       width : smallest.radius * 2 });\n        }\n    }\n\n    polygonArea /= 2;\n    if (stats) {\n        stats.area = arcArea + polygonArea;\n        stats.arcArea = arcArea;\n        stats.polygonArea = polygonArea;\n        stats.arcs = arcs;\n        stats.innerPoints = innerPoints;\n        stats.intersectionPoints = intersectionPoints;\n    }\n\n    return arcArea + polygonArea;\n}\n\n/** returns whether a point is contained by all of a list of circles */\nexport function containedInCircles(point, circles) {\n    for (var i = 0; i < circles.length; ++i) {\n        if (distance(point, circles[i]) > circles[i].radius + SMALL) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/** Gets all intersection points between a bunch of circles */\nfunction getIntersectionPoints(circles) {\n    var ret = [];\n    for (var i = 0; i < circles.length; ++i) {\n        for (var j = i + 1; j < circles.length; ++j) {\n            var intersect = circleCircleIntersection(circles[i],\n                                                          circles[j]);\n            for (var k = 0; k < intersect.length; ++k) {\n                var p = intersect[k];\n                p.parentIndex = [i,j];\n                ret.push(p);\n            }\n        }\n    }\n    return ret;\n}\n\n/** Circular segment area calculation. See http://mathworld.wolfram.com/CircularSegment.html */\nexport function circleArea(r, width) {\n    return r * r * Math.acos(1 - width/r) - (r - width) * Math.sqrt(width * (2 * r - width));\n}\n\n/** euclidean distance between two points */\nexport function distance(p1, p2) {\n    return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) +\n                     (p1.y - p2.y) * (p1.y - p2.y));\n}\n\n\n/** Returns the overlap area of two circles of radius r1 and r2 - that\nhave their centers separated by distance d. Simpler faster\ncircle intersection for only two circles */\nexport function circleOverlap(r1, r2, d) {\n    // no overlap\n    if (d >= r1 + r2) {\n        return 0;\n    }\n\n    // completely overlapped\n    if (d <= Math.abs(r1 - r2)) {\n        return Math.PI * Math.min(r1, r2) * Math.min(r1, r2);\n    }\n\n    var w1 = r1 - (d * d - r2 * r2 + r1 * r1) / (2 * d),\n        w2 = r2 - (d * d - r1 * r1 + r2 * r2) / (2 * d);\n    return circleArea(r1, w1) + circleArea(r2, w2);\n}\n\n/** Given two circles (containing a x/y/radius attributes),\nreturns the intersecting points if possible.\nnote: doesn't handle cases where there are infinitely many\nintersection points (circles are equivalent):, or only one intersection point*/\nexport function circleCircleIntersection(p1, p2) {\n    var d = distance(p1, p2),\n        r1 = p1.radius,\n        r2 = p2.radius;\n\n    // if to far away, or self contained - can't be done\n    if ((d >= (r1 + r2)) || (d <= Math.abs(r1 - r2))) {\n        return [];\n    }\n\n    var a = (r1 * r1 - r2 * r2 + d * d) / (2 * d),\n        h = Math.sqrt(r1 * r1 - a * a),\n        x0 = p1.x + a * (p2.x - p1.x) / d,\n        y0 = p1.y + a * (p2.y - p1.y) / d,\n        rx = -(p2.y - p1.y) * (h / d),\n        ry = -(p2.x - p1.x) * (h / d);\n\n    return [{x: x0 + rx, y : y0 - ry },\n            {x: x0 - rx, y : y0 + ry }];\n}\n\n/** Returns the center of a bunch of points */\nexport function getCenter(points) {\n    var center = {x: 0, y: 0};\n    for (var i =0; i < points.length; ++i ) {\n        center.x += points[i].x;\n        center.y += points[i].y;\n    }\n    center.x /= points.length;\n    center.y /= points.length;\n    return center;\n}\n","import {select, selectAll} from \"d3-selection\";\nimport {transition} from \"d3-transition\";\n\nimport {venn, lossFunction, normalizeSolution, scaleSolution} from \"./layout\";\nimport {intersectionArea, distance, getCenter} from \"./circleintersection\";\nimport {nelderMead} from \"./fmin/index.js\";\n\n/*global console:true*/\n\nexport function VennDiagram() {\n    var width = 600,\n        height = 350,\n        padding = 15,\n        duration = 1000,\n        orientation = Math.PI / 2,\n        normalize = true,\n        wrap = true,\n        styled = true,\n        fontSize = null,\n        orientationOrder = null,\n\n        // mimic the behaviour of d3.scale.category10 from the previous\n        // version of d3\n        colourMap = {},\n\n        // so this is the same as d3.schemeCategory10, which is only defined in d3 4.0\n        // since we can support older versions of d3 as long as we don't force this,\n        // I'm hackily redefining below. TODO: remove this and change to d3.schemeCategory10\n        colourScheme = [\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \"#bcbd22\", \"#17becf\"],\n        colourIndex = 0,\n        colours = function(key) {\n            if (key in colourMap) {\n                return colourMap[key];\n            }\n            var ret = colourMap[key] = colourScheme[colourIndex];\n            colourIndex += 1;\n            if (colourIndex >= colourScheme.length) {\n                colourIndex = 0;\n            }\n            return ret;\n        },\n        layoutFunction = venn,\n        loss = lossFunction;\n\n\n    function chart(selection) {\n        var data = selection.datum();\n\n        // handle 0-sized sets by removing from input\n        var toremove = {};\n        data.forEach(function(datum) {\n            if ((datum.size == 0) && datum.sets.length == 1) {\n                toremove[datum.sets[0]] = 1;\n            }\n        });\n        data = data.filter(function(datum) {\n            return !datum.sets.some(function(set) { return set in toremove; });\n        });\n\n        var circles = {};\n        var textCentres = {};\n\n        if (data.length > 0) {\n            var solution = layoutFunction(data, {lossFunction: loss});\n\n            if (normalize) {\n                solution = normalizeSolution(solution,\n                                            orientation,\n                                            orientationOrder);\n            }\n\n            circles = scaleSolution(solution, width, height, padding);\n            textCentres = computeTextCentres(circles, data);\n        }\n\n        // Figure out the current label for each set. These can change\n        // and D3 won't necessarily update (fixes https://github.com/benfred/venn.js/issues/103)\n        var labels = {};\n        data.forEach(function(datum) {\n            if (datum.label) {\n                labels[datum.sets] = datum.label;\n            }\n        });\n\n        function label(d) {\n            if (d.sets in labels) {\n                return labels[d.sets];\n            }\n            if (d.sets.length == 1) {\n                return '' + d.sets[0];\n            }\n        }\n\n        // create svg if not already existing\n        selection.selectAll(\"svg\").data([circles]).enter().append(\"svg\");\n\n        var svg = selection.select(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height);\n\n        // to properly transition intersection areas, we need the\n        // previous circles locations. load from elements\n        var previous = {}, hasPrevious = false;\n        svg.selectAll(\".venn-area path\").each(function (d) {\n            var path = select(this).attr(\"d\");\n            if ((d.sets.length == 1) && path) {\n                hasPrevious = true;\n                previous[d.sets[0]] = circleFromPath(path);\n            }\n        });\n\n        // interpolate intersection area paths between previous and\n        // current paths\n        var pathTween = function(d) {\n            return function(t) {\n                var c = d.sets.map(function(set) {\n                    var start = previous[set], end = circles[set];\n                    if (!start) {\n                        start = {x : width/2, y : height/2, radius : 1};\n                    }\n                    if (!end) {\n                        end = {x : width/2, y : height/2, radius : 1};\n                    }\n                    return {'x' : start.x * (1 - t) + end.x * t,\n                            'y' : start.y * (1 - t) + end.y * t,\n                            'radius' : start.radius * (1 - t) + end.radius * t};\n                });\n                return intersectionAreaPath(c);\n            };\n        };\n\n        // update data, joining on the set ids\n        var nodes = svg.selectAll(\".venn-area\")\n            .data(data, function(d) { return d.sets; });\n\n        // create new nodes\n        var enter = nodes.enter()\n            .append('g')\n            .attr(\"class\", function(d) {\n                return \"venn-area venn-\" +\n                    (d.sets.length == 1 ? \"circle\" : \"intersection\");\n            })\n            .attr(\"data-venn-sets\", function(d) {\n                return d.sets.join(\"_\");\n            });\n\n        var enterPath = enter.append(\"path\"),\n            enterText = enter.append(\"text\")\n            .attr(\"class\", \"label\")\n            .text(function (d) { return label(d); } )\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"dy\", \".35em\")\n            .attr(\"x\", width/2)\n            .attr(\"y\", height/2);\n\n\n        // apply minimal style if wanted\n        if (styled) {\n            enterPath.style(\"fill-opacity\", \"0\")\n                .filter(function (d) { return d.sets.length == 1; } )\n                .style(\"fill\", function(d) { return colours(d.sets); })\n                .style(\"fill-opacity\", \".25\");\n\n            enterText\n                .style(\"fill\", function(d) { return d.sets.length == 1 ? colours(d.sets) : \"#444\"; });\n        }\n\n        // update existing, using pathTween if necessary\n        var update = selection;\n        if (hasPrevious) {\n            update = selection.transition(\"venn\").duration(duration);\n            update.selectAll(\"path\")\n                .attrTween(\"d\", pathTween);\n        } else {\n            update.selectAll(\"path\")\n                .attr(\"d\", function(d) {\n                    return intersectionAreaPath(d.sets.map(function (set) { return circles[set]; }));\n                });\n        }\n\n        var updateText = update.selectAll(\"text\")\n            .filter(function (d) { return d.sets in textCentres; })\n            .text(function (d) { return label(d); } )\n            .attr(\"x\", function(d) { return Math.floor(textCentres[d.sets].x);})\n            .attr(\"y\", function(d) { return Math.floor(textCentres[d.sets].y);});\n\n        if (wrap) {\n            if (hasPrevious) {\n                // d3 4.0 uses 'on' for events on transitions,\n                // but d3 3.0 used 'each' instead. switch appropiately\n                if ('on' in updateText) {\n                    updateText.on(\"end\", wrapText(circles, label));\n                } else {\n                    updateText.each(\"end\", wrapText(circles, label));\n                }\n            } else {\n                updateText.each(wrapText(circles, label));\n            }\n        }\n\n        // remove old\n        var exit = nodes.exit().transition('venn').duration(duration).remove();\n        exit.selectAll(\"path\")\n            .attrTween(\"d\", pathTween);\n\n        var exitText = exit.selectAll(\"text\")\n            .attr(\"x\", width/2)\n            .attr(\"y\", height/2);\n\n        // if we've been passed a fontSize explicitly, use it to\n        // transition\n        if (fontSize !== null) {\n            enterText.style(\"font-size\", \"0px\");\n            updateText.style(\"font-size\", fontSize);\n            exitText.style(\"font-size\", \"0px\");\n        }\n\n\n        return {'circles': circles,\n                'textCentres': textCentres,\n                'nodes': nodes,\n                'enter': enter,\n                'update': update,\n                'exit': exit};\n    }\n\n    chart.wrap = function(_) {\n        if (!arguments.length) return wrap;\n        wrap = _;\n        return chart;\n    };\n\n    chart.width = function(_) {\n        if (!arguments.length) return width;\n        width = _;\n        return chart;\n    };\n\n    chart.height = function(_) {\n        if (!arguments.length) return height;\n        height = _;\n        return chart;\n    };\n\n    chart.padding = function(_) {\n        if (!arguments.length) return padding;\n        padding = _;\n        return chart;\n    };\n\n    chart.colours = function(_) {\n        if (!arguments.length) return colours;\n        colours = _;\n        return chart;\n    };\n\n    chart.fontSize = function(_) {\n        if (!arguments.length) return fontSize;\n        fontSize = _;\n        return chart;\n    };\n\n    chart.duration = function(_) {\n        if (!arguments.length) return duration;\n        duration = _;\n        return chart;\n    };\n\n    chart.layoutFunction = function(_) {\n        if (!arguments.length) return layoutFunction;\n        layoutFunction = _;\n        return chart;\n    };\n\n    chart.normalize = function(_) {\n        if (!arguments.length) return normalize;\n        normalize = _;\n        return chart;\n    };\n\n    chart.styled = function(_) {\n        if (!arguments.length) return styled;\n        styled = _;\n        return chart;\n    };\n\n    chart.orientation = function(_) {\n        if (!arguments.length) return orientation;\n        orientation = _;\n        return chart;\n    };\n\n    chart.orientationOrder = function(_) {\n        if (!arguments.length) return orientationOrder;\n        orientationOrder = _;\n        return chart;\n    };\n\n    chart.lossFunction = function(_) {\n      if (!arguments.length) return loss;\n      loss = _;\n      return chart;\n    };\n\n    return chart;\n}\n// sometimes text doesn't fit inside the circle, if thats the case lets wrap\n// the text here such that it fits\n// todo: looks like this might be merged into d3 (\n// https://github.com/mbostock/d3/issues/1642),\n// also worth checking out is\n// http://engineering.findthebest.com/wrapping-axis-labels-in-d3-js/\n// this seems to be one of those things that should be easy but isn't\nexport function wrapText(circles, labeller) {\n    return function() {\n        var text = select(this),\n            data = text.datum(),\n            width = circles[data.sets[0]].radius || 50,\n            label = labeller(data) || '';\n\n            var words = label.split(/\\s+/).reverse(),\n            maxLines = 3,\n            minChars = (label.length + words.length) / maxLines,\n            word = words.pop(),\n            line = [word],\n            joined,\n            lineNumber = 0,\n            lineHeight = 1.1, // ems\n            tspan = text.text(null).append(\"tspan\").text(word);\n\n        while (true) {\n            word = words.pop();\n            if (!word) break;\n            line.push(word);\n            joined = line.join(\" \");\n            tspan.text(joined);\n            if (joined.length > minChars && tspan.node().getComputedTextLength() > width) {\n                line.pop();\n                tspan.text(line.join(\" \"));\n                line = [word];\n                tspan = text.append(\"tspan\").text(word);\n                lineNumber++;\n            }\n        }\n\n        var initial = 0.35 - lineNumber * lineHeight / 2,\n            x = text.attr(\"x\"),\n            y = text.attr(\"y\");\n\n        text.selectAll(\"tspan\")\n            .attr(\"x\", x)\n            .attr(\"y\", y)\n            .attr(\"dy\", function(d, i) {\n                 return (initial + i * lineHeight) + \"em\";\n            });\n    };\n}\n\nfunction circleMargin(current, interior, exterior) {\n    var margin = interior[0].radius - distance(interior[0], current), i, m;\n    for (i = 1; i < interior.length; ++i) {\n        m = interior[i].radius - distance(interior[i], current);\n        if (m <= margin) {\n            margin = m;\n        }\n    }\n\n    for (i = 0; i < exterior.length; ++i) {\n        m = distance(exterior[i], current) - exterior[i].radius;\n        if (m <= margin) {\n            margin = m;\n        }\n    }\n    return margin;\n}\n\n// compute the center of some circles by maximizing the margin of\n// the center point relative to the circles (interior) after subtracting\n// nearby circles (exterior)\nexport function computeTextCentre(interior, exterior) {\n    // get an initial estimate by sampling around the interior circles\n    // and taking the point with the biggest margin\n    var points = [], i;\n    for (i = 0; i < interior.length; ++i) {\n        var c = interior[i];\n        points.push({x: c.x, y: c.y});\n        points.push({x: c.x + c.radius/2, y: c.y});\n        points.push({x: c.x - c.radius/2, y: c.y});\n        points.push({x: c.x, y: c.y + c.radius/2});\n        points.push({x: c.x, y: c.y - c.radius/2});\n    }\n    var initial = points[0], margin = circleMargin(points[0], interior, exterior);\n    for (i = 1; i < points.length; ++i) {\n        var m = circleMargin(points[i], interior, exterior);\n        if (m >= margin) {\n            initial = points[i];\n            margin = m;\n        }\n    }\n\n    // maximize the margin numerically\n    var solution = nelderMead(\n                function(p) { return -1 * circleMargin({x: p[0], y: p[1]}, interior, exterior); },\n                [initial.x, initial.y],\n                {maxIterations:500, minErrorDelta:1e-10}).x;\n    var ret = {x: solution[0], y: solution[1]};\n\n    // check solution, fallback as needed (happens if fully overlapped\n    // etc)\n    var valid = true;\n    for (i = 0; i < interior.length; ++i) {\n        if (distance(ret, interior[i]) > interior[i].radius) {\n            valid = false;\n            break;\n        }\n    }\n\n    for (i = 0; i < exterior.length; ++i) {\n        if (distance(ret, exterior[i]) < exterior[i].radius) {\n            valid = false;\n            break;\n        }\n    }\n\n    if (!valid) {\n        if (interior.length == 1) {\n            ret = {x: interior[0].x, y: interior[0].y};\n        } else {\n            var areaStats = {};\n            intersectionArea(interior, areaStats);\n\n            if (areaStats.arcs.length === 0) {\n                ret = {'x': 0, 'y': -1000, disjoint:true};\n\n            } else if (areaStats.arcs.length == 1) {\n                ret = {'x': areaStats.arcs[0].circle.x,\n                       'y': areaStats.arcs[0].circle.y};\n\n            } else if (exterior.length) {\n                // try again without other circles\n                ret = computeTextCentre(interior, []);\n\n            } else {\n                // take average of all the points in the intersection\n                // polygon. this should basically never happen\n                // and has some issues:\n                // https://github.com/benfred/venn.js/issues/48#issuecomment-146069777\n                ret = getCenter(areaStats.arcs.map(function (a) { return a.p1; }));\n            }\n        }\n    }\n\n    return ret;\n}\n\n// given a dictionary of {setid : circle}, returns\n// a dictionary of setid to list of circles that completely overlap it\nfunction getOverlappingCircles(circles) {\n    var ret = {}, circleids = [];\n    for (var circleid in circles) {\n        circleids.push(circleid);\n        ret[circleid] = [];\n    }\n    for (var i  = 0; i < circleids.length; i++) {\n        var a = circles[circleids[i]];\n        for (var j = i + 1; j < circleids.length; ++j) {\n            var b = circles[circleids[j]],\n                d = distance(a, b);\n\n            if (d + b.radius <= a.radius + 1e-10) {\n                ret[circleids[j]].push(circleids[i]);\n\n            } else if (d + a.radius <= b.radius + 1e-10) {\n                ret[circleids[i]].push(circleids[j]);\n            }\n        }\n    }\n    return ret;\n}\n\nexport function computeTextCentres(circles, areas) {\n    var ret = {}, overlapped = getOverlappingCircles(circles);\n    for (var i = 0; i < areas.length; ++i) {\n        var area = areas[i].sets, areaids = {}, exclude = {};\n        for (var j = 0; j < area.length; ++j) {\n            areaids[area[j]] = true;\n            var overlaps = overlapped[area[j]];\n            // keep track of any circles that overlap this area,\n            // and don't consider for purposes of computing the text\n            // centre\n            for (var k = 0; k < overlaps.length; ++k) {\n                exclude[overlaps[k]] = true;\n            }\n        }\n\n        var interior = [], exterior = [];\n        for (var setid in circles) {\n            if (setid in areaids) {\n                interior.push(circles[setid]);\n            } else if (!(setid in exclude)) {\n                exterior.push(circles[setid]);\n            }\n        }\n        var centre = computeTextCentre(interior, exterior);\n        ret[area] = centre;\n        if (centre.disjoint && (areas[i].size > 0)) {\n            console.log(\"WARNING: area \" + area + \" not represented on screen\");\n        }\n    }\n    return  ret;\n}\n\n// sorts all areas in the venn diagram, so that\n// a particular area is on top (relativeTo) - and\n// all other areas are so that the smallest areas are on top\nexport function sortAreas(div, relativeTo) {\n\n    // figure out sets that are completly overlapped by relativeTo\n    var overlaps = getOverlappingCircles(div.selectAll(\"svg\").datum());\n    var exclude = {};\n    for (var i = 0; i < relativeTo.sets.length; ++i) {\n        var check = relativeTo.sets[i];\n        for (var setid in overlaps) {\n            var overlap = overlaps[setid];\n            for (var j = 0; j < overlap.length; ++j) {\n                if (overlap[j] == check) {\n                    exclude[setid] = true;\n                    break;\n                }\n            }\n        }\n    }\n\n    // checks that all sets are in exclude;\n    function shouldExclude(sets) {\n        for (var i = 0; i < sets.length; ++i) {\n            if (!(sets[i] in exclude)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    // need to sort div's so that Z order is correct\n    div.selectAll(\"g\").sort(function (a, b) {\n        // highest order set intersections first\n        if (a.sets.length != b.sets.length) {\n            return a.sets.length - b.sets.length;\n        }\n\n        if (a == relativeTo) {\n            return shouldExclude(b.sets) ? -1 : 1;\n        }\n        if (b == relativeTo) {\n            return shouldExclude(a.sets) ? 1 : -1;\n        }\n\n        // finally by size\n        return b.size - a.size;\n    });\n}\n\nexport function circlePath(x, y, r) {\n    var ret = [];\n    ret.push(\"\\nM\", x, y);\n    ret.push(\"\\nm\", -r, 0);\n    ret.push(\"\\na\", r, r, 0, 1, 0, r *2, 0);\n    ret.push(\"\\na\", r, r, 0, 1, 0,-r *2, 0);\n    return ret.join(\" \");\n}\n\n// inverse of the circlePath function, returns a circle object from an svg path\nexport function circleFromPath(path) {\n    var tokens = path.split(' ');\n    return {'x' : parseFloat(tokens[1]),\n            'y' : parseFloat(tokens[2]),\n            'radius' : -parseFloat(tokens[4])\n            };\n}\n\n/** returns a svg path of the intersection area of a bunch of circles */\nexport function intersectionAreaPath(circles) {\n    var stats = {};\n    intersectionArea(circles, stats);\n    var arcs = stats.arcs;\n\n    if (arcs.length === 0) {\n        return \"M 0 0\";\n\n    } else if (arcs.length == 1) {\n        var circle = arcs[0].circle;\n        return circlePath(circle.x, circle.y, circle.radius);\n\n    } else {\n        // draw path around arcs\n        var ret = [\"\\nM\", arcs[0].p2.x, arcs[0].p2.y];\n        for (var i = 0; i < arcs.length; ++i) {\n            var arc = arcs[i], r = arc.circle.radius, wide = arc.width > r;\n            ret.push(\"\\nA\", r, r, 0, wide ? 1 : 0, 1,\n                     arc.p1.x, arc.p1.y);\n        }\n        return ret.join(\" \");\n    }\n}\n","/** finds the zeros of a function, given two starting points (which must\n * have opposite signs */\nexport function bisect(f, a, b, parameters) {\n    parameters = parameters || {};\n    var maxIterations = parameters.maxIterations || 100,\n        tolerance = parameters.tolerance || 1e-10,\n        fA = f(a),\n        fB = f(b),\n        delta = b - a;\n\n    if (fA * fB > 0) {\n        throw \"Initial bisect points must have opposite signs\";\n    }\n\n    if (fA === 0) return a;\n    if (fB === 0) return b;\n\n    for (var i = 0; i < maxIterations; ++i) {\n        delta /= 2;\n        var mid = a + delta,\n            fMid = f(mid);\n\n        if (fMid * fA >= 0) {\n            a = mid;\n        }\n\n        if ((Math.abs(delta) < tolerance) || (fMid === 0)) {\n            return mid;\n        }\n    }\n    return a + delta;\n}\n","// need some basic operations on vectors, rather than adding a dependency,\n// just define here\nexport function zeros(x) { var r = new Array(x); for (var i = 0; i < x; ++i) { r[i] = 0; } return r; }\nexport function zerosM(x,y) { return zeros(x).map(function() { return zeros(y); }); }\n\nexport function dot(a, b) {\n    var ret = 0;\n    for (var i = 0; i < a.length; ++i) {\n        ret += a[i] * b[i];\n    }\n    return ret;\n}\n\nexport function norm2(a)  {\n    return Math.sqrt(dot(a, a));\n}\n\nexport function scale(ret, value, c) {\n    for (var i = 0; i < value.length; ++i) {\n        ret[i] = value[i] * c;\n    }\n}\n\nexport function weightedSum(ret, w1, v1, w2, v2) {\n    for (var j = 0; j < ret.length; ++j) {\n        ret[j] = w1 * v1[j] + w2 * v2[j];\n    }\n}\n","import {dot, norm2, scale, weightedSum} from \"./blas1\";\nimport {wolfeLineSearch} from \"./linesearch\";\n\nexport function conjugateGradient(f, initial, params) {\n    // allocate all memory up front here, keep out of the loop for perfomance\n    // reasons\n    var current = {x: initial.slice(), fx: 0, fxprime: initial.slice()},\n        next = {x: initial.slice(), fx: 0, fxprime: initial.slice()},\n        yk = initial.slice(),\n        pk, temp,\n        a = 1,\n        maxIterations;\n\n    params = params || {};\n    maxIterations = params.maxIterations || initial.length * 20;\n\n    current.fx = f(current.x, current.fxprime);\n    pk = current.fxprime.slice();\n    scale(pk, current.fxprime,-1);\n\n    for (var i = 0; i < maxIterations; ++i) {\n        a = wolfeLineSearch(f, pk, current, next, a);\n\n        // todo: history in wrong spot?\n        if (params.history) {\n            params.history.push({x: current.x.slice(),\n                                 fx: current.fx,\n                                 fxprime: current.fxprime.slice(),\n                                 alpha: a});\n        }\n\n        if (!a) {\n            // faiiled to find point that satifies wolfe conditions.\n            // reset direction for next iteration\n            scale(pk, current.fxprime, -1);\n\n        } else {\n            // update direction using Polak–Ribiere CG method\n            weightedSum(yk, 1, next.fxprime, -1, current.fxprime);\n\n            var delta_k = dot(current.fxprime, current.fxprime),\n                beta_k = Math.max(0, dot(yk, next.fxprime) / delta_k);\n\n            weightedSum(pk, beta_k, pk, -1, next.fxprime);\n\n            temp = current;\n            current = next;\n            next = temp;\n        }\n\n        if (norm2(current.fxprime) <= 1e-5) {\n            break;\n        }\n    }\n\n    if (params.history) {\n        params.history.push({x: current.x.slice(),\n                             fx: current.fx,\n                             fxprime: current.fxprime.slice(),\n                             alpha: a});\n    }\n\n    return current;\n}\n","import {dot, weightedSum} from \"./blas1\";\n\n\n/// searches along line 'pk' for a point that satifies the wolfe conditions\n/// See 'Numerical Optimization' by Nocedal and Wright p59-60\n/// f : objective function\n/// pk : search direction\n/// current: object containing current gradient/loss\n/// next: output: contains next gradient/loss\n/// returns a: step size taken\nexport function wolfeLineSearch(f, pk, current, next, a, c1, c2) {\n    var phi0 = current.fx, phiPrime0 = dot(current.fxprime, pk),\n        phi = phi0, phi_old = phi0,\n        phiPrime = phiPrime0,\n        a0 = 0;\n\n    a = a || 1;\n    c1 = c1 || 1e-6;\n    c2 = c2 || 0.1;\n\n    function zoom(a_lo, a_high, phi_lo) {\n        for (var iteration = 0; iteration < 16; ++iteration) {\n            a = (a_lo + a_high)/2;\n            weightedSum(next.x, 1.0, current.x, a, pk);\n            phi = next.fx = f(next.x, next.fxprime);\n            phiPrime = dot(next.fxprime, pk);\n\n            if ((phi > (phi0 + c1 * a * phiPrime0)) ||\n                (phi >= phi_lo)) {\n                a_high = a;\n\n            } else  {\n                if (Math.abs(phiPrime) <= -c2 * phiPrime0) {\n                    return a;\n                }\n\n                if (phiPrime * (a_high - a_lo) >=0) {\n                    a_high = a_lo;\n                }\n\n                a_lo = a;\n                phi_lo = phi;\n            }\n        }\n\n        return 0;\n    }\n\n    for (var iteration = 0; iteration < 10; ++iteration) {\n        weightedSum(next.x, 1.0, current.x, a, pk);\n        phi = next.fx = f(next.x, next.fxprime);\n        phiPrime = dot(next.fxprime, pk);\n        if ((phi > (phi0 + c1 * a * phiPrime0)) ||\n            (iteration && (phi >= phi_old))) {\n            return zoom(a0, a, phi_old);\n        }\n\n        if (Math.abs(phiPrime) <= -c2 * phiPrime0) {\n            return a;\n        }\n\n        if (phiPrime >= 0 ) {\n            return zoom(a, a0, phi);\n        }\n\n        phi_old = phi;\n        a0 = a;\n        a *= 2;\n    }\n\n    return a;\n}\n","import {dot, norm2, weightedSum} from \"./blas1\";\n\n/** minimizes a function using the downhill simplex method */\nexport function nelderMead(f, x0, parameters) {\n    parameters = parameters || {};\n\n    var maxIterations = parameters.maxIterations || x0.length * 200,\n        nonZeroDelta = parameters.nonZeroDelta || 1.05,\n        zeroDelta = parameters.zeroDelta || 0.001,\n        minErrorDelta = parameters.minErrorDelta || 1e-6,\n        minTolerance = parameters.minErrorDelta || 1e-5,\n        rho = (parameters.rho !== undefined) ? parameters.rho : 1,\n        chi = (parameters.chi !== undefined) ? parameters.chi : 2,\n        psi = (parameters.psi !== undefined) ? parameters.psi : -0.5,\n        sigma = (parameters.sigma !== undefined) ? parameters.sigma : 0.5,\n        maxDiff;\n\n    // initialize simplex.\n    var N = x0.length,\n        simplex = new Array(N + 1);\n    simplex[0] = x0;\n    simplex[0].fx = f(x0);\n    simplex[0].id = 0;\n    for (var i = 0; i < N; ++i) {\n        var point = x0.slice();\n        point[i] = point[i] ? point[i] * nonZeroDelta : zeroDelta;\n        simplex[i+1] = point;\n        simplex[i+1].fx = f(point);\n        simplex[i+1].id = i+1;\n    }\n\n    function updateSimplex(value) {\n        for (var i = 0; i < value.length; i++) {\n            simplex[N][i] = value[i];\n        }\n        simplex[N].fx = value.fx;\n    }\n\n    var sortOrder = function(a, b) { return a.fx - b.fx; };\n\n    var centroid = x0.slice(),\n        reflected = x0.slice(),\n        contracted = x0.slice(),\n        expanded = x0.slice();\n\n    for (var iteration = 0; iteration < maxIterations; ++iteration) {\n        simplex.sort(sortOrder);\n\n        if (parameters.history) {\n            // copy the simplex (since later iterations will mutate) and\n            // sort it to have a consistent order between iterations\n            var sortedSimplex = simplex.map(function (x) {\n                var state = x.slice();\n                state.fx = x.fx;\n                state.id = x.id;\n                return state;\n            });\n            sortedSimplex.sort(function(a,b) { return a.id - b.id; });\n\n            parameters.history.push({x: simplex[0].slice(),\n                                     fx: simplex[0].fx,\n                                     simplex: sortedSimplex});\n        }\n\n        maxDiff = 0;\n        for (i = 0; i < N; ++i) {\n            maxDiff = Math.max(maxDiff, Math.abs(simplex[0][i] - simplex[1][i]));\n        }\n\n        if ((Math.abs(simplex[0].fx - simplex[N].fx) < minErrorDelta) &&\n            (maxDiff < minTolerance)) {\n            break;\n        }\n\n        // compute the centroid of all but the worst point in the simplex\n        for (i = 0; i < N; ++i) {\n            centroid[i] = 0;\n            for (var j = 0; j < N; ++j) {\n                centroid[i] += simplex[j][i];\n            }\n            centroid[i] /= N;\n        }\n\n        // reflect the worst point past the centroid  and compute loss at reflected\n        // point\n        var worst = simplex[N];\n        weightedSum(reflected, 1+rho, centroid, -rho, worst);\n        reflected.fx = f(reflected);\n\n        // if the reflected point is the best seen, then possibly expand\n        if (reflected.fx < simplex[0].fx) {\n            weightedSum(expanded, 1+chi, centroid, -chi, worst);\n            expanded.fx = f(expanded);\n            if (expanded.fx < reflected.fx) {\n                updateSimplex(expanded);\n            }  else {\n                updateSimplex(reflected);\n            }\n        }\n\n        // if the reflected point is worse than the second worst, we need to\n        // contract\n        else if (reflected.fx >= simplex[N-1].fx) {\n            var shouldReduce = false;\n\n            if (reflected.fx > worst.fx) {\n                // do an inside contraction\n                weightedSum(contracted, 1+psi, centroid, -psi, worst);\n                contracted.fx = f(contracted);\n                if (contracted.fx < worst.fx) {\n                    updateSimplex(contracted);\n                } else {\n                    shouldReduce = true;\n                }\n            } else {\n                // do an outside contraction\n                weightedSum(contracted, 1-psi * rho, centroid, psi*rho, worst);\n                contracted.fx = f(contracted);\n                if (contracted.fx < reflected.fx) {\n                    updateSimplex(contracted);\n                } else {\n                    shouldReduce = true;\n                }\n            }\n\n            if (shouldReduce) {\n                // if we don't contract here, we're done\n                if (sigma >= 1) break;\n\n                // do a reduction\n                for (i = 1; i < simplex.length; ++i) {\n                    weightedSum(simplex[i], 1 - sigma, simplex[0], sigma, simplex[i]);\n                    simplex[i].fx = f(simplex[i]);\n                }\n            }\n        } else {\n            updateSimplex(reflected);\n        }\n    }\n\n    simplex.sort(sortOrder);\n    return {fx : simplex[0].fx,\n            x : simplex[0]};\n}\n","import {nelderMead, bisect, conjugateGradient, zeros, zerosM, norm2,\n        scale} from './fmin/index.js';\nimport {intersectionArea, circleOverlap, circleCircleIntersection, distance} from './circleintersection';\n\n/** given a list of set objects, and their corresponding overlaps.\nupdates the (x, y, radius) attribute on each set such that their positions\nroughly correspond to the desired overlaps */\nexport function venn(areas, parameters) {\n    parameters = parameters || {};\n    parameters.maxIterations = parameters.maxIterations || 500;\n    var initialLayout = parameters.initialLayout || bestInitialLayout;\n    var loss = parameters.lossFunction || lossFunction;\n\n    // add in missing pairwise areas as having 0 size\n    areas = addMissingAreas(areas);\n\n    // initial layout is done greedily\n    var circles = initialLayout(areas, parameters);\n\n    // transform x/y coordinates to a vector to optimize\n    var initial = [], setids = [], setid;\n    for (setid in circles) {\n        if (circles.hasOwnProperty(setid)) {\n            initial.push(circles[setid].x);\n            initial.push(circles[setid].y);\n            setids.push(setid);\n        }\n    }\n\n    // optimize initial layout from our loss function\n    var totalFunctionCalls = 0;\n    var solution = nelderMead(\n        function(values) {\n            totalFunctionCalls += 1;\n            var current = {};\n            for (var i = 0; i < setids.length; ++i) {\n                var setid = setids[i];\n                current[setid] = {x: values[2 * i],\n                                  y: values[2 * i + 1],\n                                  radius : circles[setid].radius,\n                                 // size : circles[setid].size\n                                 };\n            }\n            return loss(current, areas);\n        },\n        initial,\n        parameters);\n\n    // transform solution vector back to x/y points\n    var positions = solution.x;\n    for (var i = 0; i < setids.length; ++i) {\n        setid = setids[i];\n        circles[setid].x = positions[2 * i];\n        circles[setid].y = positions[2 * i + 1];\n    }\n\n    return circles;\n}\n\nvar SMALL = 1e-10;\n\n/** Returns the distance necessary for two circles of radius r1 + r2 to\nhave the overlap area 'overlap' */\nexport function distanceFromIntersectArea(r1, r2, overlap) {\n    // handle complete overlapped circles\n    if (Math.min(r1, r2) * Math.min(r1,r2) * Math.PI <= overlap + SMALL) {\n        return Math.abs(r1 - r2);\n    }\n\n    return bisect(function(distance) {\n        return circleOverlap(r1, r2, distance) - overlap;\n    }, 0, r1 + r2);\n}\n\n/** Missing pair-wise intersection area data can cause problems:\n treating as an unknown means that sets will be laid out overlapping,\n which isn't what people expect. To reflect that we want disjoint sets\n here, set the overlap to 0 for all missing pairwise set intersections */\nfunction addMissingAreas(areas) {\n    areas = areas.slice();\n\n    // two circle intersections that aren't defined\n    var ids = [], pairs = {}, i, j, a, b;\n    for (i = 0; i < areas.length; ++i) {\n        var area = areas[i];\n        if (area.sets.length == 1) {\n            ids.push(area.sets[0]);\n        } else if (area.sets.length == 2) {\n            a = area.sets[0];\n            b = area.sets[1];\n            pairs[[a, b]] = true;\n            pairs[[b, a]] = true;\n        }\n    }\n    ids.sort(function(a, b) { return a > b; });\n\n    for (i = 0; i < ids.length; ++i) {\n        a = ids[i];\n        for (j = i + 1; j < ids.length; ++j) {\n            b = ids[j];\n            if (!([a, b] in pairs)) {\n                areas.push({'sets': [a, b],\n                            'size': 0});\n            }\n        }\n    }\n    return areas;\n}\n\n/// Returns two matrices, one of the euclidean distances between the sets\n/// and the other indicating if there are subset or disjoint set relationships\nexport function getDistanceMatrices(areas, sets, setids) {\n    // initialize an empty distance matrix between all the points\n    var distances = zerosM(sets.length, sets.length),\n        constraints = zerosM(sets.length, sets.length);\n\n    // compute required distances between all the sets such that\n    // the areas match\n    areas.filter(function(x) { return x.sets.length == 2; })\n        .map(function(current) {\n        var left = setids[current.sets[0]],\n            right = setids[current.sets[1]],\n            r1 = Math.sqrt(sets[left].size / Math.PI),\n            r2 = Math.sqrt(sets[right].size / Math.PI),\n            distance = distanceFromIntersectArea(r1, r2, current.size);\n\n        distances[left][right] = distances[right][left] = distance;\n\n        // also update constraints to indicate if its a subset or disjoint\n        // relationship\n        var c = 0;\n        if (current.size + 1e-10 >= Math.min(sets[left].size,\n                                             sets[right].size)) {\n            c = 1;\n        } else if (current.size <= 1e-10) {\n            c = -1;\n        }\n        constraints[left][right] = constraints[right][left] = c;\n    });\n\n    return {distances: distances, constraints: constraints};\n}\n\n/// computes the gradient and loss simulatenously for our constrained MDS optimizer\nfunction constrainedMDSGradient(x, fxprime, distances, constraints) {\n    var loss = 0, i;\n    for (i = 0; i < fxprime.length; ++i) {\n        fxprime[i] = 0;\n    }\n\n    for (i = 0; i < distances.length; ++i) {\n        var xi = x[2 * i], yi = x[2 * i + 1];\n        for (var j = i + 1; j < distances.length; ++j) {\n            var xj = x[2 * j], yj = x[2 * j + 1],\n                dij = distances[i][j],\n                constraint = constraints[i][j];\n\n            var squaredDistance = (xj - xi) * (xj - xi) + (yj - yi) * (yj - yi),\n                distance = Math.sqrt(squaredDistance),\n                delta = squaredDistance - dij * dij;\n\n            if (((constraint > 0) && (distance <= dij)) ||\n                ((constraint < 0) && (distance >= dij))) {\n                continue;\n            }\n\n            loss += 2 * delta * delta;\n\n            fxprime[2*i]     += 4 * delta * (xi - xj);\n            fxprime[2*i + 1] += 4 * delta * (yi - yj);\n\n            fxprime[2*j]     += 4 * delta * (xj - xi);\n            fxprime[2*j + 1] += 4 * delta * (yj - yi);\n        }\n    }\n    return loss;\n}\n\n/// takes the best working variant of either constrained MDS or greedy\nexport function bestInitialLayout(areas, params) {\n    var initial = greedyLayout(areas, params);\n    var loss = params.lossFunction || lossFunction;\n\n    // greedylayout is sufficient for all 2/3 circle cases. try out\n    // constrained MDS for higher order problems, take its output\n    // if it outperforms. (greedy is aesthetically better on 2/3 circles\n    // since it axis aligns)\n    if (areas.length >= 8) {\n        var constrained  = constrainedMDSLayout(areas, params),\n            constrainedLoss = loss(constrained, areas),\n            greedyLoss = loss(initial, areas);\n\n        if (constrainedLoss + 1e-8 < greedyLoss) {\n            initial = constrained;\n        }\n    }\n    return initial;\n}\n\n/// use the constrained MDS variant to generate an initial layout\nexport function constrainedMDSLayout(areas, params) {\n    params = params || {};\n    var restarts = params.restarts || 10;\n\n    // bidirectionally map sets to a rowid  (so we can create a matrix)\n    var sets = [], setids = {}, i;\n    for (i = 0; i < areas.length; ++i ) {\n        var area = areas[i];\n        if (area.sets.length == 1) {\n            setids[area.sets[0]] = sets.length;\n            sets.push(area);\n        }\n    }\n\n    var matrices = getDistanceMatrices(areas, sets, setids),\n        distances = matrices.distances,\n        constraints = matrices.constraints;\n\n    // keep distances bounded, things get messed up otherwise.\n    // TODO: proper preconditioner?\n    var norm = norm2(distances.map(norm2))/(distances.length);\n    distances = distances.map(function (row) {\n        return row.map(function (value) { return value / norm; });});\n\n    var obj = function(x, fxprime) {\n        return constrainedMDSGradient(x, fxprime, distances, constraints);\n    };\n\n    var best, current;\n    for (i = 0; i < restarts; ++i) {\n        var initial = zeros(distances.length*2).map(Math.random);\n\n        current = conjugateGradient(obj, initial, params);\n        if (!best || (current.fx < best.fx)) {\n            best = current;\n        }\n    }\n    var positions = best.x;\n\n    // translate rows back to (x,y,radius) coordinates\n    var circles = {};\n    for (i = 0; i < sets.length; ++i) {\n        var set = sets[i];\n        circles[set.sets[0]] = {\n            x: positions[2*i] * norm,\n            y: positions[2*i + 1] * norm,\n            radius:  Math.sqrt(set.size / Math.PI)\n        };\n    }\n\n    if (params.history) {\n        for (i = 0; i < params.history.length; ++i) {\n            scale(params.history[i].x, norm);\n        }\n    }\n    return circles;\n}\n\n/** Lays out a Venn diagram greedily, going from most overlapped sets to\nleast overlapped, attempting to position each new set such that the\noverlapping areas to already positioned sets are basically right */\nexport function greedyLayout(areas, params) {\n    var loss = params && params.lossFunction ? params.lossFunction : lossFunction;\n    // define a circle for each set\n    var circles = {}, setOverlaps = {}, set;\n    for (var i = 0; i < areas.length; ++i) {\n        var area = areas[i];\n        if (area.sets.length == 1) {\n            set = area.sets[0];\n            circles[set] = {x: 1e10, y: 1e10,\n                            rowid: circles.length,\n                            size: area.size,\n                            radius: Math.sqrt(area.size / Math.PI)};\n            setOverlaps[set] = [];\n        }\n    }\n    areas = areas.filter(function(a) { return a.sets.length == 2; });\n\n    // map each set to a list of all the other sets that overlap it\n    for (i = 0; i < areas.length; ++i) {\n        var current = areas[i];\n        var weight = current.hasOwnProperty('weight') ? current.weight : 1.0;\n        var left = current.sets[0], right = current.sets[1];\n\n        // completely overlapped circles shouldn't be positioned early here\n        if (current.size + SMALL >= Math.min(circles[left].size,\n                                             circles[right].size)) {\n            weight = 0;\n        }\n\n        setOverlaps[left].push ({set:right, size:current.size, weight:weight});\n        setOverlaps[right].push({set:left,  size:current.size, weight:weight});\n    }\n\n    // get list of most overlapped sets\n    var mostOverlapped = [];\n    for (set in setOverlaps) {\n        if (setOverlaps.hasOwnProperty(set)) {\n            var size = 0;\n            for (i = 0; i < setOverlaps[set].length; ++i) {\n                size += setOverlaps[set][i].size * setOverlaps[set][i].weight;\n            }\n\n            mostOverlapped.push({set: set, size:size});\n        }\n    }\n\n    // sort by size desc\n    function sortOrder(a,b) {\n        return b.size - a.size;\n    }\n    mostOverlapped.sort(sortOrder);\n\n    // keep track of what sets have been laid out\n    var positioned = {};\n    function isPositioned(element) {\n        return element.set in positioned;\n    }\n\n    // adds a point to the output\n    function positionSet(point, index) {\n        circles[index].x = point.x;\n        circles[index].y = point.y;\n        positioned[index] = true;\n    }\n\n    // add most overlapped set at (0,0)\n    positionSet({x: 0, y: 0}, mostOverlapped[0].set);\n\n    // get distances between all points. TODO, necessary?\n    // answer: probably not\n    // var distances = venn.getDistanceMatrices(circles, areas).distances;\n    for (i = 1; i < mostOverlapped.length; ++i) {\n        var setIndex = mostOverlapped[i].set,\n            overlap = setOverlaps[setIndex].filter(isPositioned);\n        set = circles[setIndex];\n        overlap.sort(sortOrder);\n\n        if (overlap.length === 0) {\n            // this shouldn't happen anymore with addMissingAreas\n            throw \"ERROR: missing pairwise overlap information\";\n        }\n\n        var points = [];\n        for (var j = 0; j < overlap.length; ++j) {\n            // get appropriate distance from most overlapped already added set\n            var p1 = circles[overlap[j].set],\n                d1 = distanceFromIntersectArea(set.radius, p1.radius,\n                                               overlap[j].size);\n\n            // sample positions at 90 degrees for maximum aesthetics\n            points.push({x : p1.x + d1, y : p1.y});\n            points.push({x : p1.x - d1, y : p1.y});\n            points.push({y : p1.y + d1, x : p1.x});\n            points.push({y : p1.y - d1, x : p1.x});\n\n            // if we have at least 2 overlaps, then figure out where the\n            // set should be positioned analytically and try those too\n            for (var k = j + 1; k < overlap.length; ++k) {\n                var p2 = circles[overlap[k].set],\n                    d2 = distanceFromIntersectArea(set.radius, p2.radius,\n                                                   overlap[k].size);\n\n                var extraPoints = circleCircleIntersection(\n                    { x: p1.x, y: p1.y, radius: d1},\n                    { x: p2.x, y: p2.y, radius: d2});\n\n                for (var l = 0; l < extraPoints.length; ++l) {\n                    points.push(extraPoints[l]);\n                }\n            }\n        }\n\n        // we have some candidate positions for the set, examine loss\n        // at each position to figure out where to put it at\n        var bestLoss = 1e50, bestPoint = points[0];\n        for (j = 0; j < points.length; ++j) {\n            circles[setIndex].x = points[j].x;\n            circles[setIndex].y = points[j].y;\n            var localLoss = loss(circles, areas);\n            if (localLoss < bestLoss) {\n                bestLoss = localLoss;\n                bestPoint = points[j];\n            }\n        }\n\n        positionSet(bestPoint, setIndex);\n    }\n\n    return circles;\n}\n\n/** Given a bunch of sets, and the desired overlaps between these sets - computes\nthe distance from the actual overlaps to the desired overlaps. Note that\nthis method ignores overlaps of more than 2 circles */\nexport function lossFunction(sets, overlaps) {\n    var output = 0;\n\n    function getCircles(indices) {\n        return indices.map(function(i) { return sets[i]; });\n    }\n\n    for (var i = 0; i < overlaps.length; ++i) {\n        var area = overlaps[i], overlap;\n        if (area.sets.length == 1) {\n            continue;\n        } else if (area.sets.length == 2) {\n            var left = sets[area.sets[0]],\n                right = sets[area.sets[1]];\n            overlap = circleOverlap(left.radius, right.radius,\n                                    distance(left, right));\n        } else {\n            overlap = intersectionArea(getCircles(area.sets));\n        }\n\n        var weight = area.hasOwnProperty('weight') ? area.weight : 1.0;\n        output += weight * (overlap - area.size) * (overlap - area.size);\n    }\n\n    return output;\n}\n\n// orientates a bunch of circles to point in orientation\nfunction orientateCircles(circles, orientation, orientationOrder) {\n    if (orientationOrder === null) {\n        circles.sort(function (a, b) { return b.radius - a.radius; });\n    } else {\n        circles.sort(orientationOrder);\n    }\n\n    var i;\n    // shift circles so largest circle is at (0, 0)\n    if (circles.length > 0) {\n        var largestX = circles[0].x,\n            largestY = circles[0].y;\n\n        for (i = 0; i < circles.length; ++i) {\n            circles[i].x -= largestX;\n            circles[i].y -= largestY;\n        }\n    }\n\n    if (circles.length == 2) {\n        // if the second circle is a subset of the first, arrange so that\n        // it is off to one side. hack for https://github.com/benfred/venn.js/issues/120\n        var dist = distance(circles[0], circles[1]);\n        if (dist < Math.abs(circles[1].radius - circles[0].radius)) {\n            circles[1].x = circles[0].x + circles[0].radius - circles[1].radius - 1e-10;\n            circles[1].y = circles[0].y;\n        }\n    }\n\n    // rotate circles so that second largest is at an angle of 'orientation'\n    // from largest\n    if (circles.length > 1) {\n        var rotation = Math.atan2(circles[1].x, circles[1].y) - orientation,\n            c = Math.cos(rotation),\n            s = Math.sin(rotation), x, y;\n\n        for (i = 0; i < circles.length; ++i) {\n            x = circles[i].x;\n            y = circles[i].y;\n            circles[i].x = c * x - s * y;\n            circles[i].y = s * x + c * y;\n        }\n    }\n\n    // mirror solution if third solution is above plane specified by\n    // first two circles\n    if (circles.length > 2) {\n        var angle = Math.atan2(circles[2].x, circles[2].y) - orientation;\n        while (angle < 0) { angle += 2* Math.PI; }\n        while (angle > 2*Math.PI) { angle -= 2* Math.PI; }\n        if (angle > Math.PI) {\n            var slope = circles[1].y / (1e-10 + circles[1].x);\n            for (i = 0; i < circles.length; ++i) {\n                var d = (circles[i].x + slope * circles[i].y) / (1 + slope*slope);\n                circles[i].x = 2 * d - circles[i].x;\n                circles[i].y = 2 * d * slope - circles[i].y;\n            }\n        }\n    }\n}\n\nexport function disjointCluster(circles) {\n    // union-find clustering to get disjoint sets\n    circles.map(function(circle) { circle.parent = circle; });\n\n    // path compression step in union find\n    function find(circle) {\n        if (circle.parent !== circle) {\n            circle.parent = find(circle.parent);\n        }\n        return circle.parent;\n    }\n\n    function union(x, y) {\n        var xRoot = find(x), yRoot = find(y);\n        xRoot.parent = yRoot;\n    }\n\n    // get the union of all overlapping sets\n    for (var i = 0; i < circles.length; ++i) {\n        for (var j = i + 1; j < circles.length; ++j) {\n            var maxDistance = circles[i].radius + circles[j].radius;\n            if (distance(circles[i], circles[j]) + 1e-10 < maxDistance) {\n                union(circles[j], circles[i]);\n            }\n        }\n    }\n\n    // find all the disjoint clusters and group them together\n    var disjointClusters = {}, setid;\n    for (i = 0; i < circles.length; ++i) {\n        setid = find(circles[i]).parent.setid;\n        if (!(setid in disjointClusters)) {\n            disjointClusters[setid] = [];\n        }\n        disjointClusters[setid].push(circles[i]);\n    }\n\n    // cleanup bookkeeping\n    circles.map(function(circle) { delete circle.parent; });\n\n    // return in more usable form\n    var ret = [];\n    for (setid in disjointClusters) {\n        if (disjointClusters.hasOwnProperty(setid)) {\n            ret.push(disjointClusters[setid]);\n        }\n    }\n    return ret;\n}\n\nfunction getBoundingBox(circles) {\n    var minMax = function(d) {\n        var hi = Math.max.apply(null, circles.map(\n                                function(c) { return c[d] + c.radius; } )),\n            lo = Math.min.apply(null, circles.map(\n                                function(c) { return c[d] - c.radius;} ));\n        return {max:hi, min:lo};\n    };\n\n    return {xRange: minMax('x'), yRange: minMax('y')};\n}\n\nexport function normalizeSolution(solution, orientation, orientationOrder) {\n    if (orientation === null){\n        orientation = Math.PI/2;\n    }\n\n    // work with a list instead of a dictionary, and take a copy so we\n    // don't mutate input\n    var circles = [], i, setid;\n    for (setid in solution) {\n        if (solution.hasOwnProperty(setid)) {\n            var previous = solution[setid];\n            circles.push({x: previous.x,\n                          y: previous.y,\n                          radius: previous.radius,\n                          setid: setid});\n        }\n    }\n\n    // get all the disjoint clusters\n    var clusters = disjointCluster(circles);\n\n    // orientate all disjoint sets, get sizes\n    for (i = 0; i < clusters.length; ++i) {\n        orientateCircles(clusters[i], orientation, orientationOrder);\n        var bounds = getBoundingBox(clusters[i]);\n        clusters[i].size = (bounds.xRange.max - bounds.xRange.min) * (bounds.yRange.max - bounds.yRange.min);\n        clusters[i].bounds = bounds;\n    }\n    clusters.sort(function(a, b) { return b.size - a.size; });\n\n    // orientate the largest at 0,0, and get the bounds\n    circles = clusters[0];\n    var returnBounds = circles.bounds;\n\n    var spacing = (returnBounds.xRange.max - returnBounds.xRange.min)/50;\n\n    function addCluster(cluster, right, bottom) {\n        if (!cluster) return;\n\n        var bounds = cluster.bounds, xOffset, yOffset, centreing;\n\n        if (right) {\n            xOffset = returnBounds.xRange.max  - bounds.xRange.min + spacing;\n        } else {\n            xOffset = returnBounds.xRange.max  - bounds.xRange.max;\n            centreing = (bounds.xRange.max - bounds.xRange.min) / 2 -\n                        (returnBounds.xRange.max - returnBounds.xRange.min) / 2;\n            if (centreing < 0) xOffset += centreing;\n        }\n\n        if (bottom) {\n            yOffset = returnBounds.yRange.max  - bounds.yRange.min + spacing;\n        } else {\n            yOffset = returnBounds.yRange.max  - bounds.yRange.max;\n            centreing = (bounds.yRange.max - bounds.yRange.min) / 2 -\n                        (returnBounds.yRange.max - returnBounds.yRange.min) / 2;\n            if (centreing < 0) yOffset += centreing;\n        }\n\n        for (var j = 0; j < cluster.length; ++j) {\n            cluster[j].x += xOffset;\n            cluster[j].y += yOffset;\n            circles.push(cluster[j]);\n        }\n    }\n\n    var index = 1;\n    while (index < clusters.length) {\n        addCluster(clusters[index], true, false);\n        addCluster(clusters[index+1], false, true);\n        addCluster(clusters[index+2], true, true);\n        index += 3;\n\n        // have one cluster (in top left). lay out next three relative\n        // to it in a grid\n        returnBounds = getBoundingBox(circles);\n    }\n\n    // convert back to solution form\n    var ret = {};\n    for (i = 0; i < circles.length; ++i) {\n        ret[circles[i].setid] = circles[i];\n    }\n    return ret;\n}\n\n/** Scales a solution from venn.venn or venn.greedyLayout such that it fits in\na rectangle of width/height - with padding around the borders. also\ncenters the diagram in the available space at the same time */\nexport function scaleSolution(solution, width, height, padding) {\n    var circles = [], setids = [];\n    for (var setid in solution) {\n        if (solution.hasOwnProperty(setid)) {\n            setids.push(setid);\n            circles.push(solution[setid]);\n        }\n    }\n\n    width -= 2*padding;\n    height -= 2*padding;\n\n    var bounds = getBoundingBox(circles),\n        xRange = bounds.xRange,\n        yRange = bounds.yRange;\n\n    if ((xRange.max == xRange.min) ||\n        (yRange.max == yRange.min)) {\n        console.log(\"not scaling solution: zero size detected\");\n        return solution;\n    }\n\n    var xScaling = width  / (xRange.max - xRange.min),\n        yScaling = height / (yRange.max - yRange.min),\n        scaling = Math.min(yScaling, xScaling),\n\n        // while we're at it, center the diagram too\n        xOffset = (width -  (xRange.max - xRange.min) * scaling) / 2,\n        yOffset = (height - (yRange.max - yRange.min) * scaling) / 2;\n\n    var scaled = {};\n    for (var i = 0; i < circles.length; ++i) {\n        var circle = circles[i];\n        scaled[setids[i]] = {\n            radius: scaling * circle.radius,\n            x: padding + xOffset + (circle.x - xRange.min) * scaling,\n            y: padding + yOffset + (circle.y - yRange.min) * scaling,\n        };\n    }\n\n    return scaled;\n}\n","import { Entity } from \"./Entity\";\r\nimport { Color } from \"./Color\";\r\n/**\r\n * An object which holds list of colors and can generate new ones.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Color_sets} for more info\r\n */\r\nexport class ColorSet extends Entity {\r\n    //protected _currentPass: number = 0;\r\n    _afterNew() {\r\n        // Applying themes because color set will not have parent\r\n        super._afterNewApplyThemes();\r\n        this._dirty[\"colors\"] = false;\r\n    }\r\n    _beforeChanged() {\r\n        if (this.isDirty(\"colors\")) {\r\n            this.reset();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    generateColors() {\r\n        this.setPrivate(\"currentPass\", this.getPrivate(\"currentPass\", 0) + 1);\r\n        const pass = this.getPrivate(\"currentPass\");\r\n        const colors = this.get(\"colors\", [this.get(\"baseColor\", Color.fromHex(0xff0000))]);\r\n        if (!this.getPrivate(\"numColors\")) {\r\n            this.setPrivate(\"numColors\", colors.length);\r\n        }\r\n        //const len = colors.length;\r\n        const len = this.getPrivate(\"numColors\");\r\n        //const start = len - this.getPrivate(\"numColors\")!;\r\n        const start = 0;\r\n        const passOptions = this.get(\"passOptions\");\r\n        const reuse = this.get(\"reuse\");\r\n        for (let i = start; i < len; i++) {\r\n            if (reuse) {\r\n                colors.push(colors[i]);\r\n            }\r\n            else {\r\n                const hsl = colors[i].toHSL();\r\n                let h = hsl.h + (passOptions.hue || 0) * pass;\r\n                while (h > 1)\r\n                    h -= 1;\r\n                let s = hsl.s + (passOptions.saturation || 0) * pass;\r\n                //if (s > 1) s -= Math.floor(s);\r\n                if (s > 1)\r\n                    s = 1;\r\n                if (s < 0)\r\n                    s = 0;\r\n                let l = hsl.l + (passOptions.lightness || 0) * pass;\r\n                //if (l > 1) l -= Math.floor(l);\r\n                while (l > 1)\r\n                    l -= 1;\r\n                colors.push(Color.fromHSL(h, s, l));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Returns a [[Color]] at specific index.\r\n     *\r\n     * If there's no color at this index, a new color is generated.\r\n     *\r\n     * @param   index  Index\r\n     * @return         Color\r\n     */\r\n    getIndex(index) {\r\n        const colors = this.get(\"colors\", []);\r\n        const saturation = this.get(\"saturation\");\r\n        if (index >= colors.length) {\r\n            this.generateColors();\r\n            return this.getIndex(index);\r\n        }\r\n        return saturation != null ? Color.saturate(colors[index], saturation) : colors[index];\r\n    }\r\n    /**\r\n     * Returns next [[Color]] in the list.\r\n     *\r\n     * If the list is out of colors, new ones are generated dynamically.\r\n     */\r\n    next() {\r\n        let currentStep = this.getPrivate(\"currentStep\", this.get(\"startIndex\", 0));\r\n        this.setPrivate(\"currentStep\", currentStep + this.get(\"step\", 1));\r\n        return this.getIndex(currentStep);\r\n    }\r\n    /**\r\n     * Resets counter to the start of the list, so the next call for `next()` will\r\n     * return the first color.\r\n     */\r\n    reset() {\r\n        this.setPrivate(\"currentStep\", this.get(\"startIndex\", 0));\r\n        this.setPrivate(\"currentPass\", 0);\r\n    }\r\n}\r\nObject.defineProperty(ColorSet, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ColorSet\"\r\n});\r\nObject.defineProperty(ColorSet, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([ColorSet.className])\r\n});\r\n","export { Venn } from \"./.internal/charts/venn/Venn\";\r\nimport { VennDefaultTheme } from \"./.internal/charts/venn/VennDefaultTheme\";\r\nexport { VennDefaultTheme as DefaultTheme };\r\n"],"names":["__awaiter","VennDefaultTheme","Series","Template","Graphics","visualSettings","Container","Label","ListTemplate","$utils","$array","$type","venn","Venn","constructor","arguments","Object","defineProperty","enumerable","configurable","writable","value","children","push","new","_root","slicesContainer","position","isMeasured","_makeSlices","_makeLabels","_afterNew","_defaultThemes","fields","makeSlice","dataItem","slice","slices","make","events","on","e","_hovered","target","_updateHover","undefined","hoverGraphics","hide","updateLegendMarker","_setDataItem","set","get","show","toFront","makeLabel","label","labelsContainer","labels","_new","themeTags","mergeTags","template","processDataItem","colors","setRaw","next","_prepareChildren","_valuesDirty","_sizeDirty","sets","each","dataItems","intersections","size","newSets","toString","_sets","length","vennData","normalizeSolution","scaleSolution","innerWidth","innerHeight","circles","name","item","r","radius","getDataItemByCategory","color","_setDefault","x","y","centers","computeTextCentres","center","cc","s","intersectionPath","intersectionAreaPath","setAll","svgPath","updateLegendValue","id","find","showDataItem","duration","_super","create","promises","call","isNumber","easing","animation","animate","key","to","waitForStop","cat","di","isHidden","category","allVisible","dii","indexOf","Promise","all","hideDataItem","hiddenState","states","hideTooltip","disposeDataItem","removeValue","dispose","legendDataItem","markerRectangle","setting","hoverDataItem","hover","unhoverDataItem","unhover","classNames","concat","className","Theme","p50","p100","ColorSet","setupDefaultRules","rule","bind","legendLabelText","legendValueText","width","height","text","populateText","centerX","centerY","SMALL","intersectionArea","stats","intersectionPoints","getIntersectionPoints","innerPoints","filter","p","containedInCircles","arcArea","polygonArea","arcs","i","getCenter","angle","Math","atan2","sort","a","b","p2","p1","midPoint","arc","j","parentIndex","circle","a1","a2","angleDiff","PI","distance","sin","cos","circleArea","smallest","disjoint","abs","area","point","ret","intersect","circleCircleIntersection","k","acos","sqrt","circleOverlap","r1","r2","d","min","w1","w2","h","x0","y0","rx","ry","points","select","selectAll","transition","lossFunction","nelderMead","VennDiagram","padding","orientation","normalize","wrap","styled","fontSize","orientationOrder","colourMap","colourScheme","colourIndex","colours","layoutFunction","loss","chart","selection","data","datum","toremove","forEach","some","textCentres","solution","enter","append","svg","attr","previous","hasPrevious","path","circleFromPath","pathTween","t","c","map","start","end","nodes","join","enterPath","enterText","style","update","attrTween","updateText","floor","wrapText","exit","remove","exitText","_","labeller","words","split","reverse","maxLines","minChars","word","pop","line","joined","lineNumber","lineHeight","tspan","node","getComputedTextLength","initial","circleMargin","current","interior","exterior","margin","m","computeTextCentre","maxIterations","minErrorDelta","valid","areaStats","getOverlappingCircles","circleids","circleid","areas","overlapped","areaids","exclude","overlaps","setid","centre","console","log","sortAreas","div","relativeTo","check","overlap","shouldExclude","circlePath","tokens","parseFloat","wide","bisect","f","parameters","tolerance","fA","fB","delta","mid","fMid","zeros","Array","zerosM","dot","norm2","scale","weightedSum","v1","v2","wolfeLineSearch","conjugateGradient","params","fx","fxprime","yk","pk","temp","history","alpha","delta_k","beta_k","max","c1","c2","phi0","phiPrime0","phi","phi_old","phiPrime","a0","zoom","a_lo","a_high","phi_lo","iteration","nonZeroDelta","zeroDelta","minTolerance","rho","chi","psi","sigma","maxDiff","N","simplex","updateSimplex","sortOrder","centroid","reflected","contracted","expanded","sortedSimplex","state","worst","shouldReduce","initialLayout","bestInitialLayout","addMissingAreas","setids","hasOwnProperty","totalFunctionCalls","values","positions","distanceFromIntersectArea","ids","pairs","getDistanceMatrices","distances","constraints","left","right","constrainedMDSGradient","xi","yi","xj","yj","dij","constraint","squaredDistance","greedyLayout","constrained","constrainedMDSLayout","constrainedLoss","greedyLoss","restarts","matrices","norm","row","obj","best","random","setOverlaps","rowid","weight","mostOverlapped","positioned","isPositioned","element","positionSet","index","setIndex","d1","d2","extraPoints","l","bestLoss","bestPoint","localLoss","output","getCircles","indices","orientateCircles","largestX","largestY","dist","rotation","slope","disjointCluster","parent","union","xRoot","yRoot","maxDistance","disjointClusters","getBoundingBox","minMax","hi","apply","lo","xRange","yRange","clusters","bounds","returnBounds","spacing","addCluster","cluster","bottom","xOffset","yOffset","centreing","xScaling","yScaling","scaling","scaled","Entity","Color","_afterNewApplyThemes","_dirty","_beforeChanged","isDirty","reset","generateColors","setPrivate","getPrivate","pass","fromHex","len","passOptions","reuse","hsl","toHSL","hue","saturation","lightness","fromHSL","getIndex","saturate","currentStep","DefaultTheme"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11]}