{"version":3,"file":"2079.js","mappings":"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","sources":["./node_modules/@angular/cdk-experimental/fesm2022/scrolling.mjs","./node_modules/@rollthecloudinc/material/fesm2022/rollthecloudinc-material.mjs"],"sourcesContent":["import { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { VIRTUAL_SCROLL_STRATEGY } from '@angular/cdk/scrolling';\nimport * as i0 from '@angular/core';\nimport { forwardRef, Directive, Input, NgModule } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/**\n * A class that tracks the size of items that have been seen and uses it to estimate the average\n * item size.\n */\nclass ItemSizeAverager {\n    /** @param defaultItemSize The default size to use for items when no data is available. */\n    constructor(defaultItemSize = 50) {\n        /** The total amount of weight behind the current average. */\n        this._totalWeight = 0;\n        this._defaultItemSize = defaultItemSize;\n        this._averageItemSize = defaultItemSize;\n    }\n    /** Returns the average item size. */\n    getAverageItemSize() {\n        return this._averageItemSize;\n    }\n    /**\n     * Adds a measurement sample for the estimator to consider.\n     * @param range The measured range.\n     * @param size The measured size of the given range in pixels.\n     */\n    addSample(range, size) {\n        const newTotalWeight = this._totalWeight + range.end - range.start;\n        if (newTotalWeight) {\n            const newAverageItemSize = (size + this._averageItemSize * this._totalWeight) / newTotalWeight;\n            if (newAverageItemSize) {\n                this._averageItemSize = newAverageItemSize;\n                this._totalWeight = newTotalWeight;\n            }\n        }\n    }\n    /** Resets the averager. */\n    reset() {\n        this._averageItemSize = this._defaultItemSize;\n        this._totalWeight = 0;\n    }\n}\n/** Virtual scrolling strategy for lists with items of unknown or dynamic size. */\nclass AutoSizeVirtualScrollStrategy {\n    /**\n     * @param minBufferPx The minimum amount of buffer rendered beyond the viewport (in pixels).\n     *     If the amount of buffer dips below this number, more items will be rendered.\n     * @param maxBufferPx The number of pixels worth of buffer to shoot for when rendering new items.\n     *     If the actual amount turns out to be less it will not necessarily trigger an additional\n     *     rendering cycle (as long as the amount of buffer is still greater than `minBufferPx`).\n     * @param averager The averager used to estimate the size of unseen items.\n     */\n    constructor(minBufferPx, maxBufferPx, averager = new ItemSizeAverager()) {\n        /** @docs-private Implemented as part of VirtualScrollStrategy. */\n        this.scrolledIndexChange = new Observable(() => {\n            // TODO(mmalerba): Implement.\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                throw Error('cdk-virtual-scroll: scrolledIndexChange is currently not supported for the' +\n                    ' autosize scroll strategy');\n            }\n        });\n        /** The attached viewport. */\n        this._viewport = null;\n        /**\n         * The number of consecutive cycles where removing extra items has failed. Failure here means that\n         * we estimated how many items we could safely remove, but our estimate turned out to be too much\n         * and it wasn't safe to remove that many elements.\n         */\n        this._removalFailures = 0;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._averager = averager;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param viewport The viewport to attach this strategy to.\n     */\n    attach(viewport) {\n        this._averager.reset();\n        this._viewport = viewport;\n        this._renderContentForCurrentOffset();\n    }\n    /** Detaches this scroll strategy from the currently attached viewport. */\n    detach() {\n        this._viewport = null;\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentScrolled() {\n        if (this._viewport) {\n            this._updateRenderedContentAfterScroll();\n        }\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onDataLengthChanged() {\n        if (this._viewport) {\n            this._renderContentForCurrentOffset();\n            this._checkRenderedContentSize();\n        }\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentRendered() {\n        if (this._viewport) {\n            this._checkRenderedContentSize();\n        }\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onRenderedOffsetChanged() {\n        if (this._viewport) {\n            this._checkRenderedContentOffset();\n        }\n    }\n    /** Scroll to the offset for the given index. */\n    scrollToIndex() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            // TODO(mmalerba): Implement.\n            throw Error('cdk-virtual-scroll: scrollToIndex is currently not supported for the autosize' +\n                ' scroll strategy');\n        }\n    }\n    /**\n     * Update the buffer parameters.\n     * @param minBufferPx The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * @param maxBufferPx The number of buffer items to render beyond the edge of the viewport (in\n     *     pixels).\n     */\n    updateBufferSize(minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /** Update the rendered content after the user scrolls. */\n    _updateRenderedContentAfterScroll() {\n        const viewport = this._viewport;\n        // The current scroll offset.\n        const scrollOffset = viewport.measureScrollOffset();\n        // The delta between the current scroll offset and the previously recorded scroll offset.\n        let scrollDelta = scrollOffset - this._lastScrollOffset;\n        // The magnitude of the scroll delta.\n        let scrollMagnitude = Math.abs(scrollDelta);\n        // The currently rendered range.\n        const renderedRange = viewport.getRenderedRange();\n        // If we're scrolling toward the top, we need to account for the fact that the predicted amount\n        // of content and the actual amount of scrollable space may differ. We address this by slowly\n        // correcting the difference on each scroll event.\n        let offsetCorrection = 0;\n        if (scrollDelta < 0) {\n            // The content offset we would expect based on the average item size.\n            const predictedOffset = renderedRange.start * this._averager.getAverageItemSize();\n            // The difference between the predicted size of the un-rendered content at the beginning and\n            // the actual available space to scroll over. We need to reduce this to zero by the time the\n            // user scrolls to the top.\n            // - 0 indicates that the predicted size and available space are the same.\n            // - A negative number that the predicted size is smaller than the available space.\n            // - A positive number indicates the predicted size is larger than the available space\n            const offsetDifference = predictedOffset - this._lastRenderedContentOffset;\n            // The amount of difference to correct during this scroll event. We calculate this as a\n            // percentage of the total difference based on the percentage of the distance toward the top\n            // that the user scrolled.\n            offsetCorrection = Math.round(offsetDifference *\n                Math.max(0, Math.min(1, scrollMagnitude / (scrollOffset + scrollMagnitude))));\n            // Based on the offset correction above, we pretend that the scroll delta was bigger or\n            // smaller than it actually was, this way we can start to eliminate the difference.\n            scrollDelta = scrollDelta - offsetCorrection;\n            scrollMagnitude = Math.abs(scrollDelta);\n        }\n        // The current amount of buffer past the start of the viewport.\n        const startBuffer = this._lastScrollOffset - this._lastRenderedContentOffset;\n        // The current amount of buffer past the end of the viewport.\n        const endBuffer = this._lastRenderedContentOffset +\n            this._lastRenderedContentSize -\n            (this._lastScrollOffset + viewport.getViewportSize());\n        // The amount of unfilled space that should be filled on the side the user is scrolling toward\n        // in order to safely absorb the scroll delta.\n        const underscan = scrollMagnitude + this._minBufferPx - (scrollDelta < 0 ? startBuffer : endBuffer);\n        // Check if there's unfilled space that we need to render new elements to fill.\n        if (underscan > 0) {\n            // Check if the scroll magnitude was larger than the viewport size. In this case the user\n            // won't notice a discontinuity if we just jump to the new estimated position in the list.\n            // However, if the scroll magnitude is smaller than the viewport the user might notice some\n            // jitteriness if we just jump to the estimated position. Instead we make sure to scroll by\n            // the same number of pixels as the scroll magnitude.\n            if (scrollMagnitude >= viewport.getViewportSize()) {\n                this._renderContentForCurrentOffset();\n            }\n            else {\n                // The number of new items to render on the side the user is scrolling towards. Rather than\n                // just filling the underscan space, we actually fill enough to have a buffer size of\n                // `maxBufferPx`. This gives us a little wiggle room in case our item size estimate is off.\n                const addItems = Math.max(0, Math.ceil((underscan - this._minBufferPx + this._maxBufferPx) /\n                    this._averager.getAverageItemSize()));\n                // The amount of filled space beyond what is necessary on the side the user is scrolling\n                // away from.\n                const overscan = (scrollDelta < 0 ? endBuffer : startBuffer) - this._minBufferPx + scrollMagnitude;\n                // The number of currently rendered items to remove on the side the user is scrolling away\n                // from. If removal has failed in recent cycles we are less aggressive in how much we try to\n                // remove.\n                const unboundedRemoveItems = Math.floor(overscan / this._averager.getAverageItemSize() / (this._removalFailures + 1));\n                const removeItems = Math.min(renderedRange.end - renderedRange.start, Math.max(0, unboundedRemoveItems));\n                // The new range we will tell the viewport to render. We first expand it to include the new\n                // items we want rendered, we then contract the opposite side to remove items we no longer\n                // want rendered.\n                const range = this._expandRange(renderedRange, scrollDelta < 0 ? addItems : 0, scrollDelta > 0 ? addItems : 0);\n                if (scrollDelta < 0) {\n                    range.end = Math.max(range.start + 1, range.end - removeItems);\n                }\n                else {\n                    range.start = Math.min(range.end - 1, range.start + removeItems);\n                }\n                // The new offset we want to set on the rendered content. To determine this we measure the\n                // number of pixels we removed and then adjust the offset to the start of the rendered\n                // content or to the end of the rendered content accordingly (whichever one doesn't require\n                // that the newly added items to be rendered to calculate.)\n                let contentOffset;\n                let contentOffsetTo;\n                if (scrollDelta < 0) {\n                    let removedSize = viewport.measureRangeSize({\n                        start: range.end,\n                        end: renderedRange.end,\n                    });\n                    // Check that we're not removing too much.\n                    if (removedSize <= overscan) {\n                        contentOffset =\n                            this._lastRenderedContentOffset + this._lastRenderedContentSize - removedSize;\n                        this._removalFailures = 0;\n                    }\n                    else {\n                        // If the removal is more than the overscan can absorb just undo it and record the fact\n                        // that the removal failed so we can be less aggressive next time.\n                        range.end = renderedRange.end;\n                        contentOffset = this._lastRenderedContentOffset + this._lastRenderedContentSize;\n                        this._removalFailures++;\n                    }\n                    contentOffsetTo = 'to-end';\n                }\n                else {\n                    const removedSize = viewport.measureRangeSize({\n                        start: renderedRange.start,\n                        end: range.start,\n                    });\n                    // Check that we're not removing too much.\n                    if (removedSize <= overscan) {\n                        contentOffset = this._lastRenderedContentOffset + removedSize;\n                        this._removalFailures = 0;\n                    }\n                    else {\n                        // If the removal is more than the overscan can absorb just undo it and record the fact\n                        // that the removal failed so we can be less aggressive next time.\n                        range.start = renderedRange.start;\n                        contentOffset = this._lastRenderedContentOffset;\n                        this._removalFailures++;\n                    }\n                    contentOffsetTo = 'to-start';\n                }\n                // Set the range and offset we calculated above.\n                viewport.setRenderedRange(range);\n                viewport.setRenderedContentOffset(contentOffset + offsetCorrection, contentOffsetTo);\n            }\n        }\n        else if (offsetCorrection) {\n            // Even if the rendered range didn't change, we may still need to adjust the content offset to\n            // simulate scrolling slightly slower or faster than the user actually scrolled.\n            viewport.setRenderedContentOffset(this._lastRenderedContentOffset + offsetCorrection);\n        }\n        // Save the scroll offset to be compared to the new value on the next scroll event.\n        this._lastScrollOffset = scrollOffset;\n    }\n    /**\n     * Checks the size of the currently rendered content and uses it to update the estimated item size\n     * and estimated total content size.\n     */\n    _checkRenderedContentSize() {\n        const viewport = this._viewport;\n        this._lastRenderedContentSize = viewport.measureRenderedContentSize();\n        this._averager.addSample(viewport.getRenderedRange(), this._lastRenderedContentSize);\n        this._updateTotalContentSize(this._lastRenderedContentSize);\n    }\n    /** Checks the currently rendered content offset and saves the value for later use. */\n    _checkRenderedContentOffset() {\n        const viewport = this._viewport;\n        this._lastRenderedContentOffset = viewport.getOffsetToRenderedContentStart();\n    }\n    /**\n     * Recalculates the rendered content based on our estimate of what should be shown at the current\n     * scroll offset.\n     */\n    _renderContentForCurrentOffset() {\n        const viewport = this._viewport;\n        const scrollOffset = viewport.measureScrollOffset();\n        this._lastScrollOffset = scrollOffset;\n        this._removalFailures = 0;\n        const itemSize = this._averager.getAverageItemSize();\n        const firstVisibleIndex = Math.min(viewport.getDataLength() - 1, Math.floor(scrollOffset / itemSize));\n        const bufferSize = Math.ceil(this._maxBufferPx / itemSize);\n        const range = this._expandRange(this._getVisibleRangeForIndex(firstVisibleIndex), bufferSize, bufferSize);\n        viewport.setRenderedRange(range);\n        viewport.setRenderedContentOffset(itemSize * range.start);\n    }\n    // TODO: maybe move to base class, can probably share with fixed size strategy.\n    /**\n     * Gets the visible range of data for the given start index. If the start index is too close to\n     * the end of the list it may be backed up to ensure the estimated size of the range is enough to\n     * fill the viewport.\n     * Note: must not be called if `this._viewport` is null\n     * @param startIndex The index to start the range at\n     * @return a range estimated to be large enough to fill the viewport when rendered.\n     */\n    _getVisibleRangeForIndex(startIndex) {\n        const viewport = this._viewport;\n        const range = {\n            start: startIndex,\n            end: startIndex + Math.ceil(viewport.getViewportSize() / this._averager.getAverageItemSize()),\n        };\n        const extra = range.end - viewport.getDataLength();\n        if (extra > 0) {\n            range.start = Math.max(0, range.start - extra);\n        }\n        return range;\n    }\n    // TODO: maybe move to base class, can probably share with fixed size strategy.\n    /**\n     * Expand the given range by the given amount in either direction.\n     * Note: must not be called if `this._viewport` is null\n     * @param range The range to expand\n     * @param expandStart The number of items to expand the start of the range by.\n     * @param expandEnd The number of items to expand the end of the range by.\n     * @return The expanded range.\n     */\n    _expandRange(range, expandStart, expandEnd) {\n        const viewport = this._viewport;\n        const start = Math.max(0, range.start - expandStart);\n        const end = Math.min(viewport.getDataLength(), range.end + expandEnd);\n        return { start, end };\n    }\n    /** Update the viewport's total content size. */\n    _updateTotalContentSize(renderedContentSize) {\n        const viewport = this._viewport;\n        const renderedRange = viewport.getRenderedRange();\n        const totalSize = renderedContentSize +\n            (viewport.getDataLength() - (renderedRange.end - renderedRange.start)) *\n                this._averager.getAverageItemSize();\n        viewport.setTotalContentSize(totalSize);\n    }\n}\n/**\n * Provider factory for `AutoSizeVirtualScrollStrategy` that simply extracts the already created\n * `AutoSizeVirtualScrollStrategy` from the given directive.\n * @param autoSizeDir The instance of `CdkAutoSizeVirtualScroll` to extract the\n *     `AutoSizeVirtualScrollStrategy` from.\n */\nfunction _autoSizeVirtualScrollStrategyFactory(autoSizeDir) {\n    return autoSizeDir._scrollStrategy;\n}\n/** A virtual scroll strategy that supports unknown or dynamic size items. */\nclass CdkAutoSizeVirtualScroll {\n    constructor() {\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /** The scroll strategy used by this directive. */\n        this._scrollStrategy = new AutoSizeVirtualScrollStrategy(this.minBufferPx, this.maxBufferPx);\n    }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     */\n    get minBufferPx() {\n        return this._minBufferPx;\n    }\n    set minBufferPx(value) {\n        this._minBufferPx = coerceNumberProperty(value);\n    }\n    /**\n     * The number of pixels worth of buffer to shoot for when rendering new items.\n     * If the actual amount turns out to be less it will not necessarily trigger an additional\n     * rendering cycle (as long as the amount of buffer is still greater than `minBufferPx`).\n     * Defaults to 200px.\n     */\n    get maxBufferPx() {\n        return this._maxBufferPx;\n    }\n    set maxBufferPx(value) {\n        this._maxBufferPx = coerceNumberProperty(value);\n    }\n    ngOnChanges() {\n        this._scrollStrategy.updateBufferSize(this.minBufferPx, this.maxBufferPx);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkAutoSizeVirtualScroll, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkAutoSizeVirtualScroll, selector: \"cdk-virtual-scroll-viewport[autosize]\", inputs: { minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, providers: [\n            {\n                provide: VIRTUAL_SCROLL_STRATEGY,\n                useFactory: _autoSizeVirtualScrollStrategyFactory,\n                deps: [forwardRef(() => CdkAutoSizeVirtualScroll)],\n            },\n        ], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkAutoSizeVirtualScroll, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-virtual-scroll-viewport[autosize]',\n                    providers: [\n                        {\n                            provide: VIRTUAL_SCROLL_STRATEGY,\n                            useFactory: _autoSizeVirtualScrollStrategyFactory,\n                            deps: [forwardRef(() => CdkAutoSizeVirtualScroll)],\n                        },\n                    ],\n                }]\n        }], propDecorators: { minBufferPx: [{\n                type: Input\n            }], maxBufferPx: [{\n                type: Input\n            }] } });\n\nclass ScrollingModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ScrollingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: ScrollingModule, declarations: [CdkAutoSizeVirtualScroll], exports: [CdkAutoSizeVirtualScroll] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ScrollingModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ScrollingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkAutoSizeVirtualScroll],\n                    declarations: [CdkAutoSizeVirtualScroll],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutoSizeVirtualScrollStrategy, CdkAutoSizeVirtualScroll, ItemSizeAverager, ScrollingModule, _autoSizeVirtualScrollStrategyFactory };\n","import * as i1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, Optional, ChangeDetectorRef, Inject, ElementRef, EventEmitter, Component, ChangeDetectionStrategy, Input, Output, ViewChildren, ContentChildren, NgModule } from '@angular/core';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CdkStepper, CdkStepperModule } from '@angular/cdk/stepper';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { MatLegacyAutocompleteModule } from '@angular/material/legacy-autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatLegacyButtonModule } from '@angular/material/legacy-button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatLegacyCardModule } from '@angular/material/legacy-card';\nimport { MatLegacyCheckboxModule } from '@angular/material/legacy-checkbox';\nimport { MatLegacyChipsModule } from '@angular/material/legacy-chips';\nimport * as i2 from '@angular/material/stepper';\nimport { MatStepper, MatStep, MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatLegacyDialogModule } from '@angular/material/legacy-dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatLegacyInputModule } from '@angular/material/legacy-input';\nimport { MatLegacyListModule } from '@angular/material/legacy-list';\nimport { MatLegacyMenuModule } from '@angular/material/legacy-menu';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatLegacyPaginatorModule } from '@angular/material/legacy-paginator';\nimport { MatLegacyProgressBarModule } from '@angular/material/legacy-progress-bar';\nimport { MatLegacyProgressSpinnerModule } from '@angular/material/legacy-progress-spinner';\nimport { MatLegacyRadioModule } from '@angular/material/legacy-radio';\nimport { MatLegacySelectModule } from '@angular/material/legacy-select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatLegacySliderModule } from '@angular/material/legacy-slider';\nimport { MatLegacySlideToggleModule } from '@angular/material/legacy-slide-toggle';\nimport { MatLegacySnackBarModule } from '@angular/material/legacy-snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatLegacyTableModule } from '@angular/material/legacy-table';\nimport { MatLegacyTabsModule } from '@angular/material/legacy-tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatLegacyTooltipModule } from '@angular/material/legacy-tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ScrollingModule as ScrollingModule$1 } from '@angular/cdk-experimental/scrolling';\n\nconst MAT_STEPPER_PROXY_FACTORY_PROVIDER = {\n    provide: MatStepper,\n    deps: [\n        forwardRef(() => ResponsiveStepperComponent),\n        [new Optional(), Directionality],\n        ChangeDetectorRef,\n        [new Inject(DOCUMENT)]\n    ],\n    useFactory: MAT_STEPPER_PROXY_FACTORY\n};\nconst CDK_STEPPER_PROXY_FACTORY_PROVIDER = { ...MAT_STEPPER_PROXY_FACTORY_PROVIDER, provide: CdkStepper };\nfunction MAT_STEPPER_PROXY_FACTORY(component, directionality, changeDetectorRef, document) {\n    // We create a fake stepper primarily so we can generate a proxy from it. The fake one, however, is used until\n    // our view is initialized. The reason we need a proxy is so we can toggle between our 2 steppers\n    // (vertical and horizontal) depending on  our \"orientation\" property. Probably a good idea to include a polyfill\n    // for the Proxy class: https://github.com/GoogleChrome/proxy-polyfill.\n    const elementRef = new ElementRef(document.createElement('mat-horizontal-stepper'));\n    const stepper = new MatStepper(directionality, changeDetectorRef, elementRef /*, document*/);\n    return new Proxy(stepper, {\n        get: (target, property) => Reflect.get(component.stepper || target, property),\n        set: (target, property, value) => Reflect.set(component.stepper || target, property, value)\n    });\n}\n/**\n * Configurable vertical/horizontal layout.<br>\n * Keeps input fields state.<br>\n * Allow to make headers un-clickable (disabled) with normal cursor: see updateStepState().\n *\n * Authors: @grant77, @davideas\n */\nclass ResponsiveStepperComponent {\n    constructor() {\n        // public events\n        this.animationDone = new EventEmitter();\n        this.selectionChange = new EventEmitter();\n        this.orientationChange = new EventEmitter();\n        this.needsFocus = false;\n        this.htmlSteps = [];\n    }\n    get stepper() {\n        return this.stepperList && this.stepperList.first;\n    }\n    /*constructor(private changeDetectorRef: ChangeDetectorRef) {\n    }*/\n    ngAfterViewInit() {\n        this.reset();\n        this.stepperList.changes.subscribe(() => this.reset());\n        // Emitted from (animationDone) event\n        this.selectionChange.subscribe((e) => this.lastSelectedIndex = e.selectedIndex);\n        this.syncHTMLSteps();\n        // Initial step selection with enter animation if initial step > 1\n        setTimeout(() => this.stepper.selectedIndex = this.selectedIndex, 400);\n    }\n    ngAfterViewChecked() {\n        if (this.needsFocus) {\n            this.needsFocus = false;\n            const { _elementRef, _keyManager, selectedIndex } = this.stepper;\n            _elementRef.nativeElement.focus();\n            _keyManager.setActiveItem(selectedIndex);\n        }\n    }\n    get isHorizontal() {\n        return this.orientation === 'horizontal';\n    }\n    get isVertical() {\n        return this.orientation === 'vertical';\n    }\n    next() {\n        this.stepper.next();\n    }\n    previous() {\n        this.stepper.previous();\n    }\n    /**\n     * Enable/Disable the click on the step header.\n     *\n     * @param step The step number\n     * @param enabled The new state\n     */\n    updateStepState(step, enabled) {\n        if (this.htmlSteps.length > 0) {\n            this.htmlSteps[step - 1].style.pointerEvents = enabled ? '' : 'none';\n        }\n    }\n    /**\n     * Sync from the dom the list of HTML elements for the steps.\n     */\n    syncHTMLSteps() {\n        this.htmlSteps = [];\n        let increment = 1;\n        let stepper = document.querySelector('.mat-stepper-vertical');\n        if (!stepper) {\n            increment = 2; // 2, because Angular adds 2 elements for each horizontal step\n            stepper = document.querySelector('.mat-horizontal-stepper-header-container');\n        }\n        for (let i = 0; i < stepper.children.length; i += increment) {\n            this.htmlSteps.push(stepper.children[i]);\n        }\n    }\n    reset() {\n        // Delay is necessary (Too early in AfterViewInit: HTMLElements not loaded)\n        setTimeout(() => this.syncHTMLSteps(), 100);\n        const { stepper, steps, /*, changeDetectorRef,*/ lastSelectedIndex } = this;\n        stepper.steps.reset(steps.toArray());\n        stepper.steps.notifyOnChanges();\n        if (lastSelectedIndex) {\n            stepper.selectedIndex = lastSelectedIndex;\n            // After htmlSteps have been synced\n            setTimeout(() => this.orientationChange.emit(this.orientation), 101);\n        }\n        /*Promise.resolve().then(() => {\n            this.needsFocus = true;\n            changeDetectorRef.markForCheck();\n        });*/\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: ResponsiveStepperComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.5\", type: ResponsiveStepperComponent, selector: \"responsive-stepper\", inputs: { labelPosition: \"labelPosition\", linear: \"linear\", orientation: \"orientation\", selected: \"selected\", selectedIndex: \"selectedIndex\" }, outputs: { animationDone: \"animationDone\", selectionChange: \"selectionChange\", orientationChange: \"orientationChange\" }, providers: [\n            MAT_STEPPER_PROXY_FACTORY_PROVIDER,\n            CDK_STEPPER_PROXY_FACTORY_PROVIDER\n        ], queries: [{ propertyName: \"steps\", predicate: MatStep }], viewQueries: [{ propertyName: \"stepperList\", predicate: MatStepper, descendants: true }], ngImport: i0, template: `\n        <ng-container [ngSwitch]=\"orientation\">\n            <mat-horizontal-stepper *ngSwitchDefault\n                                    [labelPosition]=\"labelPosition\"\n                                    [linear]=\"linear\"\n                                    [selected]=\"selected\"\n                                    [selectedIndex]=\"selectedIndex\"\n                                    (animationDone)=\"animationDone.emit($event)\"\n                                    (selectionChange)=\"selectionChange.emit($event)\">\n            </mat-horizontal-stepper>\n            <mat-vertical-stepper *ngSwitchCase=\"'vertical'\"\n                                  [linear]=\"linear\"\n                                  [selected]=\"selected\"\n                                  [selectedIndex]=\"selectedIndex\"\n                                  (animationDone)=\"animationDone.emit($event)\"\n                                  (selectionChange)=\"selectionChange.emit($event)\">\n            </mat-vertical-stepper>\n        </ng-container>`, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i1.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"directive\", type: i1.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }, { kind: \"component\", type: i2.MatStepper, selector: \"mat-stepper, mat-vertical-stepper, mat-horizontal-stepper, [matStepper]\", inputs: [\"selectedIndex\", \"disableRipple\", \"color\", \"labelPosition\", \"headerPosition\", \"animationDuration\"], outputs: [\"animationDone\"], exportAs: [\"matStepper\", \"matVerticalStepper\", \"matHorizontalStepper\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: ResponsiveStepperComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'responsive-stepper',\n                    // templateUrl: './stepper.component.html',\n                    // styleUrls: ['./stepper.component.scss'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        MAT_STEPPER_PROXY_FACTORY_PROVIDER,\n                        CDK_STEPPER_PROXY_FACTORY_PROVIDER\n                    ],\n                    template: `\n        <ng-container [ngSwitch]=\"orientation\">\n            <mat-horizontal-stepper *ngSwitchDefault\n                                    [labelPosition]=\"labelPosition\"\n                                    [linear]=\"linear\"\n                                    [selected]=\"selected\"\n                                    [selectedIndex]=\"selectedIndex\"\n                                    (animationDone)=\"animationDone.emit($event)\"\n                                    (selectionChange)=\"selectionChange.emit($event)\">\n            </mat-horizontal-stepper>\n            <mat-vertical-stepper *ngSwitchCase=\"'vertical'\"\n                                  [linear]=\"linear\"\n                                  [selected]=\"selected\"\n                                  [selectedIndex]=\"selectedIndex\"\n                                  (animationDone)=\"animationDone.emit($event)\"\n                                  (selectionChange)=\"selectionChange.emit($event)\">\n            </mat-vertical-stepper>\n        </ng-container>`\n                }]\n        }], propDecorators: { labelPosition: [{\n                type: Input\n            }], linear: [{\n                type: Input\n            }], orientation: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], selectedIndex: [{\n                type: Input\n            }], animationDone: [{\n                type: Output\n            }], selectionChange: [{\n                type: Output\n            }], orientationChange: [{\n                type: Output\n            }], stepperList: [{\n                type: ViewChildren,\n                args: [MatStepper]\n            }], steps: [{\n                type: ContentChildren,\n                args: [MatStep]\n            }] } });\n\nclass MaterialModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: MaterialModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.5\", ngImport: i0, type: MaterialModule, declarations: [ResponsiveStepperComponent], imports: [CommonModule, CdkStepperModule, MatStepperModule], exports: [A11yModule,\n            CdkStepperModule,\n            CdkTableModule,\n            CdkTreeModule,\n            DragDropModule,\n            MatLegacyAutocompleteModule,\n            MatBadgeModule,\n            MatBottomSheetModule,\n            MatLegacyButtonModule,\n            MatButtonToggleModule,\n            MatLegacyCardModule,\n            MatLegacyCheckboxModule,\n            MatLegacyChipsModule,\n            MatStepperModule,\n            MatDatepickerModule,\n            MatLegacyDialogModule,\n            MatDividerModule,\n            MatExpansionModule,\n            MatGridListModule,\n            MatIconModule,\n            MatLegacyInputModule,\n            MatLegacyListModule,\n            MatLegacyMenuModule,\n            MatNativeDateModule,\n            MatLegacyPaginatorModule,\n            MatLegacyProgressBarModule,\n            MatLegacyProgressSpinnerModule,\n            MatLegacyRadioModule,\n            MatRippleModule,\n            MatLegacySelectModule,\n            MatSidenavModule,\n            MatLegacySliderModule,\n            MatLegacySlideToggleModule,\n            MatLegacySnackBarModule,\n            MatSortModule,\n            MatLegacyTableModule,\n            MatLegacyTabsModule,\n            MatToolbarModule,\n            MatLegacyTooltipModule,\n            MatTreeModule,\n            PortalModule,\n            ScrollingModule,\n            ScrollingModule$1,\n            // MatFormFieldModule,\n            ResponsiveStepperComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: MaterialModule, imports: [CommonModule, CdkStepperModule, MatStepperModule, A11yModule,\n            CdkStepperModule,\n            CdkTableModule,\n            CdkTreeModule,\n            DragDropModule,\n            MatLegacyAutocompleteModule,\n            MatBadgeModule,\n            MatBottomSheetModule,\n            MatLegacyButtonModule,\n            MatButtonToggleModule,\n            MatLegacyCardModule,\n            MatLegacyCheckboxModule,\n            MatLegacyChipsModule,\n            MatStepperModule,\n            MatDatepickerModule,\n            MatLegacyDialogModule,\n            MatDividerModule,\n            MatExpansionModule,\n            MatGridListModule,\n            MatIconModule,\n            MatLegacyInputModule,\n            MatLegacyListModule,\n            MatLegacyMenuModule,\n            MatNativeDateModule,\n            MatLegacyPaginatorModule,\n            MatLegacyProgressBarModule,\n            MatLegacyProgressSpinnerModule,\n            MatLegacyRadioModule,\n            MatRippleModule,\n            MatLegacySelectModule,\n            MatSidenavModule,\n            MatLegacySliderModule,\n            MatLegacySlideToggleModule,\n            MatLegacySnackBarModule,\n            MatSortModule,\n            MatLegacyTableModule,\n            MatLegacyTabsModule,\n            MatToolbarModule,\n            MatLegacyTooltipModule,\n            MatTreeModule,\n            PortalModule,\n            ScrollingModule,\n            ScrollingModule$1] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: MaterialModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, CdkStepperModule, MatStepperModule],\n                    exports: [\n                        A11yModule,\n                        CdkStepperModule,\n                        CdkTableModule,\n                        CdkTreeModule,\n                        DragDropModule,\n                        MatLegacyAutocompleteModule,\n                        MatBadgeModule,\n                        MatBottomSheetModule,\n                        MatLegacyButtonModule,\n                        MatButtonToggleModule,\n                        MatLegacyCardModule,\n                        MatLegacyCheckboxModule,\n                        MatLegacyChipsModule,\n                        MatStepperModule,\n                        MatDatepickerModule,\n                        MatLegacyDialogModule,\n                        MatDividerModule,\n                        MatExpansionModule,\n                        MatGridListModule,\n                        MatIconModule,\n                        MatLegacyInputModule,\n                        MatLegacyListModule,\n                        MatLegacyMenuModule,\n                        MatNativeDateModule,\n                        MatLegacyPaginatorModule,\n                        MatLegacyProgressBarModule,\n                        MatLegacyProgressSpinnerModule,\n                        MatLegacyRadioModule,\n                        MatRippleModule,\n                        MatLegacySelectModule,\n                        MatSidenavModule,\n                        MatLegacySliderModule,\n                        MatLegacySlideToggleModule,\n                        MatLegacySnackBarModule,\n                        MatSortModule,\n                        MatLegacyTableModule,\n                        MatLegacyTabsModule,\n                        MatToolbarModule,\n                        MatLegacyTooltipModule,\n                        MatTreeModule,\n                        PortalModule,\n                        ScrollingModule,\n                        ScrollingModule$1,\n                        // MatFormFieldModule,\n                        ResponsiveStepperComponent\n                    ],\n                    declarations: [ResponsiveStepperComponent]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_STEPPER_PROXY_FACTORY, MaterialModule, ResponsiveStepperComponent };\n"],"names":["coerceNumberProperty","VIRTUAL_SCROLL_STRATEGY","i0","forwardRef","Directive","Input","NgModule","Observable","ItemSizeAverager","constructor","defaultItemSize","_totalWeight","_defaultItemSize","_averageItemSize","getAverageItemSize","addSample","range","size","newTotalWeight","end","start","newAverageItemSize","reset","AutoSizeVirtualScrollStrategy","minBufferPx","maxBufferPx","averager","scrolledIndexChange","ngDevMode","Error","_viewport","_removalFailures","_minBufferPx","_maxBufferPx","_averager","attach","viewport","_renderContentForCurrentOffset","detach","onContentScrolled","_updateRenderedContentAfterScroll","onDataLengthChanged","_checkRenderedContentSize","onContentRendered","onRenderedOffsetChanged","_checkRenderedContentOffset","scrollToIndex","updateBufferSize","scrollOffset","measureScrollOffset","scrollDelta","_lastScrollOffset","scrollMagnitude","Math","abs","renderedRange","getRenderedRange","offsetCorrection","predictedOffset","offsetDifference","_lastRenderedContentOffset","round","max","min","startBuffer","endBuffer","_lastRenderedContentSize","getViewportSize","underscan","addItems","ceil","overscan","unboundedRemoveItems","floor","removeItems","_expandRange","contentOffset","contentOffsetTo","removedSize","measureRangeSize","setRenderedRange","setRenderedContentOffset","measureRenderedContentSize","_updateTotalContentSize","getOffsetToRenderedContentStart","itemSize","firstVisibleIndex","getDataLength","bufferSize","_getVisibleRangeForIndex","startIndex","extra","expandStart","expandEnd","renderedContentSize","totalSize","setTotalContentSize","_autoSizeVirtualScrollStrategyFactory","autoSizeDir","_scrollStrategy","CdkAutoSizeVirtualScroll","value","ngOnChanges","_","ɵfac","CdkAutoSizeVirtualScroll_Factory","t","_2","ɵdir","ɵɵdefineDirective","type","selectors","inputs","features","ɵɵProvidersFeature","provide","useFactory","deps","ɵɵNgOnChangesFeature","ɵsetClassMetadata","args","selector","providers","ScrollingModule","ScrollingModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","exports","declarations","i1","DOCUMENT","CommonModule","Optional","ChangeDetectorRef","Inject","ElementRef","EventEmitter","Component","ChangeDetectionStrategy","Output","ViewChildren","ContentChildren","A11yModule","DragDropModule","PortalModule","CdkStepper","CdkStepperModule","CdkTableModule","CdkTreeModule","MatLegacyAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatLegacyButtonModule","MatButtonToggleModule","MatLegacyCardModule","MatLegacyCheckboxModule","MatLegacyChipsModule","i2","MatStepper","MatStep","MatStepperModule","MatDatepickerModule","MatLegacyDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatLegacyInputModule","MatLegacyListModule","MatLegacyMenuModule","MatNativeDateModule","MatRippleModule","MatLegacyPaginatorModule","MatLegacyProgressBarModule","MatLegacyProgressSpinnerModule","MatLegacyRadioModule","MatLegacySelectModule","MatSidenavModule","MatLegacySliderModule","MatLegacySlideToggleModule","MatLegacySnackBarModule","MatSortModule","MatLegacyTableModule","MatLegacyTabsModule","MatToolbarModule","MatLegacyTooltipModule","MatTreeModule","Directionality","ScrollingModule$1","ResponsiveStepperComponent_mat_horizontal_stepper_1_Template","rf","ctx","_r3","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","ResponsiveStepperComponent_mat_horizontal_stepper_1_Template_mat_horizontal_stepper_animationDone_0_listener","$event","ɵɵrestoreView","ctx_r2","ɵɵnextContext","ɵɵresetView","animationDone","emit","ResponsiveStepperComponent_mat_horizontal_stepper_1_Template_mat_horizontal_stepper_selectionChange_0_listener","ctx_r4","selectionChange","ɵɵelementEnd","ctx_r0","ɵɵproperty","labelPosition","linear","selected","selectedIndex","ResponsiveStepperComponent_mat_vertical_stepper_2_Template","_r6","ResponsiveStepperComponent_mat_vertical_stepper_2_Template_mat_vertical_stepper_animationDone_0_listener","ctx_r5","ResponsiveStepperComponent_mat_vertical_stepper_2_Template_mat_vertical_stepper_selectionChange_0_listener","ctx_r7","ctx_r1","MAT_STEPPER_PROXY_FACTORY_PROVIDER","ResponsiveStepperComponent","MAT_STEPPER_PROXY_FACTORY","CDK_STEPPER_PROXY_FACTORY_PROVIDER","component","directionality","changeDetectorRef","document","elementRef","createElement","stepper","Proxy","get","target","property","Reflect","set","orientationChange","needsFocus","htmlSteps","stepperList","first","ngAfterViewInit","changes","subscribe","e","lastSelectedIndex","syncHTMLSteps","setTimeout","ngAfterViewChecked","_elementRef","_keyManager","nativeElement","focus","setActiveItem","isHorizontal","orientation","isVertical","next","previous","updateStepState","step","enabled","length","style","pointerEvents","increment","querySelector","i","children","push","steps","toArray","notifyOnChanges","ResponsiveStepperComponent_Factory","ɵcmp","ɵɵdefineComponent","contentQueries","ResponsiveStepperComponent_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","viewQuery","ResponsiveStepperComponent_Query","ɵɵviewQuery","outputs","decls","vars","consts","template","ResponsiveStepperComponent_Template","ɵɵelementContainerStart","ɵɵtemplate","ɵɵelementContainerEnd","ɵɵadvance","dependencies","NgSwitch","NgSwitchCase","NgSwitchDefault","encapsulation","changeDetection","OnPush","MaterialModule","MaterialModule_Factory","imports"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1]}