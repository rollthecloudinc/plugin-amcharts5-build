{"version":3,"file":"8364.js","mappings":"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","sources":["./node_modules/d3-force/src/collide.js","./node_modules/d3-force/src/constant.js","./node_modules/d3-force/src/jiggle.js","./node_modules/d3-force/src/lcg.js","./node_modules/d3-force/src/link.js","./node_modules/d3-force/src/manyBody.js","./node_modules/d3-force/src/simulation.js","./node_modules/d3-force/src/x.js","./node_modules/d3-force/src/y.js","./node_modules/d3-hierarchy/src/accessors.js","./node_modules/d3-hierarchy/src/array.js","./node_modules/d3-hierarchy/src/constant.js","./node_modules/d3-hierarchy/src/hierarchy/ancestors.js","./node_modules/d3-hierarchy/src/hierarchy/count.js","./node_modules/d3-hierarchy/src/hierarchy/descendants.js","./node_modules/d3-hierarchy/src/hierarchy/each.js","./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","./node_modules/d3-hierarchy/src/hierarchy/find.js","./node_modules/d3-hierarchy/src/hierarchy/index.js","./node_modules/d3-hierarchy/src/hierarchy/iterator.js","./node_modules/d3-hierarchy/src/hierarchy/leaves.js","./node_modules/d3-hierarchy/src/hierarchy/links.js","./node_modules/d3-hierarchy/src/hierarchy/path.js","./node_modules/d3-hierarchy/src/hierarchy/sort.js","./node_modules/d3-hierarchy/src/hierarchy/sum.js","./node_modules/d3-hierarchy/src/lcg.js","./node_modules/d3-hierarchy/src/pack/enclose.js","./node_modules/d3-hierarchy/src/pack/index.js","./node_modules/d3-hierarchy/src/pack/siblings.js","./node_modules/d3-hierarchy/src/partition.js","./node_modules/d3-hierarchy/src/tree.js","./node_modules/d3-hierarchy/src/treemap/binary.js","./node_modules/d3-hierarchy/src/treemap/dice.js","./node_modules/d3-hierarchy/src/treemap/index.js","./node_modules/d3-hierarchy/src/treemap/round.js","./node_modules/d3-hierarchy/src/treemap/slice.js","./node_modules/d3-hierarchy/src/treemap/sliceDice.js","./node_modules/d3-hierarchy/src/treemap/squarify.js","./node_modules/d3-quadtree/src/add.js","./node_modules/d3-quadtree/src/cover.js","./node_modules/d3-quadtree/src/data.js","./node_modules/d3-quadtree/src/extent.js","./node_modules/d3-quadtree/src/find.js","./node_modules/d3-quadtree/src/quad.js","./node_modules/d3-quadtree/src/quadtree.js","./node_modules/d3-quadtree/src/remove.js","./node_modules/d3-quadtree/src/root.js","./node_modules/d3-quadtree/src/size.js","./node_modules/d3-quadtree/src/visit.js","./node_modules/d3-quadtree/src/visitAfter.js","./node_modules/d3-quadtree/src/x.js","./node_modules/d3-quadtree/src/y.js"],"sourcesContent":["import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","export default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n\nexport function shuffle(array, random) {\n  let m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], next = [], children, i, n, index = -1;\n  while (node = nodes.pop()) {\n    next.push(node);\n    if (children = node.children) {\n      for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  while (node = next.pop()) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], children, i, index = -1;\n  while (node = nodes.pop()) {\n    callback.call(that, node, ++index, this);\n    if (children = node.children) {\n      for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  return this;\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    if (callback.call(that, node, ++index, this)) {\n      return node;\n    }\n  }\n}\n","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_find from \"./find.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nimport node_iterator from \"./iterator.js\";\n\nexport default function hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) children = mapChildren;\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n\n  var root = new Node(data),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n      node.children = childs;\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = childs[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction objectChildren(d) {\n  return d.children;\n}\n\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : null;\n}\n\nfunction copyData(node) {\n  if (node.data.value !== undefined) node.value = node.data.value;\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  find: node_find,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy,\n  [Symbol.iterator]: node_iterator\n};\n","export default function*() {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      yield node;\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    }\n  } while (next.length);\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {shuffle} from \"../array.js\";\nimport lcg from \"../lcg.js\";\n\nexport default function(circles) {\n  return packEncloseRandom(circles, lcg());\n}\n\nexport function packEncloseRandom(circles, random) {\n  var i = 0, n = (circles = shuffle(Array.from(circles), random)).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + Math.max(a.r, b.r, 1) * 1e-9, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(Math.abs(A) > 1e-6 ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","import {optional} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\nimport lcg from \"../lcg.js\";\nimport {packSiblingsRandom} from \"./siblings.js\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    const random = lcg();\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildrenRandom(padding, 0.5, random))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildrenRandom(constantZero, 1, random))\n          .eachAfter(packChildrenRandom(padding, root.r / Math.min(dx, dy), random))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildrenRandom(padding, k, random) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packSiblingsRandom(children, random);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n","import array from \"../array.js\";\nimport lcg from \"../lcg.js\";\nimport {packEncloseRandom} from \"./enclose.js\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packSiblingsRandom(circles, random) {\n  if (!(n = (circles = array(circles)).length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = packEncloseRandom(a, random);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packSiblingsRandom(circles, lcg());\n  return circles;\n}\n","import roundNode from \"./treemap/round.js\";\nimport treemapDice from \"./treemap/dice.js\";\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n","import {Node} from \"./hierarchy/index.js\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = value ? (x0 * valueRight + x1 * valueLeft) / value : x1;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = value ? (y0 * valueRight + y1 * valueLeft) / value : y1;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","import roundNode from \"./round.js\";\nimport squarify from \"./squarify.js\";\nimport {required} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import dice from \"./dice.js\";\nimport slice from \"./slice.js\";\n\nexport default function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n","import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n"],"names":["quadtree","constant","jiggle","x","d","vx","y","vy","radius","nodes","radii","random","strength","iterations","force","i","n","length","tree","node","xi","yi","ri","ri2","k","visitAfter","prepare","index","visit","apply","quad","x0","y0","x1","y1","data","rj","r","l","Math","sqrt","initialize","Array","_nodes","_random","_","arguments","a","c","m","s","find","nodeById","nodeId","get","Error","links","id","defaultStrength","strengths","distance","distances","count","bias","link","min","source","target","alpha","b","Map","map","initializeStrength","initializeDistance","distanceMin2","distanceMax2","Infinity","theta2","accumulate","q","weight","abs","value","next","x2","w","distanceMin","distanceMax","theta","dispatch","timer","lcg","initialRadius","initialAngle","PI","simulation","alphaMin","alphaDecay","pow","alphaTarget","velocityDecay","forces","stepper","step","event","tick","call","stop","undefined","forEach","fx","fy","initializeNodes","isNaN","angle","cos","sin","initializeForce","restart","randomSource","name","delete","set","dx","dy","d2","closest","on","xz","yz","optional","f","required","from","shuffle","array","t","constantZero","parent","push","sum","children","eachAfter","callback","that","pop","node_count","node_each","node_eachBefore","node_eachAfter","node_find","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","node_links","node_iterator","hierarchy","mapChildren","objectChildren","root","Node","child","childs","depth","eachBefore","computeHeight","node_copy","copyData","isArray","height","prototype","constructor","each","sort","path","ancestors","descendants","leaves","copy","Symbol","iterator","current","reverse","end","start","ancestor","leastCommonAncestor","splice","aNodes","bNodes","compare","circles","packEncloseRandom","B","p","e","enclosesWeak","encloseBasis","extendBasis","j","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","max","encloseBasis1","r1","y2","r2","x21","y21","r21","x3","y3","r3","a2","a3","b2","b3","c2","c3","d1","d3","ab","xa","xb","ya","yb","A","C","packSiblingsRandom","defaultRadius","padding","pack","radiusLeaf","packChildrenRandom","translateChild","size","place","intersects","score","circle","previous","aa","ca","sj","sk","roundNode","treemapDice","round","partition","positionNode","defaultSeparation","nextLeft","v","nextRight","moveSubtree","wm","wp","shift","change","z","executeShifts","nextAncestor","vim","TreeNode","Object","create","treeRoot","separation","nodeSize","firstWalk","secondWalk","sizeNode","left","right","bottom","tx","kx","ky","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","sums","valueOffset","valueTarget","hi","mid","valueLeft","valueRight","xk","yk","squarify","tile","paddingStack","paddingInner","paddingTop","paddingRight","paddingBottom","paddingLeft","treemap","paddingOuter","dice","slice","treemapSlice","phi","squarifyRatio","ratio","rows","row","nodeValue","i0","i1","sumValue","minValue","maxValue","newRatio","minRatio","beta","custom","_x","_y","add","cover","_root","leaf","_x0","_y0","_x1","_y1","xm","ym","xp","yp","addAll","floor","Quad","quads","tree_add","tree_addAll","tree_cover","tree_data","tree_extent","tree_find","tree_remove","removeAll","tree_removeAll","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","defaultX","tree_y","defaultY","Quadtree","NaN","leaf_copy","treeProto","extent","remove","retainer"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52]}