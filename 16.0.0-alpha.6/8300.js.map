{"version":3,"file":"8300.js","mappings":"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","sources":["./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/Axis.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisRendererX.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisRendererY.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/DateAxis.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/GaplessDateAxis.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/ValueAxis.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/series/Candlestick.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/series/CandlestickSeries.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/series/ColumnSeries.js"],"sourcesContent":["import { DataItem } from \"../../../core/render/Component\";\r\nimport { Component } from \"../../../core/render/Component\";\r\nimport { Container } from \"../../../core/render/Container\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport { List } from \"../../../core/util/List\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * A base class for all axes.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\r\n */\r\nexport class Axis extends Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_isPanning\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis label elements.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"labelsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis grid and fill elements.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"gridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100 })\r\n        });\r\n        /**\r\n         * A [[Container]] that holds axis grid elements which goes above the series.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topGridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100 })\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis bullet elements.\r\n         *\r\n         * @default new Container\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }))\r\n        });\r\n        /**\r\n         * A referenece to the the chart the axis belongs to.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rangesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_panStart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_panEnd\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_sAnimation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_eAnimation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_skipSync\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A list of axis ranges.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n         * @default new List()\r\n         */\r\n        Object.defineProperty(this, \"axisRanges\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        Object.defineProperty(this, \"_seriesAxisRanges\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * A control label that is invisible but is used to keep width the width of\r\n         * the axis constant.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\r\n         */\r\n        Object.defineProperty(this, \"ghostLabel\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_cursorPosition\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: -1\r\n        });\r\n        Object.defineProperty(this, \"_snapToSeries\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_seriesValuesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A container above the axis that can be used to add additional stuff into\r\n         * it. For example a legend, label, or an icon.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\r\n         * @default new Container\r\n         */\r\n        Object.defineProperty(this, \"axisHeader\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {\r\n                themeTags: [\"axis\", \"header\"],\r\n                position: \"absolute\",\r\n                background: Rectangle.new(this._root, {\r\n                    themeTags: [\"header\", \"background\"],\r\n                    fill: this._root.interfaceColors.get(\"background\")\r\n                })\r\n            }))\r\n        });\r\n        Object.defineProperty(this, \"_bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    _dispose() {\r\n        // these could be in other parents, so disposing just in case\r\n        this.gridContainer.dispose();\r\n        this.topGridContainer.dispose();\r\n        this.bulletsContainer.dispose();\r\n        this.labelsContainer.dispose();\r\n        this.axisHeader.dispose();\r\n        super._dispose();\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.setPrivate(\"updateScrollbar\", true);\r\n        this._disposers.push(this.axisRanges.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (dataItem) => {\r\n                    this.disposeDataItem(dataItem);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._processAxisRange(change.newValue, [\"range\"]);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._processAxisRange(change.newValue, [\"range\"]);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._processAxisRange(change.newValue, [\"range\"]);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this.disposeDataItem(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._processAxisRange(change.value, [\"range\"]);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IStreamEvent type\");\r\n            }\r\n        }));\r\n        const renderer = this.get(\"renderer\");\r\n        if (renderer) {\r\n            renderer.axis = this;\r\n            renderer.processAxis();\r\n        }\r\n        this.children.push(renderer);\r\n        this.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\r\n        this.ghostLabel.adapters.disable(\"text\");\r\n        this.ghostLabel.setAll({ opacity: 0, tooltipText: undefined, tooltipHTML: undefined, interactive: false });\r\n        this.ghostLabel.events.disable();\r\n    }\r\n    _updateFinals(_start, _end) {\r\n    }\r\n    /**\r\n     * Zooms the axis to relative locations.\r\n     *\r\n     * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\r\n     *\r\n     * @param   start     Relative start\r\n     * @param   end       Relative end\r\n     * @param   duration  Duration of the zoom animation in milliseconds\r\n     * @return            Zoom animation\r\n     */\r\n    zoom(start, end, duration, priority) {\r\n        this._updateFinals(start, end);\r\n        if (this.get(\"start\") !== start || this.get(\"end\") != end) {\r\n            let sAnimation = this._sAnimation;\r\n            let eAnimation = this._eAnimation;\r\n            let maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\r\n            if (start < -maxDeviation) {\r\n                start = -maxDeviation;\r\n            }\r\n            if (end > 1 + maxDeviation) {\r\n                end = 1 + maxDeviation;\r\n            }\r\n            if (start > end) {\r\n                [start, end] = [end, start];\r\n            }\r\n            if (!$type.isNumber(duration)) {\r\n                duration = this.get(\"interpolationDuration\", 0);\r\n            }\r\n            if (!priority) {\r\n                priority = \"end\";\r\n            }\r\n            let maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\r\n            let maxZoomFactorReal = maxZoomFactor;\r\n            if (end === 1 && start !== 0) {\r\n                if (start < this.get(\"start\")) {\r\n                    priority = \"start\";\r\n                }\r\n                else {\r\n                    priority = \"end\";\r\n                }\r\n            }\r\n            if (start === 0 && end !== 1) {\r\n                if (end > this.get(\"end\")) {\r\n                    priority = \"end\";\r\n                }\r\n                else {\r\n                    priority = \"start\";\r\n                }\r\n            }\r\n            let minZoomCount = this.get(\"minZoomCount\");\r\n            let maxZoomCount = this.get(\"maxZoomCount\");\r\n            if ($type.isNumber(minZoomCount)) {\r\n                maxZoomFactor = maxZoomFactorReal / minZoomCount;\r\n            }\r\n            let minZoomFactor = 1;\r\n            if ($type.isNumber(maxZoomCount)) {\r\n                minZoomFactor = maxZoomFactorReal / maxZoomCount;\r\n            }\r\n            // most likely we are dragging left scrollbar grip here, so we tend to modify end\r\n            if (priority === \"start\") {\r\n                if (maxZoomCount > 0) {\r\n                    // add to the end\r\n                    if (1 / (end - start) < minZoomFactor) {\r\n                        end = start + 1 / minZoomFactor;\r\n                    }\r\n                }\r\n                // add to the end\r\n                if (1 / (end - start) > maxZoomFactor) {\r\n                    end = start + 1 / maxZoomFactor;\r\n                }\r\n                //unless end is > 0\r\n                if (end > 1 && end - start < 1 / maxZoomFactor) {\r\n                    //end = 1;\r\n                    start = end - 1 / maxZoomFactor;\r\n                }\r\n            }\r\n            // most likely we are dragging right, so we modify left\r\n            else {\r\n                if (maxZoomCount > 0) {\r\n                    // add to the end\r\n                    if (1 / (end - start) < minZoomFactor) {\r\n                        start = end - 1 / minZoomFactor;\r\n                    }\r\n                }\r\n                // remove from start\r\n                if (1 / (end - start) > maxZoomFactor) {\r\n                    start = end - 1 / maxZoomFactor;\r\n                }\r\n                if (start < 0 && end - start < 1 / maxZoomFactor) {\r\n                    //start = 0;\r\n                    end = start + 1 / maxZoomFactor;\r\n                }\r\n            }\r\n            if (1 / (end - start) > maxZoomFactor) {\r\n                end = start + 1 / maxZoomFactor;\r\n            }\r\n            if (1 / (end - start) > maxZoomFactor) {\r\n                start = end - 1 / maxZoomFactor;\r\n            }\r\n            if (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\r\n                const chart = this.chart;\r\n                if (chart) {\r\n                    chart._handleAxisSelection(this, true);\r\n                }\r\n            }\r\n            if (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\r\n                return;\r\n            }\r\n            if (duration > 0) {\r\n                let easing = this.get(\"interpolationEasing\");\r\n                let sAnimation, eAnimation;\r\n                if (this.get(\"start\") != start) {\r\n                    sAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\r\n                }\r\n                if (this.get(\"end\") != end) {\r\n                    eAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\r\n                }\r\n                this._sAnimation = sAnimation;\r\n                this._eAnimation = eAnimation;\r\n                if (sAnimation) {\r\n                    return sAnimation;\r\n                }\r\n                else if (eAnimation) {\r\n                    return eAnimation;\r\n                }\r\n            }\r\n            else {\r\n                this.set(\"start\", start);\r\n                this.set(\"end\", end);\r\n                // otherwise bullets and line out of sync, as series is not redrawn\r\n                this._root.events.once(\"frameended\", () => {\r\n                    this._markDirtyKey(\"start\");\r\n                    this._root._markDirty();\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            if (this._sAnimation) {\r\n                this._sAnimation.stop();\r\n            }\r\n            if (this._eAnimation) {\r\n                this._eAnimation.stop();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * A list of series using this axis.\r\n     *\r\n     * @return Series\r\n     */\r\n    get series() {\r\n        return this._series;\r\n    }\r\n    _processAxisRange(dataItem, themeTags) {\r\n        dataItem.setRaw(\"isRange\", true);\r\n        this._createAssets(dataItem, themeTags);\r\n        this._rangesDirty = true;\r\n        this._prepareDataItem(dataItem);\r\n        const above = dataItem.get(\"above\");\r\n        const container = this.topGridContainer;\r\n        const grid = dataItem.get(\"grid\");\r\n        if (above && grid) {\r\n            container.children.moveValue(grid);\r\n        }\r\n        const fill = dataItem.get(\"axisFill\");\r\n        if (above && fill) {\r\n            container.children.moveValue(fill);\r\n        }\r\n    }\r\n    _prepareDataItem(_dataItem, _index) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyExtremes() {\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySelectionExtremes() {\r\n    }\r\n    _calculateTotals() {\r\n    }\r\n    _updateAxisRanges() {\r\n        this._bullets = {};\r\n        this.axisRanges.each((axisRange) => {\r\n            this._prepareDataItem(axisRange);\r\n        });\r\n        $array.each(this._seriesAxisRanges, (axisRange) => {\r\n            this._prepareDataItem(axisRange);\r\n        });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.get(\"fixAxisSize\")) {\r\n            this.ghostLabel.set(\"visible\", true);\r\n        }\r\n        else {\r\n            this.ghostLabel.set(\"visible\", false);\r\n        }\r\n        if (this.isDirty(\"start\") || this.isDirty(\"end\")) {\r\n            this.chart._updateCursor();\r\n            let start = this.get(\"start\", 0);\r\n            let end = this.get(\"end\", 1);\r\n            let maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\r\n            if (start < -maxDeviation) {\r\n                let delta = start + maxDeviation;\r\n                start = -maxDeviation;\r\n                this.setRaw(\"start\", start);\r\n                if (this.isDirty(\"end\")) {\r\n                    this.setRaw(\"end\", end - delta);\r\n                }\r\n            }\r\n            if (end > 1 + maxDeviation) {\r\n                let delta = end - 1 - maxDeviation;\r\n                end = 1 + maxDeviation;\r\n                this.setRaw(\"end\", end);\r\n                if (this.isDirty(\"start\")) {\r\n                    this.setRaw(\"start\", start - delta);\r\n                }\r\n            }\r\n        }\r\n        const renderer = this.get(\"renderer\");\r\n        renderer._start = this.get(\"start\");\r\n        renderer._end = this.get(\"end\");\r\n        renderer._inversed = renderer.get(\"inversed\", false);\r\n        renderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\r\n        renderer._updateLC();\r\n        if (this.isDirty(\"tooltip\")) {\r\n            const tooltip = this.get(\"tooltip\");\r\n            if (tooltip) {\r\n                const rendererTags = renderer.get(\"themeTags\");\r\n                tooltip.addTag(\"axis\");\r\n                tooltip.addTag(this.className.toLowerCase());\r\n                tooltip._applyThemes();\r\n                if (rendererTags) {\r\n                    tooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\r\n                    tooltip.label._applyThemes();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateTooltipBounds() {\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            this.get(\"renderer\").updateTooltipBounds(tooltip);\r\n        }\r\n    }\r\n    _updateBounds() {\r\n        super._updateBounds();\r\n        this._updateTooltipBounds();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processChart(chart) {\r\n        this.chart = chart;\r\n        const renderer = this.get(\"renderer\");\r\n        renderer.chart = chart;\r\n        chart.gridContainer.children.push(this.gridContainer);\r\n        chart.topGridContainer.children.push(this.topGridContainer);\r\n        chart.axisHeadersContainer.children.push(this.axisHeader);\r\n        this.on(\"start\", () => {\r\n            chart._handleAxisSelection(this);\r\n        });\r\n        this.on(\"end\", () => {\r\n            chart._handleAxisSelection(this);\r\n        });\r\n        chart.plotContainer.onPrivate(\"width\", () => {\r\n            this.markDirtySize();\r\n        });\r\n        chart.plotContainer.onPrivate(\"height\", () => {\r\n            this.markDirtySize();\r\n        });\r\n        chart.processAxis(this);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hideDataItem(dataItem) {\r\n        this._toggleDataItem(dataItem, false);\r\n        return super.hideDataItem(dataItem);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    showDataItem(dataItem) {\r\n        this._toggleDataItem(dataItem, true);\r\n        return super.showDataItem(dataItem);\r\n    }\r\n    _toggleDataItem(dataItem, visible) {\r\n        const label = dataItem.get(\"label\");\r\n        if (label) {\r\n            label.setPrivate(\"visible\", visible);\r\n        }\r\n        const grid = dataItem.get(\"grid\");\r\n        if (grid) {\r\n            grid.setPrivate(\"visible\", visible);\r\n        }\r\n        const tick = dataItem.get(\"tick\");\r\n        if (tick) {\r\n            tick.setPrivate(\"visible\", visible);\r\n        }\r\n        const axisFill = dataItem.get(\"axisFill\");\r\n        if (axisFill) {\r\n            axisFill.setPrivate(\"visible\", visible);\r\n        }\r\n        const bullet = dataItem.get(\"bullet\");\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite.setPrivate(\"visible\", visible);\r\n            }\r\n        }\r\n    }\r\n    _createAssets(dataItem, tags) {\r\n        const renderer = this.get(\"renderer\");\r\n        if (!dataItem.get(\"label\")) {\r\n            renderer.makeLabel(dataItem, tags);\r\n        }\r\n        if (!dataItem.get(\"grid\")) {\r\n            renderer.makeGrid(dataItem, tags);\r\n        }\r\n        if (!dataItem.get(\"tick\")) {\r\n            renderer.makeTick(dataItem, tags);\r\n        }\r\n        if (!dataItem.get(\"axisFill\")) {\r\n            renderer.makeAxisFill(dataItem, tags);\r\n        }\r\n        this._processBullet(dataItem);\r\n    }\r\n    _processBullet(dataItem) {\r\n        let bullet = dataItem.get(\"bullet\");\r\n        let axisBullet = this.get(\"bullet\");\r\n        if (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\r\n            bullet = axisBullet(this._root, this, dataItem);\r\n        }\r\n        if (bullet) {\r\n            bullet.axis = this;\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite._setDataItem(dataItem);\r\n                dataItem.setRaw(\"bullet\", bullet);\r\n                if (!sprite.parent) {\r\n                    this.bulletsContainer.children.push(sprite);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart._updateChartLayout();\r\n            chart.axisHeadersContainer.markDirtySize();\r\n        }\r\n        this.get(\"renderer\")._updatePositions();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        const renderer = this.get(\"renderer\");\r\n        const label = dataItem.get(\"label\");\r\n        if (label) {\r\n            renderer.labels.removeValue(label);\r\n            label.dispose();\r\n        }\r\n        const tick = dataItem.get(\"tick\");\r\n        if (tick) {\r\n            renderer.ticks.removeValue(tick);\r\n            tick.dispose();\r\n        }\r\n        const grid = dataItem.get(\"grid\");\r\n        if (grid) {\r\n            renderer.grid.removeValue(grid);\r\n            grid.dispose();\r\n        }\r\n        const axisFill = dataItem.get(\"axisFill\");\r\n        if (axisFill) {\r\n            renderer.axisFills.removeValue(axisFill);\r\n            axisFill.dispose();\r\n        }\r\n        const bullet = dataItem.get(\"bullet\");\r\n        if (bullet) {\r\n            bullet.dispose();\r\n        }\r\n    }\r\n    _updateGhost() {\r\n        this.setPrivate(\"cellWidth\", this.getCellWidthPosition() * this.get(\"renderer\").axisLength());\r\n        const ghostLabel = this.ghostLabel;\r\n        if (!ghostLabel.isHidden()) {\r\n            const bounds = ghostLabel.localBounds();\r\n            const gWidth = bounds.right - bounds.left;\r\n            let text = ghostLabel.get(\"text\");\r\n            $array.each(this.dataItems, (dataItem) => {\r\n                const label = dataItem.get(\"label\");\r\n                if (label && !label.isHidden()) {\r\n                    const bounds = label.localBounds();\r\n                    const w = bounds.right - bounds.left;\r\n                    if (w > gWidth) {\r\n                        text = label.text._getText();\r\n                    }\r\n                }\r\n            });\r\n            ghostLabel.set(\"text\", text);\r\n        }\r\n        let start = this.get(\"start\", 0);\r\n        let end = this.get(\"end\", 1);\r\n        this.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\r\n    }\r\n    _handleCursorPosition(position, snapToSeries) {\r\n        const renderer = this.get(\"renderer\");\r\n        position = renderer.toAxisPosition(position);\r\n        this._cursorPosition = position;\r\n        this._snapToSeries = snapToSeries;\r\n        this.updateTooltip();\r\n    }\r\n    /**\r\n     * Can be called when axis zoom changes and you need to update tooltip\r\n     * position.\r\n     */\r\n    updateTooltip() {\r\n        const snapToSeries = this._snapToSeries;\r\n        let position = this._cursorPosition;\r\n        const tooltip = this.get(\"tooltip\");\r\n        const renderer = this.get(\"renderer\");\r\n        if ($type.isNumber(position)) {\r\n            $array.each(this.series, (series) => {\r\n                if (series.get(\"baseAxis\") === this) {\r\n                    const dataItem = this.getSeriesItem(series, position, this.get(\"tooltipLocation\"));\r\n                    series.setRaw(\"tooltipDataItem\", dataItem);\r\n                    if (snapToSeries && snapToSeries.indexOf(series) != -1) {\r\n                        series.updateLegendMarker(dataItem);\r\n                        series.updateLegendValue(dataItem);\r\n                    }\r\n                    else {\r\n                        series.showDataItemTooltip(dataItem);\r\n                    }\r\n                }\r\n            });\r\n            if (tooltip) {\r\n                renderer.updateTooltipBounds(tooltip);\r\n                if (this.get(\"snapTooltip\")) {\r\n                    position = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\r\n                }\r\n                if (!$type.isNaN(position)) {\r\n                    this.setPrivateRaw(\"tooltipPosition\", position);\r\n                    this._updateTooltipText(tooltip, position);\r\n                    renderer.positionTooltip(tooltip, position);\r\n                    if (position < this.get(\"start\") || position > this.get(\"end\")) {\r\n                        tooltip.hide(0);\r\n                    }\r\n                    else {\r\n                        tooltip.show(0);\r\n                    }\r\n                }\r\n                else {\r\n                    tooltip.hide(0);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateTooltipText(tooltip, position) {\r\n        tooltip.label.set(\"text\", this.getTooltipText(position));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    roundAxisPosition(position, _location) {\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    handleCursorShow() {\r\n        let tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.show();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    handleCursorHide() {\r\n        let tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.hide();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processSeriesDataItem(_dataItem, _fields) {\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._sizeDirty = false;\r\n        this._rangesDirty = false;\r\n    }\r\n    /**\r\n     * Converts pixel coordinate to a relative position on axis.\r\n     *\r\n     * @param   coordinate  Coordinate\r\n     * @return              Relative position\r\n     */\r\n    coordinateToPosition(coordinate) {\r\n        const renderer = this.get(\"renderer\");\r\n        return renderer.toAxisPosition(coordinate / renderer.axisLength());\r\n    }\r\n    /**\r\n     * Converts relative position of the plot area to relative position of the\r\n     * axis with zoom taken into account.\r\n     *\r\n     * @param position Position\r\n     * @return Relative position\r\n     */\r\n    toAxisPosition(position) {\r\n        return this.get(\"renderer\").toAxisPosition(position);\r\n    }\r\n    /**\r\n     * Adjusts position with inversed taken into account.\r\n     *\r\n     * @ignore\r\n     */\r\n    fixPosition(position) {\r\n        return this.get(\"renderer\").fixPosition(position);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    shouldGap(_dataItem, _nextItem, _autoGapCount, _fieldName) {\r\n        return false;\r\n    }\r\n    /**\r\n     * Creates and returns an axis range object.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n     * @param   axisDataItem  Axis data item\r\n     * @return                Axis range\r\n     */\r\n    createAxisRange(axisDataItem) {\r\n        return this.axisRanges.push(axisDataItem);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _groupSeriesData(_series) { }\r\n    /**\r\n     * Returns relative position between two grid lines of the axis.\r\n     *\r\n     * @return Position\r\n     */\r\n    getCellWidthPosition() {\r\n        return 0.05;\r\n    }\r\n}\r\nObject.defineProperty(Axis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Axis\"\r\n});\r\nObject.defineProperty(Axis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Component.classNames.concat([Axis.className])\r\n});\r\n","import { AxisRenderer } from \"./AxisRenderer\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\n/**\r\n * Used to render horizontal axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n * @important\r\n */\r\nexport class AxisRendererX extends AxisRenderer {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Rectangle.new(this._root, { width: p100, isMeasured: false, themeTags: [\"axis\", \"x\", \"thumb\"] })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\r\n        super._afterNew();\r\n        this.setPrivateRaw(\"letter\", \"X\");\r\n        const gridTemplate = this.grid.template;\r\n        gridTemplate.set(\"height\", p100);\r\n        gridTemplate.set(\"width\", 0);\r\n        gridTemplate.set(\"draw\", (display, graphics) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(0, graphics.height());\r\n        });\r\n        this.set(\"draw\", (display, graphics) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(graphics.width(), 0);\r\n        });\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        const axis = this.axis;\r\n        axis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\r\n        axis.ghostLabel.set(\"x\", -1000);\r\n        const opposite = \"opposite\";\r\n        const inside = \"inside\";\r\n        if (this.isDirty(opposite) || this.isDirty(inside)) {\r\n            const chart = this.chart;\r\n            const axisChildren = axis.children;\r\n            if (this.get(inside)) {\r\n                axis.addTag(inside);\r\n            }\r\n            else {\r\n                axis.removeTag(inside);\r\n            }\r\n            if (chart) {\r\n                if (this.get(opposite)) {\r\n                    const children = chart.topAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.insertIndex(0, axis);\r\n                    }\r\n                    axis.addTag(opposite);\r\n                    axisChildren.moveValue(this);\r\n                }\r\n                else {\r\n                    const children = chart.bottomAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.moveValue(axis);\r\n                    }\r\n                    axis.removeTag(opposite);\r\n                    axisChildren.moveValue(this, 0);\r\n                }\r\n                axis.ghostLabel._applyThemes();\r\n                this.labels.each((label) => {\r\n                    label._applyThemes();\r\n                });\r\n                this.root._markDirtyRedraw();\r\n            }\r\n            axis.markDirtySize();\r\n        }\r\n        this.thumb.setPrivate(\"height\", axis.labelsContainer.height());\r\n    }\r\n    _getPan(point1, point2) {\r\n        return (point2.x - point1.x) / this.width();\r\n    }\r\n    toAxisPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        position -= this._ls;\r\n        position = position * (end - start) / this._lc;\r\n        if (!this.get(\"inversed\")) {\r\n            position = start + position;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        return position;\r\n    }\r\n    _updateLC() {\r\n        const axis = this.axis;\r\n        const parent = axis.parent;\r\n        if (parent) {\r\n            const w = parent.innerWidth();\r\n            this._lc = this.axisLength() / w;\r\n            this._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\r\n        }\r\n    }\r\n    _updatePositions() {\r\n        const axis = this.axis;\r\n        const x = axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent.get(\"paddingLeft\", 0);\r\n        axis.gridContainer.set(\"x\", x);\r\n        axis.topGridContainer.set(\"x\", x);\r\n        axis.bulletsContainer.set(\"y\", this.y());\r\n        const chart = axis.chart;\r\n        if (chart) {\r\n            const plotContainer = chart.plotContainer;\r\n            const axisHeader = axis.axisHeader;\r\n            let width = axis.get(\"marginLeft\", 0);\r\n            let x = axis.x() - width;\r\n            const parent = axis.parent;\r\n            if (parent) {\r\n                x -= parent.get(\"paddingLeft\", 0);\r\n            }\r\n            if (axisHeader.children.length > 0) {\r\n                width = axis.axisHeader.width();\r\n                axis.set(\"marginLeft\", width + 1);\r\n            }\r\n            else {\r\n                axisHeader.set(\"width\", width);\r\n            }\r\n            axisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processAxis() {\r\n        super.processAxis();\r\n        const axis = this.axis;\r\n        axis.set(\"width\", p100);\r\n        const verticalLayout = this._root.verticalLayout;\r\n        axis.set(\"layout\", verticalLayout);\r\n        axis.labelsContainer.set(\"width\", p100);\r\n        axis.axisHeader.setAll({ layout: verticalLayout });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    axisLength() {\r\n        return this.axis.width();\r\n    }\r\n    /**\r\n     * Converts axis relative position to actual coordinate in pixels.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Point\r\n     */\r\n    positionToPoint(position) {\r\n        return { x: this.positionToCoordinate(position), y: 0 };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTick(tick, position, endPosition, count) {\r\n        if (tick) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = tick.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = tick.get(\"location\", location);\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            tick.set(\"x\", this.positionToCoordinate(position));\r\n            let length = tick.get(\"length\", 0);\r\n            const inside = tick.get(\"inside\", this.get(\"inside\", false));\r\n            if (this.get(\"opposite\")) {\r\n                tick.set(\"y\", p100);\r\n                if (!inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            else {\r\n                tick.set(\"y\", 0);\r\n                if (inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            tick.set(\"draw\", (display) => {\r\n                display.moveTo(0, 0);\r\n                display.lineTo(0, length);\r\n            });\r\n            this.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLabel(label, position, endPosition, count) {\r\n        if (label) {\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = label.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = label.get(\"location\", location);\r\n            }\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            const inside = label.get(\"inside\", this.get(\"inside\", false));\r\n            const opposite = this.get(\"opposite\");\r\n            if (opposite) {\r\n                if (!inside) {\r\n                    label.set(\"position\", \"relative\");\r\n                    label.set(\"y\", p100);\r\n                }\r\n                else {\r\n                    label.set(\"position\", \"absolute\");\r\n                    label.set(\"y\", 0);\r\n                }\r\n            }\r\n            else {\r\n                if (!inside) {\r\n                    label.set(\"y\", undefined);\r\n                    label.set(\"position\", \"relative\");\r\n                }\r\n                else {\r\n                    label.set(\"y\", 0);\r\n                    label.set(\"position\", \"absolute\");\r\n                }\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            label.set(\"x\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateGrid(grid, position, endPosition) {\r\n        if (grid) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = grid.get(\"location\", 0.5);\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            grid.set(\"x\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(grid, position, 0, 1);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateBullet(bullet, position, endPosition) {\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                if (!$type.isNumber(position)) {\r\n                    position = 0;\r\n                }\r\n                let location = bullet.get(\"location\", 0.5);\r\n                if ($type.isNumber(endPosition) && endPosition != position) {\r\n                    position = position + (endPosition - position) * location;\r\n                }\r\n                let bulletPosition = this.axis.roundAxisPosition(position, location);\r\n                let previousBullet = this.axis._bullets[bulletPosition];\r\n                let d = -1;\r\n                if (this.get(\"opposite\")) {\r\n                    d = 1;\r\n                }\r\n                if (bullet.get(\"stacked\")) {\r\n                    if (previousBullet) {\r\n                        let previousSprite = previousBullet.get(\"sprite\");\r\n                        if (previousSprite) {\r\n                            sprite.set(\"y\", previousSprite.y() + previousSprite.height() * d);\r\n                        }\r\n                    }\r\n                    else {\r\n                        sprite.set(\"y\", 0);\r\n                    }\r\n                }\r\n                this.axis._bullets[bulletPosition] = bullet;\r\n                sprite.set(\"x\", this.positionToCoordinate(position));\r\n                this.toggleVisibility(sprite, position, 0, 1);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateFill(fill, position, endPosition) {\r\n        if (fill) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            if (!$type.isNumber(endPosition)) {\r\n                endPosition = 1;\r\n            }\r\n            let x0 = this.positionToCoordinate(position);\r\n            let x1 = this.positionToCoordinate(endPosition);\r\n            this.fillDrawMethod(fill, x0, x1);\r\n        }\r\n    }\r\n    fillDrawMethod(fill, x0, x1) {\r\n        fill.set(\"draw\", (display) => {\r\n            //display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\r\n            // using for holes, so can not be rectangle\r\n            const h = this.axis.gridContainer.height();\r\n            const w = this.width();\r\n            if (x1 < x0) {\r\n                [x1, x0] = [x0, x1];\r\n            }\r\n            if (x0 > w || x1 < 0) {\r\n                return;\r\n            }\r\n            /*\r\n            const limit = 10000;\r\n\r\n            x0 = Math.max(-limit, x0);\r\n            x1 = Math.min(limit, x1);\r\n            */\r\n            display.moveTo(x0, 0);\r\n            display.lineTo(x1, 0);\r\n            display.lineTo(x1, h);\r\n            display.lineTo(x0, h);\r\n            display.lineTo(x0, 0);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    positionTooltip(tooltip, position) {\r\n        this._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltipBounds(tooltip) {\r\n        const inside = this.get(\"inside\");\r\n        const num = 100000;\r\n        let global = this._display.toGlobal({ x: 0, y: 0 });\r\n        let x = global.x;\r\n        let y = 0;\r\n        let w = this.axisLength();\r\n        let h = num;\r\n        let pointerOrientation = \"up\";\r\n        if (this.get(\"opposite\")) {\r\n            if (inside) {\r\n                pointerOrientation = \"up\";\r\n                y = global.y;\r\n                h = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"down\";\r\n                y = global.y - num;\r\n                h = num;\r\n            }\r\n        }\r\n        else {\r\n            if (inside) {\r\n                pointerOrientation = \"down\";\r\n                y = global.y - num;\r\n                h = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"up\";\r\n                y = global.y;\r\n                h = num;\r\n            }\r\n        }\r\n        const bounds = { left: x, right: x + w, top: y, bottom: y + h };\r\n        const oldBounds = tooltip.get(\"bounds\");\r\n        if (!$utils.sameBounds(bounds, oldBounds)) {\r\n            tooltip.set(\"bounds\", bounds);\r\n            tooltip.set(\"pointerOrientation\", pointerOrientation);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(AxisRendererX, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisRendererX\"\r\n});\r\nObject.defineProperty(AxisRendererX, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: AxisRenderer.classNames.concat([AxisRendererX.className])\r\n});\r\n","import { AxisRenderer } from \"./AxisRenderer\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\n/**\r\n * Used to render vertical axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n * @important\r\n */\r\nexport class AxisRendererY extends AxisRenderer {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_downY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Rectangle.new(this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\"] })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\r\n        if (this._settings.opposite) {\r\n            this._settings.themeTags.push(\"opposite\");\r\n        }\r\n        super._afterNew();\r\n        this.setPrivateRaw(\"letter\", \"Y\");\r\n        const gridTemplate = this.grid.template;\r\n        gridTemplate.set(\"width\", p100);\r\n        gridTemplate.set(\"height\", 0);\r\n        gridTemplate.set(\"draw\", (display, graphics) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(graphics.width(), 0);\r\n        });\r\n        this.set(\"draw\", (display, renderer) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(0, renderer.height());\r\n        });\r\n    }\r\n    _getPan(point1, point2) {\r\n        return (point1.y - point2.y) / this.height();\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        const axis = this.axis;\r\n        axis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\r\n        axis.ghostLabel.set(\"y\", -1000);\r\n        const thumb = this.thumb;\r\n        const opposite = \"opposite\";\r\n        const inside = \"inside\";\r\n        const chart = this.chart;\r\n        if (this.isDirty(opposite) || this.isDirty(inside)) {\r\n            const axisChildren = axis.children;\r\n            if (this.get(inside)) {\r\n                axis.addTag(inside);\r\n            }\r\n            else {\r\n                axis.removeTag(inside);\r\n            }\r\n            if (chart) {\r\n                if (this.get(opposite)) {\r\n                    const children = chart.rightAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.moveValue(axis, 0);\r\n                    }\r\n                    axis.addTag(opposite);\r\n                    axisChildren.moveValue(this, 0);\r\n                }\r\n                else {\r\n                    const children = chart.leftAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.moveValue(axis);\r\n                    }\r\n                    axis.removeTag(opposite);\r\n                    axisChildren.moveValue(this);\r\n                }\r\n                axis.ghostLabel._applyThemes();\r\n                this.labels.each((label) => {\r\n                    label._applyThemes();\r\n                });\r\n                this.root._markDirtyRedraw();\r\n            }\r\n            axis.markDirtySize();\r\n        }\r\n        const w = axis.labelsContainer.width();\r\n        if (chart) {\r\n            if (this.get(opposite)) {\r\n                thumb.set(\"centerX\", 0);\r\n            }\r\n            else {\r\n                thumb.set(\"centerX\", w);\r\n            }\r\n        }\r\n        thumb.setPrivate(\"width\", w);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processAxis() {\r\n        super.processAxis();\r\n        const axis = this.axis;\r\n        if (axis.get(\"height\") == null) {\r\n            axis.set(\"height\", p100);\r\n        }\r\n        const horizontalLayout = this._root.horizontalLayout;\r\n        axis.set(\"layout\", horizontalLayout);\r\n        axis.labelsContainer.set(\"height\", p100);\r\n        axis.axisHeader.set(\"layout\", horizontalLayout);\r\n    }\r\n    _updatePositions() {\r\n        const axis = this.axis;\r\n        const y = axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height());\r\n        axis.gridContainer.set(\"y\", y);\r\n        axis.topGridContainer.set(\"y\", y);\r\n        axis.bulletsContainer.set(\"x\", this.x());\r\n        const chart = axis.chart;\r\n        if (chart) {\r\n            const plotContainer = chart.plotContainer;\r\n            const axisHeader = axis.axisHeader;\r\n            let height = axis.get(\"marginTop\", 0);\r\n            if (axisHeader.children.length > 0) {\r\n                height = axis.axisHeader.height();\r\n                axis.set(\"marginTop\", height + 1);\r\n            }\r\n            else {\r\n                axisHeader.set(\"height\", height);\r\n            }\r\n            axisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    axisLength() {\r\n        return this.axis.innerHeight();\r\n    }\r\n    /**\r\n     * Converts axis relative position to actual coordinate in pixels.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Point\r\n     */\r\n    positionToPoint(position) {\r\n        return { x: 0, y: this.positionToCoordinate(position) };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLabel(label, position, endPosition, count) {\r\n        if (label) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = label.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = label.get(\"location\", location);\r\n            }\r\n            const opposite = this.get(\"opposite\");\r\n            const inside = label.get(\"inside\", this.get(\"inside\", false));\r\n            if (opposite) {\r\n                label.set(\"x\", 0);\r\n                if (inside) {\r\n                    label.set(\"position\", \"absolute\");\r\n                }\r\n                else {\r\n                    label.set(\"position\", \"relative\");\r\n                }\r\n            }\r\n            else {\r\n                if (inside) {\r\n                    label.set(\"x\", 0);\r\n                    label.set(\"position\", \"absolute\");\r\n                }\r\n                else {\r\n                    label.set(\"x\", undefined);\r\n                    label.set(\"position\", \"relative\");\r\n                }\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            label.set(\"y\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateGrid(grid, position, endPosition) {\r\n        if (grid) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = grid.get(\"location\", 0.5);\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            grid.set(\"y\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(grid, position, 0, 1);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTick(tick, position, endPosition, count) {\r\n        if (tick) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = tick.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = tick.get(\"location\", location);\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            tick.set(\"y\", this.positionToCoordinate(position));\r\n            let length = tick.get(\"length\", 0);\r\n            const inside = tick.get(\"inside\", this.get(\"inside\", false));\r\n            if (this.get(\"opposite\")) {\r\n                tick.set(\"x\", 0);\r\n                if (inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            else {\r\n                if (!inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            tick.set(\"draw\", (display) => {\r\n                display.moveTo(0, 0);\r\n                display.lineTo(length, 0);\r\n            });\r\n            this.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateBullet(bullet, position, endPosition) {\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                if (!$type.isNumber(position)) {\r\n                    position = 0;\r\n                }\r\n                let location = bullet.get(\"location\", 0.5);\r\n                if ($type.isNumber(endPosition) && endPosition != position) {\r\n                    position = position + (endPosition - position) * location;\r\n                }\r\n                let bulletPosition = this.axis.roundAxisPosition(position, location);\r\n                let previousBullet = this.axis._bullets[bulletPosition];\r\n                let d = 1;\r\n                if (this.get(\"opposite\")) {\r\n                    d = -1;\r\n                }\r\n                if (bullet.get(\"stacked\")) {\r\n                    if (previousBullet) {\r\n                        let previousSprite = previousBullet.get(\"sprite\");\r\n                        if (previousSprite) {\r\n                            sprite.set(\"x\", previousSprite.x() + previousSprite.width() * d);\r\n                        }\r\n                    }\r\n                    else {\r\n                        sprite.set(\"x\", 0);\r\n                    }\r\n                }\r\n                this.axis._bullets[bulletPosition] = bullet;\r\n                sprite.set(\"y\", this.positionToCoordinate(position));\r\n                this.toggleVisibility(sprite, position, 0, 1);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateFill(fill, position, endPosition) {\r\n        if (fill) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            if (!$type.isNumber(endPosition)) {\r\n                endPosition = 1;\r\n            }\r\n            let y0 = this.positionToCoordinate(position);\r\n            let y1 = this.positionToCoordinate(endPosition);\r\n            this.fillDrawMethod(fill, y0, y1);\r\n        }\r\n    }\r\n    fillDrawMethod(fill, y0, y1) {\r\n        fill.set(\"draw\", (display) => {\r\n            // using for holes, so can not be rectangle\r\n            const w = this.axis.gridContainer.width();\r\n            const h = this.height();\r\n            if (y1 < y0) {\r\n                [y1, y0] = [y0, y1];\r\n            }\r\n            if (y0 > h || y1 < 0) {\r\n                return;\r\n            }\r\n            //y0 = Math.max(0, y0);\r\n            //y1 = Math.min(h, y1);\r\n            display.moveTo(0, y0);\r\n            display.lineTo(w, y0);\r\n            display.lineTo(w, y1);\r\n            display.lineTo(0, y1);\r\n            display.lineTo(0, y0);\r\n        });\r\n    }\r\n    /**\r\n     * Converts relative position (0-1) on axis to a pixel coordinate.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Coordinate (px)\r\n     */\r\n    positionToCoordinate(position) {\r\n        if (!this._inversed) {\r\n            return (this._end - position) * this._axisLength;\r\n        }\r\n        else {\r\n            return (position - this._start) * this._axisLength;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    positionTooltip(tooltip, position) {\r\n        this._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltipBounds(tooltip) {\r\n        const inside = this.get(\"inside\");\r\n        const num = 100000;\r\n        let global = this._display.toGlobal({ x: 0, y: 0 });\r\n        let y = global.y;\r\n        let x = 0;\r\n        let h = this.axisLength();\r\n        let w = num;\r\n        let pointerOrientation = \"right\";\r\n        if (this.get(\"opposite\")) {\r\n            if (inside) {\r\n                pointerOrientation = \"right\";\r\n                x = global.x - num;\r\n                w = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"left\";\r\n                x = global.x;\r\n                w = num;\r\n            }\r\n        }\r\n        else {\r\n            if (inside) {\r\n                pointerOrientation = \"left\";\r\n                x = global.x;\r\n                w = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"right\";\r\n                x = global.x - num;\r\n                w = num;\r\n            }\r\n        }\r\n        const bounds = { left: x, right: x + w, top: y, bottom: y + h };\r\n        const oldBounds = tooltip.get(\"bounds\");\r\n        if (!$utils.sameBounds(bounds, oldBounds)) {\r\n            tooltip.set(\"bounds\", bounds);\r\n            tooltip.set(\"pointerOrientation\", pointerOrientation);\r\n        }\r\n    }\r\n    _updateLC() {\r\n        const axis = this.axis;\r\n        const parent = axis.parent;\r\n        if (parent) {\r\n            const h = parent.innerHeight();\r\n            this._lc = this.axisLength() / h;\r\n            this._ls = axis.y() / h;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toAxisPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        position -= this._ls;\r\n        position = position * (end - start) / this._lc;\r\n        if (this.get(\"inversed\")) {\r\n            position = start + position;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fixPosition(position) {\r\n        if (!this.get(\"inversed\")) {\r\n            return 1 - position;\r\n        }\r\n        return position;\r\n    }\r\n}\r\nObject.defineProperty(AxisRendererY, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisRendererY\"\r\n});\r\nObject.defineProperty(AxisRendererY, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: AxisRenderer.classNames.concat([AxisRendererY.className])\r\n});\r\n","import { DataItem } from \"../../../core/render/Component\";\r\nimport { ValueAxis } from \"./ValueAxis\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $order from \"../../../core/util/Order\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $object from \"../../../core/util/Object\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport * as $time from \"../../../core/util/Time\";\r\n/**\r\n * Creates a date axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\r\n * @important\r\n */\r\nexport class DateAxis extends ValueAxis {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_dataGrouped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_seriesDataGrouped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_groupingCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_intervalDuration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_baseDuration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_intervalMax\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_intervalMin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\r\n        super._afterNew();\r\n        this._setBaseInterval(this.get(\"baseInterval\"));\r\n        this.on(\"baseInterval\", () => {\r\n            this._setBaseInterval(this.get(\"baseInterval\"));\r\n        });\r\n    }\r\n    _setBaseInterval(interval) {\r\n        this.setPrivateRaw(\"baseInterval\", interval);\r\n        this._baseDuration = $time.getIntervalDuration(interval);\r\n    }\r\n    _fixZoomFactor() {\r\n        const maxZoomFactor = this.get(\"maxZoomFactor\");\r\n        if (maxZoomFactor != null && maxZoomFactor != Infinity) {\r\n            this.setPrivateRaw(\"maxZoomFactor\", maxZoomFactor);\r\n        }\r\n        else {\r\n            this.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\r\n        }\r\n    }\r\n    _groupData() {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if (($type.isNumber(min) && $type.isNumber(max))) {\r\n            this._fixZoomFactor();\r\n            const groupInterval = this.getPrivate(\"groupInterval\");\r\n            if (groupInterval) {\r\n                this._setBaseInterval(groupInterval);\r\n            }\r\n            else {\r\n                this._setBaseInterval(this.get(\"baseInterval\"));\r\n            }\r\n            if (this.isDirty(\"groupInterval\")) {\r\n                let groupInterval = this.get(\"groupInterval\");\r\n                if (groupInterval) {\r\n                    this.setRaw(\"groupIntervals\", [groupInterval]);\r\n                }\r\n            }\r\n            if (this.isDirty(\"groupData\")) {\r\n                if (!this._dataGrouped) {\r\n                    if (this.get(\"groupData\")) {\r\n                        $array.each(this.series, (series) => {\r\n                            this._groupSeriesData(series);\r\n                        });\r\n                        this._handleRangeChange();\r\n                    }\r\n                    else {\r\n                        let baseInterval = this.get(\"baseInterval\");\r\n                        let mainDataSetId = baseInterval.timeUnit + baseInterval.count;\r\n                        $array.each(this.series, (series) => {\r\n                            series.setDataSet(mainDataSetId);\r\n                        });\r\n                        this._setBaseInterval(baseInterval);\r\n                        this.setPrivateRaw(\"groupInterval\", undefined);\r\n                        this.markDirtyExtremes();\r\n                    }\r\n                    this._dataGrouped = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _groupSeriesData(series) {\r\n        if (this.get(\"groupData\") && !series.get(\"groupDataDisabled\")) {\r\n            this._dataGrouped = true; // helps to avoid double grouping\r\n            this._seriesDataGrouped = true;\r\n            // make array of intervals which will be used;\r\n            let intervals = [];\r\n            let baseDuration = this.baseMainDuration();\r\n            let groupIntervals = this.get(\"groupIntervals\");\r\n            if (groupIntervals) { }\r\n            $array.each(groupIntervals, (interval) => {\r\n                let intervalDuration = $time.getIntervalDuration(interval);\r\n                if (intervalDuration > baseDuration) {\r\n                    intervals.push(interval);\r\n                }\r\n            });\r\n            series._dataSets = {};\r\n            const key = this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\");\r\n            let fields;\r\n            const baseAxis = series.get(\"baseAxis\");\r\n            if (series.get(\"xAxis\") === baseAxis) {\r\n                fields = series._valueYFields;\r\n            }\r\n            else if (series.get(\"yAxis\") === baseAxis) {\r\n                fields = series._valueXFields;\r\n            }\r\n            let dataItems = series._mainDataItems;\r\n            let baseInterval = this.get(\"baseInterval\");\r\n            let mainDataSetId = baseInterval.timeUnit + baseInterval.count;\r\n            series._dataSets[mainDataSetId] = dataItems;\r\n            const groupCallback = series.get(\"groupDataCallback\");\r\n            let groupOriginals = series.get(\"groupDataWithOriginals\", false);\r\n            if (groupCallback) {\r\n                groupOriginals = true;\r\n            }\r\n            const firstDay = this._root.locale.firstDayOfWeek;\r\n            const utc = this._root.utc;\r\n            const timezone = this._root.timezone;\r\n            $array.each(intervals, (interval) => {\r\n                let previousTime = -Infinity;\r\n                let dataSetId = interval.timeUnit + interval.count;\r\n                series._dataSets[dataSetId] = [];\r\n                let newDataItem;\r\n                let sum = {};\r\n                let count = {};\r\n                let groupFieldValues = {};\r\n                let workingFields = {};\r\n                $array.each(fields, (field) => {\r\n                    sum[field] = 0;\r\n                    count[field] = 0;\r\n                    groupFieldValues[field] = series.get((field + \"Grouped\"));\r\n                    workingFields[field] = field + \"Working\";\r\n                });\r\n                let intervalDuration = $time.getDuration(interval.timeUnit);\r\n                let firstItem = dataItems[0];\r\n                let firstDate;\r\n                if (firstItem) {\r\n                    firstDate = new Date(dataItems[0].get(key));\r\n                }\r\n                let prevNewDataItem;\r\n                $array.each(dataItems, (dataItem) => {\r\n                    let time = dataItem.get(key);\r\n                    let roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, firstDay, utc, firstDate, timezone).getTime();\r\n                    let dataContext;\r\n                    if (previousTime < roundedTime - intervalDuration / 24) {\r\n                        dataContext = $object.copy(dataItem.dataContext);\r\n                        newDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\r\n                        newDataItem.setRaw(key, roundedTime);\r\n                        series._dataSets[dataSetId].push(newDataItem);\r\n                        $array.each(fields, (field) => {\r\n                            let value = dataItem.get(field);\r\n                            if ($type.isNumber(value)) {\r\n                                newDataItem.setRaw(field, value);\r\n                                newDataItem.setRaw(workingFields[field], value);\r\n                                count[field] = 1;\r\n                                sum[field] = value;\r\n                            }\r\n                            else {\r\n                                sum[field] = 0;\r\n                                count[field] = 0;\r\n                            }\r\n                        });\r\n                        if (groupOriginals) {\r\n                            newDataItem.set(\"originals\", [dataItem]);\r\n                        }\r\n                        if (groupCallback && prevNewDataItem) {\r\n                            groupCallback(prevNewDataItem, interval);\r\n                        }\r\n                        prevNewDataItem = newDataItem;\r\n                    }\r\n                    else {\r\n                        $array.each(fields, (field) => {\r\n                            let groupKey = groupFieldValues[field];\r\n                            let value = dataItem.get(field);\r\n                            if (value !== undefined) {\r\n                                let currentValue = newDataItem.get(field);\r\n                                switch (groupKey) {\r\n                                    case \"close\":\r\n                                        newDataItem.setRaw(field, value);\r\n                                        break;\r\n                                    case \"sum\":\r\n                                        if (value != null) {\r\n                                            newDataItem.setRaw(field, currentValue + value);\r\n                                        }\r\n                                        break;\r\n                                    case \"open\":\r\n                                        break;\r\n                                    case \"low\":\r\n                                        if (value < currentValue) {\r\n                                            newDataItem.setRaw(field, value);\r\n                                        }\r\n                                        break;\r\n                                    case \"high\":\r\n                                        if (value > currentValue) {\r\n                                            newDataItem.setRaw(field, value);\r\n                                        }\r\n                                        break;\r\n                                    case \"average\":\r\n                                        count[field]++;\r\n                                        sum[field] += value;\r\n                                        let average = sum[field] / count[field];\r\n                                        newDataItem.setRaw(field, average);\r\n                                        break;\r\n                                    case \"extreme\":\r\n                                        if (Math.abs(value) > Math.abs(currentValue)) {\r\n                                            newDataItem.setRaw(field, value);\r\n                                        }\r\n                                        break;\r\n                                }\r\n                                newDataItem.setRaw(workingFields[field], newDataItem.get(field));\r\n                                let dataContext = $object.copy(dataItem.dataContext);\r\n                                dataContext[key] = roundedTime;\r\n                                newDataItem.dataContext = dataContext;\r\n                            }\r\n                        });\r\n                        if (groupOriginals) {\r\n                            newDataItem.get(\"originals\").push(dataItem);\r\n                        }\r\n                    }\r\n                    previousTime = roundedTime;\r\n                });\r\n                if (groupCallback && prevNewDataItem) {\r\n                    groupCallback(prevNewDataItem, interval);\r\n                }\r\n            });\r\n            if (series._dataSetId) {\r\n                series.setDataSet(series._dataSetId);\r\n            }\r\n            this.markDirtySize();\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._groupingCalculated = false;\r\n        this._dataGrouped = false;\r\n    }\r\n    /**\r\n     * Returns a time interval axis would group data to for a specified duration.\r\n     *\r\n     * @since 5.2.1\r\n     */\r\n    getGroupInterval(duration) {\r\n        let baseInterval = this.get(\"baseInterval\");\r\n        let groupInterval = $time.chooseInterval(0, duration, this.get(\"groupCount\", Infinity), this.get(\"groupIntervals\"));\r\n        if ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\r\n            groupInterval = Object.assign({}, baseInterval);\r\n        }\r\n        return groupInterval;\r\n    }\r\n    /**\r\n     * Return `max` of a specified time interval.\r\n     *\r\n     * Will work only if the axis was grouped to this interval at least once.\r\n     *\r\n     * @since 5.2.1\r\n     * @param   interval  Interval\r\n     * @return            Max\r\n     */\r\n    getIntervalMax(interval) {\r\n        return this._intervalMax[interval.timeUnit + interval.count];\r\n    }\r\n    /**\r\n     * Return `min` of a specified time interval.\r\n     *\r\n     * Will work only if the axis was grouped to this interval at least once.\r\n     *\r\n     * @since 5.2.1\r\n     * @param   interval  Interval\r\n     * @return            Min\r\n     */\r\n    getIntervalMin(interval) {\r\n        return this._intervalMin[interval.timeUnit + interval.count];\r\n    }\r\n    _handleRangeChange() {\r\n        super._handleRangeChange();\r\n        let selectionMin = Math.round(this.getPrivate(\"selectionMin\"));\r\n        let selectionMax = Math.round(this.getPrivate(\"selectionMax\"));\r\n        if ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\r\n            if (this.get(\"endLocation\") == 0) {\r\n                selectionMax += 1;\r\n            }\r\n            if (this.get(\"groupData\") && !this._groupingCalculated) {\r\n                this._groupingCalculated = true;\r\n                let modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\r\n                let groupInterval = this.get(\"groupInterval\");\r\n                if (!groupInterval) {\r\n                    groupInterval = this.getGroupInterval(modifiedDifference);\r\n                }\r\n                let current = this.getPrivate(\"groupInterval\");\r\n                if (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count) || this._seriesDataGrouped)) {\r\n                    this._seriesDataGrouped = false;\r\n                    this.setPrivateRaw(\"groupInterval\", groupInterval);\r\n                    this._setBaseInterval(groupInterval);\r\n                    let newId = groupInterval.timeUnit + groupInterval.count;\r\n                    $array.each(this.series, (series) => {\r\n                        if (series.get(\"baseAxis\") === this) {\r\n                            series.setDataSet(newId);\r\n                        }\r\n                    });\r\n                    this.markDirtyExtremes();\r\n                    this._root.events.once(\"frameended\", () => {\r\n                        this._root.events.once(\"frameended\", () => {\r\n                            const type = \"groupintervalchanged\";\r\n                            if (this.events.isEnabled(type)) {\r\n                                this.events.dispatch(type, { type: type, target: this });\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n            $array.each(this.series, (series) => {\r\n                if (series.get(\"baseAxis\") === this) {\r\n                    let fieldName = (this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\"));\r\n                    const start = $array.getSortedIndex(series.dataItems, (dataItem) => {\r\n                        return $order.compare(dataItem.get(fieldName), selectionMin);\r\n                    });\r\n                    let startIndex = start.index;\r\n                    if (startIndex > 0) {\r\n                        startIndex -= 1;\r\n                    }\r\n                    selectionMax += this.baseDuration() * (1 - this.get(\"endLocation\", 1));\r\n                    const end = $array.getSortedIndex(series.dataItems, (dataItem) => {\r\n                        return $order.compare(dataItem.get(fieldName), selectionMax);\r\n                    });\r\n                    let endIndex = end.index;\r\n                    let endIndex2 = endIndex;\r\n                    if (endIndex2 > 0) {\r\n                        endIndex2--;\r\n                    }\r\n                    const firstDataItem = series.dataItems[startIndex];\r\n                    const lastDataItem = series.dataItems[endIndex2];\r\n                    let lastDate;\r\n                    let firstDate;\r\n                    if (firstDataItem) {\r\n                        firstDate = firstDataItem.get(fieldName);\r\n                    }\r\n                    if (lastDataItem) {\r\n                        lastDate = lastDataItem.get(fieldName);\r\n                    }\r\n                    let outOfSelection = false;\r\n                    if (lastDate != null && firstDate != null) {\r\n                        if (lastDate < selectionMin || firstDate > selectionMax) {\r\n                            outOfSelection = true;\r\n                        }\r\n                    }\r\n                    series.setPrivate(\"outOfSelection\", outOfSelection);\r\n                    series.setPrivate(\"startIndex\", startIndex);\r\n                    series.setPrivate(\"endIndex\", endIndex);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _adjustMinMax(min, max, gridCount, _strictMode) {\r\n        return { min: min, max: max, step: (max - min) / gridCount };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    intervalDuration() {\r\n        return this._intervalDuration;\r\n    }\r\n    _saveMinMax(min, max) {\r\n        let groupInterval = this.getPrivate(\"groupInterval\");\r\n        if (!groupInterval) {\r\n            groupInterval = this.get(\"baseInterval\");\r\n        }\r\n        let id = groupInterval.timeUnit + groupInterval.count;\r\n        this._intervalMin[id] = min;\r\n        this._intervalMax[id] = max;\r\n    }\r\n    _getM(timeUnit) {\r\n        if (timeUnit == \"month\" || timeUnit == \"year\" || timeUnit == \"day\") {\r\n            return 1.05;\r\n        }\r\n        return 1.01;\r\n    }\r\n    _prepareAxisItems() {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            const selectionMin = Math.round(this.getPrivate(\"selectionMin\"));\r\n            const selectionMax = Math.round(this.getPrivate(\"selectionMax\"));\r\n            const renderer = this.get(\"renderer\");\r\n            const baseInterval = this.getPrivate(\"baseInterval\");\r\n            let value = selectionMin;\r\n            let i = 0;\r\n            const intervals = this.get(\"gridIntervals\");\r\n            let gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\r\n            if ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\r\n                gridInterval = Object.assign({}, baseInterval);\r\n            }\r\n            const intervalDuration = $time.getIntervalDuration(gridInterval);\r\n            this._intervalDuration = intervalDuration;\r\n            const nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\r\n            const firstDay = this._root.locale.firstDayOfWeek;\r\n            const utc = this._root.utc;\r\n            const timezone = this._root.timezone;\r\n            value = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, firstDay, utc, new Date(min), timezone).getTime();\r\n            let previousValue = value - intervalDuration;\r\n            let format;\r\n            const formats = this.get(\"dateFormats\");\r\n            this.setPrivateRaw(\"gridInterval\", gridInterval);\r\n            while (value < selectionMax + intervalDuration) {\r\n                let dataItem;\r\n                if (this.dataItems.length < i + 1) {\r\n                    dataItem = new DataItem(this, undefined, {});\r\n                    this._dataItems.push(dataItem);\r\n                    this.processDataItem(dataItem);\r\n                }\r\n                else {\r\n                    dataItem = this.dataItems[i];\r\n                }\r\n                this._createAssets(dataItem, []);\r\n                if (dataItem.isHidden()) {\r\n                    dataItem.show();\r\n                }\r\n                dataItem.setRaw(\"value\", value);\r\n                let endValue = value + $time.getDuration(gridInterval.timeUnit, gridInterval.count * this._getM(gridInterval.timeUnit));\r\n                endValue = $time.round(new Date(endValue), gridInterval.timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n                dataItem.setRaw(\"endValue\", endValue);\r\n                let date = new Date(value);\r\n                format = formats[gridInterval.timeUnit];\r\n                if (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\r\n                    if (gridInterval.timeUnit != \"year\") {\r\n                        if ($time.checkChange(value, previousValue, nextGridUnit, utc, timezone)) {\r\n                            format = this.get(\"periodChangeDateFormats\")[gridInterval.timeUnit];\r\n                        }\r\n                    }\r\n                }\r\n                const label = dataItem.get(\"label\");\r\n                if (label) {\r\n                    label.set(\"text\", this._root.dateFormatter.format(date, format));\r\n                }\r\n                this._prepareDataItem(dataItem, gridInterval.count);\r\n                previousValue = value;\r\n                value = endValue;\r\n                if (value == previousValue) {\r\n                    break;\r\n                }\r\n                i++;\r\n            }\r\n            for (let j = i; j < this.dataItems.length; j++) {\r\n                this.dataItems[j].hide();\r\n            }\r\n            $array.each(this.series, (series) => {\r\n                if (series.inited) {\r\n                    series._markDirtyAxes();\r\n                }\r\n            });\r\n        }\r\n        this._updateGhost();\r\n    }\r\n    _updateFinals(start, end) {\r\n        this.setPrivateRaw(\"selectionMinFinal\", this.positionToValue(start));\r\n        this.setPrivateRaw(\"selectionMaxFinal\", this.positionToValue(end));\r\n    }\r\n    _getDelta() {\r\n        this._deltaMinMax = this.baseDuration() / 2;\r\n    }\r\n    _fixMin(min) {\r\n        const baseInterval = this.getPrivate(\"baseInterval\");\r\n        const firstDay = this._root.locale.firstDayOfWeek;\r\n        const timezone = this._root.timezone;\r\n        const utc = this._root.utc;\r\n        const timeUnit = baseInterval.timeUnit;\r\n        let startTime = $time.round(new Date(min), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\r\n        let endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit));\r\n        endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n        return startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\r\n    }\r\n    _fixMax(max) {\r\n        const baseInterval = this.getPrivate(\"baseInterval\");\r\n        const firstDay = this._root.locale.firstDayOfWeek;\r\n        const timezone = this._root.timezone;\r\n        const utc = this._root.utc;\r\n        const timeUnit = baseInterval.timeUnit;\r\n        let startTime = $time.round(new Date(max), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\r\n        let endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit));\r\n        endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n        return startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\r\n    }\r\n    _updateDates(_date) {\r\n    }\r\n    /**\r\n     * Returns a duration of currently active `baseInterval` in milliseconds.\r\n     *\r\n     * @return Duration\r\n     */\r\n    baseDuration() {\r\n        return this._baseDuration;\r\n        //return $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\r\n    }\r\n    /**\r\n     * Returns a duration of user-defined `baseInterval` in milliseconds.\r\n     *\r\n     * @return Duration\r\n     */\r\n    baseMainDuration() {\r\n        return $time.getIntervalDuration(this.get(\"baseInterval\"));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processSeriesDataItem(dataItem, fields) {\r\n        const baseInterval = this.getPrivate(\"baseInterval\");\r\n        if (!dataItem.open) {\r\n            dataItem.open = {};\r\n        }\r\n        if (!dataItem.close) {\r\n            dataItem.close = {};\r\n        }\r\n        $array.each(fields, (field) => {\r\n            let value = dataItem.get(field);\r\n            if ($type.isNumber(value)) {\r\n                let startTime = dataItem.open[field];\r\n                let endTime = dataItem.close[field];\r\n                // this is done to save cpu, as rounding is quite expensive, especially with timezone set. \r\n                // if value is between prev start and end, it means it didn't change, all is fine.\r\n                if (value >= startTime && value <= endTime) {\r\n                }\r\n                else {\r\n                    const firstDay = this._root.locale.firstDayOfWeek;\r\n                    const utc = this._root.utc;\r\n                    const timezone = this._root.timezone;\r\n                    const timeUnit = baseInterval.timeUnit;\r\n                    const count = baseInterval.count;\r\n                    startTime = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\r\n                    endTime = startTime + $time.getDuration(timeUnit, count * this._getM(timeUnit));\r\n                    endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n                    dataItem.open[field] = startTime;\r\n                    dataItem.close[field] = endTime;\r\n                }\r\n                this._updateDates(startTime);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionX(dataItem, field, cellLocation, axisLocation) {\r\n        let openValue;\r\n        let closeValue;\r\n        if (dataItem.open && dataItem.close) {\r\n            openValue = dataItem.open[field];\r\n            closeValue = dataItem.close[field];\r\n        }\r\n        else {\r\n            openValue = dataItem.get(field);\r\n            closeValue = openValue;\r\n        }\r\n        let value = openValue + (closeValue - openValue) * cellLocation;\r\n        value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n        return this.valueToPosition(value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateX(dataItem, field, cellLocation, axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionY(dataItem, field, cellLocation, axisLocation) {\r\n        let openValue;\r\n        let closeValue;\r\n        if (dataItem.open && dataItem.close) {\r\n            openValue = dataItem.open[field];\r\n            closeValue = dataItem.close[field];\r\n        }\r\n        else {\r\n            openValue = dataItem.get(field);\r\n            closeValue = openValue;\r\n        }\r\n        let value = openValue + (closeValue - openValue) * cellLocation;\r\n        value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n        return this.valueToPosition(value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateY(dataItem, field, cellLocation, axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    roundAxisPosition(position, location) {\r\n        let value = this.positionToValue(position);\r\n        value = value - (location - 0.5) * this.baseDuration();\r\n        let baseInterval = this.getPrivate(\"baseInterval\");\r\n        if (!$type.isNaN(value)) {\r\n            const firstDay = this._root.locale.firstDayOfWeek;\r\n            const timeUnit = baseInterval.timeUnit;\r\n            const utc = this._root.utc;\r\n            const timezone = this._root.timezone;\r\n            const count = baseInterval.count;\r\n            value = $time.round(new Date(value), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\r\n            let duration = $time.getDateIntervalDuration(baseInterval, new Date(value), firstDay, utc, timezone);\r\n            if (timezone) {\r\n                value = $time.round(new Date(value + this.baseDuration() * 0.05), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\r\n                duration = $time.getDateIntervalDuration(baseInterval, new Date(value + duration * location), firstDay, utc, timezone);\r\n            }\r\n            return this.valueToPosition(value + duration * location);\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Returns text to be used in an axis tooltip for specific relative position.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Tooltip text\r\n     */\r\n    getTooltipText(position) {\r\n        //@todo number formatter + tag\r\n        if (this.getPrivate(\"min\") != null) {\r\n            let format = this.get(\"tooltipDateFormats\")[this.getPrivate(\"baseInterval\").timeUnit];\r\n            let value = this.positionToValue(position);\r\n            let date = new Date(value);\r\n            let baseInterval = this.getPrivate(\"baseInterval\");\r\n            let duration = $time.getDateIntervalDuration(baseInterval, date, this._root.locale.firstDayOfWeek, this._root.utc, this._root.timezone);\r\n            return this._root.dateFormatter.format(new Date(value + this.get(\"tooltipIntervalOffset\", -this.get(\"tooltipLocation\", 0.5)) * duration), this.get(\"tooltipDateFormat\", format));\r\n        }\r\n        return \"\";\r\n    }\r\n    /**\r\n     * Returns a data item from series that is closest to the `position`.\r\n     *\r\n     * @param   series    Series\r\n     * @param   position  Relative position\r\n     * @return            Data item\r\n     */\r\n    getSeriesItem(series, position, location) {\r\n        let fieldName = (this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\"));\r\n        let value = this.positionToValue(position);\r\n        if (location == null) {\r\n            location = 0.5;\r\n        }\r\n        value = value - (location - 0.5) * this.baseDuration();\r\n        const result = $array.getSortedIndex(series.dataItems, (dataItem) => {\r\n            let diValue = 0;\r\n            if (dataItem.open) {\r\n                diValue = dataItem.open[fieldName];\r\n            }\r\n            return $order.compare(diValue, value);\r\n        });\r\n        if (series.get(\"snapTooltip\")) {\r\n            let first = series.dataItems[result.index - 1];\r\n            let second = series.dataItems[result.index];\r\n            if (first && second) {\r\n                if (first.open && second.close) {\r\n                    let open = first.open[fieldName];\r\n                    let close = second.close[fieldName];\r\n                    if (Math.abs(value - open) > Math.abs(value - close)) {\r\n                        return second;\r\n                    }\r\n                }\r\n            }\r\n            if (first) {\r\n                return first;\r\n            }\r\n            if (second) {\r\n                return second;\r\n            }\r\n        }\r\n        else {\r\n            // @todo check if is in range\r\n            const dataItem = series.dataItems[result.index - 1];\r\n            if (dataItem) {\r\n                if (dataItem.open && dataItem.close) {\r\n                    let open = dataItem.open[fieldName];\r\n                    let close = dataItem.close[fieldName];\r\n                    if (value >= open && value <= close) {\r\n                        return dataItem;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    shouldGap(dataItem, nextItem, autoGapCount, fieldName) {\r\n        const value1 = dataItem.get(fieldName);\r\n        const value2 = nextItem.get(fieldName);\r\n        if (value2 - value1 > this.baseDuration() * autoGapCount) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Zooms the axis to specific `start` and `end` dates.\r\n     *\r\n     * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n     *\r\n     * @param  start     Start Date\r\n     * @param  end       End Date\r\n     * @param  duration  Duration in milliseconds\r\n     */\r\n    zoomToDates(start, end, duration) {\r\n        this.zoomToValues(start.getTime(), end.getTime(), duration);\r\n    }\r\n    /**\r\n     * Returns a `Date` object corresponding to specific position within plot\r\n     * area.\r\n     *\r\n     * @param   position  Pposition\r\n     * @return            Date\r\n     */\r\n    positionToDate(position) {\r\n        return new Date(this.positionToValue(position));\r\n    }\r\n    /**\r\n     * Returns a relative position within plot area that corresponds to specific\r\n     * date.\r\n     *\r\n     * @param   date  Date\r\n     * @return        Position\r\n     */\r\n    dateToPosition(date) {\r\n        return this.valueToPosition(date.getTime());\r\n    }\r\n    /**\r\n     * Returns relative position between two grid lines of the axis.\r\n     *\r\n     * @since 5.2.30\r\n     * @return Position\r\n     */\r\n    getCellWidthPosition() {\r\n        let max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\r\n        let min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\r\n        if ($type.isNumber(max) && $type.isNumber(min)) {\r\n            return this._intervalDuration / (max - min);\r\n        }\r\n        return 0.05;\r\n    }\r\n}\r\nObject.defineProperty(DateAxis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"DateAxis\"\r\n});\r\nObject.defineProperty(DateAxis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: ValueAxis.classNames.concat([DateAxis.className])\r\n});\r\n","import { DateAxis } from \"./DateAxis\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $order from \"../../../core/util/Order\";\r\nimport * as $time from \"../../../core/util/Time\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $math from \"../../../core/util/Math\";\r\n/**\r\n * A version of a [[DateAxis]] which removes intervals that don't have any data\r\n * items in them.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/gapless-date-axis/} for more info\r\n * @important\r\n */\r\nexport class GaplessDateAxis extends DateAxis {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_frequency\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_dates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.valueFields.push(\"date\");\r\n        super._afterNew();\r\n    }\r\n    _updateDates(date) {\r\n        const dates = this._dates;\r\n        const result = $array.getSortedIndex(dates, (x) => $order.compare(x, date));\r\n        if (!result.found) {\r\n            $array.insertIndex(dates, result.index, date);\r\n        }\r\n    }\r\n    _updateAllDates() {\r\n        this._dates.length = 0;\r\n        $array.each(this.series, (series) => {\r\n            let field = \"valueX\";\r\n            if (series.get(\"yAxis\") == this) {\r\n                field = \"valueY\";\r\n            }\r\n            $array.each(series.dataItems, (dataItem) => {\r\n                let value = dataItem.get(field);\r\n                if ($type.isNumber(value)) {\r\n                    if (dataItem.open) {\r\n                        this._updateDates(dataItem.open[field]);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Convers value to a relative position on axis.\r\n     *\r\n     * @param   value  Value\r\n     * @return         Relative position\r\n     */\r\n    valueToPosition(value) {\r\n        const dates = this._dates;\r\n        const startLocation = this.get(\"startLocation\", 0);\r\n        const endLocation = this.get(\"endLocation\", 1);\r\n        const len = dates.length - startLocation - (1 - endLocation);\r\n        const result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n        let index = result.index;\r\n        if (result.found) {\r\n            return (index - startLocation) / len;\r\n        }\r\n        else {\r\n            if (index > 0) {\r\n                index -= 1;\r\n            }\r\n            let itemValue = dates[index];\r\n            let d = 0;\r\n            if (itemValue > value) {\r\n                d = itemValue - value;\r\n            }\r\n            else {\r\n                d = value - itemValue;\r\n            }\r\n            return (index - startLocation) / len + d / this.baseDuration() / len;\r\n        }\r\n    }\r\n    /**\r\n     * Converts numeric value from axis scale to index.\r\n     *\r\n     * @param  value  Value\r\n     * @return        Index\r\n     */\r\n    valueToIndex(value) {\r\n        const dates = this._dates;\r\n        const result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n        let index = result.index;\r\n        if (result.found) {\r\n            return index;\r\n        }\r\n        else {\r\n            if (index > 0) {\r\n                index -= 1;\r\n            }\r\n            return index;\r\n        }\r\n    }\r\n    /**\r\n     * Converts a relative position to a corresponding numeric value from axis\r\n     * scale.\r\n     *\r\n     * @param   position  Relative position\r\n     * @return            Value\r\n     */\r\n    positionToValue(position) {\r\n        const startLocation = this.get(\"startLocation\", 0);\r\n        const endLocation = this.get(\"endLocation\", 1);\r\n        let len = Math.round(this._dates.length - startLocation - (1 - endLocation));\r\n        let index = position * len;\r\n        let findex = Math.floor(index);\r\n        if (findex < 0) {\r\n            findex = 0;\r\n        }\r\n        if (findex > len - 1) {\r\n            findex = len - 1;\r\n        }\r\n        return this._dates[findex] + (index - findex + startLocation) * this.baseDuration();\r\n    }\r\n    _fixZoomFactor() {\r\n        this.setPrivateRaw(\"maxZoomFactor\", this._dates.length - this.get(\"startLocation\", 0) - (1 - this.get(\"endLocation\", 1)));\r\n    }\r\n    /**\r\n     * Zooms the axis to specific `start` and `end` values.\r\n     *\r\n     * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n     *\r\n     * @param  start     Start value\r\n     * @param  end       End value\r\n     * @param  duration  Duration in milliseconds\r\n     */\r\n    zoomToValues(start, end, duration) {\r\n        const min = this.getPrivate(\"min\", 0);\r\n        const max = this.getPrivate(\"max\", 0);\r\n        start = $math.fitToRange(start, min, max);\r\n        end = $math.fitToRange(end, min, max);\r\n        this.zoom(this.valueToPosition(start), this.valueToPosition(end), duration);\r\n    }\r\n    _prepareAxisItems() {\r\n        let startTime = this.getPrivate(\"selectionMin\", 0);\r\n        let endTime = this.getPrivate(\"selectionMax\", 0);\r\n        if ($type.isNumber(startTime) && $type.isNumber(endTime)) {\r\n            if (this._seriesValuesDirty) {\r\n                this._seriesValuesDirty = false;\r\n                this._updateAllDates();\r\n            }\r\n            const dates = this._dates;\r\n            const renderer = this.get(\"renderer\");\r\n            const len = dates.length;\r\n            let startIndex = this.valueToIndex(startTime);\r\n            if (startIndex > 0) {\r\n                startIndex--;\r\n            }\r\n            let endIndex = this.valueToIndex(endTime);\r\n            if (endIndex < len - 1) {\r\n                endIndex++;\r\n            }\r\n            let maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\"), 1 / Number.MAX_SAFE_INTEGER);\r\n            let frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\r\n            frequency = Math.max(1, frequency);\r\n            startIndex = Math.floor(startIndex / frequency) * frequency;\r\n            this._frequency = frequency;\r\n            for (let j = 0, length = this.dataItems.length; j < length; j++) {\r\n                this.dataItems[j].hide();\r\n            }\r\n            let realDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\r\n            // if all items are on axis\r\n            let gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\"));\r\n            const baseInterval = this.getPrivate(\"baseInterval\");\r\n            let intervalDuration = $time.getIntervalDuration(gridInterval);\r\n            if (intervalDuration < this.baseDuration()) {\r\n                gridInterval = Object.assign({}, baseInterval);\r\n                intervalDuration = $time.getIntervalDuration(gridInterval);\r\n            }\r\n            this._intervalDuration = intervalDuration;\r\n            const formats = this.get(\"dateFormats\");\r\n            let selectedItems = [];\r\n            let firstDate = new Date();\r\n            if (this._dates[0]) {\r\n                firstDate = new Date(this._dates[0]);\r\n            }\r\n            let startDate = $time.round(new Date(this.getPrivate(\"min\", 0)), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, firstDate, this._root.timezone);\r\n            let value = $time.add(startDate, gridInterval.timeUnit, -1, this._root.utc, this._root.timezone).getTime();\r\n            let selectionMax = this.getPrivate(\"selectionMax\");\r\n            let previousPosition = -Infinity;\r\n            let minDifference = (this.get(\"end\", 1) - this.get(\"start\", 0)) / maxCount;\r\n            while (value <= selectionMax) {\r\n                let index = this.valueToIndex(value);\r\n                let realValue = this._dates[index];\r\n                if (realValue < value) {\r\n                    for (let i = index, len = this._dates.length; i < len; i++) {\r\n                        let realValue = this._dates[i];\r\n                        if (realValue >= value) {\r\n                            index = i;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                let position = this.valueToPosition(realValue);\r\n                if (position - previousPosition >= minDifference * 0.95) {\r\n                    $array.move(selectedItems, index);\r\n                    previousPosition = position;\r\n                }\r\n                let previousValue = value;\r\n                value += $time.getDuration(gridInterval.timeUnit, gridInterval.count * this._getM(gridInterval.timeUnit));\r\n                value = $time.round(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n                if (value == previousValue) {\r\n                    break;\r\n                }\r\n            }\r\n            if (selectedItems.length > 0) {\r\n                let i = 0;\r\n                let previousValue = value - intervalDuration * 10;\r\n                const nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\r\n                $array.each(selectedItems, (index) => {\r\n                    let dataItem;\r\n                    if (this.dataItems.length < i + 1) {\r\n                        dataItem = new DataItem(this, undefined, {});\r\n                        this._dataItems.push(dataItem);\r\n                        this.processDataItem(dataItem);\r\n                    }\r\n                    else {\r\n                        dataItem = this.dataItems[i];\r\n                    }\r\n                    let value = dates[index];\r\n                    let date = new Date(value);\r\n                    let endValue = value;\r\n                    if (i < selectedItems.length - 1) {\r\n                        endValue = dates[selectedItems[i + 1]];\r\n                    }\r\n                    else {\r\n                        endValue += intervalDuration;\r\n                    }\r\n                    dataItem.setRaw(\"value\", value);\r\n                    dataItem.setRaw(\"endValue\", endValue);\r\n                    dataItem.setRaw(\"index\", i);\r\n                    if (index > startIndex - 100 && index < endIndex + 100) {\r\n                        let format = formats[gridInterval.timeUnit];\r\n                        format = formats[gridInterval.timeUnit];\r\n                        if (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\r\n                            if (gridInterval.timeUnit != \"year\") {\r\n                                if ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\r\n                                    format = this.get(\"periodChangeDateFormats\")[gridInterval.timeUnit];\r\n                                }\r\n                            }\r\n                        }\r\n                        this._createAssets(dataItem, []);\r\n                        const label = dataItem.get(\"label\");\r\n                        if (label) {\r\n                            label.set(\"text\", this._root.dateFormatter.format(date, format));\r\n                        }\r\n                        if (dataItem.isHidden()) {\r\n                            dataItem.show();\r\n                        }\r\n                        this._prepareDataItem(dataItem, gridInterval.count);\r\n                    }\r\n                    i++;\r\n                    previousValue = value;\r\n                });\r\n            }\r\n            $array.each(this.series, (series) => {\r\n                if (series.inited) {\r\n                    series._markDirtyAxes();\r\n                }\r\n            });\r\n        }\r\n        this._updateGhost();\r\n    }\r\n}\r\nObject.defineProperty(GaplessDateAxis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"GaplessDateAxis\"\r\n});\r\nObject.defineProperty(GaplessDateAxis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: DateAxis.classNames.concat([GaplessDateAxis.className])\r\n});\r\n","import { DataItem } from \"../../../core/render/Component\";\r\nimport { Axis } from \"./Axis\";\r\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $math from \"../../../core/util/Math\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * Creates a value axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\r\n * @important\r\n */\r\nexport class ValueAxis extends Axis {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_dirtyExtremes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dirtySelectionExtremes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_deltaMinMax\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_minReal\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_maxReal\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_baseValue\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_syncDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_minLogAdjusted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyExtremes() {\r\n        this._dirtyExtremes = true;\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySelectionExtremes() {\r\n        this._dirtySelectionExtremes = true;\r\n        this.markDirty();\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\r\n        this.setPrivateRaw(\"name\", \"value\");\r\n        this.addTag(\"value\");\r\n        super._afterNew();\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"syncWithAxis\")) {\r\n            let previousValue = this._prevSettings.syncWithAxis;\r\n            if (previousValue) {\r\n                if (this._syncDp) {\r\n                    this._syncDp.dispose();\r\n                }\r\n            }\r\n            let syncWithAxis = this.get(\"syncWithAxis\");\r\n            if (syncWithAxis) {\r\n                this._syncDp = new MultiDisposer([\r\n                    syncWithAxis.onPrivate(\"selectionMinFinal\", () => {\r\n                        this._dirtySelectionExtremes = true;\r\n                    }),\r\n                    syncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\r\n                        this._dirtySelectionExtremes = true;\r\n                    })\r\n                ]);\r\n            }\r\n        }\r\n        //if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\r\n        if (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\r\n            this._getMinMax();\r\n            this.ghostLabel.set(\"text\", \"\");\r\n            this._dirtyExtremes = false;\r\n        }\r\n        if (this._dirtySelectionExtremes && !this._isPanning && this.get(\"autoZoom\", true)) {\r\n            this._getSelectionMinMax();\r\n            this._dirtySelectionExtremes = false;\r\n        }\r\n        this._groupData();\r\n        if (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\r\n            this._handleRangeChange();\r\n            this._prepareAxisItems();\r\n            this._updateAxisRanges();\r\n        }\r\n        this._baseValue = this.baseValue();\r\n    }\r\n    _groupData() {\r\n    }\r\n    _formatText(value) {\r\n        const numberFormat = this.get(\"numberFormat\");\r\n        const formatter = this.getNumberFormatter();\r\n        let text = \"\";\r\n        if (numberFormat) {\r\n            text = formatter.format(value, numberFormat);\r\n        }\r\n        else {\r\n            text = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\r\n        }\r\n        return text;\r\n    }\r\n    _prepareAxisItems() {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            const logarithmic = this.get(\"logarithmic\");\r\n            const step = this.getPrivate(\"step\");\r\n            const selectionMin = this.getPrivate(\"selectionMin\");\r\n            const selectionMax = this.getPrivate(\"selectionMax\") + step;\r\n            let value = selectionMin - step;\r\n            let i = 0;\r\n            let differencePower = 1;\r\n            let minLog = min;\r\n            if (logarithmic) {\r\n                value = this._minLogAdjusted;\r\n                if (value < selectionMin) {\r\n                    while (value < selectionMin) {\r\n                        value += step;\r\n                    }\r\n                }\r\n                minLog = value;\r\n                if (minLog <= 0) {\r\n                    minLog = 1;\r\n                    if (step < 1) {\r\n                        minLog = step;\r\n                    }\r\n                }\r\n                differencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\r\n                if (differencePower > 2) {\r\n                    value = Math.pow(10, Math.log(minLog) * Math.LOG10E - 5);\r\n                }\r\n            }\r\n            let previous = -Infinity;\r\n            while (value < selectionMax) {\r\n                let dataItem;\r\n                if (this.dataItems.length < i + 1) {\r\n                    dataItem = new DataItem(this, undefined, {});\r\n                    this._dataItems.push(dataItem);\r\n                    this.processDataItem(dataItem);\r\n                }\r\n                else {\r\n                    dataItem = this.dataItems[i];\r\n                }\r\n                this._createAssets(dataItem, []);\r\n                if (dataItem.isHidden()) {\r\n                    dataItem.show();\r\n                }\r\n                dataItem.setRaw(\"value\", value);\r\n                const label = dataItem.get(\"label\");\r\n                if (label) {\r\n                    label.set(\"text\", this._formatText(value));\r\n                }\r\n                this._prepareDataItem(dataItem);\r\n                if (!logarithmic) {\r\n                    value += step;\r\n                }\r\n                else {\r\n                    if (differencePower > 2) {\r\n                        value = Math.pow(10, Math.log(minLog) * Math.LOG10E + i - 5);\r\n                    }\r\n                    else {\r\n                        value += step;\r\n                    }\r\n                }\r\n                if (previous == value) {\r\n                    break;\r\n                }\r\n                let stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n                if (stepPower < 1) {\r\n                    // exponent is less then 1 too. Count decimals of exponent\r\n                    let decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\r\n                    // round value to avoid floating point issues\r\n                    value = $math.round(value, decCount);\r\n                }\r\n                i++;\r\n                previous = value;\r\n            }\r\n            for (let j = i; j < this.dataItems.length; j++) {\r\n                this.dataItems[j].hide();\r\n            }\r\n            $array.each(this.series, (series) => {\r\n                if (series.inited) {\r\n                    series._markDirtyAxes();\r\n                }\r\n            });\r\n            this._updateGhost();\r\n        }\r\n    }\r\n    _prepareDataItem(dataItem, count) {\r\n        let renderer = this.get(\"renderer\");\r\n        let value = dataItem.get(\"value\");\r\n        let endValue = dataItem.get(\"endValue\");\r\n        let position = this.valueToPosition(value);\r\n        let endPosition = position;\r\n        let fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\"));\r\n        if ($type.isNumber(endValue)) {\r\n            endPosition = this.valueToPosition(endValue);\r\n            fillEndPosition = endPosition;\r\n        }\r\n        if (dataItem.get(\"isRange\")) {\r\n            if (endValue == null) {\r\n                fillEndPosition = position;\r\n            }\r\n        }\r\n        renderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\r\n        const grid = dataItem.get(\"grid\");\r\n        renderer.updateGrid(grid, position, endPosition);\r\n        if (grid) {\r\n            if (value == this.get(\"baseValue\", 0)) {\r\n                grid.addTag(\"base\");\r\n                grid._applyThemes();\r\n            }\r\n            else if (grid.hasTag(\"base\")) {\r\n                grid.removeTag(\"base\");\r\n                grid._applyThemes();\r\n            }\r\n        }\r\n        renderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\r\n        renderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\r\n        this._processBullet(dataItem);\r\n        renderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\r\n        if (!dataItem.get(\"isRange\")) {\r\n            const fillRule = this.get(\"fillRule\");\r\n            if (fillRule) {\r\n                fillRule(dataItem);\r\n            }\r\n        }\r\n    }\r\n    _handleRangeChange() {\r\n        let selectionMin = this.positionToValue(this.get(\"start\", 0));\r\n        let selectionMax = this.positionToValue(this.get(\"end\", 1));\r\n        const gridCount = this.get(\"renderer\").gridCount();\r\n        let minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\r\n        let stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\r\n        this.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\r\n        selectionMin = $math.round(selectionMin, stepDecimalPlaces);\r\n        selectionMax = $math.round(selectionMax, stepDecimalPlaces);\r\n        minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\r\n        let step = minMaxStep.step;\r\n        selectionMin = minMaxStep.min;\r\n        selectionMax = minMaxStep.max;\r\n        if (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\r\n            // do not change to setPrivate, will cause SO\r\n            this.setPrivateRaw(\"selectionMin\", selectionMin);\r\n            this.setPrivateRaw(\"selectionMax\", selectionMax);\r\n            this.setPrivateRaw(\"step\", step);\r\n        }\r\n    }\r\n    /**\r\n     * Converts a relative position to a corresponding numeric value from axis\r\n     * scale.\r\n     *\r\n     * @param   position  Relative position\r\n     * @return            Value\r\n     */\r\n    positionToValue(position) {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if (!this.get(\"logarithmic\")) {\r\n            return position * (max - min) + min;\r\n        }\r\n        else {\r\n            return Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\r\n        }\r\n    }\r\n    /**\r\n     * Convers value to a relative position on axis.\r\n     *\r\n     * @param   value  Value\r\n     * @return         Relative position\r\n     */\r\n    valueToPosition(value) {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if (!this.get(\"logarithmic\")) {\r\n            return (value - min) / (max - min);\r\n        }\r\n        else {\r\n            if (value <= 0) {\r\n                let treatZeroAs = this.get(\"treatZeroAs\");\r\n                if ($type.isNumber(treatZeroAs)) {\r\n                    value = treatZeroAs;\r\n                }\r\n            }\r\n            return (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    valueToFinalPosition(value) {\r\n        const min = this.getPrivate(\"minFinal\");\r\n        const max = this.getPrivate(\"maxFinal\");\r\n        if (!this.get(\"logarithmic\")) {\r\n            return (value - min) / (max - min);\r\n        }\r\n        else {\r\n            if (value <= 0) {\r\n                let treatZeroAs = this.get(\"treatZeroAs\");\r\n                if ($type.isNumber(treatZeroAs)) {\r\n                    value = treatZeroAs;\r\n                }\r\n            }\r\n            return (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\r\n        }\r\n    }\r\n    /**\r\n     * Returns X coordinate in pixels corresponding to specific value.\r\n     *\r\n     * @param   value     Numeric value\r\n     * @param   location  Location\r\n     * @param   baseValue Base value\r\n     * @return            X coordinate\r\n     */\r\n    getX(value, location, baseValue) {\r\n        value = baseValue + (value - baseValue) * location;\r\n        const position = this.valueToPosition(value);\r\n        return this._settings.renderer.positionToCoordinate(position);\r\n    }\r\n    /**\r\n     * Returns X coordinate in pixels corresponding to specific value.\r\n     *\r\n     * @param   value     Numeric value\r\n     * @param   location  Location\r\n     * @param   baseValue Base value\r\n     * @return            X coordinate\r\n     */\r\n    getY(value, location, baseValue) {\r\n        value = baseValue + (value - baseValue) * location;\r\n        const position = this.valueToPosition(value);\r\n        return this._settings.renderer.positionToCoordinate(position);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateX(dataItem, field, _cellLocation, axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionX(dataItem, field, _cellLocation, axisLocation) {\r\n        let value = dataItem.get(field);\r\n        const stackToItem = dataItem.get(\"stackToItemX\");\r\n        if (stackToItem) {\r\n            const series = dataItem.component;\r\n            value = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\r\n        }\r\n        else {\r\n            value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n        }\r\n        return this.valueToPosition(value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateY(dataItem, field, _cellLocation, axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionY(dataItem, field, _cellLocation, axisLocation) {\r\n        let value = dataItem.get(field);\r\n        const stackToItem = dataItem.get(\"stackToItemY\");\r\n        if (stackToItem) {\r\n            const series = dataItem.component;\r\n            value = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\r\n        }\r\n        else {\r\n            value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n        }\r\n        return this.valueToPosition(value);\r\n    }\r\n    /**\r\n     * Returns relative position of axis' `baseValue`.\r\n     *\r\n     * @return  Base value position\r\n     */\r\n    basePosition() {\r\n        return this.valueToPosition(this.baseValue());\r\n    }\r\n    /**\r\n     * Base value of the [[ValueAxis]], which determines positive and negative\r\n     * values.\r\n     *\r\n     * @return Base value\r\n     */\r\n    baseValue() {\r\n        const min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\r\n        const max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\r\n        let baseValue = this.get(\"baseValue\", 0);\r\n        if (baseValue < min) {\r\n            baseValue = min;\r\n        }\r\n        if (baseValue > max) {\r\n            baseValue = max;\r\n        }\r\n        return baseValue;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    cellEndValue(value) {\r\n        return value;\r\n    }\r\n    fixSmallStep(step) {\r\n        // happens because of floating point error\r\n        if (1 + step === 1) {\r\n            step *= 2;\r\n            return this.fixSmallStep(step);\r\n        }\r\n        return step;\r\n    }\r\n    _fixMin(min) {\r\n        return min;\r\n    }\r\n    _fixMax(max) {\r\n        return max;\r\n    }\r\n    _calculateTotals() {\r\n        if (this.get(\"calculateTotals\")) {\r\n            let series = this.series[0];\r\n            if (series) {\r\n                let startIndex = series.startIndex();\r\n                if (series.dataItems.length > 0) {\r\n                    if (startIndex > 0) {\r\n                        startIndex--;\r\n                    }\r\n                    let endIndex = series.endIndex();\r\n                    if (endIndex < series.dataItems.length) {\r\n                        endIndex++;\r\n                    }\r\n                    let field;\r\n                    let vc;\r\n                    if (series.get(\"yAxis\") == this) {\r\n                        field = \"valueY\";\r\n                        vc = \"vcy\";\r\n                    }\r\n                    else if (series.get(\"xAxis\") == this) {\r\n                        field = \"valueX\";\r\n                        vc = \"vcx\";\r\n                    }\r\n                    let fieldWorking = field + \"Working\";\r\n                    if (field) {\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            let sum = 0;\r\n                            let total = 0;\r\n                            $array.each(this.series, (series) => {\r\n                                if (!series.get(\"excludeFromTotal\")) {\r\n                                    let dataItem = series.dataItems[i];\r\n                                    if (dataItem) {\r\n                                        let value = dataItem.get(fieldWorking) * series.get(vc);\r\n                                        if (!$type.isNaN(value)) {\r\n                                            sum += value;\r\n                                            total += Math.abs(value);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                            $array.each(this.series, (series) => {\r\n                                if (!series.get(\"excludeFromTotal\")) {\r\n                                    let dataItem = series.dataItems[i];\r\n                                    if (dataItem) {\r\n                                        let value = dataItem.get(fieldWorking) * series.get(vc);\r\n                                        if (!$type.isNaN(value)) {\r\n                                            dataItem.set((field + \"Total\"), total);\r\n                                            dataItem.set((field + \"Sum\"), sum);\r\n                                            dataItem.set((field + \"TotalPercent\"), value / total * 100);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _getSelectionMinMax() {\r\n        const min = this.getPrivate(\"minFinal\");\r\n        const max = this.getPrivate(\"maxFinal\");\r\n        const minDefined = this.get(\"min\");\r\n        const maxDefined = this.get(\"max\");\r\n        let extraMin = this.get(\"extraMin\", 0);\r\n        let extraMax = this.get(\"extraMax\", 0);\r\n        if (this.get(\"logarithmic\")) {\r\n            if (this.get(\"extraMin\") == null) {\r\n                extraMin = 0.1;\r\n            }\r\n            if (this.get(\"extraMax\") == null) {\r\n                extraMax = 0.2;\r\n            }\r\n        }\r\n        const gridCount = this.get(\"renderer\").gridCount();\r\n        const selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\r\n        const strictMinMax = this.get(\"strictMinMax\");\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            let selectionMin = max;\r\n            let selectionMax = min;\r\n            $array.each(this.series, (series) => {\r\n                if (!series.get(\"ignoreMinMax\")) {\r\n                    let seriesMin;\r\n                    let seriesMax;\r\n                    const outOfSelection = series.getPrivate(\"outOfSelection\");\r\n                    if (series.get(\"xAxis\") === this) {\r\n                        if (!outOfSelection) {\r\n                            seriesMin = series.getPrivate(\"selectionMinX\", series.getPrivate(\"minX\"));\r\n                            seriesMax = series.getPrivate(\"selectionMaxX\", series.getPrivate(\"maxX\"));\r\n                        }\r\n                    }\r\n                    else if (series.get(\"yAxis\") === this) {\r\n                        if (!outOfSelection) {\r\n                            seriesMin = series.getPrivate(\"selectionMinY\", series.getPrivate(\"minY\"));\r\n                            seriesMax = series.getPrivate(\"selectionMaxY\", series.getPrivate(\"maxY\"));\r\n                        }\r\n                    }\r\n                    if (!series.isHidden() && !series.isShowing()) {\r\n                        if ($type.isNumber(seriesMin)) {\r\n                            selectionMin = Math.min(selectionMin, seriesMin);\r\n                        }\r\n                        if ($type.isNumber(seriesMax)) {\r\n                            selectionMax = Math.max(selectionMax, seriesMax);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this.axisRanges.each((range) => {\r\n                if (range.get(\"affectsMinMax\")) {\r\n                    let value = range.get(\"value\");\r\n                    if (value != null) {\r\n                        selectionMin = Math.min(selectionMin, value);\r\n                        selectionMax = Math.max(selectionMax, value);\r\n                    }\r\n                    value = range.get(\"endValue\");\r\n                    if (value != null) {\r\n                        selectionMin = Math.min(selectionMin, value);\r\n                        selectionMax = Math.max(selectionMax, value);\r\n                    }\r\n                }\r\n            });\r\n            if (selectionMin > selectionMax) {\r\n                [selectionMin, selectionMax] = [selectionMax, selectionMin];\r\n            }\r\n            if ($type.isNumber(minDefined)) {\r\n                if (strictMinMax) {\r\n                    selectionMin = minDefined;\r\n                }\r\n                else {\r\n                    selectionMin = min;\r\n                }\r\n            }\r\n            else if (strictMinMax) {\r\n                if ($type.isNumber(this._minReal)) {\r\n                    selectionMin = this._minReal;\r\n                }\r\n            }\r\n            if ($type.isNumber(maxDefined)) {\r\n                if (strictMinMax) {\r\n                    selectionMax = maxDefined;\r\n                }\r\n                else {\r\n                    selectionMax = max;\r\n                }\r\n            }\r\n            else if (strictMinMax) {\r\n                if ($type.isNumber(this._maxReal)) {\r\n                    selectionMax = this._maxReal;\r\n                }\r\n            }\r\n            if (selectionMin === selectionMax) {\r\n                selectionMin -= this._deltaMinMax;\r\n                selectionMax += this._deltaMinMax;\r\n                let minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\r\n                selectionMin = minMaxStep2.min;\r\n                selectionMax = minMaxStep2.max;\r\n            }\r\n            let selectionMinReal = selectionMin;\r\n            let selectionMaxReal = selectionMax;\r\n            selectionMin -= (selectionMax - selectionMin) * extraMin;\r\n            selectionMax += (selectionMax - selectionMin) * extraMax;\r\n            let minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\r\n            selectionMin = minMaxStep.min;\r\n            selectionMax = minMaxStep.max;\r\n            selectionMin = $math.fitToRange(selectionMin, min, max);\r\n            selectionMax = $math.fitToRange(selectionMax, min, max);\r\n            // do it for the second time !important\t\t\t\r\n            minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\r\n            if (!strictMinMax) {\r\n                selectionMin = minMaxStep.min;\r\n                selectionMax = minMaxStep.max;\r\n            }\r\n            const syncWithAxis = this.get(\"syncWithAxis\");\r\n            if (syncWithAxis) {\r\n                minMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\r\n                selectionMin = minMaxStep.min;\r\n                selectionMax = minMaxStep.max;\r\n            }\r\n            if (strictMinMax) {\r\n                if ($type.isNumber(minDefined)) {\r\n                    selectionMin = Math.max(selectionMin, minDefined);\r\n                }\r\n                if ($type.isNumber(maxDefined)) {\r\n                    selectionMax = Math.min(selectionMax, maxDefined);\r\n                }\r\n            }\r\n            if (selectionStrictMinMax) {\r\n                selectionMin = selectionMinReal - (selectionMax - selectionMin) * extraMin;\r\n                selectionMax = selectionMaxReal + (selectionMax - selectionMin) * extraMax;\r\n            }\r\n            if (this.get(\"logarithmic\")) {\r\n                if (selectionMin <= 0) {\r\n                    selectionMin = selectionMinReal * (1 - Math.min(extraMin, 0.99));\r\n                }\r\n                if (selectionMin < min) {\r\n                    selectionMin = min;\r\n                }\r\n                if (selectionMax > max) {\r\n                    selectionMax = max;\r\n                }\r\n            }\r\n            let len = Math.min(20, Math.ceil(Math.log(this.getPrivate(\"maxZoomFactor\", 100) + 1) / Math.LN10) + 2);\r\n            let start = $math.round(this.valueToFinalPosition(selectionMin), len);\r\n            let end = $math.round(this.valueToFinalPosition(selectionMax), len);\r\n            this.setPrivateRaw(\"selectionMinFinal\", selectionMin);\r\n            this.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\r\n            this.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\r\n            this.zoom(start, end);\r\n        }\r\n    }\r\n    _getMinMax() {\r\n        let minDefined = this.get(\"min\");\r\n        let maxDefined = this.get(\"max\");\r\n        let min = Infinity;\r\n        let max = -Infinity;\r\n        let extraMin = this.get(\"extraMin\", 0);\r\n        let extraMax = this.get(\"extraMax\", 0);\r\n        if (this.get(\"logarithmic\")) {\r\n            if (this.get(\"extraMin\") == null) {\r\n                extraMin = 0.1;\r\n            }\r\n            if (this.get(\"extraMax\") == null) {\r\n                extraMax = 0.2;\r\n            }\r\n        }\r\n        let minDiff = Infinity;\r\n        $array.each(this.series, (series) => {\r\n            if (!series.get(\"ignoreMinMax\")) {\r\n                let seriesMin;\r\n                let seriesMax;\r\n                if (series.get(\"xAxis\") === this) {\r\n                    seriesMin = series.getPrivate(\"minX\");\r\n                    seriesMax = series.getPrivate(\"maxX\");\r\n                }\r\n                else if (series.get(\"yAxis\") === this) {\r\n                    seriesMin = series.getPrivate(\"minY\");\r\n                    seriesMax = series.getPrivate(\"maxY\");\r\n                }\r\n                if ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\r\n                    min = Math.min(min, seriesMin);\r\n                    max = Math.max(max, seriesMax);\r\n                    let diff = seriesMax - seriesMin;\r\n                    if (diff <= 0) {\r\n                        diff = Math.abs(seriesMax / 100);\r\n                    }\r\n                    if (diff < minDiff) {\r\n                        minDiff = diff;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.axisRanges.each((range) => {\r\n            if (range.get(\"affectsMinMax\")) {\r\n                let value = range.get(\"value\");\r\n                if (value != null) {\r\n                    min = Math.min(min, value);\r\n                    max = Math.max(max, value);\r\n                }\r\n                value = range.get(\"endValue\");\r\n                if (value != null) {\r\n                    min = Math.min(min, value);\r\n                    max = Math.max(max, value);\r\n                }\r\n            }\r\n        });\r\n        if (this.get(\"logarithmic\")) {\r\n            let treatZeroAs = this.get(\"treatZeroAs\");\r\n            if ($type.isNumber(treatZeroAs)) {\r\n                if (min <= 0) {\r\n                    min = treatZeroAs;\r\n                }\r\n            }\r\n            if (min <= 0) {\r\n                new Error(\"Logarithmic value axis can not have values <= 0.\");\r\n            }\r\n        }\r\n        if (min === 0 && max === 0) {\r\n            max = 0.9;\r\n            min = -0.9;\r\n        }\r\n        if ($type.isNumber(minDefined)) {\r\n            min = minDefined;\r\n        }\r\n        if ($type.isNumber(maxDefined)) {\r\n            max = maxDefined;\r\n        }\r\n        // meaning no min/max found on series/ranges and no min/max was defined\r\n        if (min === Infinity || max === -Infinity) {\r\n            this.setPrivate(\"minFinal\", undefined);\r\n            this.setPrivate(\"maxFinal\", undefined);\r\n            return;\r\n        }\r\n        const initialMin = min;\r\n        const initialMax = max;\r\n        // adapter\r\n        let minAdapted = this.adapters.fold(\"min\", min);\r\n        let maxAdapted = this.adapters.fold(\"max\", max);\r\n        if ($type.isNumber(minAdapted)) {\r\n            min = minAdapted;\r\n        }\r\n        if ($type.isNumber(maxAdapted)) {\r\n            max = maxAdapted;\r\n        }\r\n        // DateAxis does some magic here\r\n        min = this._fixMin(min);\r\n        max = this._fixMax(max);\r\n        // this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\t\t\r\n        if (max - min <= 1 / Math.pow(10, 15)) {\r\n            if (max - min !== 0) {\r\n                this._deltaMinMax = (max - min) / 2;\r\n            }\r\n            else {\r\n                this._getDelta(max);\r\n            }\r\n            min -= this._deltaMinMax;\r\n            max += this._deltaMinMax;\r\n        }\r\n        // add extras\r\n        min -= (max - min) * extraMin;\r\n        max += (max - min) * extraMax;\r\n        if (this.get(\"logarithmic\")) {\r\n            // don't let min go below 0 if real min is >= 0\r\n            if (min < 0 && initialMin >= 0) {\r\n                min = 0;\r\n            }\r\n            // don't let max go above 0 if real max is <= 0\r\n            if (max > 0 && initialMax <= 0) {\r\n                max = 0;\r\n            }\r\n        }\r\n        this._minReal = min;\r\n        this._maxReal = max;\r\n        let strictMinMax = this.get(\"strictMinMax\");\r\n        let strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\r\n        if (strictMinMaxSelection) {\r\n            strictMinMax = strictMinMaxSelection;\r\n        }\r\n        let strict = strictMinMax;\r\n        if ($type.isNumber(maxDefined)) {\r\n            strict = true;\r\n        }\r\n        let gridCount = this.get(\"renderer\").gridCount();\r\n        let minMaxStep = this._adjustMinMax(min, max, gridCount, strict);\r\n        min = minMaxStep.min;\r\n        max = minMaxStep.max;\r\n        // do it for the second time with strict true (importat!)\r\n        minMaxStep = this._adjustMinMax(min, max, gridCount, true);\r\n        min = minMaxStep.min;\r\n        max = minMaxStep.max;\r\n        // return min max if strict\r\n        if (strictMinMax) {\r\n            if ($type.isNumber(minDefined)) {\r\n                min = minDefined;\r\n            }\r\n            else {\r\n                min = this._minReal;\r\n            }\r\n            if ($type.isNumber(maxDefined)) {\r\n                max = maxDefined;\r\n            }\r\n            else {\r\n                max = this._maxReal;\r\n            }\r\n            if (max - min <= 0.00000001) {\r\n                min -= this._deltaMinMax;\r\n                max += this._deltaMinMax;\r\n            }\r\n            min -= (max - min) * extraMin;\r\n            max += (max - min) * extraMax;\r\n        }\r\n        minAdapted = this.adapters.fold(\"min\", min);\r\n        maxAdapted = this.adapters.fold(\"max\", max);\r\n        if ($type.isNumber(minAdapted)) {\r\n            min = minAdapted;\r\n        }\r\n        if ($type.isNumber(maxAdapted)) {\r\n            max = maxAdapted;\r\n        }\r\n        if (minDiff == Infinity) {\r\n            minDiff = (max - min);\r\n        }\r\n        // this is to avoid floating point number error\r\n        let decCount = Math.round(Math.abs(Math.log(Math.abs(max - min)) * Math.LOG10E)) + 5;\r\n        min = $math.round(min, decCount);\r\n        max = $math.round(max, decCount);\r\n        const syncWithAxis = this.get(\"syncWithAxis\");\r\n        if (syncWithAxis) {\r\n            minMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\r\n            min = minMaxStep.min;\r\n            max = minMaxStep.max;\r\n        }\r\n        this.setPrivateRaw(\"maxZoomFactor\", Math.max(1, Math.ceil((max - min) / minDiff * this.get(\"maxZoomFactor\", 100))));\r\n        this._fixZoomFactor();\r\n        if (this.get(\"logarithmic\")) {\r\n            this._minLogAdjusted = min;\r\n            min = this._minReal;\r\n            max = this._maxReal;\r\n            if (min <= 0) {\r\n                min = initialMin * (1 - Math.min(extraMin, 0.99));\r\n            }\r\n        }\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            if (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\r\n                this.setPrivate(\"minFinal\", min);\r\n                this.setPrivate(\"maxFinal\", max);\r\n                this._saveMinMax(min, max);\r\n                const duration = this.get(\"interpolationDuration\", 0);\r\n                const easing = this.get(\"interpolationEasing\");\r\n                this.animatePrivate({ key: \"min\", to: min, duration, easing });\r\n                this.animatePrivate({ key: \"max\", to: max, duration, easing });\r\n            }\r\n        }\r\n    }\r\n    _fixZoomFactor() {\r\n    }\r\n    _getDelta(max) {\r\n        // the number by which we need to raise 10 to get difference\r\n        let exponent = Math.log(Math.abs(max)) * Math.LOG10E;\r\n        // here we find a number which is power of 10 and has the same count of numbers as difference has\r\n        let power = Math.pow(10, Math.floor(exponent));\r\n        // reduce this number by 10 times\r\n        power = power / 10;\r\n        this._deltaMinMax = power;\r\n    }\r\n    _saveMinMax(_min, _max) {\r\n    }\r\n    _adjustMinMax(min, max, gridCount, strictMode) {\r\n        // will fail if 0\r\n        if (gridCount <= 1) {\r\n            gridCount = 1;\r\n        }\r\n        gridCount = Math.round(gridCount);\r\n        let initialMin = min;\r\n        let initialMax = max;\r\n        let difference = max - min;\r\n        // in case min and max is the same, use max\r\n        if (difference === 0) {\r\n            difference = Math.abs(max);\r\n        }\r\n        // the number by which we need to raise 10 to get difference\r\n        let exponent = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n        // here we find a number which is power of 10 and has the same count of numbers as difference has\r\n        let power = Math.pow(10, Math.floor(exponent));\r\n        // reduce this number by 10 times\r\n        power = power / 10;\r\n        let extra = power;\r\n        if (strictMode) {\r\n            extra = 0;\r\n        }\r\n        // round down min\r\n        if (strictMode) {\r\n            min = Math.floor(min / power) * power;\r\n            // round up max\r\n            max = Math.ceil(max / power) * power;\r\n        }\r\n        else {\r\n            min = Math.ceil(min / power) * power - extra;\r\n            // round up max\r\n            max = Math.floor(max / power) * power + extra;\r\n        }\r\n        // don't let min go below 0 if real min is >= 0\r\n        if (min < 0 && initialMin >= 0) {\r\n            min = 0;\r\n        }\r\n        // don't let max go above 0 if real max is <= 0\r\n        if (max > 0 && initialMax <= 0) {\r\n            max = 0;\r\n        }\r\n        exponent = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n        power = Math.pow(10, Math.floor(exponent));\r\n        power = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\r\n        // approximate difference between two grid lines\r\n        let step = Math.ceil((difference / gridCount) / power) * power;\r\n        let stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n        // the step should divide by  2, 5, and 10.\r\n        let stepDivisor = Math.ceil(step / stepPower); // number 0 - 10\r\n        if (stepDivisor > 5) {\r\n            stepDivisor = 10;\r\n        }\r\n        else if (stepDivisor <= 5 && stepDivisor > 2) {\r\n            stepDivisor = 5;\r\n        }\r\n        // now get real step\r\n        step = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\r\n        let maxPrecision = this.get(\"maxPrecision\");\r\n        if ($type.isNumber(maxPrecision)) {\r\n            let ceiledStep = $math.ceil(step, maxPrecision);\r\n            if (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\r\n                step = ceiledStep;\r\n            }\r\n        }\r\n        let decCount = 0;\r\n        // in case numbers are smaller than 1\r\n        if (stepPower < 1) {\r\n            // exponent is less then 1 too. Count decimals of exponent\r\n            decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\r\n            // round step\r\n            step = $math.round(step, decCount);\r\n        }\r\n        // final min and max\r\n        let minCount = Math.floor(min / step);\r\n        min = $math.round(step * minCount, decCount);\r\n        let maxCount;\r\n        if (!strictMode) {\r\n            maxCount = Math.ceil(max / step);\r\n        }\r\n        else {\r\n            maxCount = Math.floor(max / step);\r\n        }\r\n        if (maxCount === minCount) {\r\n            maxCount++;\r\n        }\r\n        max = $math.round(step * maxCount, decCount);\r\n        if (max < initialMax) {\r\n            max = max + step;\r\n        }\r\n        if (min > initialMin) {\r\n            min = min - step;\r\n        }\r\n        step = this.fixSmallStep(step);\r\n        return { min: min, max: max, step: step };\r\n    }\r\n    /**\r\n     * Returns text to be used in an axis tooltip for specific relative position.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Tooltip text\r\n     */\r\n    getTooltipText(position) {\r\n        const numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\r\n        const formatter = this.getNumberFormatter();\r\n        const extraDecimals = this.get(\"extraTooltipPrecision\", 0);\r\n        const decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\r\n        const value = $math.round(this.positionToValue(position), decimals);\r\n        if (numberFormat) {\r\n            return formatter.format(value, numberFormat);\r\n        }\r\n        else {\r\n            return formatter.format(value, undefined, decimals);\r\n            //label.set(\"text\", this.getNumberFormatter().format(value, undefined, this.getPrivate(\"stepDecimalPlaces\")));\r\n        }\r\n        // //@todo number formatter + tag\r\n        // return $math.round(this.positionToValue(position), this.getPrivate(\"stepDecimalPlaces\")).toString();\r\n    }\r\n    /**\r\n     * Returns a data item from series that is closest to the `position`.\r\n     *\r\n     * @param   series    Series\r\n     * @param   position  Relative position\r\n     * @return            Data item\r\n     */\r\n    getSeriesItem(series, position) {\r\n        let fieldName = (this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\"));\r\n        let value = this.positionToValue(position);\r\n        let index = undefined;\r\n        let oldDiff;\r\n        $array.each(series.dataItems, (dataItem, i) => {\r\n            const diff = Math.abs(dataItem.get(fieldName) - value);\r\n            if (index === undefined || diff < oldDiff) {\r\n                index = i;\r\n                oldDiff = diff;\r\n            }\r\n        });\r\n        if (index != null) {\r\n            return series.dataItems[index];\r\n        }\r\n    }\r\n    /**\r\n     * Zooms the axis to specific `start` and `end` values.\r\n     *\r\n     * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n     *\r\n     * @param  start     Start value\r\n     * @param  end       End value\r\n     * @param  duration  Duration in milliseconds\r\n     */\r\n    zoomToValues(start, end, duration) {\r\n        const min = this.getPrivate(\"minFinal\", 0);\r\n        const max = this.getPrivate(\"maxFinal\", 0);\r\n        if (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\r\n            this.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\r\n        }\r\n    }\r\n    /**\r\n     * Syncs with a target axis.\r\n     *\r\n     * @param  min  Min\r\n     * @param  max  Max\r\n     * @param  step Step\r\n     */\r\n    _syncAxes(min, max, step, syncMin, syncMax, syncStep) {\r\n        let axis = this.get(\"syncWithAxis\");\r\n        if (axis) {\r\n            let count = Math.round(syncMax - syncMin) / syncStep;\r\n            let currentCount = Math.round((max - min) / step);\r\n            let gridCount = this.get(\"renderer\").gridCount();\r\n            if ($type.isNumber(count) && $type.isNumber(currentCount)) {\r\n                let synced = false;\r\n                let c = 0;\r\n                let diff = (max - min) * 0.01;\r\n                let omin = min;\r\n                let omax = max;\r\n                let ostep = step;\r\n                while (synced != true) {\r\n                    synced = this._checkSync(omin, omax, ostep, count);\r\n                    c++;\r\n                    if (c > 500) {\r\n                        synced = true;\r\n                    }\r\n                    if (!synced) {\r\n                        if (c / 3 == Math.round(c / 3)) {\r\n                            omin = min - diff * c;\r\n                            if (min >= 0 && omin < 0) {\r\n                                omin = 0;\r\n                            }\r\n                        }\r\n                        else {\r\n                            omax = max + diff * c;\r\n                            if (omax <= 0 && omax > 0) {\r\n                                omax = 0;\r\n                            }\r\n                        }\r\n                        let minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\r\n                        omin = minMaxStep.min;\r\n                        omax = minMaxStep.max;\r\n                        ostep = minMaxStep.step;\r\n                    }\r\n                    else {\r\n                        min = omin;\r\n                        max = omax;\r\n                        step = ostep;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return { min: min, max: max, step: step };\r\n    }\r\n    /**\r\n     * Returns `true` if axis needs to be resunced with some other axis.\r\n     */\r\n    _checkSync(min, max, step, count) {\r\n        let currentCount = (max - min) / step;\r\n        for (let i = 1; i < count; i++) {\r\n            if ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Returns relative position between two grid lines of the axis.\r\n     *\r\n     * @return Position\r\n     */\r\n    getCellWidthPosition() {\r\n        let max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\r\n        let min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\r\n        if ($type.isNumber(max) && $type.isNumber(min)) {\r\n            return this.getPrivate(\"step\", 1) / (max - min);\r\n        }\r\n        return 0.05;\r\n    }\r\n}\r\nObject.defineProperty(ValueAxis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ValueAxis\"\r\n});\r\nObject.defineProperty(ValueAxis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Axis.classNames.concat([ValueAxis.className])\r\n});\r\n","import { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\n/**\r\n * A candle element used in a [[CandlestickSeries]].\r\n */\r\nexport class Candlestick extends RoundedRectangle {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"lowX0\") || this.isDirty(\"lowY0\") || this.isDirty(\"lowX1\") || this.isDirty(\"lowY1\") || this.isDirty(\"highX0\") || this.isDirty(\"highX1\") || this.isDirty(\"highY0\") || this.isDirty(\"highY1\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _draw() {\r\n        super._draw();\r\n        const display = this._display;\r\n        display.moveTo(this.get(\"lowX0\", 0), this.get(\"lowY0\", 0));\r\n        display.lineTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\r\n        display.moveTo(this.get(\"highX0\", 0), this.get(\"highY0\", 0));\r\n        display.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\r\n    }\r\n}\r\nObject.defineProperty(Candlestick, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Candlestick\"\r\n});\r\nObject.defineProperty(Candlestick, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: RoundedRectangle.classNames.concat([Candlestick.className])\r\n});\r\n","import { ColumnSeries } from \"./ColumnSeries\";\r\nimport { Candlestick } from \"./Candlestick\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport * as $array from \"../../../core/util/Array\";\r\n/**\r\n * Candlestick series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\r\n * @important\r\n */\r\nexport class CandlestickSeries extends ColumnSeries {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A list of candles in the series.\r\n         *\r\n         * `columns.template` can be used to configure candles.\r\n         *\r\n         * @default new ListTemplate<Candlestick>\r\n         */\r\n        Object.defineProperty(this, \"columns\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({\r\n                themeTags: [\"autocolor\"]\r\n            }), () => Candlestick._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"])\r\n            }, [this.columns.template]))\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeColumn(dataItem, listTemplate) {\r\n        const column = this.mainContainer.children.push(listTemplate.make());\r\n        column._setDataItem(dataItem);\r\n        listTemplate.push(column);\r\n        return column;\r\n    }\r\n    _updateGraphics(dataItem, previousDataItem) {\r\n        super._updateGraphics(dataItem, previousDataItem);\r\n        const xAxis = this.getRaw(\"xAxis\");\r\n        const yAxis = this.getRaw(\"yAxis\");\r\n        const baseAxis = this.getRaw(\"baseAxis\");\r\n        let vcy = this.get(\"vcy\", 1);\r\n        let vcx = this.get(\"vcx\", 1);\r\n        let lx0;\r\n        let lx1;\r\n        let ly0;\r\n        let ly1;\r\n        let hx0;\r\n        let hx1;\r\n        let hy0;\r\n        let hy1;\r\n        let locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\r\n        let locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\r\n        let openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\r\n        let openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\r\n        let orientation;\r\n        if (yAxis === baseAxis) {\r\n            let open = xAxis.getDataItemPositionX(dataItem, this._xOpenField, 1, vcx);\r\n            let close = xAxis.getDataItemPositionX(dataItem, this._xField, 1, vcx);\r\n            lx1 = xAxis.getDataItemPositionX(dataItem, this._xLowField, 1, vcx);\r\n            hx1 = xAxis.getDataItemPositionX(dataItem, this._xHighField, 1, vcx);\r\n            hx0 = Math.max(open, close);\r\n            lx0 = Math.min(open, close);\r\n            let startLocation = this._aLocationY0 + openLocationY - 0.5;\r\n            let endLocation = this._aLocationY1 + locationY - 0.5;\r\n            ly0 = yAxis.getDataItemPositionY(dataItem, this._yField, startLocation + (endLocation - startLocation) / 2, vcy);\r\n            ly1 = ly0;\r\n            hy0 = ly0;\r\n            hy1 = ly0;\r\n            orientation = \"horizontal\";\r\n        }\r\n        else {\r\n            let open = yAxis.getDataItemPositionY(dataItem, this._yOpenField, 1, vcy);\r\n            let close = yAxis.getDataItemPositionY(dataItem, this._yField, 1, vcy);\r\n            ly1 = yAxis.getDataItemPositionY(dataItem, this._yLowField, 1, vcy);\r\n            hy1 = yAxis.getDataItemPositionY(dataItem, this._yHighField, 1, vcy);\r\n            hy0 = Math.max(open, close);\r\n            ly0 = Math.min(open, close);\r\n            let startLocation = this._aLocationX0 + openLocationX - 0.5;\r\n            let endLocation = this._aLocationX1 + locationX - 0.5;\r\n            lx0 = xAxis.getDataItemPositionX(dataItem, this._xField, startLocation + (endLocation - startLocation) / 2, vcx);\r\n            lx1 = lx0;\r\n            hx0 = lx0;\r\n            hx1 = lx0;\r\n            orientation = \"vertical\";\r\n        }\r\n        this._updateCandleGraphics(dataItem, lx0, lx1, ly0, ly1, hx0, hx1, hy0, hy1, orientation);\r\n    }\r\n    _updateCandleGraphics(dataItem, lx0, lx1, ly0, ly1, hx0, hx1, hy0, hy1, orientation) {\r\n        let column = dataItem.get(\"graphics\");\r\n        if (column) {\r\n            let pl0 = this.getPoint(lx0, ly0);\r\n            let pl1 = this.getPoint(lx1, ly1);\r\n            let ph0 = this.getPoint(hx0, hy0);\r\n            let ph1 = this.getPoint(hx1, hy1);\r\n            let x = column.x();\r\n            let y = column.y();\r\n            column.set(\"lowX0\", pl0.x - x);\r\n            column.set(\"lowY0\", pl0.y - y);\r\n            column.set(\"lowX1\", pl1.x - x);\r\n            column.set(\"lowY1\", pl1.y - y);\r\n            column.set(\"highX0\", ph0.x - x);\r\n            column.set(\"highY0\", ph0.y - y);\r\n            column.set(\"highX1\", ph1.x - x);\r\n            column.set(\"highY1\", ph1.y - y);\r\n            column.set(\"orientation\", orientation);\r\n            let rangeGraphics = dataItem.get(\"rangeGraphics\");\r\n            if (rangeGraphics) {\r\n                $array.each(rangeGraphics, (column) => {\r\n                    column.set(\"lowX0\", pl0.x - x);\r\n                    column.set(\"lowY0\", pl0.y - y);\r\n                    column.set(\"lowX1\", pl1.x - x);\r\n                    column.set(\"lowY1\", pl1.y - y);\r\n                    column.set(\"highX0\", ph0.x - x);\r\n                    column.set(\"highY0\", ph0.y - y);\r\n                    column.set(\"highX1\", ph1.x - x);\r\n                    column.set(\"highY1\", ph1.y - y);\r\n                    column.set(\"orientation\", orientation);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    _processAxisRange(axisRange) {\r\n        super._processAxisRange(axisRange);\r\n        axisRange.columns = new ListTemplate(Template.new({}), () => Candlestick._new(this._root, {\r\n            themeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"]),\r\n        }, [this.columns.template, axisRange.columns.template]));\r\n    }\r\n}\r\nObject.defineProperty(CandlestickSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"CandlestickSeries\"\r\n});\r\nObject.defineProperty(CandlestickSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: ColumnSeries.classNames.concat([CandlestickSeries.className])\r\n});\r\n","import { BaseColumnSeries } from \"./BaseColumnSeries\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[TemplateList]] of all columns in series.\r\n         *\r\n         * `columns.template` can be used to set default settings for all columns,\r\n         * or to change on existing ones.\r\n         */\r\n        Object.defineProperty(this, \"columns\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => RoundedRectangle._new(this._root, {\r\n                position: \"absolute\",\r\n                themeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n            }, [this.columns.template]))\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeColumn(dataItem, listTemplate) {\r\n        const column = this.mainContainer.children.push(listTemplate.make());\r\n        column._setDataItem(dataItem);\r\n        listTemplate.push(column);\r\n        return column;\r\n    }\r\n    _processAxisRange(axisRange) {\r\n        super._processAxisRange(axisRange);\r\n        axisRange.columns = new ListTemplate(Template.new({}), () => RoundedRectangle._new(this._root, {\r\n            position: \"absolute\",\r\n            themeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n        }, [this.columns.template, axisRange.columns.template]));\r\n    }\r\n}\r\nObject.defineProperty(ColumnSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ColumnSeries\"\r\n});\r\nObject.defineProperty(ColumnSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: BaseColumnSeries.classNames.concat([ColumnSeries.className])\r\n});\r\n"],"names":["DataItem","Component","Container","p100","List","Rectangle","$array","$type","$utils","Axis","constructor","arguments","Object","defineProperty","enumerable","configurable","writable","value","children","push","new","_root","width","height","isMeasured","position","themeTags","background","fill","interfaceColors","get","_dispose","gridContainer","dispose","topGridContainer","bulletsContainer","labelsContainer","axisHeader","_afterNew","setPrivate","_disposers","axisRanges","events","onAll","change","type","each","oldValues","dataItem","disposeDataItem","_processAxisRange","newValue","oldValue","Error","renderer","axis","processAxis","ghostLabel","makeLabel","undefined","adapters","disable","setAll","opacity","tooltipText","tooltipHTML","interactive","_updateFinals","_start","_end","zoom","start","end","duration","priority","sAnimation","_sAnimation","eAnimation","_eAnimation","maxDeviation","Math","min","isNumber","maxZoomFactor","getPrivate","maxZoomFactorReal","minZoomCount","maxZoomCount","minZoomFactor","chart","_handleAxisSelection","playing","to","easing","animate","key","set","once","_markDirtyKey","_markDirty","stop","series","_series","setRaw","_createAssets","_rangesDirty","_prepareDataItem","above","container","grid","moveValue","_dataItem","_index","markDirtyExtremes","markDirtySelectionExtremes","_calculateTotals","_updateAxisRanges","_bullets","axisRange","_seriesAxisRanges","_prepareChildren","isDirty","_updateCursor","delta","_inversed","_axisLength","axisLength","_updateLC","tooltip","rendererTags","addTag","className","toLowerCase","_applyThemes","mergeTags","label","_updateTooltipBounds","updateTooltipBounds","_updateBounds","processChart","axisHeadersContainer","on","plotContainer","onPrivate","markDirtySize","hideDataItem","_toggleDataItem","showDataItem","visible","tick","axisFill","bullet","sprite","tags","makeGrid","makeTick","makeAxisFill","_processBullet","axisBullet","_setDataItem","parent","_afterChanged","_updateChartLayout","_updatePositions","labels","removeValue","ticks","axisFills","_updateGhost","getCellWidthPosition","isHidden","bounds","localBounds","gWidth","right","left","text","dataItems","w","_getText","updateLabel","_handleCursorPosition","snapToSeries","toAxisPosition","_cursorPosition","_snapToSeries","updateTooltip","getSeriesItem","indexOf","updateLegendMarker","updateLegendValue","showDataItemTooltip","roundAxisPosition","isNaN","setPrivateRaw","_updateTooltipText","positionTooltip","hide","show","getTooltipText","_location","handleCursorShow","handleCursorHide","processSeriesDataItem","_fields","_clearDirty","_sizeDirty","coordinateToPosition","coordinate","fixPosition","shouldGap","_nextItem","_autoGapCount","_fieldName","createAxisRange","axisDataItem","_groupSeriesData","classNames","concat","AxisRenderer","AxisRendererX","_settings","gridTemplate","template","display","graphics","moveTo","lineTo","_changed","opposite","inside","axisChildren","removeTag","topAxesContainer","insertIndex","bottomAxesContainer","root","_markDirtyRedraw","thumb","_getPan","point1","point2","x","_ls","_lc","innerWidth","relativeToValue","y","length","verticalLayout","layout","positionToPoint","positionToCoordinate","updateTick","endPosition","count","location","toggleVisibility","updateGrid","updateBullet","bulletPosition","previousBullet","d","previousSprite","updateFill","x0","x1","fillDrawMethod","h","_positionTooltip","num","global","_display","toGlobal","pointerOrientation","top","bottom","oldBounds","sameBounds","AxisRendererY","rightAxesContainer","leftAxesContainer","horizontalLayout","innerHeight","y0","y1","ValueAxis","$order","$object","$time","DateAxis","_setBaseInterval","interval","_baseDuration","getIntervalDuration","_fixZoomFactor","Infinity","round","baseMainDuration","_groupData","max","groupInterval","_dataGrouped","_handleRangeChange","baseInterval","mainDataSetId","timeUnit","setDataSet","_seriesDataGrouped","intervals","baseDuration","groupIntervals","intervalDuration","_dataSets","fields","baseAxis","_valueYFields","_valueXFields","_mainDataItems","groupCallback","groupOriginals","firstDay","locale","firstDayOfWeek","utc","timezone","previousTime","dataSetId","newDataItem","sum","groupFieldValues","workingFields","field","getDuration","firstItem","firstDate","Date","prevNewDataItem","time","roundedTime","getTime","dataContext","copy","_makeDataItem","groupKey","currentValue","average","abs","_dataSetId","_groupingCalculated","getGroupInterval","chooseInterval","assign","getIntervalMax","_intervalMax","getIntervalMin","_intervalMin","selectionMin","selectionMax","modifiedDifference","current","newId","isEnabled","dispatch","target","fieldName","getSortedIndex","compare","startIndex","index","endIndex","endIndex2","firstDataItem","lastDataItem","lastDate","outOfSelection","_adjustMinMax","gridCount","_strictMode","step","_intervalDuration","_saveMinMax","id","_getM","_prepareAxisItems","i","gridInterval","nextGridUnit","getNextUnit","previousValue","format","formats","_dataItems","processDataItem","endValue","date","checkChange","dateFormatter","j","inited","_markDirtyAxes","positionToValue","_getDelta","_deltaMinMax","_fixMin","startTime","endTime","_fixMax","_updateDates","_date","open","close","getDataItemPositionX","cellLocation","axisLocation","openValue","closeValue","_baseValue","valueToPosition","getDataItemCoordinateX","getDataItemPositionY","getDataItemCoordinateY","getDateIntervalDuration","NaN","result","diValue","first","second","nextItem","autoGapCount","value1","value2","zoomToDates","zoomToValues","positionToDate","dateToPosition","$math","GaplessDateAxis","valueFields","dates","_dates","found","_updateAllDates","startLocation","endLocation","len","itemValue","valueToIndex","findex","floor","fitToRange","_seriesValuesDirty","maxCount","Number","MAX_SAFE_INTEGER","frequency","ceil","_frequency","realDuration","selectedItems","startDate","add","previousPosition","minDifference","realValue","move","MultiDisposer","_dirtyExtremes","markDirty","_dirtySelectionExtremes","_prevSettings","syncWithAxis","_syncDp","_valuesDirty","isPrivateDirty","_getMinMax","_isPanning","_getSelectionMinMax","baseValue","_formatText","numberFormat","formatter","getNumberFormatter","logarithmic","differencePower","minLog","_minLogAdjusted","log","LOG10E","pow","previous","stepPower","decCount","fillEndPosition","hasTag","fillRule","minMaxStep","stepDecimalPlaces","decimalPlaces","E","treatZeroAs","valueToFinalPosition","getX","getY","_cellLocation","stackToItem","component","getStackedXValueWorking","getStackedYValueWorking","basePosition","cellEndValue","fixSmallStep","vc","fieldWorking","total","minDefined","maxDefined","extraMin","extraMax","selectionStrictMinMax","strictMinMax","seriesMin","seriesMax","isShowing","range","_minReal","_maxReal","minMaxStep2","selectionMinReal","selectionMaxReal","_syncAxes","LN10","minDiff","diff","initialMin","initialMax","minAdapted","fold","maxAdapted","strictMinMaxSelection","strict","animatePrivate","exponent","power","_min","_max","strictMode","difference","extra","stepDivisor","maxPrecision","ceiledStep","MAX_VALUE","minCount","extraDecimals","decimals","oldDiff","syncMin","syncMax","syncStep","currentCount","synced","c","omin","omax","ostep","_checkSync","RoundedRectangle","Candlestick","_beforeChanged","_clear","_draw","ColumnSeries","Template","ListTemplate","CandlestickSeries","_new","columns","makeColumn","listTemplate","column","mainContainer","make","_updateGraphics","previousDataItem","xAxis","getRaw","yAxis","vcy","vcx","lx0","lx1","ly0","ly1","hx0","hx1","hy0","hy1","locationX","locationY","openLocationX","openLocationY","orientation","_xOpenField","_xField","_xLowField","_xHighField","_aLocationY0","_aLocationY1","_yField","_yOpenField","_yLowField","_yHighField","_aLocationX0","_aLocationX1","_updateCandleGraphics","pl0","getPoint","pl1","ph0","ph1","rangeGraphics","BaseColumnSeries"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8]}