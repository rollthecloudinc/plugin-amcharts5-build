{"version":3,"file":"322.js","mappings":"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","sources":["./node_modules/@amcharts/amcharts5/.internal/core/render/RoundedRectangle.js","./node_modules/d3-array/src/fsum.js","./node_modules/d3-array/src/merge.js","./node_modules/d3-array/src/range.js","./node_modules/d3-geo/src/area.js","./node_modules/d3-geo/src/bounds.js","./node_modules/d3-geo/src/cartesian.js","./node_modules/d3-geo/src/centroid.js","./node_modules/d3-geo/src/circle.js","./node_modules/d3-geo/src/clip/antimeridian.js","./node_modules/d3-geo/src/clip/buffer.js","./node_modules/d3-geo/src/clip/circle.js","./node_modules/d3-geo/src/clip/index.js","./node_modules/d3-geo/src/clip/line.js","./node_modules/d3-geo/src/clip/rectangle.js","./node_modules/d3-geo/src/clip/rejoin.js","./node_modules/d3-geo/src/compose.js","./node_modules/d3-geo/src/constant.js","./node_modules/d3-geo/src/distance.js","./node_modules/d3-geo/src/graticule.js","./node_modules/d3-geo/src/identity.js","./node_modules/d3-geo/src/interpolate.js","./node_modules/d3-geo/src/length.js","./node_modules/d3-geo/src/math.js","./node_modules/d3-geo/src/noop.js","./node_modules/d3-geo/src/path/area.js","./node_modules/d3-geo/src/path/bounds.js","./node_modules/d3-geo/src/path/centroid.js","./node_modules/d3-geo/src/path/context.js","./node_modules/d3-geo/src/path/index.js","./node_modules/d3-geo/src/path/measure.js","./node_modules/d3-geo/src/path/string.js","./node_modules/d3-geo/src/pointEqual.js","./node_modules/d3-geo/src/polygonContains.js","./node_modules/d3-geo/src/projection/albers.js","./node_modules/d3-geo/src/projection/albersUsa.js","./node_modules/d3-geo/src/projection/azimuthal.js","./node_modules/d3-geo/src/projection/conic.js","./node_modules/d3-geo/src/projection/conicEqualArea.js","./node_modules/d3-geo/src/projection/cylindricalEqualArea.js","./node_modules/d3-geo/src/projection/equalEarth.js","./node_modules/d3-geo/src/projection/equirectangular.js","./node_modules/d3-geo/src/projection/fit.js","./node_modules/d3-geo/src/projection/index.js","./node_modules/d3-geo/src/projection/mercator.js","./node_modules/d3-geo/src/projection/naturalEarth1.js","./node_modules/d3-geo/src/projection/orthographic.js","./node_modules/d3-geo/src/projection/resample.js","./node_modules/d3-geo/src/rotation.js","./node_modules/d3-geo/src/stream.js","./node_modules/d3-geo/src/transform.js"],"sourcesContent":["import * as $type from \"../util/Type\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport { Rectangle } from \"./Rectangle\";\r\n/**\r\n * Draws a rectangle with rounded corners.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class RoundedRectangle extends Rectangle {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"cornerRadiusTL\") || this.isDirty(\"cornerRadiusTR\") || this.isDirty(\"cornerRadiusBR\") || this.isDirty(\"cornerRadiusBL\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _draw() {\r\n        let width = this.width();\r\n        let height = this.height();\r\n        let w = width;\r\n        let h = height;\r\n        let wSign = w / Math.abs(width);\r\n        let hSign = h / Math.abs(height);\r\n        if ($type.isNumber(w) && $type.isNumber(h)) {\r\n            let minSide = Math.min(w, h) / 2;\r\n            let crtl = $utils.relativeToValue(this.get(\"cornerRadiusTL\", 8), minSide);\r\n            let crtr = $utils.relativeToValue(this.get(\"cornerRadiusTR\", 8), minSide);\r\n            let crbr = $utils.relativeToValue(this.get(\"cornerRadiusBR\", 8), minSide);\r\n            let crbl = $utils.relativeToValue(this.get(\"cornerRadiusBL\", 8), minSide);\r\n            let maxcr = Math.min(Math.abs(w / 2), Math.abs(h / 2));\r\n            crtl = $math.fitToRange(crtl, 0, maxcr);\r\n            crtr = $math.fitToRange(crtr, 0, maxcr);\r\n            crbr = $math.fitToRange(crbr, 0, maxcr);\r\n            crbl = $math.fitToRange(crbl, 0, maxcr);\r\n            const display = this._display;\r\n            display.moveTo(crtl * wSign, 0);\r\n            display.lineTo(w - crtr * wSign, 0);\r\n            if (crtr > 0) {\r\n                display.arcTo(w, 0, w, crtr * hSign, crtr);\r\n            }\r\n            display.lineTo(w, h - crbr * hSign);\r\n            if (crbr > 0) {\r\n                display.arcTo(w, h, w - crbr * wSign, h, crbr);\r\n            }\r\n            display.lineTo(crbl * wSign, h);\r\n            if (crbl > 0) {\r\n                display.arcTo(0, h, 0, h - crbl * hSign, crbl);\r\n            }\r\n            display.lineTo(0, crtl * hSign);\r\n            if (crtl > 0) {\r\n                display.arcTo(0, 0, crtl * wSign, 0, crtl);\r\n            }\r\n            display.closePath();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(RoundedRectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RoundedRectangle\"\r\n});\r\nObject.defineProperty(RoundedRectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Rectangle.classNames.concat([RoundedRectangle.className])\r\n});\r\n","// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n","function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n","export default function range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","import {Adder} from \"d3-array\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nexport var areaRingSum = new Adder();\n\n// hello?\n\nvar areaSum = new Adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum = new Adder();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum = new Adder();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {Adder} from \"d3-array\";\nimport {areaStream, areaRingSum} from \"./area.js\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport {abs, degrees, epsilon, radians} from \"./math.js\";\nimport stream from \"./stream.js\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum,\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum = new Adder();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import {Adder} from \"d3-array\";\nimport {asin, atan2, cos, degrees, epsilon, epsilon2, hypot, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = hypot(cx, cy, cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2.add(v * cx);\n  Y2.add(v * cy);\n  Z2.add(v * cz);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 = 0;\n  X2 = new Adder();\n  Y2 = new Adder();\n  Z2 = new Adder();\n  stream(object, centroidStream);\n\n  var x = +X2,\n      y = +Y2,\n      z = +Z2,\n      m = hypot(x, y, z);\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = hypot(x, y, z);\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / m) * degrees];\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import length from \"./length.js\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math.js\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","export default x => x;\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math.js\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import {Adder} from \"d3-array\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar lengthSum,\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum = new Adder();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","import {Adder} from \"d3-array\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum = new Adder();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum = new Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  let digits = 3,\n      pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    if (!arguments.length) return projection;\n    projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream;\n    return path;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString(digits)) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  path.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) digits = null;\n    else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    if (context === null) contextStream = new PathString(digits);\n    return path;\n  };\n\n  return path.projection(projection).digits(digits).context(context);\n}\n","import {Adder} from \"d3-array\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum = new Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","// Simple caching for constant-radius points.\nlet cacheDigits, cacheAppend, cacheRadius, cacheCircle;\n\nexport default class PathString {\n  constructor(digits) {\n    this._append = digits == null ? append : appendRound(digits);\n    this._radius = 4.5;\n    this._ = \"\";\n  }\n  pointRadius(_) {\n    this._radius = +_;\n    return this;\n  }\n  polygonStart() {\n    this._line = 0;\n  }\n  polygonEnd() {\n    this._line = NaN;\n  }\n  lineStart() {\n    this._point = 0;\n  }\n  lineEnd() {\n    if (this._line === 0) this._ += \"Z\";\n    this._point = NaN;\n  }\n  point(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._append`M${x},${y}`;\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._append`L${x},${y}`;\n        break;\n      }\n      default: {\n        this._append`M${x},${y}`;\n        if (this._radius !== cacheRadius || this._append !== cacheAppend) {\n          const r = this._radius;\n          const s = this._;\n          this._ = \"\"; // stash the old string so we can cache the circle path fragment\n          this._append`m0,${r}a${r},${r} 0 1,1 0,${-2 * r}a${r},${r} 0 1,1 0,${2 * r}z`;\n          cacheRadius = r;\n          cacheAppend = this._append;\n          cacheCircle = this._;\n          this._ = s;\n        }\n        this._ += cacheCircle;\n        break;\n      }\n    }\n  }\n  result() {\n    const result = this._;\n    this._ = \"\";\n    return result.length ? result : null;\n  }\n}\n\nfunction append(strings) {\n  let i = 1;\n  this._ += strings[0];\n  for (const j = strings.length; i < j; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  const d = Math.floor(digits);\n  if (!(d >= 0)) throw new RangeError(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  if (d !== cacheDigits) {\n    const k = 10 ** d;\n    cacheDigits = d;\n    cacheAppend = function append(strings) {\n      let i = 1;\n      this._ += strings[0];\n      for (const j = strings.length; i < j; ++i) {\n        this._ += Math.round(arguments[i] * k) / k + strings[i];\n      }\n    };\n  }\n  return cacheAppend;\n}\n","import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  return abs(point[0]) <= pi ? point[0] : sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n","import conicEqualArea from \"./conicEqualArea.js\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","import {epsilon} from \"../math.js\";\nimport albers from \"./albers.js\";\nimport conicEqualArea from \"./conicEqualArea.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math.js\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n        if (k === Infinity) return [2, 0];\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {degrees, pi, radians} from \"../math.js\";\nimport {projectionMutator} from \"./index.js\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {abs, asin, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea.js\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y,\n        l = atan2(x, abs(r0y)) * sign(r0y);\n    if (r0y * n < 0)\n      l -= pi * sign(x) * sign(r0y);\n    return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {asin, cos, sin} from \"../math.js\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n","import projection from \"./index.js\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import projection from \"./index.js\";\nimport {abs, epsilon} from \"../math.js\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import {asin, cos, epsilon, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\n  return [lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    lambda += deltaLambda;\n    if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\n    return [lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n"],"names":["$type","$math","$utils","Rectangle","RoundedRectangle","_beforeChanged","isDirty","_clear","_draw","width","height","w","h","wSign","Math","abs","hSign","isNumber","minSide","min","crtl","relativeToValue","get","crtr","crbr","crbl","maxcr","fitToRange","display","_display","moveTo","lineTo","arcTo","closePath","Object","defineProperty","enumerable","configurable","writable","value","classNames","concat","className","Adder","constructor","_partials","Float64Array","_n","add","x","p","i","j","y","hi","lo","valueOf","n","fsum","values","valueof","adder","undefined","index","fcumsum","from","v","flatten","arrays","array","merge","Array","range","start","stop","step","arguments","length","max","ceil","atan2","cos","quarterPi","radians","sin","tau","noop","stream","areaRingSum","areaSum","lambda00","phi00","lambda0","cosPhi0","sinPhi0","areaStream","point","lineStart","lineEnd","polygonStart","areaRingStart","areaRingEnd","polygonEnd","areaRing","sphere","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","k","u","object","cartesian","cartesianCross","cartesianNormalizeInPlace","spherical","degrees","epsilon","phi0","lambda1","phi1","lambda2","p0","deltaSum","ranges","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","push","linePoint","normal","equatorial","inflection","delta","sign","lambdai","phii","antimeridian","angle","rangeCompare","a","b","rangeContains","feature","merged","deltaMax","Infinity","sort","NaN","asin","sqrt","cartesianDot","cartesianAddInPlace","cartesianScale","vector","d","l","epsilon2","hypot","W0","W1","X0","Y0","Z0","X1","Y1","Z1","X2","Y2","Z2","x0","y0","z0","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointCartesian","z","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cx","cy","cz","m","constant","acos","rotateRadians","circleStream","radius","direction","t0","t1","cosRadius","sinRadius","circleRadius","t","center","precision","ring","rotate","circle","c","apply","r","invert","type","coordinates","_","clip","atan","halfPi","pi","clipAntimeridianLine","clipAntimeridianInterpolate","sign0","clean","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","to","lines","line","rejoin","pop","shift","result","pointEqual","cr","smallRadius","notHemisphere","interpolate","visible","clipLine","point0","c0","v0","v00","point1","point2","code","intersect","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","B","uu","t2","q","polar","meridian","q1","clipBuffer","clipRejoin","polygonContains","pointVisible","sink","ringBuffer","ringSink","polygonStarted","polygon","segments","pointRing","ringStart","ringEnd","startInside","compareIntersection","pointLine","ringSegments","segment","filter","validSegment","x1","y1","ax","ay","bx","by","dx","dy","clipMax","clipMin","clipRectangle","a1","corner","comparePoint","ca","cb","activeStream","bufferStream","x__","y__","v__","x_","y_","v_","first","clipStream","polygonInside","winding","a0","b0","b1","cleanInside","Intersection","points","other","entry","o","e","subject","forEach","p1","link","current","isSubject","compose","graticuleX","map","graticuleY","graticule","DX","DY","X","Y","outline","slice","reverse","extent","extentMinor","extentMajor","stepMinor","stepMajor","graticule10","haversin","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","lengthSum","lengthStream","lengthLineStart","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","sinDelta","PI","exp","floor","log","pow","tan","x00","y00","area","bounds","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","context","_context","prototype","_radius","pointRadius","_line","_point","arc","identity","pathArea","pathBounds","pathCentroid","pathMeasure","PathString","projection","digits","projectionStream","contextStream","path","measure","RangeError","lengthRing","cacheDigits","cacheAppend","cacheRadius","cacheCircle","_append","append","appendRound","s","strings","round","longitude","sum","sinPhi1","absDelta","intersection","phiArc","conicEqualArea","parallels","scale","translate","albers","fitExtent","fitSize","fitWidth","fitHeight","multiplex","streams","cache","cacheStream","lower48","lower48Point","alaska","alaskaPoint","hawaii","hawaiiPoint","pointStream","albersUsa","reset","clipExtent","size","azimuthalRaw","azimuthalInvert","sc","cc","projectionMutator","conicProjection","projectAt","cylindricalEqualAreaRaw","conicEqualAreaRaw","r0","project","r0y","forward","A1","A2","A3","A4","M","iterations","equalEarthRaw","l2","l6","fy","fpy","equirectangularRaw","default","geoStream","fit","fitBounds","clipAntimeridian","clipCircle","transformer","resample","transformRadians","transformRotate","scaleTranslate","sx","sy","transform","scaleTranslateRotate","alpha","cosAlpha","sinAlpha","ai","bi","ci","fi","deltaLambda","deltaPhi","deltaGamma","theta","preclip","postclip","delta2","projectResample","projectTransform","projectRotateTransform","clipAngle","recenter","reflectX","reflectY","rotation","mercatorRaw","mercatorProjection","reclip","naturalEarth1Raw","phi2","phi4","orthographicRaw","maxDepth","cosMinDistance","resampleNone","resampleLineTo","depth","d2","x2","y2","dx2","dy2","dz","a00","b00","c00","resampleStream","ringPoint","rotationIdentity","rotationLambda","rotationPhiGamma","forwardRotationLambda","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","streamGeometry","geometry","streamGeometryType","hasOwnProperty","streamObjectType","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","methods","TransformStream","key"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50]}