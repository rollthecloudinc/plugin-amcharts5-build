{"version":3,"file":"json_index.js","mappings":"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","sources":["./node_modules/@amcharts/amcharts5/.internal/core/render/Button.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Chart.js","./node_modules/@amcharts/amcharts5/.internal/core/render/HeatLegend.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Line.js","./node_modules/@amcharts/amcharts5/.internal/core/render/RoundedRectangle.js","./node_modules/@amcharts/amcharts5/.internal/core/render/SerialChart.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Slider.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Star.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Tick.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Triangle.js","./node_modules/@amcharts/amcharts5/.internal/core/render/gradients/RadialGradient.js","./node_modules/@amcharts/amcharts5/.internal/core/render/patterns/CirclePattern.js","./node_modules/@amcharts/amcharts5/.internal/core/render/patterns/LinePattern.js","./node_modules/@amcharts/amcharts5/.internal/core/render/patterns/PathPattern.js","./node_modules/@amcharts/amcharts5/.internal/core/render/patterns/RectanglePattern.js","./node_modules/@amcharts/amcharts5/.internal/core/util/DataParser.js","./node_modules/@amcharts/amcharts5/.internal/core/util/DataProcessor.js","./node_modules/@amcharts/amcharts5/.internal/core/util/Draw.js","./node_modules/@amcharts/amcharts5/.internal/core/util/Net.js","./node_modules/@amcharts/amcharts5/index.js"],"sourcesContent":["import { RoundedRectangle } from \"../render/RoundedRectangle\";\r\nimport { Container } from \"./Container\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Draws an interactive button.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/buttons/} for more info\r\n * @important\r\n */\r\nexport class Button extends Container {\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"button\"]);\r\n        super._afterNew();\r\n        if (!this._settings.background) {\r\n            this.set(\"background\", RoundedRectangle.new(this._root, {\r\n                themeTags: $utils.mergeTags(this._settings.themeTags, [\"background\"])\r\n            }));\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"icon\")) {\r\n            const previous = this._prevSettings.icon;\r\n            const icon = this.get(\"icon\");\r\n            if (icon !== previous) {\r\n                this._disposeProperty(\"icon\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (icon) {\r\n                    this.children.push(icon);\r\n                }\r\n                this._prevSettings.icon = icon;\r\n            }\r\n        }\r\n        if (this.isDirty(\"label\")) {\r\n            const previous = this._prevSettings.label;\r\n            const label = this.get(\"label\");\r\n            if (label !== previous) {\r\n                this._disposeProperty(\"label\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (label) {\r\n                    this.children.push(label);\r\n                }\r\n                this._prevSettings.label = label;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Button, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Button\"\r\n});\r\nObject.defineProperty(Button, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Button.className])\r\n});\r\n","import { Container } from \"../../core/render/Container\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\n/**\r\n * A base class for all charts.\r\n */\r\nexport class Chart extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] chart places its elements in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"chartContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { width: p100, height: p100, interactiveChildren: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] chart places its bullets in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { interactiveChildren: false, isMeasured: false, position: \"absolute\", width: p100, height: p100 })\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(Chart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Chart\"\r\n});\r\nObject.defineProperty(Chart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Chart.className])\r\n});\r\n","import { Container } from \"./Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { Tooltip } from \"../../core/render/Tooltip\";\r\nimport { LinearGradient } from \"../../core/render/gradients/LinearGradient\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $type from \"../../core/util/Type\";\r\n/**\r\n * Heat legend.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/heat-legend/} for more info\r\n */\r\nexport class HeatLegend extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] that all labels are placed in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"labelContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A [[Container]] that all markers are placed in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"markerContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A start [[Label]].\r\n         *\r\n         * @default Label.new()\r\n         */\r\n        Object.defineProperty(this, \"startLabel\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.labelContainer.children.push(Label.new(this._root, { themeTags: [\"start\"] }))\r\n        });\r\n        /**\r\n         * An end [[Label]].\r\n         *\r\n         * @default Label.new()\r\n         */\r\n        Object.defineProperty(this, \"endLabel\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.labelContainer.children.push(Label.new(this._root, { themeTags: [\"end\"] }))\r\n        });\r\n        /**\r\n         * List of rectangle elements used for default legend markers.\r\n         *\r\n         * @default new ListTemplate<RoundedRectangle>\r\n         */\r\n        Object.defineProperty(this, \"markers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => RoundedRectangle._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.markers.template.get(\"themeTags\", []), [this.get(\"orientation\"), \"heatlegend\", \"marker\"])\r\n            }, [this.markers.template]))\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"heatlegend\", this._settings.orientation]);\r\n        super._afterNew();\r\n        this.set(\"tooltip\", Tooltip.new(this._root, {\r\n            themeTags: [\"heatlegend\"]\r\n        }));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeMarker() {\r\n        const marker = this.markers.make();\r\n        marker.states.create(\"disabled\", {});\r\n        return marker;\r\n    }\r\n    /**\r\n     * Moves and shows tooltip at specific value.\r\n     *\r\n     * Can also specify optional text to show in tooltip, as well as the color.\r\n     *\r\n     * @param  value  Value\r\n     * @param  text   Text\r\n     * @param  color  Color\r\n     */\r\n    showValue(value, text, color) {\r\n        const tooltip = this.getTooltip();\r\n        if (tooltip && $type.isNumber(value)) {\r\n            const startValue = this.get(\"startValue\", 0);\r\n            const endValue = this.get(\"endValue\", 1);\r\n            const c = (value - startValue) / (endValue - startValue);\r\n            const startColor = this.get(\"startColor\");\r\n            const endColor = this.get(\"endColor\");\r\n            if (!text) {\r\n                text = this.getNumberFormatter().format(value);\r\n            }\r\n            if (!color) {\r\n                color = Color.interpolate(c, startColor, endColor);\r\n            }\r\n            tooltip.label.set(\"text\", text);\r\n            let p;\r\n            if (this.get(\"orientation\") == \"vertical\") {\r\n                p = this.markerContainer.toGlobal({ x: 0, y: this.innerHeight() * (1 - c) });\r\n            }\r\n            else {\r\n                p = this.markerContainer.toGlobal({ x: this.innerWidth() * c, y: 0 });\r\n            }\r\n            let background = tooltip.get(\"background\");\r\n            if (background) {\r\n                background.set(\"fill\", Color.interpolate(c, startColor, endColor));\r\n            }\r\n            tooltip.set(\"pointTo\", p);\r\n            tooltip.show();\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        const labelContainer = this.labelContainer;\r\n        const orientation = this.get(\"orientation\");\r\n        const startLabel = this.startLabel;\r\n        const endLabel = this.endLabel;\r\n        const tooltip = this.getTooltip();\r\n        if (this.isDirty(\"orientation\")) {\r\n            if (orientation == \"vertical\") {\r\n                this.markerContainer.setAll({ layout: this._root.verticalLayout, height: p100 });\r\n                this.set(\"layout\", this._root.horizontalLayout);\r\n                startLabel.setAll({ y: p100, x: undefined, centerY: p100, centerX: p100 });\r\n                endLabel.setAll({ y: 0, x: undefined, centerY: 0, centerX: p100 });\r\n                labelContainer.setAll({ height: p100, width: undefined });\r\n                if (tooltip) {\r\n                    tooltip.set(\"pointerOrientation\", \"horizontal\");\r\n                }\r\n            }\r\n            else {\r\n                this.markerContainer.setAll({ layout: this._root.horizontalLayout, width: p100 });\r\n                this.set(\"layout\", this._root.verticalLayout);\r\n                startLabel.setAll({ x: 0, y: undefined, centerX: 0, centerY: 0 });\r\n                endLabel.setAll({ x: p100, y: undefined, centerX: p100, centerY: 0 });\r\n                labelContainer.setAll({ width: p100, height: undefined });\r\n                if (tooltip) {\r\n                    tooltip.set(\"pointerOrientation\", \"vertical\");\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"stepCount\")) {\r\n            const stepCount = this.get(\"stepCount\", 1);\r\n            const startColor = this.get(\"startColor\");\r\n            const endColor = this.get(\"endColor\");\r\n            this.markerContainer.children.clear();\r\n            if (stepCount > 1) {\r\n                for (let i = 0; i < stepCount; i++) {\r\n                    const marker = this.makeMarker();\r\n                    if (orientation == \"vertical\") {\r\n                        this.markerContainer.children.moveValue(marker, 0);\r\n                    }\r\n                    else {\r\n                        this.markerContainer.children.push(marker);\r\n                    }\r\n                    if (startColor && endColor) {\r\n                        marker.set(\"fill\", Color.interpolate(i / stepCount, startColor, endColor));\r\n                    }\r\n                }\r\n            }\r\n            else if (stepCount == 1) {\r\n                const marker = this.makeMarker();\r\n                this.markerContainer.children.push(marker);\r\n                const gradient = LinearGradient.new(this._root, { stops: [{ color: startColor }, { color: endColor }] });\r\n                if (orientation == \"vertical\") {\r\n                    gradient.set(\"rotation\", 90);\r\n                    let stops = gradient.get(\"stops\");\r\n                    if (stops) {\r\n                        stops.reverse();\r\n                    }\r\n                }\r\n                else {\r\n                    gradient.set(\"rotation\", 0);\r\n                }\r\n                if (startColor && endColor) {\r\n                    marker.set(\"fillGradient\", gradient);\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"startText\") || this.isDirty(\"startValue\")) {\r\n            startLabel.set(\"text\", this.get(\"startText\", this.getNumberFormatter().format(this.get(\"startValue\", 0))));\r\n        }\r\n        if (this.isDirty(\"endText\") || this.isDirty(\"endValue\")) {\r\n            endLabel.set(\"text\", this.get(\"endText\", this.getNumberFormatter().format(this.get(\"endValue\", 1))));\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(HeatLegend, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"HeatLegend\"\r\n});\r\nObject.defineProperty(HeatLegend, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([HeatLegend.className])\r\n});\r\n","import { Graphics } from \"./Graphics\";\r\nimport * as $draw from \"../util/Draw\";\r\n/**\r\n * Draws a line.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Line extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"points\") || this.isDirty(\"segments\") || this._sizeDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            const points = this.get(\"points\");\r\n            const segments = this.get(\"segments\");\r\n            if (points && points.length > 0) {\r\n                let point = points[0];\r\n                this._display.moveTo(point.x, point.y);\r\n                $draw.segmentedLine(this._display, [[points]]);\r\n            }\r\n            else if (segments) {\r\n                $draw.segmentedLine(this._display, segments);\r\n            }\r\n            else if (!this.get(\"draw\")) {\r\n                let w = this.width();\r\n                let h = this.height();\r\n                this._display.moveTo(0, 0);\r\n                this._display.lineTo(w, h);\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Line, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Line\"\r\n});\r\nObject.defineProperty(Line, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Line.className])\r\n});\r\n","import * as $type from \"../util/Type\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport { Rectangle } from \"./Rectangle\";\r\n/**\r\n * Draws a rectangle with rounded corners.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class RoundedRectangle extends Rectangle {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"cornerRadiusTL\") || this.isDirty(\"cornerRadiusTR\") || this.isDirty(\"cornerRadiusBR\") || this.isDirty(\"cornerRadiusBL\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _draw() {\r\n        let width = this.width();\r\n        let height = this.height();\r\n        let w = width;\r\n        let h = height;\r\n        let wSign = w / Math.abs(width);\r\n        let hSign = h / Math.abs(height);\r\n        if ($type.isNumber(w) && $type.isNumber(h)) {\r\n            let minSide = Math.min(w, h) / 2;\r\n            let crtl = $utils.relativeToValue(this.get(\"cornerRadiusTL\", 8), minSide);\r\n            let crtr = $utils.relativeToValue(this.get(\"cornerRadiusTR\", 8), minSide);\r\n            let crbr = $utils.relativeToValue(this.get(\"cornerRadiusBR\", 8), minSide);\r\n            let crbl = $utils.relativeToValue(this.get(\"cornerRadiusBL\", 8), minSide);\r\n            let maxcr = Math.min(Math.abs(w / 2), Math.abs(h / 2));\r\n            crtl = $math.fitToRange(crtl, 0, maxcr);\r\n            crtr = $math.fitToRange(crtr, 0, maxcr);\r\n            crbr = $math.fitToRange(crbr, 0, maxcr);\r\n            crbl = $math.fitToRange(crbl, 0, maxcr);\r\n            const display = this._display;\r\n            display.moveTo(crtl * wSign, 0);\r\n            display.lineTo(w - crtr * wSign, 0);\r\n            if (crtr > 0) {\r\n                display.arcTo(w, 0, w, crtr * hSign, crtr);\r\n            }\r\n            display.lineTo(w, h - crbr * hSign);\r\n            if (crbr > 0) {\r\n                display.arcTo(w, h, w - crbr * wSign, h, crbr);\r\n            }\r\n            display.lineTo(crbl * wSign, h);\r\n            if (crbl > 0) {\r\n                display.arcTo(0, h, 0, h - crbl * hSign, crbl);\r\n            }\r\n            display.lineTo(0, crtl * hSign);\r\n            if (crtl > 0) {\r\n                display.arcTo(0, 0, crtl * wSign, 0, crtl);\r\n            }\r\n            display.closePath();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(RoundedRectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RoundedRectangle\"\r\n});\r\nObject.defineProperty(RoundedRectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Rectangle.classNames.concat([RoundedRectangle.className])\r\n});\r\n","import { Chart } from \"./Chart\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { ListAutoDispose } from \"../../core/util/List\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\n/**\r\n * A base class for all series-based charts.\r\n */\r\nexport class SerialChart extends Chart {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] where chart will store all series.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"seriesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, isMeasured: false })\r\n        });\r\n        /**\r\n         * A list of chart's series.\r\n         */\r\n        Object.defineProperty(this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._disposers.push(this.series);\r\n        const children = this.seriesContainer.children;\r\n        this._disposers.push(this.series.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (series) => {\r\n                    this._removeSeries(series);\r\n                });\r\n                const colors = this.get(\"colors\");\r\n                if (colors) {\r\n                    colors.reset();\r\n                }\r\n            }\r\n            else if (change.type === \"push\") {\r\n                children.moveValue(change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                children.setIndex(change.index, change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                children.insertIndex(change.index, change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._removeSeries(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                children.moveValue(change.value, change.newIndex);\r\n                this._processSeries(change.value);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        }));\r\n    }\r\n    _processSeries(series) {\r\n        series.chart = this;\r\n        series._placeBulletsContainer(this);\r\n    }\r\n    _removeSeries(series) {\r\n        if (!series.isDisposed()) {\r\n            this.seriesContainer.children.removeValue(series);\r\n            series._removeBulletsContainer();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(SerialChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"SerialChart\"\r\n});\r\nObject.defineProperty(SerialChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Chart.classNames.concat([SerialChart.className])\r\n});\r\n","import { Scrollbar } from \"./Scrollbar\";\r\n/**\r\n * A control that allows zooming chart's axes, or other uses requiring range\r\n * selection.\r\n */\r\nexport class Slider extends Scrollbar {\r\n    _afterNew() {\r\n        this._addOrientationClass();\r\n        super._afterNew();\r\n        this.endGrip.setPrivate(\"visible\", false);\r\n        this.thumb.setPrivate(\"visible\", false);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateGrips() {\r\n        super.updateGrips();\r\n        const startGrip = this.startGrip;\r\n        this.endGrip.setAll({ x: startGrip.x(), y: startGrip.y() });\r\n        this.setRaw(\"end\", this.get(\"start\"));\r\n    }\r\n}\r\nObject.defineProperty(Slider, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Slider\"\r\n});\r\nObject.defineProperty(Slider, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Scrollbar.classNames.concat([Slider.className])\r\n});\r\n","import { Graphics } from \"./Graphics\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Draws a Star.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Star extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"radius\") || this.isDirty(\"innerRadius\") || this.isDirty(\"spikes\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            const display = this._display;\r\n            const r = this.get(\"radius\", 0);\r\n            const ir = $utils.relativeToValue(this.get(\"innerRadius\", 0), r);\r\n            const spikes = this.get(\"spikes\", 0);\r\n            const step = Math.PI / spikes;\r\n            let angle = Math.PI / 2 * 3;\r\n            display.moveTo(0, -r);\r\n            for (let i = 0; i < spikes; i++) {\r\n                display.lineTo(Math.cos(angle) * r, Math.sin(angle) * r);\r\n                angle += step;\r\n                display.lineTo(Math.cos(angle) * ir, Math.sin(angle) * ir);\r\n                angle += step;\r\n            }\r\n            display.lineTo(0, -r);\r\n            display.closePath();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Star, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Star\"\r\n});\r\nObject.defineProperty(Star, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Star.className])\r\n});\r\n","import { Line } from \"./Line\";\r\n/**\r\n * Draws a tick element (mostly used on axes).\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n */\r\nexport class Tick extends Line {\r\n}\r\nObject.defineProperty(Tick, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Tick\"\r\n});\r\nObject.defineProperty(Tick, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Line.classNames.concat([Tick.className])\r\n});\r\n","import { Graphics } from \"./Graphics\";\r\n/**\r\n * Draws a triangle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Triangle extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear && !this.get(\"draw\")) {\r\n            this._draw();\r\n        }\r\n    }\r\n    _draw() {\r\n        const w = this.width();\r\n        const h = this.height();\r\n        const display = this._display;\r\n        display.moveTo(-w / 2, h / 2);\r\n        display.lineTo(0, -h / 2);\r\n        display.lineTo(w / 2, h / 2);\r\n        display.lineTo(-w / 2, h / 2);\r\n        display.closePath();\r\n    }\r\n    _updateSize() {\r\n        this.markDirty();\r\n        this._clear = true;\r\n    }\r\n}\r\nObject.defineProperty(Triangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Triangle\"\r\n});\r\nObject.defineProperty(Triangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Triangle.className])\r\n});\r\n","import { Gradient } from \"./Gradient\";\r\nimport { Color } from \"../../util/Color\";\r\nimport * as $array from \"../../util/Array\";\r\nimport * as $type from \"../../util/Type\";\r\nimport * as $utils from \"../../util/Utils\";\r\n/**\r\n * Radial gradient.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\r\n */\r\nexport class RadialGradient extends Gradient {\r\n    /**\r\n     * @ignore\r\n     */\r\n    getFill(target) {\r\n        const bounds = this.getBounds(target);\r\n        let x = 0;\r\n        let y = 0;\r\n        let l = bounds.left || 0;\r\n        let r = bounds.right || 0;\r\n        let t = bounds.top || 0;\r\n        let b = bounds.bottom || 0;\r\n        const width = r - l;\r\n        const height = b - t;\r\n        let radius = target.get(\"radius\");\r\n        if ($type.isNumber(radius)) {\r\n            x = 0;\r\n            y = 0;\r\n        }\r\n        else {\r\n            radius = Math.min(width, height) / 2;\r\n            x = width / 2;\r\n            y = height / 2;\r\n        }\r\n        let ux = this.get(\"x\");\r\n        let uy = this.get(\"y\");\r\n        if (ux != null) {\r\n            x = $utils.relativeToValue(ux, width);\r\n        }\r\n        if (uy != null) {\r\n            y = $utils.relativeToValue(uy, height);\r\n        }\r\n        const gradient = this._root._renderer.createRadialGradient(x, y, 0, x, y, radius);\r\n        const stops = this.get(\"stops\");\r\n        if (stops) {\r\n            let i = 0;\r\n            $array.each(stops, (stop) => {\r\n                let offset = stop.offset;\r\n                if (!$type.isNumber(offset)) {\r\n                    offset = i / (stops.length - 1);\r\n                }\r\n                let opacity = stop.opacity;\r\n                if (!$type.isNumber(opacity)) {\r\n                    opacity = 1;\r\n                }\r\n                let color = stop.color;\r\n                if (color) {\r\n                    const lighten = stop.lighten;\r\n                    if (lighten) {\r\n                        color = Color.lighten(color, lighten);\r\n                    }\r\n                    const brighten = stop.brighten;\r\n                    if (brighten) {\r\n                        color = Color.brighten(color, brighten);\r\n                    }\r\n                    gradient.addColorStop(offset, 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + opacity + ')');\r\n                }\r\n                i++;\r\n            });\r\n        }\r\n        return gradient;\r\n    }\r\n}\r\nObject.defineProperty(RadialGradient, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RadialGradient\"\r\n});\r\nObject.defineProperty(RadialGradient, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Gradient.classNames.concat([RadialGradient.className])\r\n});\r\n","import { Pattern } from \"./Pattern\";\r\nimport * as $math from \"../../util/Math\";\r\n/**\r\n * Circle pattern.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nexport class CirclePattern extends Pattern {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"gap\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _draw() {\r\n        super._draw();\r\n        const checkered = this.get(\"checkered\", false);\r\n        const centered = this.get(\"centered\", true);\r\n        const gap = this.get(\"gap\", 0);\r\n        const rotation = this.get(\"rotation\", 0);\r\n        let w = this.get(\"width\", 100);\r\n        let h = this.get(\"height\", 100);\r\n        let radius = this.get(\"radius\", 3);\r\n        let cellW = radius * 2 + gap;\r\n        let cellH = radius * 2 + gap;\r\n        let cols = Math.round(w / cellW);\r\n        let rows = Math.round(h / cellH);\r\n        cellW = w / cols;\r\n        cellH = h / rows;\r\n        if (rotation != 0) {\r\n            // @todo this is probably not right\r\n            this._display.x = cellW * $math.cos(rotation);\r\n            this._display.y = cellH * $math.sin(rotation);\r\n        }\r\n        const color = this.get(\"color\");\r\n        const colorOpacity = this.get(\"colorOpacity\");\r\n        if (color || colorOpacity) {\r\n            this._display.beginFill(color, colorOpacity);\r\n        }\r\n        for (let r = rotation == 0 ? 0 : -rows * 2; r < rows * 2; r++) {\r\n            for (let c = rotation == 0 ? 0 : -cols * 2; c < cols * 2; c++) {\r\n                if (!checkered || ((r & 1) != 1 && (c & 1) != 1) || ((r & 1) == 1 && (c & 1) == 1)) {\r\n                    let x = c * cellW;\r\n                    let y = r * cellH;\r\n                    if (centered) {\r\n                        x += cellW + gap / 2;\r\n                        y += cellH + gap / 2;\r\n                    }\r\n                    this._display.drawCircle(x - radius, y - radius, radius);\r\n                }\r\n            }\r\n        }\r\n        if (checkered) {\r\n            w = w / 2 - gap * 2;\r\n            h = h / 2 - gap * 2;\r\n        }\r\n        else {\r\n            w -= gap;\r\n            h -= gap;\r\n        }\r\n        if (color || colorOpacity) {\r\n            this._display.endFill();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(CirclePattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"CirclePattern\"\r\n});\r\nObject.defineProperty(CirclePattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Pattern.classNames.concat([CirclePattern.className])\r\n});\r\n","import { Pattern } from \"./Pattern\";\r\nimport * as $type from \"../../util//Type\";\r\n/**\r\n * Line pattern.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nexport class LinePattern extends Pattern {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"gap\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _draw() {\r\n        super._draw();\r\n        const w = this.get(\"width\", 100);\r\n        const h = this.get(\"height\", 100);\r\n        const gap = this.get(\"gap\", 0);\r\n        const strokeWidth = this.get(\"strokeWidth\", 1);\r\n        if (!gap) {\r\n            this._display.moveTo(0, 0);\r\n            this._display.lineTo(w, 0);\r\n        }\r\n        else {\r\n            let step = gap + strokeWidth;\r\n            let count = h / step;\r\n            for (let i = -count; i < count * 2; i++) {\r\n                const y = Math.round(i * step - step / 2) + 0.5;\r\n                this._display.moveTo(-w, y);\r\n                this._display.lineTo(w * 2, y);\r\n            }\r\n        }\r\n        this._display.lineStyle(strokeWidth, this.get(\"color\"), this.get(\"colorOpacity\"));\r\n        let strokeDasharray = this.get(\"strokeDasharray\");\r\n        if ($type.isNumber(strokeDasharray)) {\r\n            if (strokeDasharray < 0.5) {\r\n                strokeDasharray = [0];\r\n            }\r\n            else {\r\n                strokeDasharray = [strokeDasharray];\r\n            }\r\n        }\r\n        this._display.setLineDash(strokeDasharray);\r\n        const strokeDashoffset = this.get(\"strokeDashoffset\");\r\n        if (strokeDashoffset) {\r\n            this._display.setLineDashOffset(strokeDashoffset);\r\n        }\r\n        this._display.endStroke();\r\n    }\r\n}\r\nObject.defineProperty(LinePattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"LinePattern\"\r\n});\r\nObject.defineProperty(LinePattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Pattern.classNames.concat([LinePattern.className])\r\n});\r\n","import { Pattern } from \"./Pattern\";\r\n/**\r\n * A pattern that uses an SVG path.\r\n *\r\n * @since 5.2.33\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nexport class PathPattern extends Pattern {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"svgPath\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _draw() {\r\n        super._draw();\r\n        // const checkered = this.get(\"checkered\", false);\r\n        // const centered = this.get(\"centered\", true);\r\n        // const gap = this.get(\"gap\", 0);\r\n        // const rotation = this.get(\"rotation\", 0);\r\n        // let w = this.get(\"width\", 100);\r\n        // let h = this.get(\"height\", 100);\r\n        // let rectW = this.get(\"maxWidth\", 5);\r\n        // let rectH = this.get(\"maxHeight\", 5);\r\n        // let cellW = rectW + gap;\r\n        // let cellH = rectH + gap;\r\n        // let cols = Math.round(w / cellW);\r\n        // let rows = Math.round(h / cellH);\r\n        // cellW = w / cols;\r\n        // cellH = h / rows;\r\n        // if (rotation != 0) {\r\n        // \t// @todo this is probably not right\r\n        // \tthis._display.x = cellW / 2 * $math.cos(rotation);\r\n        // \tthis._display.y = -cellH / 2 * $math.sin(rotation);\r\n        // }\r\n        // for (let r = rotation == 0 ? 0 : -rows * 2; r < rows * 2; r++) {\r\n        // \tfor (let c = rotation == 0 ? 0 : -cols * 2; c < cols * 2; c++) {\r\n        // \t\tif (!checkered || ((r & 1) != 1 && (c & 1) != 1) || ((r & 1) == 1 && (c & 1) == 1)) {\r\n        // \t\t\tlet x = c * cellW;\r\n        // \t\t\tlet y = r * cellH;\r\n        // \t\t\tif (centered) {\r\n        // \t\t\t\tx += (cellW - rectW) / 2;\r\n        // \t\t\t\ty += (cellH - rectH) / 2;\r\n        // \t\t\t}\r\n        // \t\t\tthis._display.drawRect(x, y, rectW, rectH);\r\n        // \t\t}\r\n        // \t}\r\n        // }\r\n        // if (checkered) {\r\n        // \tw = w / 2 - gap * 2;\r\n        // \th = h / 2 - gap * 2;\r\n        // }\r\n        // else {\r\n        // \tw -= gap;\r\n        // \th -= gap;\r\n        // }\r\n        const svgPath = this.get(\"svgPath\");\r\n        if (svgPath != null) {\r\n            this._display.svgPath(svgPath);\r\n        }\r\n        const color = this.get(\"color\");\r\n        const colorOpacity = this.get(\"colorOpacity\");\r\n        if (color || colorOpacity) {\r\n            // this._display.lineStyle(strokeWidth, stroke, colorOpacity);\r\n            // this._display.endStroke();\r\n            this._display.beginFill(color, colorOpacity);\r\n            this._display.endFill();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PathPattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PathPattern\"\r\n});\r\nObject.defineProperty(PathPattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Pattern.classNames.concat([PathPattern.className])\r\n});\r\n","import { Pattern } from \"./Pattern\";\r\nimport * as $math from \"../../util/Math\";\r\n/**\r\n * Rectangle pattern.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nexport class RectanglePattern extends Pattern {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"gap\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _draw() {\r\n        super._draw();\r\n        const checkered = this.get(\"checkered\", false);\r\n        const centered = this.get(\"centered\", true);\r\n        const gap = this.get(\"gap\", 0);\r\n        const rotation = this.get(\"rotation\", 0);\r\n        let w = this.get(\"width\", 100);\r\n        let h = this.get(\"height\", 100);\r\n        let rectW = this.get(\"maxWidth\", 5);\r\n        let rectH = this.get(\"maxHeight\", 5);\r\n        let cellW = rectW + gap;\r\n        let cellH = rectH + gap;\r\n        let cols = Math.round(w / cellW);\r\n        let rows = Math.round(h / cellH);\r\n        cellW = w / cols;\r\n        cellH = h / rows;\r\n        if (rotation != 0) {\r\n            // @todo this is probably not right\r\n            this._display.x = cellW / 2 * $math.cos(rotation);\r\n            this._display.y = -cellH / 2 * $math.sin(rotation);\r\n        }\r\n        for (let r = rotation == 0 ? 0 : -rows * 2; r < rows * 2; r++) {\r\n            for (let c = rotation == 0 ? 0 : -cols * 2; c < cols * 2; c++) {\r\n                if (!checkered || ((r & 1) != 1 && (c & 1) != 1) || ((r & 1) == 1 && (c & 1) == 1)) {\r\n                    let x = c * cellW;\r\n                    let y = r * cellH;\r\n                    if (centered) {\r\n                        x += (cellW - rectW) / 2;\r\n                        y += (cellH - rectH) / 2;\r\n                    }\r\n                    this._display.drawRect(x, y, rectW, rectH);\r\n                }\r\n            }\r\n        }\r\n        if (checkered) {\r\n            w = w / 2 - gap * 2;\r\n            h = h / 2 - gap * 2;\r\n        }\r\n        else {\r\n            w -= gap;\r\n            h -= gap;\r\n        }\r\n        const color = this.get(\"color\");\r\n        const colorOpacity = this.get(\"colorOpacity\");\r\n        if (color || colorOpacity) {\r\n            // this._display.lineStyle(strokeWidth, stroke, colorOpacity);\r\n            // this._display.endStroke();\r\n            this._display.beginFill(color, colorOpacity);\r\n            this._display.endFill();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(RectanglePattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RectanglePattern\"\r\n});\r\nObject.defineProperty(RectanglePattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Pattern.classNames.concat([RectanglePattern.className])\r\n});\r\n","import * as $type from \"./Type\";\r\nimport * as $object from \"./Object\";\r\n/**\r\n * Tool to parse JSON string into structured data.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Parsing} for more info\r\n * @important\r\n */\r\nexport class JSONParser {\r\n    /**\r\n     * Parses JSON string.\r\n     *\r\n     * @param   input    JSON\r\n     * @param   options  Options\r\n     * @return           Data\r\n     */\r\n    static parse(input, options) {\r\n        options = this._applyDefaults(options);\r\n        try {\r\n            if ($type.isString(input)) {\r\n                let data = JSON.parse(input);\r\n                if (options.reverse && $type.isArray(data)) {\r\n                    data.reverse();\r\n                }\r\n                return data;\r\n            }\r\n            else if ($type.isArray(input) || $type.isObject(input)) {\r\n                return input;\r\n            }\r\n            else {\r\n                throw (\"Unable to parse JSON data\");\r\n            }\r\n        }\r\n        catch (e) {\r\n            return undefined;\r\n        }\r\n    }\r\n    static _applyDefaults(options) {\r\n        const normalized = {};\r\n        const defaults = {\r\n            reverse: false\r\n        };\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        $object.each(defaults, (key, val) => {\r\n            normalized[key] = options[key] || val;\r\n        });\r\n        return normalized;\r\n    }\r\n}\r\n/**\r\n * Tool to parse JSON string into structured data.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Parsing} for more info\r\n * @important\r\n */\r\nexport class CSVParser {\r\n    /**\r\n     * Parses CSV string.\r\n     *\r\n     * @param   input    CSV\r\n     * @param   options  Options\r\n     * @return           Data\r\n     */\r\n    static parse(input, options) {\r\n        options = this._applyDefaults(options);\r\n        // Get CSV data as array\r\n        let data = this.CSVToArray(input, options.delimiter);\r\n        // Init resuling array\r\n        let res = [], cols = [], col, i;\r\n        // Skip rows\r\n        for (i = 0; i < options.skipRows; i++) {\r\n            data.shift();\r\n        }\r\n        // First row holds column names?\r\n        if (options.useColumnNames) {\r\n            cols = data.shift();\r\n            // Normalize column names\r\n            for (let x = 0; x < cols.length; x++) {\r\n                // trim\r\n                col = cols[x] != null ? cols[x].replace(/^\\s+|\\s+$/gm, \"\") : \"\";\r\n                // Check for empty\r\n                if (\"\" === col) {\r\n                    col = \"col\" + x;\r\n                }\r\n                cols[x] = col;\r\n            }\r\n        }\r\n        // Iterate through the result set\r\n        let row;\r\n        while (true) {\r\n            row = options.reverse ? data.pop() : data.shift();\r\n            if (!row) {\r\n                break;\r\n            }\r\n            if (options.skipEmpty && row.length === 1 && row[0] === \"\") {\r\n                continue;\r\n            }\r\n            let dataPoint = {};\r\n            for (i = 0; i < row.length; i++) {\r\n                col = undefined === cols[i] ? \"col\" + i : cols[i];\r\n                dataPoint[col] = row[i];\r\n            }\r\n            res.push(dataPoint);\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    static CSVToArray(data, delimiter) {\r\n        // Check to see if the delimiter is defined. If not,\r\n        // then default to comma.\r\n        delimiter = (delimiter || ',');\r\n        // Create a regular expression to parse the CSV values.\r\n        let objPattern = new RegExp((\r\n        // Delimiters.\r\n        \"(\\\\\" + delimiter + \"|\\\\r?\\\\n|\\\\r|^)\" +\r\n            // Quoted fields.\r\n            \"(?:\\\"([^\\\"]*(?:\\\"\\\"[^\\\"]*)*)\\\"|\" +\r\n            // Standard fields.\r\n            \"([^\\\"\\\\\" + delimiter + \"\\\\r\\\\n]*))\"), \"gi\");\r\n        // Create an array to hold our data. Give the array\r\n        // a default empty first row.\r\n        let arrData = [\r\n            []\r\n        ];\r\n        // Create an array to hold our individual pattern\r\n        // matching groups.\r\n        let arrMatches = null;\r\n        // Keep looping over the regular expression matches\r\n        // until we can no longer find a match.\r\n        while (true) {\r\n            arrMatches = objPattern.exec(data);\r\n            if (!arrMatches) {\r\n                break;\r\n            }\r\n            // Get the delimiter that was found.\r\n            let strMatchedDelimiter = arrMatches[1];\r\n            // Check to see if the given delimiter has a length\r\n            // (is not the start of string) and if it matches\r\n            // field delimiter. If id does not, then we know\r\n            // that this delimiter is a row delimiter.\r\n            if (strMatchedDelimiter.length &&\r\n                (strMatchedDelimiter !== delimiter)) {\r\n                // Since we have reached a new row of data,\r\n                // add an empty row to our data array.\r\n                arrData.push([]);\r\n            }\r\n            // Now that we have our delimiter out of the way,\r\n            // let's check to see which kind of value we\r\n            // captured (quoted or unquoted).\r\n            let strMatchedValue;\r\n            if (arrMatches[2]) {\r\n                // We found a quoted value. When we capture\r\n                // this value, unescape any double quotes.\r\n                strMatchedValue = arrMatches[2].replace(new RegExp(\"\\\"\\\"\", \"g\"), \"\\\"\");\r\n            }\r\n            else {\r\n                // We found a non-quoted value.\r\n                strMatchedValue = arrMatches[3];\r\n            }\r\n            // Now that we have our value string, let's add\r\n            // it to the data array.\r\n            arrData[arrData.length - 1].push(strMatchedValue);\r\n        }\r\n        // Return the parsed data.\r\n        return (arrData);\r\n    }\r\n    static _applyDefaults(options) {\r\n        const normalized = {};\r\n        const defaults = {\r\n            delimiter: \",\",\r\n            reverse: false,\r\n            skipRows: 0,\r\n            skipEmpty: true,\r\n            useColumnNames: false\r\n        };\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        $object.each(defaults, (key, val) => {\r\n            normalized[key] = options[key] || val;\r\n        });\r\n        return normalized;\r\n    }\r\n}\r\n","import { Entity } from \"./Entity\";\r\nimport { Color } from \"./Color\";\r\nimport * as $type from \"./Type\";\r\nimport * as $object from \"./Object\";\r\nimport * as $array from \"./Array\";\r\n/**\r\n * A tool that can process the data before it is being used in charts.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\r\n * @important\r\n */\r\nexport class DataProcessor extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_checkDates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_checkNumbers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_checkColors\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_checkEmpty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_checkDeep\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._checkFeatures();\r\n        this.on(\"dateFields\", () => this._checkFeatures());\r\n        this.on(\"dateFormat\", () => this._checkFeatures());\r\n        this.on(\"numericFields\", () => this._checkFeatures());\r\n        this.on(\"colorFields\", () => this._checkFeatures());\r\n        this.on(\"emptyAs\", () => this._checkFeatures());\r\n    }\r\n    _checkFeatures() {\r\n        if (this.isDirty(\"dateFields\") || this.isDirty(\"dateFormat\")) {\r\n            this._checkDates = this.get(\"dateFields\") && (this.get(\"dateFields\").length > 0);\r\n        }\r\n        if (this.isDirty(\"numericFields\")) {\r\n            this._checkNumbers = this.get(\"numericFields\") && (this.get(\"numericFields\").length > 0);\r\n        }\r\n        if (this.isDirty(\"colorFields\")) {\r\n            this._checkColors = this.get(\"colorFields\") && (this.get(\"colorFields\").length > 0);\r\n        }\r\n        if (this.isDirty(\"emptyAs\")) {\r\n            this._checkEmpty = this.get(\"emptyAs\") != null;\r\n        }\r\n        this._checkDeepFeatures();\r\n    }\r\n    _checkDeepFeatures() {\r\n        const deepFields = [];\r\n        $array.each([\"dateFields\", \"numericFields\", \"colorFields\"], (where) => {\r\n            $array.each(this.get(where, []), (field) => {\r\n                const steps = field.split(\".\");\r\n                steps.pop();\r\n                while (steps.length > 0) {\r\n                    deepFields.push(steps.join(\".\"));\r\n                    steps.pop();\r\n                }\r\n            });\r\n        });\r\n        this._checkDeep = deepFields.length > 0;\r\n        this.setPrivate(\"deepFields\", deepFields);\r\n    }\r\n    /**\r\n     * Processess entire array of data.\r\n     *\r\n     * NOTE: calling this will modify original array!\r\n     */\r\n    processMany(data) {\r\n        if ($type.isArray(data) && (this._checkDates || this._checkNumbers || this._checkColors || this._checkEmpty)) {\r\n            $array.each(data, (row) => {\r\n                this.processRow(row);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Processes a row (object) of data.\r\n     *\r\n     * NOTE: calling this will modify values of the original object!\r\n     */\r\n    processRow(row, prefix = \"\") {\r\n        $object.each(row, (key, _value) => {\r\n            const lookupKey = prefix + key;\r\n            if (this._checkEmpty) {\r\n                row[key] = this._maybeToEmpty(row[key]);\r\n            }\r\n            if (this._checkNumbers) {\r\n                row[key] = this._maybeToNumber(lookupKey, row[key]);\r\n            }\r\n            if (this._checkDates) {\r\n                row[key] = this._maybeToDate(lookupKey, row[key]);\r\n            }\r\n            if (this._checkColors) {\r\n                row[key] = this._maybeToColor(lookupKey, row[key]);\r\n            }\r\n            if (this._checkDeep && this.getPrivate(\"deepFields\", []).indexOf(lookupKey) !== -1 && $type.isObject(row[key])) {\r\n                this.processRow(row[key], lookupKey + \".\");\r\n            }\r\n        });\r\n    }\r\n    _maybeToNumber(field, value) {\r\n        if (this.get(\"numericFields\").indexOf(field) !== -1) {\r\n            return $type.toNumber(value);\r\n        }\r\n        return value;\r\n    }\r\n    _maybeToDate(field, value) {\r\n        if (this.get(\"dateFields\").indexOf(field) !== -1) {\r\n            return this._root.dateFormatter.parse(value, this.get(\"dateFormat\", \"\")).getTime();\r\n        }\r\n        return value;\r\n    }\r\n    _maybeToEmpty(value) {\r\n        if ((value == null || value == \"\") && this.get(\"emptyAs\") != null) {\r\n            return this.get(\"emptyAs\");\r\n        }\r\n        return value;\r\n    }\r\n    _maybeToColor(field, value) {\r\n        if (this.get(\"colorFields\").indexOf(field) !== -1) {\r\n            return Color.fromAny(value);\r\n        }\r\n        return value;\r\n    }\r\n}\r\n","/** @ignore */ /** */\r\nimport * as $math from \"./Math\";\r\n/**\r\n * @ignore\r\n */\r\nexport function segmentedLine(display, segments) {\r\n    for (let s = 0, len = segments.length; s < len; s++) {\r\n        const groups = segments[s];\r\n        if (groups.length > 0) {\r\n            let firstGroup = groups[0];\r\n            if (firstGroup.length > 0) {\r\n                let firstPoint = firstGroup[0];\r\n                display.moveTo(firstPoint.x, firstPoint.y);\r\n                for (let g = 0, len = groups.length; g < len; g++) {\r\n                    line(display, groups[g]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function line(display, points) {\r\n    for (let p = 0, len = points.length; p < len; p++) {\r\n        const point = points[p];\r\n        display.lineTo(point.x, point.y);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function moveTo(display, point) {\r\n    display.moveTo(point.x, point.y);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function clear(display) {\r\n    display.clear();\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function smoothedSegmentedline(display, segments, tensionX, tensionY) {\r\n    for (let s = 0, len = segments.length; s < len; s++) {\r\n        const groups = segments[s];\r\n        if (groups.length > 0) {\r\n            let firstGroup = groups[0];\r\n            if (firstGroup.length > 0) {\r\n                let firstPoint = firstGroup[0];\r\n                display.moveTo(firstPoint.x, firstPoint.y);\r\n                for (let g = 0, len = groups.length; g < len; g++) {\r\n                    const points = groups[g];\r\n                    if (points.length > 0) {\r\n                        display.lineTo(points[0].x, points[0].y);\r\n                    }\r\n                    smoothedLine(display, points, tensionX, tensionY);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function smoothedLine(display, points, tensionX, tensionY) {\r\n    for (let i = points.length - 1; i > 0; i--) {\r\n        let p0 = points[i];\r\n        let p1 = points[i - 1];\r\n        if (Math.abs(p0.x - p1.x) < 0.1 && Math.abs(p0.y - p1.y) < 0.1) {\r\n            points.splice(i - 1, 1);\r\n        }\r\n    }\r\n    if (points.length < 3 || (tensionX >= 1 && tensionY >= 1)) {\r\n        line(display, points);\r\n        return;\r\n    }\r\n    tensionX = 1 - tensionX + 0.00001;\r\n    tensionY = 1 - tensionY + 0.00001;\r\n    let first = points[0];\r\n    let last = points[points.length - 1];\r\n    let closed = false;\r\n    if ($math.round(first.x, 3) == $math.round(last.x) && $math.round(first.y) == $math.round(last.y)) {\r\n        closed = true;\r\n    }\r\n    // Can't moveTo here, as it wont be possible to have fill then.\r\n    let path = \"\";\r\n    for (let i = 0, len = points.length - 1; i < len; i++) {\r\n        let p0 = points[i - 1];\r\n        let p1 = points[i];\r\n        let p2 = points[i + 1];\r\n        let p3 = points[i + 2];\r\n        if (i === 0) {\r\n            if (closed) {\r\n                p0 = points[len - 2];\r\n            }\r\n            else {\r\n                p0 = points[0];\r\n            }\r\n        }\r\n        else if (i == len - 1) {\r\n            if (closed) {\r\n                p3 = points[1];\r\n            }\r\n            else {\r\n                p3 = p2;\r\n            }\r\n        }\r\n        let controlPointA = $math.getCubicControlPointA(p0, p1, p2, tensionX, tensionY);\r\n        let controlPointB = $math.getCubicControlPointB(p1, p2, p3, tensionX, tensionY);\r\n        display.bezierCurveTo(controlPointA.x, controlPointA.y, controlPointB.x, controlPointB.y, p2.x, p2.y);\r\n    }\r\n    return path;\r\n}\r\n","/**\r\n * A collection of network-related functions\r\n */\r\n/**\r\n * Loads an external file via its URL.\r\n *\r\n * Please note that this is an asynchronous function.\r\n *\r\n * It will not return the result, but rather a `Promise`.\r\n *\r\n * You can use the `await` notion, or `then()`.\r\n *\r\n * ```TypeScript\r\n * // Using await\r\n * let response = await Net.load( \"http://www.my.com/data.json\" );\r\n * console.log( response.response );\r\n *\r\n * // Using then()\r\n * Net.load( \"http://www.my.com/data.json\" ).then( ( response ) => {\r\n *   console.log( response.response );\r\n * } );\r\n * ```\r\n * ```JavaScript\r\n * // Using then()\r\n * Net.load( \"http://www.my.com/data.json\" ).then( function( response ) {\r\n *   console.log( response.response );\r\n * } );\r\n * ```\r\n *\r\n * @async\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/net-load-utility/} for more info\r\n * @param url      URL for the file to load\r\n * @param target   A target element that is requesting the net load\r\n * @param options  Request options\r\n * @return Result (Promise)\r\n */\r\nexport function load(url, target, options) {\r\n    return new Promise((success, error) => {\r\n        // Is return type Blob?\r\n        let isBlob = options != null && options.responseType == \"blob\";\r\n        // Create request and set up handlers\r\n        let xhr = new XMLHttpRequest();\r\n        xhr.onload = () => {\r\n            if (xhr.status === 200) {\r\n                let response;\r\n                let blob;\r\n                if (isBlob) {\r\n                    blob = xhr.response;\r\n                    readBlob(blob).then((response) => {\r\n                        let output = {\r\n                            xhr: xhr,\r\n                            error: false,\r\n                            response: response,\r\n                            blob: blob,\r\n                            type: xhr.getResponseHeader(\"Content-Type\"),\r\n                            target: target\r\n                        };\r\n                        success(output);\r\n                    });\r\n                    return;\r\n                }\r\n                else {\r\n                    response = xhr.responseText || xhr.response;\r\n                }\r\n                let output = {\r\n                    xhr: xhr,\r\n                    error: false,\r\n                    response: response,\r\n                    blob: blob,\r\n                    type: xhr.getResponseHeader(\"Content-Type\"),\r\n                    target: target\r\n                };\r\n                success(output);\r\n            }\r\n            else {\r\n                error({\r\n                    xhr: xhr,\r\n                    error: true,\r\n                    type: xhr.getResponseHeader(\"Content-Type\"),\r\n                    target: target\r\n                });\r\n            }\r\n        };\r\n        xhr.onerror = () => {\r\n            error({\r\n                xhr: xhr,\r\n                error: true,\r\n                type: xhr.getResponseHeader(\"Content-Type\"),\r\n                target: target\r\n            });\r\n        };\r\n        // Open request\r\n        xhr.open(\"GET\", url, true);\r\n        if (options && options.withCredentials) {\r\n            xhr.withCredentials = true;\r\n        }\r\n        // Process options\r\n        if (options != null) {\r\n            if (options.requestHeaders != null) {\r\n                for (let i = 0; i < options.requestHeaders.length; i++) {\r\n                    let header = options.requestHeaders[i];\r\n                    xhr.setRequestHeader(header.key, header.value);\r\n                }\r\n            }\r\n            if (options.responseType != null) {\r\n                xhr.responseType = options.responseType;\r\n            }\r\n        }\r\n        // Send request\r\n        xhr.send();\r\n    });\r\n}\r\n/**\r\n * Returns textual representation of a Blob object.\r\n *\r\n * @param   blob  Target blob\r\n * @return        Text promise\r\n */\r\nexport function readBlob(blob) {\r\n    return new Promise((success, error) => {\r\n        const reader = new FileReader();\r\n        reader.onload = _event => {\r\n            success(reader.result);\r\n        };\r\n        reader.onerror = (e) => {\r\n            error(e);\r\n        };\r\n        reader.readAsText(blob);\r\n    });\r\n}\r\n","export { Root } from \"./.internal/core/Root\";\r\nexport { Theme } from \"./.internal/core/Theme\";\r\nexport { addLicense, registry, disposeAllRootElements } from \"./.internal/core/Registry\";\r\nexport { ready } from \"./.internal/core/util/Utils\";\r\nexport { Modal } from \"./.internal/core/util/Modal\";\r\nexport { Entity } from \"./.internal/core/util/Entity\";\r\nexport { Disposer, ArrayDisposer, MultiDisposer, MutableValueDisposer, CounterDisposer } from \"./.internal/core/util/Disposer\";\r\nexport { Bullet } from \"./.internal/core/render/Bullet\";\r\nexport { Button } from \"./.internal/core/render/Button\";\r\nexport { Circle } from \"./.internal/core/render/Circle\";\r\nexport { Ellipse } from \"./.internal/core/render/Ellipse\";\r\nexport { Star } from \"./.internal/core/render/Star\";\r\nexport { Component, DataItem } from \"./.internal/core/render/Component\";\r\nexport { Container } from \"./.internal/core/render/Container\";\r\nexport { Graphics } from \"./.internal/core/render/Graphics\";\r\nexport { GridLayout } from \"./.internal/core/render/GridLayout\";\r\nexport { HeatLegend } from \"./.internal/core/render/HeatLegend\";\r\nexport { HorizontalLayout } from \"./.internal/core/render/HorizontalLayout\";\r\nexport { Label } from \"./.internal/core/render/Label\";\r\nexport { Layout } from \"./.internal/core/render/Layout\";\r\nexport { Legend } from \"./.internal/core/render/Legend\";\r\nexport { Line } from \"./.internal/core/render/Line\";\r\nexport { Picture } from \"./.internal/core/render/Picture\";\r\nexport { PointedRectangle } from \"./.internal/core/render/PointedRectangle\";\r\nexport { RadialLabel } from \"./.internal/core/render/RadialLabel\";\r\nexport { RadialText } from \"./.internal/core/render/RadialText\";\r\nexport { Rectangle } from \"./.internal/core/render/Rectangle\";\r\nexport { Triangle } from \"./.internal/core/render/Triangle\";\r\nexport { RoundedRectangle } from \"./.internal/core/render/RoundedRectangle\";\r\nexport { Scrollbar } from \"./.internal/core/render/Scrollbar\";\r\nexport { Slider } from \"./.internal/core/render/Slider\";\r\nexport { Slice } from \"./.internal/core/render/Slice\";\r\nexport { Sprite } from \"./.internal/core/render/Sprite\";\r\nexport { Series } from \"./.internal/core/render/Series\";\r\nexport { Chart } from \"./.internal/core/render/Chart\";\r\nexport { SerialChart } from \"./.internal/core/render/SerialChart\";\r\nexport { Text } from \"./.internal/core/render/Text\";\r\nexport { Tick } from \"./.internal/core/render/Tick\";\r\nexport { Tooltip } from \"./.internal/core/render/Tooltip\";\r\nexport { VerticalLayout } from \"./.internal/core/render/VerticalLayout\";\r\nexport { Timezone } from \"./.internal/core/util/Timezone\";\r\nexport { Gradient } from \"./.internal/core/render/gradients/Gradient\";\r\nexport { LinearGradient } from \"./.internal/core/render/gradients/LinearGradient\";\r\nexport { RadialGradient } from \"./.internal/core/render/gradients/RadialGradient\";\r\nexport { CirclePattern } from \"./.internal/core/render/patterns/CirclePattern\";\r\nexport { LinePattern } from \"./.internal/core/render/patterns/LinePattern\";\r\nexport { Pattern } from \"./.internal/core/render/patterns/Pattern\";\r\nexport { PicturePattern } from \"./.internal/core/render/patterns/PicturePattern\";\r\nexport { RectanglePattern } from \"./.internal/core/render/patterns/RectanglePattern\";\r\nexport { PathPattern } from \"./.internal/core/render/patterns/PathPattern\";\r\nexport { Color, color } from \"./.internal/core/util/Color\";\r\nexport { ColorSet } from \"./.internal/core/util/ColorSet\";\r\nexport { ListData, JsonData } from \"./.internal/core/util/Data\";\r\nexport { JSONParser, CSVParser } from \"./.internal/core/util/DataParser\";\r\nexport { DataProcessor } from \"./.internal/core/util/DataProcessor\";\r\nexport { DateFormatter } from \"./.internal/core/util/DateFormatter\";\r\nexport { DurationFormatter } from \"./.internal/core/util/DurationFormatter\";\r\nexport { InterfaceColors } from \"./.internal/core/util/InterfaceColors\";\r\n//export { Language, ILanguageSettings } from \"./.internal/core/util/Language\";\r\n//export { List, IListSettings } from \"./.internal/core/util/List\";\r\nexport { NumberFormatter } from \"./.internal/core/util/NumberFormatter\";\r\nexport { Percent, percent, p100, p50, p0 } from \"./.internal/core/util/Percent\";\r\nexport { Template } from \"./.internal/core/util/Template\";\r\nexport { TextFormatter } from \"./.internal/core/util/TextFormatter\";\r\nexport { SpriteResizer } from \"./.internal/core/render/SpriteResizer\";\r\nimport * as array from \"./.internal/core/util/Array\";\r\nexport { array };\r\nimport * as ease from \"./.internal/core/util/Ease\";\r\nexport { ease };\r\nimport * as math from \"./.internal/core/util/Math\";\r\nexport { math };\r\nimport * as net from \"./.internal/core/util/Net\";\r\nexport { net };\r\nimport * as object from \"./.internal/core/util/Object\";\r\nexport { object };\r\nimport * as time from \"./.internal/core/util/Time\";\r\nexport { time };\r\nimport * as type from \"./.internal/core/util/Type\";\r\nexport { type };\r\nimport * as utils from \"./.internal/core/util/Utils\";\r\nexport { utils };\r\n"],"names":["RoundedRectangle","Container","$utils","Button","_afterNew","_settings","themeTags","mergeTags","background","set","new","_root","_prepareChildren","isDirty","previous","_prevSettings","icon","get","_disposeProperty","dispose","children","push","label","Object","defineProperty","enumerable","configurable","writable","value","classNames","concat","className","p100","Chart","constructor","arguments","width","height","interactiveChildren","isMeasured","position","Label","Template","ListTemplate","Color","Tooltip","LinearGradient","$type","HeatLegend","labelContainer","_new","markers","template","orientation","makeMarker","marker","make","states","create","showValue","text","color","tooltip","getTooltip","isNumber","startValue","endValue","c","startColor","endColor","getNumberFormatter","format","interpolate","p","markerContainer","toGlobal","x","y","innerHeight","innerWidth","show","startLabel","endLabel","setAll","layout","verticalLayout","horizontalLayout","undefined","centerY","centerX","stepCount","clear","i","moveValue","gradient","stops","reverse","Graphics","$draw","Line","_beforeChanged","_sizeDirty","isPrivateDirty","_clear","_changed","points","segments","length","point","_display","moveTo","segmentedLine","w","h","lineTo","$math","Rectangle","_draw","wSign","Math","abs","hSign","minSide","min","crtl","relativeToValue","crtr","crbr","crbl","maxcr","fitToRange","display","arcTo","closePath","ListAutoDispose","$array","SerialChart","_disposers","series","seriesContainer","events","onAll","change","type","each","oldValues","_removeSeries","colors","reset","newValue","_processSeries","setIndex","index","insertIndex","oldValue","newIndex","Error","chart","_placeBulletsContainer","isDisposed","removeValue","_removeBulletsContainer","Scrollbar","Slider","_addOrientationClass","endGrip","setPrivate","thumb","updateGrips","startGrip","setRaw","Star","r","ir","spikes","step","PI","angle","cos","sin","Tick","Triangle","_updateSize","markDirty","Gradient","RadialGradient","getFill","target","bounds","getBounds","l","left","right","t","top","b","bottom","radius","ux","uy","_renderer","createRadialGradient","stop","offset","opacity","lighten","brighten","addColorStop","g","Pattern","CirclePattern","checkered","centered","gap","rotation","cellW","cellH","cols","round","rows","colorOpacity","beginFill","drawCircle","endFill","LinePattern","strokeWidth","count","lineStyle","strokeDasharray","setLineDash","strokeDashoffset","setLineDashOffset","endStroke","PathPattern","svgPath","RectanglePattern","rectW","rectH","drawRect","$object","JSONParser","parse","input","options","_applyDefaults","isString","data","JSON","isArray","isObject","e","normalized","defaults","key","val","CSVParser","CSVToArray","delimiter","res","col","skipRows","shift","useColumnNames","replace","row","pop","skipEmpty","dataPoint","objPattern","RegExp","arrData","arrMatches","exec","strMatchedDelimiter","strMatchedValue","Entity","DataProcessor","_checkFeatures","on","_checkDates","_checkNumbers","_checkColors","_checkEmpty","_checkDeepFeatures","deepFields","where","field","steps","split","join","_checkDeep","processMany","processRow","prefix","_value","lookupKey","_maybeToEmpty","_maybeToNumber","_maybeToDate","_maybeToColor","getPrivate","indexOf","toNumber","dateFormatter","getTime","fromAny","s","len","groups","firstGroup","firstPoint","line","smoothedSegmentedline","tensionX","tensionY","smoothedLine","p0","p1","splice","first","last","closed","path","p2","p3","controlPointA","getCubicControlPointA","controlPointB","getCubicControlPointB","bezierCurveTo","load","url","Promise","success","error","isBlob","responseType","xhr","XMLHttpRequest","onload","status","response","blob","readBlob","then","output","getResponseHeader","responseText","onerror","open","withCredentials","requestHeaders","header","setRequestHeader","send","reader","FileReader","_event","result","readAsText","Root","Theme","addLicense","registry","disposeAllRootElements","ready","Modal","Disposer","ArrayDisposer","MultiDisposer","MutableValueDisposer","CounterDisposer","Bullet","Circle","Ellipse","Component","DataItem","GridLayout","HorizontalLayout","Layout","Legend","Picture","PointedRectangle","RadialLabel","RadialText","Slice","Sprite","Series","Text","VerticalLayout","Timezone","PicturePattern","ColorSet","ListData","JsonData","DateFormatter","DurationFormatter","InterfaceColors","NumberFormatter","Percent","percent","p50","TextFormatter","SpriteResizer","array","ease","math","net","object","time","utils"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]}