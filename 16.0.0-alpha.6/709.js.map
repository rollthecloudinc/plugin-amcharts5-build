{"version":3,"file":"709.js","mappings":"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","sources":["./node_modules/rxjs/dist/esm/internal/observable/empty.js","./node_modules/rxjs/dist/esm/internal/operators/OperatorSubscriber.js","./node_modules/rxjs/dist/esm/internal/operators/take.js","./node_modules/rxjs/dist/esm/internal/operators/takeUntil.js","./node_modules/rxjs/dist/esm/internal/util/lift.js","./node_modules/@angular/material/fesm2022/legacy-select.mjs"],"sourcesContent":["import { Observable } from '../Observable';\nexport const EMPTY = new Observable((subscriber) => subscriber.complete());\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nfunction emptyScheduled(scheduler) {\n    return new Observable((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n","import { Subscriber } from '../Subscriber';\nexport function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {\n    return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\nexport class OperatorSubscriber extends Subscriber {\n    constructor(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {\n        super(destination);\n        this.onFinalize = onFinalize;\n        this.shouldUnsubscribe = shouldUnsubscribe;\n        this._next = onNext\n            ? function (value) {\n                try {\n                    onNext(value);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n            }\n            : super._next;\n        this._error = onError\n            ? function (err) {\n                try {\n                    onError(err);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : super._error;\n        this._complete = onComplete\n            ? function () {\n                try {\n                    onComplete();\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : super._complete;\n    }\n    unsubscribe() {\n        var _a;\n        if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n            const { closed } = this;\n            super.unsubscribe();\n            !closed && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));\n        }\n    }\n}\n","import { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function take(count) {\n    return count <= 0\n        ?\n            () => EMPTY\n        : operate((source, subscriber) => {\n            let seen = 0;\n            source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n                if (++seen <= count) {\n                    subscriber.next(value);\n                    if (count <= seen) {\n                        subscriber.complete();\n                    }\n                }\n            }));\n        });\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\nexport function takeUntil(notifier) {\n    return operate((source, subscriber) => {\n        innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, () => subscriber.complete(), noop));\n        !subscriber.closed && source.subscribe(subscriber);\n    });\n}\n","import { isFunction } from './isFunction';\nexport function hasLift(source) {\n    return isFunction(source === null || source === void 0 ? void 0 : source.lift);\n}\nexport function operate(init) {\n    return (source) => {\n        if (hasLift(source)) {\n            return source.lift(function (liftedSource) {\n                try {\n                    return init(liftedSource, this);\n                }\n                catch (err) {\n                    this.error(err);\n                }\n            });\n        }\n        throw new TypeError('Unable to lift unknown Observable type');\n    };\n}\n","import * as i2 from '@angular/cdk/overlay';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _countGroupLabelsBeforeLegacyOption, _getLegacyOptionScrollPosition, MAT_LEGACY_OPTION_PARENT_COMPONENT, MatLegacyOption, MAT_LEGACY_OPTGROUP, MatLegacyOptionModule } from '@angular/material/legacy-core';\nimport { MatLegacyFormFieldControl, MatLegacyFormFieldModule } from '@angular/material/legacy-form-field';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { MAT_SELECT_TRIGGER, _MatSelectBase, MAT_SELECT_SCROLL_STRATEGY_PROVIDER } from '@angular/material/select';\nexport { MAT_SELECT_CONFIG as MAT_LEGACY_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY as MAT_LEGACY_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER as MAT_LEGACY_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY as MAT_LEGACY_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_TRIGGER as MAT_LEGACY_SELECT_TRIGGER } from '@angular/material/select';\nimport { takeUntil, take } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n * @deprecated Use `matSelectAnimations` from `@angular/material/select` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nconst matLegacySelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true })),\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0,\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            transform: 'scaleY(1)',\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            transform: 'scaleY(1)',\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 }))),\n    ]),\n};\n\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n/**\n * The max height of the select's overlay panel.\n * @deprecated Use `SELECT_PANEL_MAX_HEIGHT` from `@angular/material/select` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis.\n * @deprecated Use `SELECT_PANEL_PADDING_X` from `@angular/material/select` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nconst SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n * @deprecated Use `SELECT_PANEL_INDENT_PADDING_X` from `@angular/material/select` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n * @deprecated Use `SELECT_ITEM_HEIGHT_EM` from `@angular/material/select` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n *\n * @deprecated Use `SELECT_MULTIPLE_PANEL_PADDING_X` from `@angular/material/select` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n * @deprecated Use `SELECT_PANEL_VIEWPORT_PADDING` from `@angular/material/select` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Change event object that is emitted when the select value has changed.\n * @deprecated Use `MatSelectChange` from `@angular/material/select` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySelectChange {\n    constructor(\n    /** Reference to the select that emitted the change event. */\n    source, \n    /** Current value of the select that emitted the event. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n * @deprecated Use `MatSelectTrigger` from `@angular/material/select` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySelectTrigger {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySelectTrigger, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacySelectTrigger, selector: \"mat-select-trigger\", providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatLegacySelectTrigger }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySelectTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-select-trigger',\n                    providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatLegacySelectTrigger }],\n                }]\n        }] });\n/**\n * @deprecated Use `MatSelect` from `@angular/material/select` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySelect extends _MatSelectBase {\n    constructor() {\n        super(...arguments);\n        /** The scroll position of the overlay panel, calculated to center the selected option. */\n        this._scrollTop = 0;\n        /** The cached font-size of the trigger element. */\n        this._triggerFontSize = 0;\n        /** The value of the select panel's transform-origin property. */\n        this._transformOrigin = 'top';\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this._viewportRuler\n            .change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n            if (this.panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    open() {\n        if (super._canOpen()) {\n            super.open();\n            this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n            // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n            // `parseInt` ignores the trailing 'px' and converts this to a number.\n            this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n            this._calculateOverlayPosition();\n            // Set the font size on the panel element once it exists.\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                if (this._triggerFontSize &&\n                    this._overlayDir.overlayRef &&\n                    this._overlayDir.overlayRef.overlayElement) {\n                    this._overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n        }\n    }\n    /** Scrolls the active option into view. */\n    _scrollOptionIntoView(index) {\n        const labelCount = _countGroupLabelsBeforeLegacyOption(index, this.options, this.optionGroups);\n        const itemHeight = this._getItemHeight();\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            this.panel.nativeElement.scrollTop = 0;\n        }\n        else {\n            this.panel.nativeElement.scrollTop = _getLegacyOptionScrollPosition((index + labelCount) * itemHeight, itemHeight, this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n        }\n    }\n    _positioningSettled() {\n        this._calculateOverlayOffsetX();\n        this.panel.nativeElement.scrollTop = this._scrollTop;\n    }\n    _panelDoneAnimating(isOpen) {\n        if (this.panelOpen) {\n            this._scrollTop = 0;\n        }\n        else {\n            this._overlayDir.offsetX = 0;\n            this._changeDetectorRef.markForCheck();\n        }\n        super._panelDoneAnimating(isOpen);\n    }\n    _getChangeEvent(value) {\n        return new MatLegacySelectChange(this, value);\n    }\n    _getOverlayMinWidth() {\n        return this._triggerRect?.width;\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    _calculateOverlayOffsetX() {\n        const overlayRect = this._overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        const paddingWidth = this.multiple\n            ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X\n            : SELECT_PANEL_PADDING_X * 2;\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else if (this.disableOptionCentering) {\n            offsetX = SELECT_PANEL_PADDING_X;\n        }\n        else {\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this._overlayDir.offsetX = Math.round(offsetX);\n        this._overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this.disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            let partialItemHeight = itemHeight - ((this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight);\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    _calculateOverlayPosition() {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset;\n        if (this.empty) {\n            selectedOptionOffset = 0;\n        }\n        else {\n            selectedOptionOffset = Math.max(this.options.toArray().indexOf(this._selectionModel.selected[0]), 0);\n        }\n        selectedOptionOffset += _countGroupLabelsBeforeLegacyOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /** Sets the transform origin point based on the selected option. */\n    _getOriginBasedOnOption() {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /** Calculates the height of the select's options. */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySelect, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacySelect, selector: \"mat-select\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, host: { attributes: { \"role\": \"combobox\", \"aria-autocomplete\": \"none\", \"aria-haspopup\": \"true\", \"ngSkipHydration\": \"\" }, listeners: { \"keydown\": \"_handleKeydown($event)\", \"focus\": \"_onFocus()\", \"blur\": \"_onBlur()\" }, properties: { \"attr.id\": \"id\", \"attr.tabindex\": \"tabIndex\", \"attr.aria-controls\": \"panelOpen ? id + \\\"-panel\\\" : null\", \"attr.aria-expanded\": \"panelOpen\", \"attr.aria-label\": \"ariaLabel || null\", \"attr.aria-required\": \"required.toString()\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-invalid\": \"errorState\", \"attr.aria-activedescendant\": \"_getAriaActiveDescendant()\", \"class.mat-select-disabled\": \"disabled\", \"class.mat-select-invalid\": \"errorState\", \"class.mat-select-required\": \"required\", \"class.mat-select-empty\": \"empty\", \"class.mat-select-multiple\": \"multiple\" }, classAttribute: \"mat-select\" }, providers: [\n            { provide: MatLegacyFormFieldControl, useExisting: MatLegacySelect },\n            { provide: MAT_LEGACY_OPTION_PARENT_COMPONENT, useExisting: MatLegacySelect },\n        ], queries: [{ propertyName: \"customTrigger\", first: true, predicate: MAT_SELECT_TRIGGER, descendants: true }, { propertyName: \"options\", predicate: MatLegacyOption, descendants: true }, { propertyName: \"optionGroups\", predicate: MAT_LEGACY_OPTGROUP, descendants: true }], exportAs: [\"matSelect\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n Note that the select trigger element specifies `aria-owns` pointing to the listbox overlay.\\n While aria-owns is not required for the ARIA 1.2 `role=\\\"combobox\\\"` interaction pattern,\\n it fixes an issue with VoiceOver when the select appears inside of an `aria-model=\\\"true\\\"`\\n element (e.g. a dialog). Without this `aria-owns`, the `aria-modal` on a dialog prevents\\n VoiceOver from \\\"seeing\\\" the select's listbox overlay for aria-activedescendant.\\n Using `aria-owns` re-parents the select overlay so that it works again.\\n See https://github.com/angular/components/issues/20694\\n-->\\n<div cdk-overlay-origin\\n     [attr.aria-owns]=\\\"panelOpen ? id + '-panel' : null\\\"\\n     class=\\\"mat-select-trigger\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\" [attr.id]=\\\"_valueId\\\">\\n    <span class=\\\"mat-select-placeholder mat-select-min-line\\\" *ngSwitchCase=\\\"true\\\">{{placeholder}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span class=\\\"mat-select-min-line\\\" *ngSwitchDefault>{{triggerValue}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_getOverlayMinWidth()\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      role=\\\"listbox\\\"\\n      tabindex=\\\"-1\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      [attr.aria-multiselectable]=\\\"multiple\\\"\\n      [attr.aria-label]=\\\"ariaLabel || null\\\"\\n      [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{height:16px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;margin:0 4px}.mat-form-field.mat-focused .mat-select-arrow{transform:translateX(0)}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}\"], dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i1.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"directive\", type: i1.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }, { kind: \"directive\", type: i2.CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: [\"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPositionStrategy\", \"cdkConnectedOverlayOffsetX\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayHeight\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayMinHeight\", \"cdkConnectedOverlayBackdropClass\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayViewportMargin\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayLockPosition\", \"cdkConnectedOverlayFlexibleDimensions\", \"cdkConnectedOverlayGrowAfterOpen\", \"cdkConnectedOverlayPush\"], outputs: [\"backdropClick\", \"positionChange\", \"attach\", \"detach\", \"overlayKeydown\", \"overlayOutsideClick\"], exportAs: [\"cdkConnectedOverlay\"] }, { kind: \"directive\", type: i2.CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"] }], animations: [\n            matLegacySelectAnimations.transformPanelWrap,\n            matLegacySelectAnimations.transformPanel,\n        ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySelect, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-select', exportAs: 'matSelect', inputs: ['disabled', 'disableRipple', 'tabIndex'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'role': 'combobox',\n                        'aria-autocomplete': 'none',\n                        // TODO(crisbeto): the value for aria-haspopup should be `listbox`, but currently it's difficult\n                        // to sync into Google, because of an outdated automated a11y check which flags it as an invalid\n                        // value. At some point we should try to switch it back to being `listbox`.\n                        'aria-haspopup': 'true',\n                        'class': 'mat-select',\n                        '[attr.id]': 'id',\n                        '[attr.tabindex]': 'tabIndex',\n                        '[attr.aria-controls]': 'panelOpen ? id + \"-panel\" : null',\n                        '[attr.aria-expanded]': 'panelOpen',\n                        '[attr.aria-label]': 'ariaLabel || null',\n                        '[attr.aria-required]': 'required.toString()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-invalid]': 'errorState',\n                        '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                        '[class.mat-select-disabled]': 'disabled',\n                        '[class.mat-select-invalid]': 'errorState',\n                        '[class.mat-select-required]': 'required',\n                        '[class.mat-select-empty]': 'empty',\n                        '[class.mat-select-multiple]': 'multiple',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(focus)': '_onFocus()',\n                        '(blur)': '_onBlur()',\n                        'ngSkipHydration': '',\n                    }, animations: [\n                        matLegacySelectAnimations.transformPanelWrap,\n                        matLegacySelectAnimations.transformPanel,\n                    ], providers: [\n                        { provide: MatLegacyFormFieldControl, useExisting: MatLegacySelect },\n                        { provide: MAT_LEGACY_OPTION_PARENT_COMPONENT, useExisting: MatLegacySelect },\n                    ], template: \"<!--\\n Note that the select trigger element specifies `aria-owns` pointing to the listbox overlay.\\n While aria-owns is not required for the ARIA 1.2 `role=\\\"combobox\\\"` interaction pattern,\\n it fixes an issue with VoiceOver when the select appears inside of an `aria-model=\\\"true\\\"`\\n element (e.g. a dialog). Without this `aria-owns`, the `aria-modal` on a dialog prevents\\n VoiceOver from \\\"seeing\\\" the select's listbox overlay for aria-activedescendant.\\n Using `aria-owns` re-parents the select overlay so that it works again.\\n See https://github.com/angular/components/issues/20694\\n-->\\n<div cdk-overlay-origin\\n     [attr.aria-owns]=\\\"panelOpen ? id + '-panel' : null\\\"\\n     class=\\\"mat-select-trigger\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\" [attr.id]=\\\"_valueId\\\">\\n    <span class=\\\"mat-select-placeholder mat-select-min-line\\\" *ngSwitchCase=\\\"true\\\">{{placeholder}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span class=\\\"mat-select-min-line\\\" *ngSwitchDefault>{{triggerValue}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_getOverlayMinWidth()\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      role=\\\"listbox\\\"\\n      tabindex=\\\"-1\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      [attr.aria-multiselectable]=\\\"multiple\\\"\\n      [attr.aria-label]=\\\"ariaLabel || null\\\"\\n      [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{height:16px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;margin:0 4px}.mat-form-field.mat-focused .mat-select-arrow{transform:translateX(0)}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}\"] }]\n        }], propDecorators: { options: [{\n                type: ContentChildren,\n                args: [MatLegacyOption, { descendants: true }]\n            }], optionGroups: [{\n                type: ContentChildren,\n                args: [MAT_LEGACY_OPTGROUP, { descendants: true }]\n            }], customTrigger: [{\n                type: ContentChild,\n                args: [MAT_SELECT_TRIGGER]\n            }] } });\n\n/**\n * @deprecated Use `MatSelectModule` from `@angular/material/select` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySelectModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySelectModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySelectModule, declarations: [MatLegacySelect, MatLegacySelectTrigger], imports: [CommonModule, OverlayModule, MatLegacyOptionModule, MatCommonModule], exports: [CdkScrollableModule,\n            MatLegacyFormFieldModule,\n            MatLegacySelect,\n            MatLegacySelectTrigger,\n            MatLegacyOptionModule,\n            MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySelectModule, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [CommonModule, OverlayModule, MatLegacyOptionModule, MatCommonModule, CdkScrollableModule,\n            MatLegacyFormFieldModule,\n            MatLegacyOptionModule,\n            MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySelectModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, OverlayModule, MatLegacyOptionModule, MatCommonModule],\n                    exports: [\n                        CdkScrollableModule,\n                        MatLegacyFormFieldModule,\n                        MatLegacySelect,\n                        MatLegacySelectTrigger,\n                        MatLegacyOptionModule,\n                        MatCommonModule,\n                    ],\n                    declarations: [MatLegacySelect, MatLegacySelectTrigger],\n                    providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatLegacySelect, MatLegacySelectChange, MatLegacySelectModule, MatLegacySelectTrigger, matLegacySelectAnimations };\n"],"names":["Observable","EMPTY","subscriber","complete","empty","scheduler","emptyScheduled","schedule","Subscriber","createOperatorSubscriber","destination","onNext","onComplete","onError","onFinalize","OperatorSubscriber","constructor","shouldUnsubscribe","_next","value","err","error","_error","unsubscribe","_complete","_a","closed","call","operate","take","count","source","seen","subscribe","next","innerFrom","noop","takeUntil","notifier","isFunction","hasLift","lift","init","liftedSource","TypeError","i2","OverlayModule","i1","CommonModule","i0","Directive","Component","ViewEncapsulation","ChangeDetectionStrategy","ContentChildren","ContentChild","NgModule","MatCommonModule","_countGroupLabelsBeforeLegacyOption","_getLegacyOptionScrollPosition","MAT_LEGACY_OPTION_PARENT_COMPONENT","MatLegacyOption","MAT_LEGACY_OPTGROUP","MatLegacyOptionModule","MatLegacyFormFieldControl","MatLegacyFormFieldModule","CdkScrollableModule","MAT_SELECT_TRIGGER","_MatSelectBase","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MAT_SELECT_CONFIG","MAT_LEGACY_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY","MAT_LEGACY_SELECT_SCROLL_STRATEGY","MAT_LEGACY_SELECT_SCROLL_STRATEGY_PROVIDER","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_LEGACY_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_LEGACY_SELECT_TRIGGER","trigger","transition","query","animateChild","state","style","animate","MatLegacySelect_span_4_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r2","ɵɵnextContext","ɵɵadvance","ɵɵtextInterpolate","placeholder","MatLegacySelect_span_5_span_1_Template","ctx_r5","triggerValue","MatLegacySelect_span_5_ng_content_2_Template","ɵɵprojection","MatLegacySelect_span_5_Template","ɵɵtemplate","ctx_r3","ɵɵproperty","customTrigger","MatLegacySelect_ng_template_8_Template","_r9","ɵɵgetCurrentView","ɵɵlistener","MatLegacySelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener","$event","ɵɵrestoreView","ctx_r8","ɵɵresetView","_panelDoneAnimatingStream","toState","MatLegacySelect_ng_template_8_Template_div_keydown_1_listener","ctx_r10","_handleKeydown","ctx_r4","undefined","ɵɵclassMapInterpolate1","_getPanelTheme","ɵɵstyleProp","_transformOrigin","_triggerFontSize","panelClass","multiple","ɵɵattribute","id","ariaLabel","_getPanelAriaLabelledby","_c0","_c1","matLegacySelectAnimations","transformPanelWrap","optional","transformPanel","transform","minWidth","opacity","SELECT_PANEL_MAX_HEIGHT","SELECT_PANEL_PADDING_X","SELECT_PANEL_INDENT_PADDING_X","SELECT_ITEM_HEIGHT_EM","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_VIEWPORT_PADDING","MatLegacySelectChange","MatLegacySelectTrigger","_","ɵfac","MatLegacySelectTrigger_Factory","t","_2","ɵdir","ɵɵdefineDirective","type","selectors","features","ɵɵProvidersFeature","provide","useExisting","ngDevMode","ɵsetClassMetadata","args","selector","providers","MatLegacySelect","arguments","_scrollTop","_offsetY","_positions","originX","originY","overlayX","overlayY","_calculateOverlayScroll","selectedIndex","scrollBuffer","maxScroll","itemHeight","_getItemHeight","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","Math","min","max","ngOnInit","_viewportRuler","change","pipe","_destroy","panelOpen","_triggerRect","nativeElement","getBoundingClientRect","_changeDetectorRef","markForCheck","open","_canOpen","parseInt","getComputedStyle","fontSize","_calculateOverlayPosition","_ngZone","onStable","_overlayDir","overlayRef","overlayElement","_scrollOptionIntoView","index","labelCount","options","optionGroups","panel","scrollTop","_positioningSettled","_calculateOverlayOffsetX","_panelDoneAnimating","isOpen","offsetX","_getChangeEvent","_getOverlayMinWidth","width","overlayRect","viewportSize","getViewportSize","isRtl","_isRtl","paddingWidth","disableOptionCentering","selected","_selectionModel","first","group","leftOverflow","left","rightOverflow","right","round","updatePosition","_calculateOverlayOffsetY","optionHeightAdjustment","height","maxOptionsDisplayed","floor","optionOffsetFromPanelTop","firstDisplayedIndex","_getItemCount","selectedDisplayIndex","partialItemHeight","_checkOverlayWithinViewport","topSpaceAvailable","top","bottomSpaceAvailable","bottom","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","items","panelHeight","scrollContainerHeight","selectedOptionOffset","toArray","indexOf","length","ɵMatLegacySelect_BaseFactory","MatLegacySelect_Factory","ɵɵgetInheritedFactory","ɵcmp","ɵɵdefineComponent","contentQueries","MatLegacySelect_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","hostAttrs","hostVars","hostBindings","MatLegacySelect_HostBindings","MatLegacySelect_keydown_HostBindingHandler","MatLegacySelect_focus_HostBindingHandler","_onFocus","MatLegacySelect_blur_HostBindingHandler","_onBlur","tabIndex","required","toString","disabled","errorState","_getAriaActiveDescendant","ɵɵclassProp","inputs","disableRipple","exportAs","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","consts","template","MatLegacySelect_Template","ɵɵprojectionDef","MatLegacySelect_Template_div_click_0_listener","toggle","ɵɵelement","MatLegacySelect_Template_ng_template_backdropClick_8_listener","close","MatLegacySelect_Template_ng_template_attach_8_listener","_onAttached","MatLegacySelect_Template_ng_template_detach_8_listener","_r0","ɵɵreference","_valueId","_overlayPanelClass","_scrollStrategy","dependencies","NgClass","NgSwitch","NgSwitchCase","NgSwitchDefault","CdkConnectedOverlay","CdkOverlayOrigin","styles","encapsulation","data","animation","changeDetection","None","OnPush","host","animations","descendants","MatLegacySelectModule","MatLegacySelectModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","exports","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5]}