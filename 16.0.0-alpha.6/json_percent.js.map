{"version":3,"file":"json_percent.js","mappings":"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","sources":["./node_modules/@amcharts/amcharts5/.internal/charts/funnel/FunnelSeries.js","./node_modules/@amcharts/amcharts5/.internal/charts/funnel/FunnelSlice.js","./node_modules/@amcharts/amcharts5/.internal/charts/funnel/PictorialStackedSeries.js","./node_modules/@amcharts/amcharts5/.internal/charts/funnel/PyramidSeries.js","./node_modules/@amcharts/amcharts5/.internal/charts/funnel/SlicedChart.js","./node_modules/@amcharts/amcharts5/.internal/charts/percent/PercentChart.js","./node_modules/@amcharts/amcharts5/.internal/charts/percent/PercentDefaultTheme.js","./node_modules/@amcharts/amcharts5/.internal/charts/percent/PercentSeries.js","./node_modules/@amcharts/amcharts5/.internal/charts/pie/PieChart.js","./node_modules/@amcharts/amcharts5/.internal/charts/pie/PieSeries.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Chart.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Line.js","./node_modules/@amcharts/amcharts5/.internal/core/render/SerialChart.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Tick.js","./node_modules/@amcharts/amcharts5/.internal/core/util/Draw.js","./node_modules/@amcharts/amcharts5/percent.js"],"sourcesContent":["import { __awaiter } from \"tslib\";\r\nimport { PercentSeries } from \"../percent/PercentSeries\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport { FunnelSlice } from \"./FunnelSlice\";\r\nimport { Tick } from \"../../core/render/Tick\";\r\nimport { Label } from \"../../core/render/Label\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Creates a funnel series for use in a [[SlicedChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/percent-charts/sliced-chart/funnel-series/} for more info\r\n * @important\r\n */\r\nexport class FunnelSeries extends PercentSeries {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_tag\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"funnel\"\r\n        });\r\n        /**\r\n         * A [[ListTemplate]] of all slice links in series.\r\n         *\r\n         * `links.template` can also be used to configure slice links.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/percent-charts/sliced-chart/funnel-series/#Slice_links} for more info\r\n         */\r\n        Object.defineProperty(this, \"links\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._makeLinks()\r\n        });\r\n        Object.defineProperty(this, \"_total\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_count\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_nextCoord\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_opposite\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _makeSlices() {\r\n        return new ListTemplate(Template.new({}), () => FunnelSlice._new(this._root, {\r\n            themeTags: $utils.mergeTags(this.slices.template.get(\"themeTags\", []), [this._tag, \"series\", \"slice\", this.get(\"orientation\")])\r\n        }, [this.slices.template]));\r\n    }\r\n    _makeLabels() {\r\n        return new ListTemplate(Template.new({}), () => Label._new(this._root, {\r\n            themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [this._tag, \"series\", \"label\", this.get(\"orientation\")])\r\n        }, [this.labels.template]));\r\n    }\r\n    _makeTicks() {\r\n        return new ListTemplate(Template.new({}), () => Tick._new(this._root, {\r\n            themeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), [this._tag, \"series\", \"tick\", this.get(\"orientation\")])\r\n        }, [this.ticks.template]));\r\n    }\r\n    _makeLinks() {\r\n        return new ListTemplate(Template.new({}), () => FunnelSlice._new(this._root, {\r\n            themeTags: $utils.mergeTags(this.links.template.get(\"themeTags\", []), [this._tag, \"series\", \"link\", this.get(\"orientation\")])\r\n        }, [this.links.template]));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeLink(dataItem) {\r\n        const link = this.slicesContainer.children.push(this.links.make());\r\n        link._setDataItem(dataItem);\r\n        dataItem.set(\"link\", link);\r\n        this.links.push(link);\r\n        return link;\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        const slicesContainer = this.slicesContainer;\r\n        slicesContainer.setAll({ isMeasured: true, position: \"relative\", width: percent(100), height: percent(100) });\r\n        slicesContainer.onPrivate(\"width\", () => {\r\n            this.markDirtySize();\r\n        });\r\n        slicesContainer.onPrivate(\"height\", () => {\r\n            this.markDirtySize();\r\n        });\r\n        if (this.get(\"orientation\") == \"vertical\") {\r\n            this.set(\"layout\", this._root.horizontalLayout);\r\n        }\r\n        else {\r\n            this.set(\"layout\", this._root.verticalLayout);\r\n        }\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        const slice = this.makeSlice(dataItem);\r\n        slice._setDataItem(dataItem);\r\n        dataItem.set(\"slice\", slice);\r\n        this.makeLink(dataItem);\r\n        const label = this.makeLabel(dataItem);\r\n        label.on(\"x\", () => {\r\n            this._updateTick(dataItem);\r\n        });\r\n        label.on(\"y\", () => {\r\n            this._updateTick(dataItem);\r\n        });\r\n        this.makeTick(dataItem);\r\n        slice.events.on(\"positionchanged\", () => {\r\n            label.markDirty();\r\n        });\r\n        slice.events.on(\"boundschanged\", () => {\r\n            const dataItem = slice.dataItem;\r\n            if (dataItem) {\r\n                this._updateTick(dataItem);\r\n            }\r\n        });\r\n    }\r\n    _updateChildren() {\r\n        this._opposite = false;\r\n        if (this.children.indexOf(this.labelsContainer) == 0) {\r\n            this._opposite = true;\r\n        }\r\n        let total = 0;\r\n        let count = 0;\r\n        $array.each(this.dataItems, (dataItem) => {\r\n            const value = dataItem.get(\"value\");\r\n            if ($type.isNumber(value)) {\r\n                count++;\r\n                if (value > 0) {\r\n                    total += Math.abs(dataItem.get(\"valueWorking\", value) / value);\r\n                }\r\n                else {\r\n                    if (this.get(\"ignoreZeroValues\", false)) {\r\n                        count--;\r\n                    }\r\n                    else {\r\n                        if (dataItem.isHidden()) {\r\n                            count--;\r\n                        }\r\n                        else {\r\n                            total += 1;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this._total = 1 / count * total;\r\n        this._count = count;\r\n        if (this.isDirty(\"alignLabels\")) {\r\n            this._fixLayout();\r\n        }\r\n        if (this._total > 0 && (this._valuesDirty || this._sizeDirty)) {\r\n            const slicesContainer = this.slicesContainer;\r\n            let h;\r\n            if (this.get(\"orientation\") == \"vertical\") {\r\n                h = slicesContainer.innerHeight();\r\n            }\r\n            else {\r\n                h = slicesContainer.innerWidth();\r\n            }\r\n            this._nextCoord = this.get(\"startLocation\", 0) * h;\r\n            this.markDirtyBounds();\r\n            let i = 0;\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                this.updateLegendValue(dataItem);\r\n                dataItem.set(\"index\", i);\r\n                i++;\r\n                const slice = dataItem.get(\"slice\");\r\n                const tick = dataItem.get(\"tick\");\r\n                const label = dataItem.get(\"label\");\r\n                const link = dataItem.get(\"link\");\r\n                const color = dataItem.get(\"fill\");\r\n                slice._setDefault(\"fill\", color);\r\n                slice._setDefault(\"stroke\", color);\r\n                link._setDefault(\"fill\", color);\r\n                link._setDefault(\"stroke\", color);\r\n                const value = dataItem.get(\"value\");\r\n                if ($type.isNumber(value)) {\r\n                    if (value == 0 && this.get(\"ignoreZeroValues\")) {\r\n                        slice.setPrivate(\"visible\", false);\r\n                        tick.setPrivate(\"visible\", false);\r\n                        label.setPrivate(\"visible\", false);\r\n                    }\r\n                    else {\r\n                        slice.setPrivate(\"visible\", true);\r\n                        tick.setPrivate(\"visible\", true);\r\n                        label.setPrivate(\"visible\", true);\r\n                        this.decorateSlice(dataItem);\r\n                        if (this.isLast(dataItem)) {\r\n                            link.setPrivate(\"visible\", false);\r\n                        }\r\n                        else if (!dataItem.isHidden()) {\r\n                            link.setPrivate(\"visible\", true);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        super._updateChildren();\r\n    }\r\n    _fixLayout() {\r\n        const orientation = this.get(\"orientation\");\r\n        const labelsContainer = this.labelsContainer;\r\n        const labelsTemplate = this.labels.template;\r\n        if (this.get(\"alignLabels\")) {\r\n            labelsContainer.set(\"position\", \"relative\");\r\n            labelsContainer.setAll({ isMeasured: true });\r\n            if (orientation == \"vertical\") {\r\n                this.set(\"layout\", this._root.horizontalLayout);\r\n                labelsTemplate.setAll({ centerX: p100, x: p100 });\r\n            }\r\n            else {\r\n                this.set(\"layout\", this._root.verticalLayout);\r\n                labelsTemplate.setAll({ centerX: 0, x: 0 });\r\n            }\r\n        }\r\n        else {\r\n            labelsContainer.setAll({ isMeasured: false, position: \"absolute\" });\r\n            if (orientation == \"vertical\") {\r\n                labelsContainer.setAll({ x: p50 });\r\n                labelsTemplate.setAll({ centerX: p50, x: 0 });\r\n            }\r\n            else {\r\n                labelsContainer.setAll({ y: p50 });\r\n                labelsTemplate.setAll({ centerX: p50, y: 0 });\r\n            }\r\n        }\r\n        this.markDirtySize();\r\n    }\r\n    getNextValue(dataItem) {\r\n        let index = dataItem.get(\"index\");\r\n        let nextValue = dataItem.get(\"valueWorking\", 0);\r\n        if (index < this.dataItems.length - 1) {\r\n            let nextItem = this.dataItems[index + 1];\r\n            nextValue = nextItem.get(\"valueWorking\", 0);\r\n            if (nextItem.isHidden() || (nextItem.get(\"value\") == 0 && this.get(\"ignoreZeroValues\"))) {\r\n                return this.getNextValue(nextItem);\r\n            }\r\n        }\r\n        return nextValue;\r\n    }\r\n    isLast(dataItem) {\r\n        let index = dataItem.get(\"index\");\r\n        if (index == this.dataItems.length - 1) {\r\n            return true;\r\n        }\r\n        else {\r\n            for (let i = index + 1; i < this.dataItems.length; i++) {\r\n                if (!this.dataItems[i].isHidden()) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    decorateSlice(dataItem) {\r\n        const orientation = this.get(\"orientation\");\r\n        const slice = dataItem.get(\"slice\");\r\n        const label = dataItem.get(\"label\");\r\n        const link = dataItem.get(\"link\");\r\n        const slicesContainer = this.slicesContainer;\r\n        let maxWidth = slicesContainer.innerWidth();\r\n        let maxHeight = slicesContainer.innerHeight();\r\n        let maxSize = maxWidth;\r\n        if (orientation == \"horizontal\") {\r\n            maxSize = maxHeight;\r\n        }\r\n        const nextValue = this.getNextValue(dataItem);\r\n        const value = dataItem.get(\"value\", 0);\r\n        const workingValue = Math.abs(dataItem.get(\"valueWorking\", value));\r\n        const bottomRatio = this.get(\"bottomRatio\", 0);\r\n        const valueHigh = this.getPrivate(\"valueHigh\", 0);\r\n        let d = 1;\r\n        if (value != 0) {\r\n            d = workingValue / Math.abs(value);\r\n        }\r\n        else {\r\n            if (dataItem.isHidden()) {\r\n                d = 0.000001;\r\n            }\r\n        }\r\n        if (this._nextCoord == Infinity) {\r\n            this._nextCoord = 0;\r\n        }\r\n        let topWidth = workingValue / valueHigh * maxSize;\r\n        let bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / valueHigh * maxSize;\r\n        slice.setAll({ topWidth, bottomWidth, orientation });\r\n        link.setAll({ topWidth: bottomWidth, bottomWidth: (workingValue - (workingValue - nextValue)) / valueHigh * maxSize, orientation });\r\n        const startLocation = this.get(\"startLocation\", 0);\r\n        const endLocation = this.get(\"endLocation\", 1);\r\n        if (orientation == \"vertical\") {\r\n            let linkHeight = link.height() * d;\r\n            maxHeight = maxHeight * (endLocation - startLocation) + linkHeight;\r\n            slice.set(\"y\", this._nextCoord);\r\n            let height = Math.min(100000, Math.max(0, maxHeight / this._count * d / this._total - linkHeight));\r\n            slice.setAll({ height, x: maxWidth / 2 });\r\n            let labelY = this._nextCoord + height / 2;\r\n            label.set(\"y\", labelY);\r\n            this._nextCoord += height + linkHeight;\r\n            link.setAll({ y: this._nextCoord - linkHeight, x: maxWidth / 2 });\r\n        }\r\n        else {\r\n            let linkHeight = link.width() * d;\r\n            maxWidth = maxWidth * (endLocation - startLocation) + linkHeight;\r\n            slice.set(\"x\", this._nextCoord);\r\n            let width = Math.min(100000, Math.max(0, maxWidth / this._count * d / this._total - linkHeight));\r\n            slice.setAll({ width, y: maxHeight / 2 });\r\n            const labelX = this._nextCoord + width / 2;\r\n            label.set(\"x\", labelX);\r\n            this._nextCoord += width + linkHeight;\r\n            link.setAll({ x: this._nextCoord - linkHeight, y: maxHeight / 2 });\r\n        }\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            dataItem.get(\"link\").hide(duration);\r\n            return _super.hideDataItem.call(this, dataItem, duration);\r\n        });\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            dataItem.get(\"link\").show(duration);\r\n            return _super.showDataItem.call(this, dataItem, duration);\r\n        });\r\n    }\r\n    _updateTick(dataItem) {\r\n        if (this.get(\"alignLabels\")) {\r\n            const tick = dataItem.get(\"tick\");\r\n            const label = dataItem.get(\"label\");\r\n            const slice = dataItem.get(\"slice\");\r\n            if (tick && slice && label) {\r\n                const labelsContainer = this.labelsContainer;\r\n                const slicesContainer = this.slicesContainer;\r\n                let tickLocation = tick.get(\"location\", 0.5);\r\n                const lcw = labelsContainer.width();\r\n                const lch = labelsContainer.height();\r\n                const pl = labelsContainer.get(\"paddingLeft\", 0);\r\n                const pr = labelsContainer.get(\"paddingRight\", 0);\r\n                const pt = labelsContainer.get(\"paddingTop\", 0);\r\n                const pb = labelsContainer.get(\"paddingBottom\", 0);\r\n                let p0 = { x: 0, y: 0 };\r\n                let p1 = { x: 0, y: 0 };\r\n                let p2 = { x: 0, y: 0 };\r\n                if (this._opposite) {\r\n                    tickLocation = 1 - tickLocation;\r\n                }\r\n                if (this.get(\"orientation\") == \"vertical\") {\r\n                    p0 = slice.getPoint(tickLocation, 0.5);\r\n                    p0.x += slice.x() + slicesContainer.x();\r\n                    p0.y += slice.y() + slicesContainer.y();\r\n                    if (this._opposite) {\r\n                        p1.x = lcw;\r\n                        p1.y = label.y();\r\n                        p2.x = lcw - pl;\r\n                        p2.y = p1.y;\r\n                    }\r\n                    else {\r\n                        p1.x = slicesContainer.x() + slicesContainer.width();\r\n                        p1.y = label.y();\r\n                        p2.x = p1.x + lcw - label.width() - pr;\r\n                        p2.y = p1.y;\r\n                    }\r\n                }\r\n                else {\r\n                    p0 = slice.getPoint(0.5, tickLocation);\r\n                    p0.x += slice.x() + slicesContainer.x();\r\n                    p0.y += slice.y() + slicesContainer.y();\r\n                    if (this._opposite) {\r\n                        p1.y = lch;\r\n                        p1.x = label.x();\r\n                        p2.y = lch - pt;\r\n                        p2.x = p1.x;\r\n                    }\r\n                    else {\r\n                        p1.y = slicesContainer.y() + slicesContainer.height();\r\n                        p1.x = label.x();\r\n                        p2.y = p1.y + lch - label.height() - pb;\r\n                        p2.x = p1.x;\r\n                    }\r\n                }\r\n                tick.set(\"points\", [p0, p1, p2]);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        let link = dataItem.get(\"link\");\r\n        if (link) {\r\n            this.links.removeValue(link);\r\n            link.dispose();\r\n        }\r\n    }\r\n    _positionBullet(bullet) {\r\n        const sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            const dataItem = sprite.dataItem;\r\n            const slice = dataItem.get(\"slice\");\r\n            if (slice) {\r\n                const width = slice.width();\r\n                const height = slice.height();\r\n                const locationX = bullet.get(\"locationX\", 0.5);\r\n                const locationY = bullet.get(\"locationY\", 0.5);\r\n                let dx = 0;\r\n                let dy = 0;\r\n                if (this.get(\"orientation\") == \"horizontal\") {\r\n                    dy = height / 2;\r\n                }\r\n                else {\r\n                    dx = width / 2;\r\n                }\r\n                sprite.setAll({ x: slice.x() + width * locationX - dx, y: slice.y() - dy + height * locationY });\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(FunnelSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"FunnelSeries\"\r\n});\r\nObject.defineProperty(FunnelSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: PercentSeries.classNames.concat([FunnelSeries.className])\r\n});\r\n","import { Graphics } from \"../../core/render/Graphics\";\r\n/**\r\n * Draws a slice for [[FunnelSeries]].\r\n */\r\nexport class FunnelSlice extends Graphics {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_projectionDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_tlx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_tly\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_trx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_try\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_blx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_bly\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_brx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_bry\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_cprx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_cplx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_cpry\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_cply\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.set(\"draw\", (display) => {\r\n            display.moveTo(this._tlx, this._tly);\r\n            display.lineTo(this._trx, this._try);\r\n            display.quadraticCurveTo(this._cprx, this._cpry, this._brx, this._bry);\r\n            display.lineTo(this._blx, this._bly);\r\n            display.quadraticCurveTo(this._cplx, this._cply, this._tlx, this._tly);\r\n        });\r\n    }\r\n    getPoint(locationX, locationY) {\r\n        let w = this.width();\r\n        let h = this.height();\r\n        const tw = this.get(\"topWidth\", 0);\r\n        const bw = this.get(\"bottomWidth\", 0);\r\n        if (this.get(\"orientation\") == \"vertical\") {\r\n            let tlx = -tw / 2;\r\n            let trx = tw / 2;\r\n            let brx = bw / 2;\r\n            let blx = -bw / 2;\r\n            let mlx = tlx + (blx - tlx) * locationY;\r\n            let mrx = trx + (brx - trx) * locationY;\r\n            return { x: mlx + (mrx - mlx) * locationX, y: h * locationY };\r\n        }\r\n        else {\r\n            let tlx = -tw / 2;\r\n            let trx = tw / 2;\r\n            let brx = bw / 2;\r\n            let blx = -bw / 2;\r\n            let mlx = tlx + (blx - tlx) * locationX;\r\n            let mrx = trx + (brx - trx) * locationX;\r\n            return { x: w * locationX, y: mlx + (mrx - mlx) * locationY };\r\n        }\r\n    }\r\n    _changed() {\r\n        if (this.isDirty(\"topWidth\") || this.isDirty(\"bottomWidth\") || this.isDirty(\"expandDistance\") || this.isDirty(\"orientation\") || this.isDirty(\"width\") || this.isDirty(\"height\")) {\r\n            const w = this.width();\r\n            const h = this.height();\r\n            const tw = this.get(\"topWidth\", 0);\r\n            const bw = this.get(\"bottomWidth\", 0);\r\n            this._clear = true;\r\n            let ed = this.get(\"expandDistance\", 0);\r\n            if (this.get(\"orientation\") == \"vertical\") {\r\n                this._tlx = -tw / 2;\r\n                this._tly = 0;\r\n                this._trx = tw / 2;\r\n                this._try = 0;\r\n                this._brx = bw / 2;\r\n                this._bry = h;\r\n                this._blx = -bw / 2;\r\n                this._bly = h;\r\n                this._cprx = this._trx + (this._brx - this._trx) / 2 + ed * h,\r\n                    this._cpry = this._try + 0.5 * h;\r\n                this._cplx = this._tlx + (this._blx - this._tlx) / 2 - ed * h;\r\n                this._cply = this._tly + 0.5 * h;\r\n            }\r\n            else {\r\n                this._tly = -tw / 2;\r\n                this._tlx = 0;\r\n                this._try = tw / 2;\r\n                this._trx = 0;\r\n                this._bry = bw / 2;\r\n                this._brx = w;\r\n                this._bly = -bw / 2;\r\n                this._blx = w;\r\n                this._cpry = this._try + (this._bry - this._try) / 2 + ed * w,\r\n                    this._cprx = this._trx + 0.5 * w;\r\n                this._cply = this._tly + (this._bly - this._tly) / 2 - ed * w;\r\n                this._cplx = this._tlx + 0.5 * w;\r\n            }\r\n        }\r\n        super._changed();\r\n    }\r\n}\r\nObject.defineProperty(FunnelSlice, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"FunnelSlice\"\r\n});\r\nObject.defineProperty(FunnelSlice, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([FunnelSlice.className])\r\n});\r\n","import { PyramidSeries } from \"./PyramidSeries\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { p100, p50 } from \"../../core/util/Percent\";\r\n/**\r\n * Creates a pictorial series for use in a [[SlicedChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/percent-charts/sliced-chart/pictorial-stacked-series/} for more info\r\n * @important\r\n */\r\nexport class PictorialStackedSeries extends PyramidSeries {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_tag\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"pictorial\"\r\n        });\r\n        /**\r\n         * A [[Graphics]] element to used as a mask (shape) for the series.\r\n         *\r\n         * This element is read-only. To modify the mask/shape, use the `svgPath` setting.\r\n         */\r\n        Object.defineProperty(this, \"seriesMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Graphics.new(this._root, { position: \"absolute\", x: p50, y: p50, centerX: p50, centerY: p50 })\r\n        });\r\n        Object.defineProperty(this, \"seriesGraphics\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.slicesContainer.children.push(Graphics.new(this._root, { themeTags: [\"pictorial\", \"background\"], position: \"absolute\", x: p50, y: p50, centerX: p50, centerY: p50 }))\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.set(\"topWidth\", p100);\r\n        this.set(\"bottomWidth\", p100);\r\n        this.set(\"valueIs\", \"height\");\r\n        this.slicesContainer.set(\"mask\", this.seriesMask);\r\n    }\r\n    _updateScale() {\r\n        let slicesContainer = this.slicesContainer;\r\n        let w = slicesContainer.innerWidth();\r\n        let h = slicesContainer.innerHeight();\r\n        let seriesMask = this.seriesMask;\r\n        let seriesGraphics = this.seriesGraphics;\r\n        let scale = seriesMask.get(\"scale\", 1);\r\n        const bounds = seriesMask.localBounds();\r\n        let mw = bounds.right - bounds.left;\r\n        let mh = bounds.bottom - bounds.top;\r\n        if (this.get(\"orientation\") == \"horizontal\") {\r\n            scale = w / mw;\r\n        }\r\n        else {\r\n            scale = h / mh;\r\n        }\r\n        if (scale != Infinity && scale != NaN) {\r\n            seriesMask.set(\"scale\", scale);\r\n            seriesMask.set(\"x\", w / 2);\r\n            seriesMask.set(\"y\", h / 2);\r\n            seriesGraphics.set(\"scale\", scale);\r\n            seriesGraphics.set(\"x\", w / 2);\r\n            seriesGraphics.set(\"y\", h / 2);\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"svgPath\")) {\r\n            const svgPath = this.get(\"svgPath\");\r\n            this.seriesMask.set(\"svgPath\", svgPath);\r\n            this.seriesGraphics.set(\"svgPath\", svgPath);\r\n        }\r\n        this._updateScale();\r\n    }\r\n}\r\nObject.defineProperty(PictorialStackedSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PictorialStackedSeries\"\r\n});\r\nObject.defineProperty(PictorialStackedSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: PyramidSeries.classNames.concat([PictorialStackedSeries.className])\r\n});\r\n","import { FunnelSeries } from \"./FunnelSeries\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $type from \"../../core/util/Type\";\r\n/**\r\n * Creates a pyramid series for use in a [[SlicedChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/percent-charts/sliced-chart/pyramid-series/} for more info\r\n * @important\r\n */\r\nexport class PyramidSeries extends FunnelSeries {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_tag\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"pyramid\"\r\n        });\r\n        Object.defineProperty(this, \"_nextSize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        this._nextSize = undefined;\r\n    }\r\n    decorateSlice(dataItem) {\r\n        const orientation = this.get(\"orientation\");\r\n        const slicesContainer = this.slicesContainer;\r\n        const slice = dataItem.get(\"slice\");\r\n        const label = dataItem.get(\"label\");\r\n        const link = dataItem.get(\"link\");\r\n        const valueIs = this.get(\"valueIs\", \"area\");\r\n        const sum = this.getPrivate(\"valueAbsoluteSum\", 0);\r\n        if (sum == 0) {\r\n            return;\r\n        }\r\n        const startLocation = this.get(\"startLocation\", 0);\r\n        const endLocation = this.get(\"endLocation\", 1);\r\n        const tw = this.get(\"topWidth\", 0);\r\n        const bw = this.get(\"bottomWidth\", p100);\r\n        const workingValue = Math.abs(dataItem.get(\"valueWorking\", 0));\r\n        const value = dataItem.get(\"value\", 0);\r\n        let sliceHeight;\r\n        let sliceBottomWidth;\r\n        let pyramidHeight = slicesContainer.innerHeight();\r\n        let pyramidWidth = slicesContainer.innerWidth();\r\n        let linkWidth = link.width();\r\n        let linkHeight = link.height();\r\n        if (orientation == \"horizontal\") {\r\n            [pyramidWidth, pyramidHeight] = [pyramidHeight, pyramidWidth];\r\n            [linkWidth, linkHeight] = [linkHeight, linkWidth];\r\n        }\r\n        const center = pyramidWidth / 2;\r\n        let d = 1;\r\n        if (value != 0) {\r\n            d = workingValue / Math.abs(value);\r\n        }\r\n        else {\r\n            if (dataItem.isHidden()) {\r\n                d = 0.000001;\r\n            }\r\n        }\r\n        linkHeight *= d;\r\n        pyramidHeight = pyramidHeight * (endLocation - startLocation) - linkHeight * (this._count * this._total - 1);\r\n        let topWidth = $utils.relativeToValue(tw, pyramidWidth);\r\n        if (!$type.isNumber(this._nextSize)) {\r\n            this._nextSize = topWidth;\r\n        }\r\n        let bottomWidth = $utils.relativeToValue(bw, pyramidWidth);\r\n        let sliceTopWidth = this._nextSize;\r\n        let angle = Math.atan2(pyramidHeight, topWidth - bottomWidth);\r\n        let c = Math.tan(Math.PI / 2 - angle);\r\n        if (c == 0) {\r\n            c = 0.00000001;\r\n        }\r\n        if (valueIs == \"area\") {\r\n            let totalSquare = (topWidth + bottomWidth) / 2 * pyramidHeight;\r\n            let square = totalSquare * workingValue / sum;\r\n            let s = Math.abs(sliceTopWidth * sliceTopWidth - 2 * square * c);\r\n            sliceHeight = (sliceTopWidth - Math.sqrt(s)) / c;\r\n            if (sliceHeight > 0) {\r\n                sliceBottomWidth = (2 * square - sliceHeight * sliceTopWidth) / sliceHeight;\r\n            }\r\n            else {\r\n                sliceBottomWidth = sliceTopWidth;\r\n            }\r\n        }\r\n        else {\r\n            sliceHeight = pyramidHeight * workingValue / sum;\r\n            sliceBottomWidth = sliceTopWidth - sliceHeight * c;\r\n        }\r\n        let labelCoord = this._nextCoord + sliceHeight / 2;\r\n        let sliceX = center;\r\n        let sliceY = this._nextCoord;\r\n        let linkX = center;\r\n        let linkY = sliceY + sliceHeight;\r\n        if (orientation == \"vertical\") {\r\n            label.set(\"y\", labelCoord);\r\n            if (label.get(\"opacity\") > 0) {\r\n                this._rLabels.push({ label: label, y: labelCoord });\r\n            }\r\n            slice.set(\"height\", sliceHeight);\r\n        }\r\n        else {\r\n            label.set(\"x\", labelCoord);\r\n            if (label.get(\"opacity\") > 0) {\r\n                this._hLabels.push({ label: label, y: labelCoord });\r\n            }\r\n            [sliceX, sliceY] = [sliceY, sliceX];\r\n            [linkX, linkY] = [linkY, linkX];\r\n            slice.set(\"width\", sliceHeight);\r\n        }\r\n        slice.setAll({ orientation, bottomWidth: sliceBottomWidth, topWidth: sliceTopWidth, x: sliceX, y: sliceY });\r\n        link.setAll({ orientation, x: linkX, y: linkY, topWidth: sliceBottomWidth, bottomWidth: sliceBottomWidth });\r\n        this._nextSize = sliceBottomWidth;\r\n        this._nextCoord += sliceHeight + linkHeight;\r\n    }\r\n}\r\nObject.defineProperty(PyramidSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PyramidSeries\"\r\n});\r\nObject.defineProperty(PyramidSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: FunnelSeries.classNames.concat([PyramidSeries.className])\r\n});\r\n","import { PercentChart } from \"../percent/PercentChart\";\r\n/**\r\n * Creates a sliced chart for use with [[FunnelSeries]], [[PyramidSeries]], or [[PictorialStackedSeries]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/} for more info\r\n * @important\r\n */\r\nexport class SlicedChart extends PercentChart {\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.seriesContainer.setAll({ isMeasured: true, layout: this._root.horizontalLayout });\r\n    }\r\n}\r\nObject.defineProperty(SlicedChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"SlicedChart\"\r\n});\r\nObject.defineProperty(SlicedChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: PercentChart.classNames.concat([SlicedChart.className])\r\n});\r\n","import { SerialChart } from \"../../core/render/SerialChart\";\r\nimport { PercentDefaultTheme } from \"./PercentDefaultTheme\";\r\n/**\r\n * Base class for [[PieChart]].\r\n *\r\n * Also used for percent-based series, like [[FunnelSeries]], [[PyramidSeries]], etc.\r\n *\r\n * @important\r\n */\r\nexport class PercentChart extends SerialChart {\r\n    _afterNew() {\r\n        this._defaultThemes.push(PercentDefaultTheme.new(this._root));\r\n        super._afterNew();\r\n        this.chartContainer.children.push(this.seriesContainer);\r\n        this.seriesContainer.children.push(this.bulletsContainer);\r\n    }\r\n    _processSeries(series) {\r\n        super._processSeries(series);\r\n        this.seriesContainer.children.moveValue(this.bulletsContainer, this.seriesContainer.children.length - 1);\r\n    }\r\n}\r\nObject.defineProperty(PercentChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PercentChart\"\r\n});\r\nObject.defineProperty(PercentChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: SerialChart.classNames.concat([PercentChart.className])\r\n});\r\n","import { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n/**\r\n * @ignore\r\n */\r\nexport class PercentDefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const ic = this._root.interfaceColors;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * charts/percent\r\n         * ========================================================================\r\n         */\r\n        r(\"PercentSeries\").setAll({\r\n            legendLabelText: \"{category}\",\r\n            legendValueText: \"{valuePercentTotal.formatNumber('0.00p')}\",\r\n            colors: ColorSet.new(this._root, {}),\r\n            width: p100,\r\n            height: p100\r\n        });\r\n        /**\r\n         * ========================================================================\r\n         * charts/pie\r\n         * ========================================================================\r\n         */\r\n        r(\"PieChart\").setAll({\r\n            radius: percent(80),\r\n            startAngle: -90,\r\n            endAngle: 270\r\n        });\r\n        r(\"PieSeries\").setAll({\r\n            alignLabels: true,\r\n            startAngle: -90,\r\n            endAngle: 270\r\n        });\r\n        r(\"PieSeries\").states.create(\"hidden\", { endAngle: -90, opacity: 0 });\r\n        r(\"Slice\", [\"pie\"]).setAll({\r\n            position: \"absolute\",\r\n            isMeasured: false,\r\n            x: 0,\r\n            y: 0,\r\n            toggleKey: \"active\",\r\n            tooltipText: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            role: \"figure\",\r\n            lineJoin: \"round\"\r\n        });\r\n        r(\"Slice\", [\"pie\"]).states.create(\"active\", { shiftRadius: 20, scale: 1 });\r\n        r(\"Slice\", [\"pie\"]).states.create(\"hoverActive\", { scale: 1.04 });\r\n        r(\"Slice\", [\"pie\"]).states.create(\"hover\", { scale: 1.04 });\r\n        r(\"RadialLabel\", [\"pie\"]).setAll({\r\n            textType: \"aligned\",\r\n            radius: 10,\r\n            text: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            paddingTop: 5,\r\n            paddingBottom: 5,\r\n            populateText: true\r\n        });\r\n        r(\"Tick\", [\"pie\"]).setAll({\r\n            location: 1\r\n        });\r\n        /**\r\n         * ========================================================================\r\n         * charts/funnel\r\n         * ========================================================================\r\n         */\r\n        r(\"SlicedChart\").setAll({\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            paddingTop: 10,\r\n            paddingBottom: 10\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/funnel: Funnel\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"FunnelSeries\").setAll({\r\n            startLocation: 0,\r\n            endLocation: 1,\r\n            orientation: \"vertical\",\r\n            alignLabels: true,\r\n            sequencedInterpolation: true\r\n        });\r\n        r(\"FunnelSlice\").setAll({\r\n            interactive: true,\r\n            expandDistance: 0,\r\n            //tooltipText: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\"\r\n        });\r\n        r(\"FunnelSlice\").states.create(\"hover\", { expandDistance: 0.15 });\r\n        r(\"Label\", [\"funnel\"]).setAll({\r\n            populateText: true,\r\n            text: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            centerY: p50\r\n        });\r\n        r(\"Label\", [\"funnel\", \"horizontal\"]).setAll({\r\n            centerX: 0,\r\n            centerY: p50,\r\n            rotation: -90\r\n        });\r\n        // Class: Label\r\n        r(\"Label\", [\"funnel\", \"vertical\"]).setAll({\r\n            centerY: p50,\r\n            centerX: 0\r\n        });\r\n        r(\"Tick\", [\"funnel\"]).setAll({\r\n            location: 1\r\n        });\r\n        r(\"FunnelSlice\", [\"funnel\", \"link\"]).setAll({\r\n            fillOpacity: 0.5,\r\n            strokeOpacity: 0,\r\n            expandDistance: -0.1\r\n        });\r\n        r(\"FunnelSlice\", [\"funnel\", \"link\", \"vertical\"]).setAll({\r\n            height: 10,\r\n        });\r\n        r(\"FunnelSlice\", [\"funnel\", \"link\", \"horizontal\"]).setAll({\r\n            width: 10\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/funnel: Pyramid\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"PyramidSeries\").setAll({\r\n            valueIs: \"area\"\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\", \"link\"]).setAll({\r\n            fillOpacity: 0.5\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\", \"link\", \"vertical\"]).setAll({\r\n            height: 0\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\", \"link\", \"horizontal\"]).setAll({\r\n            width: 0\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\"]).setAll({\r\n            interactive: true,\r\n            expandDistance: 0\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\"]).states.create(\"hover\", { expandDistance: 0.15 });\r\n        r(\"Label\", [\"pyramid\"]).setAll({\r\n            populateText: true,\r\n            text: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            centerY: p50\r\n        });\r\n        r(\"Label\", [\"pyramid\", \"horizontal\"]).setAll({\r\n            centerX: 0,\r\n            centerY: p50,\r\n            rotation: -90\r\n        });\r\n        r(\"Label\", [\"pyramid\", \"vertical\"]).setAll({\r\n            centerY: p50,\r\n            centerX: 0\r\n        });\r\n        r(\"Tick\", [\"pyramid\"]).setAll({\r\n            location: 1\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/funnel: Pictorial\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        // Class: FunnelSlice\r\n        r(\"FunnelSlice\", [\"pictorial\"]).setAll({\r\n            interactive: true,\r\n            tooltipText: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\"\r\n        });\r\n        r(\"Label\", [\"pictorial\"]).setAll({\r\n            populateText: true,\r\n            text: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            centerY: p50\r\n        });\r\n        r(\"Label\", [\"pictorial\", \"horizontal\"]).setAll({\r\n            centerX: 0,\r\n            centerY: p50,\r\n            rotation: -90\r\n        });\r\n        r(\"Label\", [\"pictorial\", \"vertical\"]).setAll({\r\n            centerY: p50,\r\n            centerX: 0\r\n        });\r\n        r(\"FunnelSlice\", [\"pictorial\", \"link\"]).setAll({\r\n            fillOpacity: 0.5,\r\n            width: 0,\r\n            height: 0\r\n        });\r\n        r(\"Tick\", [\"pictorial\"]).setAll({\r\n            location: 0.5\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"pictorial\", \"background\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0.2\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n    }\r\n}\r\n","import { __awaiter } from \"tslib\";\r\nimport { Series } from \"../../core/render/Series\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { visualSettings } from \"../../core/render/Graphics\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\n/**\r\n * A base class for any percent chart series.\r\n */\r\nexport class PercentSeries extends Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"slicesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { position: \"absolute\", isMeasured: false }))\r\n        });\r\n        Object.defineProperty(this, \"labelsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { position: \"absolute\", isMeasured: false }))\r\n        });\r\n        Object.defineProperty(this, \"ticksContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { position: \"absolute\", isMeasured: false }))\r\n        });\r\n        Object.defineProperty(this, \"_lLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_rLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_hLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * A [[ListTemplate]] of all slices in series.\r\n         *\r\n         * `slices.template` can also be used to configure slices.\r\n         */\r\n        Object.defineProperty(this, \"slices\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._makeSlices()\r\n        });\r\n        /**\r\n         * A [[ListTemplate]] of all slice labels in series.\r\n         *\r\n         * `labels.template` can also be used to configure slice labels.\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._makeLabels()\r\n        });\r\n        /**\r\n         * A [[ListTemplate]] of all slice ticks in series.\r\n         *\r\n         * `ticks.template` can also be used to configure slice ticks.\r\n         */\r\n        Object.defineProperty(this, \"ticks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._makeTicks()\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeSlice(dataItem) {\r\n        const slice = this.slicesContainer.children.push(this.slices.make());\r\n        slice.on(\"fill\", () => {\r\n            this.updateLegendMarker(dataItem);\r\n        });\r\n        slice.on(\"stroke\", () => {\r\n            this.updateLegendMarker(dataItem);\r\n        });\r\n        slice._setDataItem(dataItem);\r\n        dataItem.set(\"slice\", slice);\r\n        this.slices.push(slice);\r\n        return slice;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeLabel(dataItem) {\r\n        const label = this.labelsContainer.children.push(this.labels.make());\r\n        label._setDataItem(dataItem);\r\n        dataItem.set(\"label\", label);\r\n        this.labels.push(label);\r\n        return label;\r\n    }\r\n    _shouldMakeBullet(dataItem) {\r\n        if (dataItem.get(\"value\") != null) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeTick(dataItem) {\r\n        const tick = this.ticksContainer.children.push(this.ticks.make());\r\n        tick._setDataItem(dataItem);\r\n        dataItem.set(\"tick\", tick);\r\n        this.ticks.push(tick);\r\n        return tick;\r\n    }\r\n    _afterNew() {\r\n        this.fields.push(\"category\", \"fill\");\r\n        super._afterNew();\r\n    }\r\n    _onDataClear() {\r\n        const colors = this.get(\"colors\");\r\n        if (colors) {\r\n            colors.reset();\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        this._lLabels = [];\r\n        this._rLabels = [];\r\n        this._hLabels = [];\r\n        if (this._valuesDirty) {\r\n            let sum = 0;\r\n            let absSum = 0;\r\n            let valueHigh = 0;\r\n            let valueLow = Infinity;\r\n            let count = 0;\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                let valueWorking = dataItem.get(\"valueWorking\", 0);\r\n                sum += valueWorking;\r\n                absSum += Math.abs(valueWorking);\r\n            });\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                let value = dataItem.get(\"valueWorking\", 0);\r\n                if (value > valueHigh) {\r\n                    valueHigh = value;\r\n                }\r\n                if (value < valueLow) {\r\n                    valueLow = value;\r\n                }\r\n                count++;\r\n                let percentTotal = value / absSum;\r\n                if (absSum == 0) {\r\n                    percentTotal = 0;\r\n                }\r\n                dataItem.setRaw(\"valuePercentTotal\", percentTotal * 100);\r\n            });\r\n            this.setPrivateRaw(\"valueLow\", valueLow);\r\n            this.setPrivateRaw(\"valueHigh\", valueHigh);\r\n            this.setPrivateRaw(\"valueSum\", sum);\r\n            this.setPrivateRaw(\"valueAverage\", sum / count);\r\n            this.setPrivateRaw(\"valueAbsoluteSum\", absSum);\r\n        }\r\n    }\r\n    /**\r\n     * Shows hidden series.\r\n     *\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    show(duration) {\r\n        const _super = Object.create(null, {\r\n            show: { get: () => super.show }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let promises = [];\r\n            promises.push(_super.show.call(this, duration));\r\n            promises.push(this._sequencedShowHide(true, duration));\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hide whole series.\r\n     *\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    hide(duration) {\r\n        const _super = Object.create(null, {\r\n            hide: { get: () => super.hide }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let promises = [];\r\n            promises.push(_super.hide.call(this, duration));\r\n            promises.push(this._sequencedShowHide(false, duration));\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        if (this._valuesDirty) {\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                dataItem.get(\"label\").text.markDirtyText();\r\n            });\r\n        }\r\n        if (this.isDirty(\"legendLabelText\") || this.isDirty(\"legendValueText\")) {\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                this.updateLegendValue(dataItem);\r\n            });\r\n        }\r\n        this._arrange();\r\n    }\r\n    _arrange() {\r\n        this._arrangeDown(this._lLabels);\r\n        this._arrangeUp(this._lLabels);\r\n        this._arrangeDown(this._rLabels);\r\n        this._arrangeUp(this._rLabels);\r\n        this._arrangeLeft(this._hLabels);\r\n        this._arrangeRight(this._hLabels);\r\n        $array.each(this.dataItems, (dataItem) => {\r\n            this._updateTick(dataItem);\r\n        });\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        this._arrange();\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        if (dataItem.get(\"fill\") == null) {\r\n            let colors = this.get(\"colors\");\r\n            if (colors) {\r\n                dataItem.setRaw(\"fill\", colors.next());\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            if (!$type.isNumber(duration)) {\r\n                duration = this.get(\"stateAnimationDuration\", 0);\r\n            }\r\n            const easing = this.get(\"stateAnimationEasing\");\r\n            let value = dataItem.get(\"value\");\r\n            const animation = dataItem.animate({ key: \"valueWorking\", to: value, duration: duration, easing: easing });\r\n            if (animation) {\r\n                promises.push(animation.waitForStop());\r\n            }\r\n            const tick = dataItem.get(\"tick\");\r\n            if (tick) {\r\n                promises.push(tick.show(duration));\r\n            }\r\n            const label = dataItem.get(\"label\");\r\n            if (label) {\r\n                promises.push(label.show(duration));\r\n            }\r\n            const slice = dataItem.get(\"slice\");\r\n            if (slice) {\r\n                promises.push(slice.show(duration));\r\n            }\r\n            if (slice.get(\"active\")) {\r\n                slice.states.applyAnimate(\"active\");\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const hiddenState = this.states.create(\"hidden\", {});\r\n            if (!$type.isNumber(duration)) {\r\n                duration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\r\n            }\r\n            const easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\r\n            const animation = dataItem.animate({ key: \"valueWorking\", to: 0, duration: duration, easing: easing });\r\n            if (animation) {\r\n                promises.push(animation.waitForStop());\r\n            }\r\n            const tick = dataItem.get(\"tick\");\r\n            if (tick) {\r\n                promises.push(tick.hide(duration));\r\n            }\r\n            const label = dataItem.get(\"label\");\r\n            if (label) {\r\n                promises.push(label.hide(duration));\r\n            }\r\n            const slice = dataItem.get(\"slice\");\r\n            slice.hideTooltip();\r\n            if (slice) {\r\n                promises.push(slice.hide(duration));\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        let label = dataItem.get(\"label\");\r\n        if (label) {\r\n            this.labels.removeValue(label);\r\n            label.dispose();\r\n        }\r\n        let tick = dataItem.get(\"tick\");\r\n        if (tick) {\r\n            this.ticks.removeValue(tick);\r\n            tick.dispose();\r\n        }\r\n        let slice = dataItem.get(\"slice\");\r\n        if (slice) {\r\n            this.slices.removeValue(slice);\r\n            slice.dispose();\r\n        }\r\n    }\r\n    /**\r\n     * Triggers hover on a series data item.\r\n     *\r\n     * @since 5.0.7\r\n     * @param  dataItem  Target data item\r\n     */\r\n    hoverDataItem(dataItem) {\r\n        const slice = dataItem.get(\"slice\");\r\n        if (slice && !slice.isHidden()) {\r\n            slice.hover();\r\n        }\r\n    }\r\n    /**\r\n     * Triggers un-hover on a series data item.\r\n     *\r\n     * @since 5.0.7\r\n     * @param  dataItem  Target data item\r\n     */\r\n    unhoverDataItem(dataItem) {\r\n        const slice = dataItem.get(\"slice\");\r\n        if (slice) {\r\n            slice.unhover();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendMarker(dataItem) {\r\n        if (dataItem) {\r\n            const slice = dataItem.get(\"slice\");\r\n            if (slice) {\r\n                const legendDataItem = dataItem.get(\"legendDataItem\");\r\n                if (legendDataItem) {\r\n                    const markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n                    $array.each(visualSettings, (setting) => {\r\n                        if (slice.get(setting) != null) {\r\n                            markerRectangle.set(setting, slice.get(setting));\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _arrangeDown(labels) {\r\n        if (labels) {\r\n            let next = this._getNextDown();\r\n            labels.sort((a, b) => {\r\n                if (a.y > b.y) {\r\n                    return 1;\r\n                }\r\n                else if (a.y < b.y) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            $array.each(labels, (l) => {\r\n                const bounds = l.label.adjustedLocalBounds();\r\n                let labelTop = bounds.top;\r\n                if (l.y + labelTop < next) {\r\n                    l.y = next - labelTop;\r\n                }\r\n                l.label.set(\"y\", l.y);\r\n                next = l.y + bounds.bottom;\r\n            });\r\n        }\r\n    }\r\n    _getNextUp() {\r\n        return this.labelsContainer.maxHeight();\r\n    }\r\n    _getNextDown() {\r\n        return 0;\r\n    }\r\n    _arrangeUp(labels) {\r\n        if (labels) {\r\n            let next = this._getNextUp();\r\n            labels.sort((a, b) => {\r\n                if (a.y < b.y) {\r\n                    return 1;\r\n                }\r\n                else if (a.y > b.y) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            $array.each(labels, (l) => {\r\n                const bounds = l.label.adjustedLocalBounds();\r\n                let labelBottom = bounds.bottom;\r\n                if (l.y + labelBottom > next) {\r\n                    l.y = next - labelBottom;\r\n                }\r\n                l.label.set(\"y\", l.y);\r\n                next = l.y + bounds.top;\r\n            });\r\n        }\r\n    }\r\n    _arrangeRight(labels) {\r\n        if (labels) {\r\n            let next = 0;\r\n            labels.sort((a, b) => {\r\n                if (a.y > b.y) {\r\n                    return 1;\r\n                }\r\n                else if (a.y < b.y) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            $array.each(labels, (l) => {\r\n                const bounds = l.label.adjustedLocalBounds();\r\n                let labelLeft = bounds.left;\r\n                if (l.y + labelLeft < next) {\r\n                    l.y = next - labelLeft;\r\n                }\r\n                l.label.set(\"x\", l.y);\r\n                next = l.y + bounds.right;\r\n            });\r\n        }\r\n    }\r\n    _arrangeLeft(labels) {\r\n        if (labels) {\r\n            let next = this.labelsContainer.maxWidth();\r\n            labels.sort((a, b) => {\r\n                if (a.y < b.y) {\r\n                    return 1;\r\n                }\r\n                else if (a.y > b.y) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            $array.each(labels, (l) => {\r\n                const bounds = l.label.adjustedLocalBounds();\r\n                let labelRight = bounds.right;\r\n                if (l.y + labelRight > next) {\r\n                    l.y = next - labelRight;\r\n                }\r\n                l.label.set(\"x\", l.y);\r\n                next = l.y + bounds.left;\r\n            });\r\n        }\r\n    }\r\n    _updateSize() {\r\n        super._updateSize();\r\n        this.markDirty();\r\n    }\r\n    _updateTick(_dataItem) {\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart.series.removeValue(this);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PercentSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PercentSeries\"\r\n});\r\nObject.defineProperty(PercentSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Series.classNames.concat([PercentSeries.className])\r\n});\r\n","import { Percent } from \"../../core/util/Percent\";\r\nimport { PercentChart } from \"../percent/PercentChart\";\r\nimport { p50 } from \"../../core/util/Percent\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $math from \"../../core/util/Math\";\r\n/**\r\n * Creates a pie chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/} for more info\r\n * @important\r\n */\r\nexport class PieChart extends PercentChart {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_maxRadius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.seriesContainer.setAll({ x: p50, y: p50 });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        const chartContainer = this.chartContainer;\r\n        const w = chartContainer.innerWidth();\r\n        const h = chartContainer.innerHeight();\r\n        const startAngle = this.get(\"startAngle\", 0);\r\n        const endAngle = this.get(\"endAngle\", 0);\r\n        const innerRadius = this.get(\"innerRadius\");\r\n        let bounds = $math.getArcBounds(0, 0, startAngle, endAngle, 1);\r\n        const wr = w / (bounds.right - bounds.left);\r\n        const hr = h / (bounds.bottom - bounds.top);\r\n        let innerBounds = { left: 0, right: 0, top: 0, bottom: 0 };\r\n        if (innerRadius instanceof Percent) {\r\n            let value = innerRadius.value;\r\n            let mr = Math.min(wr, hr);\r\n            value = Math.max(mr * value, mr - Math.min(h, w)) / mr;\r\n            innerBounds = $math.getArcBounds(0, 0, startAngle, endAngle, value);\r\n            this.setPrivateRaw(\"irModifyer\", value / innerRadius.value);\r\n        }\r\n        bounds = $math.mergeBounds([bounds, innerBounds]);\r\n        const prevRadius = this._maxRadius;\r\n        this._maxRadius = Math.min(wr, hr);\r\n        const radius = $utils.relativeToValue(this.get(\"radius\", 0), this._maxRadius);\r\n        this.seriesContainer.setAll({\r\n            dy: -radius * (bounds.bottom + bounds.top) / 2, dx: -radius * (bounds.right + bounds.left) / 2\r\n        });\r\n        if (this.isDirty(\"startAngle\") || this.isDirty(\"endAngle\") || prevRadius != this._maxRadius) {\r\n            this.series.each((series) => {\r\n                series._markDirtyKey(\"startAngle\");\r\n            });\r\n        }\r\n        if (this.isDirty(\"innerRadius\") || this.isDirty(\"radius\")) {\r\n            this.series.each((series) => {\r\n                series._markDirtyKey(\"innerRadius\");\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Returns outer radius in pixels.\r\n     *\r\n     * If optional series parameter is passed in, it will return outer radius\r\n     * of that particular series.\r\n     *\r\n     * @param   series  Series\r\n     * @return          Radius in pixels\r\n     */\r\n    radius(series) {\r\n        let radius = $utils.relativeToValue(this.get(\"radius\", 0), this._maxRadius);\r\n        let innerRadius = $utils.relativeToValue(this.get(\"innerRadius\", 0), radius);\r\n        if (series) {\r\n            let index = this.series.indexOf(series);\r\n            let length = this.series.length;\r\n            let seriesRadius = series.get(\"radius\");\r\n            if (seriesRadius != null) {\r\n                return innerRadius + $utils.relativeToValue(seriesRadius, radius - innerRadius);\r\n            }\r\n            else {\r\n                return innerRadius + (radius - innerRadius) / length * (index + 1);\r\n            }\r\n        }\r\n        return radius;\r\n    }\r\n    /**\r\n     * Returns inner radius in pixels.\r\n     *\r\n     * If optional series parameter is passed in, it will return inner radius\r\n     * of that particular series.\r\n     *\r\n     * @param   series  Series\r\n     * @return          Radius in pixels\r\n     */\r\n    innerRadius(series) {\r\n        const radius = this.radius();\r\n        let innerRadius = $utils.relativeToValue(this.get(\"innerRadius\", 0), radius);\r\n        if (innerRadius < 0) {\r\n            innerRadius = radius + innerRadius;\r\n        }\r\n        if (series) {\r\n            let index = this.series.indexOf(series);\r\n            let length = this.series.length;\r\n            let seriesInnerRadius = series.get(\"innerRadius\");\r\n            if (seriesInnerRadius != null) {\r\n                return innerRadius + $utils.relativeToValue(seriesInnerRadius, radius - innerRadius);\r\n            }\r\n            else {\r\n                return innerRadius + (radius - innerRadius) / length * index;\r\n            }\r\n        }\r\n        return innerRadius;\r\n    }\r\n}\r\nObject.defineProperty(PieChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PieChart\"\r\n});\r\nObject.defineProperty(PieChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: PercentChart.classNames.concat([PieChart.className])\r\n});\r\n","import { PercentSeries } from \"../percent/PercentSeries\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { Slice } from \"../../core/render/Slice\";\r\nimport { Tick } from \"../../core/render/Tick\";\r\nimport { RadialLabel } from \"../../core/render/RadialLabel\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Creates a series for a [[PieChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/} for more info\r\n * @important\r\n */\r\nexport class PieSeries extends PercentSeries {\r\n    _makeSlices() {\r\n        return new ListTemplate(Template.new({}), () => Slice._new(this._root, {\r\n            themeTags: $utils.mergeTags(this.slices.template.get(\"themeTags\", []), [\"pie\", \"series\"])\r\n        }, [this.slices.template]));\r\n    }\r\n    _makeLabels() {\r\n        return new ListTemplate(Template.new({}), () => RadialLabel._new(this._root, {\r\n            themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"pie\", \"series\"])\r\n        }, [this.labels.template]));\r\n    }\r\n    _makeTicks() {\r\n        return new ListTemplate(Template.new({}), () => Tick._new(this._root, {\r\n            themeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), [\"pie\", \"series\"])\r\n        }, [this.ticks.template]));\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        const slice = this.makeSlice(dataItem);\r\n        slice.on(\"scale\", () => {\r\n            this._updateTick(dataItem);\r\n        });\r\n        slice.on(\"shiftRadius\", () => {\r\n            this._updateTick(dataItem);\r\n        });\r\n        slice.events.on(\"positionchanged\", () => {\r\n            this._updateTick(dataItem);\r\n        });\r\n        const label = this.makeLabel(dataItem);\r\n        label.events.on(\"positionchanged\", () => {\r\n            this._updateTick(dataItem);\r\n        });\r\n        this.makeTick(dataItem);\r\n        slice.events.on(\"positionchanged\", () => {\r\n            label.markDirty();\r\n        });\r\n    }\r\n    _getNextUp() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            return chart._maxRadius;\r\n        }\r\n        return this.labelsContainer.maxHeight() / 2;\r\n    }\r\n    _getNextDown() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            return -chart._maxRadius;\r\n        }\r\n        return -this.labelsContainer.maxHeight() / 2;\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            if (this.isDirty(\"alignLabels\")) {\r\n                let labelsTemplate = this.labels.template;\r\n                if (this.get(\"alignLabels\")) {\r\n                    labelsTemplate.set(\"textType\", \"aligned\");\r\n                }\r\n                else {\r\n                    let textType = labelsTemplate.get(\"textType\");\r\n                    if (textType == null || textType == \"aligned\") {\r\n                        labelsTemplate.set(\"textType\", \"adjusted\");\r\n                    }\r\n                }\r\n            }\r\n            if (this._valuesDirty || this.isDirty(\"radius\") || this.isDirty(\"innerRadius\") || this.isDirty(\"startAngle\") || this.isDirty(\"endAngle\") || this.isDirty(\"alignLabels\")) {\r\n                this.markDirtyBounds();\r\n                const startAngle = this.get(\"startAngle\", chart.get(\"startAngle\", -90));\r\n                const endAngle = this.get(\"endAngle\", chart.get(\"endAngle\", 270));\r\n                const arc = endAngle - startAngle;\r\n                let currentAngle = startAngle;\r\n                const radius = chart.radius(this);\r\n                this.setPrivateRaw(\"radius\", radius);\r\n                let innerRadius = chart.innerRadius(this) * chart.getPrivate(\"irModifyer\", 1);\r\n                if (innerRadius < 0) {\r\n                    innerRadius = radius + innerRadius;\r\n                }\r\n                //if (radius > 0) {\r\n                $array.each(this._dataItems, (dataItem) => {\r\n                    this.updateLegendValue(dataItem);\r\n                    let currentArc = arc * dataItem.get(\"valuePercentTotal\") / 100;\r\n                    const slice = dataItem.get(\"slice\");\r\n                    if (slice) {\r\n                        slice.set(\"radius\", radius);\r\n                        slice.set(\"innerRadius\", innerRadius);\r\n                        slice.set(\"startAngle\", currentAngle);\r\n                        slice.set(\"arc\", currentArc);\r\n                        const color = dataItem.get(\"fill\");\r\n                        slice._setDefault(\"fill\", color);\r\n                        slice._setDefault(\"stroke\", color);\r\n                    }\r\n                    let middleAngle = $math.normalizeAngle(currentAngle + currentArc / 2);\r\n                    const label = dataItem.get(\"label\");\r\n                    if (label) {\r\n                        label.setPrivate(\"radius\", radius);\r\n                        label.setPrivate(\"innerRadius\", innerRadius);\r\n                        label.set(\"labelAngle\", middleAngle);\r\n                        if (label.get(\"textType\") == \"aligned\") {\r\n                            let labelRadius = radius + label.get(\"radius\", 0);\r\n                            let y = radius * $math.sin(middleAngle);\r\n                            if (middleAngle > 90 && middleAngle <= 270) {\r\n                                if (!label.isHidden() && !label.isHiding()) {\r\n                                    this._lLabels.push({ label: label, y: y });\r\n                                }\r\n                                labelRadius *= -1;\r\n                                labelRadius -= this.labelsContainer.get(\"paddingLeft\", 0);\r\n                                label.set(\"centerX\", p100);\r\n                                label.setPrivateRaw(\"left\", true);\r\n                            }\r\n                            else {\r\n                                if (!label.isHidden() && !label.isHiding()) {\r\n                                    this._rLabels.push({ label: label, y: y });\r\n                                }\r\n                                labelRadius += this.labelsContainer.get(\"paddingRight\", 0);\r\n                                label.set(\"centerX\", 0);\r\n                                label.setPrivateRaw(\"left\", false);\r\n                            }\r\n                            label.set(\"x\", labelRadius);\r\n                            label.set(\"y\", radius * $math.sin(middleAngle));\r\n                        }\r\n                    }\r\n                    currentAngle += currentArc;\r\n                    this._updateTick(dataItem);\r\n                });\r\n                //}\r\n            }\r\n        }\r\n    }\r\n    _updateTick(dataItem) {\r\n        const tick = dataItem.get(\"tick\");\r\n        const label = dataItem.get(\"label\");\r\n        const slice = dataItem.get(\"slice\");\r\n        const location = tick.get(\"location\", 1);\r\n        if (tick && label && slice) {\r\n            const radius = (slice.get(\"shiftRadius\", 0) + slice.get(\"radius\", 0)) * slice.get(\"scale\", 1) * location;\r\n            const labelAngle = label.get(\"labelAngle\", 0);\r\n            const cos = $math.cos(labelAngle);\r\n            const sin = $math.sin(labelAngle);\r\n            const labelsContainer = this.labelsContainer;\r\n            const pl = labelsContainer.get(\"paddingLeft\", 0);\r\n            const pr = labelsContainer.get(\"paddingRight\", 0);\r\n            let x = 0;\r\n            let y = 0;\r\n            x = label.x();\r\n            y = label.y();\r\n            if (label.get(\"textType\") == \"circular\") {\r\n                const labelRadius = label.radius() - label.get(\"paddingBottom\", 0);\r\n                const labelAngle = label.get(\"labelAngle\", 0);\r\n                x = labelRadius * $math.cos(labelAngle);\r\n                y = labelRadius * $math.sin(labelAngle);\r\n            }\r\n            let dx = -pr;\r\n            if (label.getPrivate(\"left\")) {\r\n                dx = pl;\r\n            }\r\n            tick.set(\"points\", [{ x: slice.x() + radius * cos, y: slice.y() + radius * sin }, { x: x + dx, y: y }, { x: x, y: y }]);\r\n        }\r\n    }\r\n    _positionBullet(bullet) {\r\n        const sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            const dataItem = sprite.dataItem;\r\n            const slice = dataItem.get(\"slice\");\r\n            if (slice) {\r\n                const innerRadius = slice.get(\"innerRadius\", 0);\r\n                const radius = slice.get(\"radius\", 0);\r\n                const startAngle = slice.get(\"startAngle\", 0);\r\n                const arc = slice.get(\"arc\", 0);\r\n                const locationX = bullet.get(\"locationX\", 0.5);\r\n                const locationY = bullet.get(\"locationY\", 0.5);\r\n                const angle = startAngle + arc * locationX;\r\n                const r = innerRadius + (radius - innerRadius) * locationY;\r\n                sprite.setAll({ x: $math.cos(angle) * r, y: $math.sin(angle) * r });\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PieSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PieSeries\"\r\n});\r\nObject.defineProperty(PieSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: PercentSeries.classNames.concat([PieSeries.className])\r\n});\r\n","import { Container } from \"../../core/render/Container\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\n/**\r\n * A base class for all charts.\r\n */\r\nexport class Chart extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] chart places its elements in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"chartContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { width: p100, height: p100, interactiveChildren: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] chart places its bullets in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { interactiveChildren: false, isMeasured: false, position: \"absolute\", width: p100, height: p100 })\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(Chart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Chart\"\r\n});\r\nObject.defineProperty(Chart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Chart.className])\r\n});\r\n","import { Graphics } from \"./Graphics\";\r\nimport * as $draw from \"../util/Draw\";\r\n/**\r\n * Draws a line.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Line extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"points\") || this.isDirty(\"segments\") || this._sizeDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            const points = this.get(\"points\");\r\n            const segments = this.get(\"segments\");\r\n            if (points && points.length > 0) {\r\n                let point = points[0];\r\n                this._display.moveTo(point.x, point.y);\r\n                $draw.segmentedLine(this._display, [[points]]);\r\n            }\r\n            else if (segments) {\r\n                $draw.segmentedLine(this._display, segments);\r\n            }\r\n            else if (!this.get(\"draw\")) {\r\n                let w = this.width();\r\n                let h = this.height();\r\n                this._display.moveTo(0, 0);\r\n                this._display.lineTo(w, h);\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Line, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Line\"\r\n});\r\nObject.defineProperty(Line, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Line.className])\r\n});\r\n","import { Chart } from \"./Chart\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { ListAutoDispose } from \"../../core/util/List\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\n/**\r\n * A base class for all series-based charts.\r\n */\r\nexport class SerialChart extends Chart {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] where chart will store all series.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"seriesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, isMeasured: false })\r\n        });\r\n        /**\r\n         * A list of chart's series.\r\n         */\r\n        Object.defineProperty(this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._disposers.push(this.series);\r\n        const children = this.seriesContainer.children;\r\n        this._disposers.push(this.series.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (series) => {\r\n                    this._removeSeries(series);\r\n                });\r\n                const colors = this.get(\"colors\");\r\n                if (colors) {\r\n                    colors.reset();\r\n                }\r\n            }\r\n            else if (change.type === \"push\") {\r\n                children.moveValue(change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                children.setIndex(change.index, change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                children.insertIndex(change.index, change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._removeSeries(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                children.moveValue(change.value, change.newIndex);\r\n                this._processSeries(change.value);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        }));\r\n    }\r\n    _processSeries(series) {\r\n        series.chart = this;\r\n        series._placeBulletsContainer(this);\r\n    }\r\n    _removeSeries(series) {\r\n        if (!series.isDisposed()) {\r\n            this.seriesContainer.children.removeValue(series);\r\n            series._removeBulletsContainer();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(SerialChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"SerialChart\"\r\n});\r\nObject.defineProperty(SerialChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Chart.classNames.concat([SerialChart.className])\r\n});\r\n","import { Line } from \"./Line\";\r\n/**\r\n * Draws a tick element (mostly used on axes).\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n */\r\nexport class Tick extends Line {\r\n}\r\nObject.defineProperty(Tick, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Tick\"\r\n});\r\nObject.defineProperty(Tick, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Line.classNames.concat([Tick.className])\r\n});\r\n","/** @ignore */ /** */\r\nimport * as $math from \"./Math\";\r\n/**\r\n * @ignore\r\n */\r\nexport function segmentedLine(display, segments) {\r\n    for (let s = 0, len = segments.length; s < len; s++) {\r\n        const groups = segments[s];\r\n        if (groups.length > 0) {\r\n            let firstGroup = groups[0];\r\n            if (firstGroup.length > 0) {\r\n                let firstPoint = firstGroup[0];\r\n                display.moveTo(firstPoint.x, firstPoint.y);\r\n                for (let g = 0, len = groups.length; g < len; g++) {\r\n                    line(display, groups[g]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function line(display, points) {\r\n    for (let p = 0, len = points.length; p < len; p++) {\r\n        const point = points[p];\r\n        display.lineTo(point.x, point.y);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function moveTo(display, point) {\r\n    display.moveTo(point.x, point.y);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function clear(display) {\r\n    display.clear();\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function smoothedSegmentedline(display, segments, tensionX, tensionY) {\r\n    for (let s = 0, len = segments.length; s < len; s++) {\r\n        const groups = segments[s];\r\n        if (groups.length > 0) {\r\n            let firstGroup = groups[0];\r\n            if (firstGroup.length > 0) {\r\n                let firstPoint = firstGroup[0];\r\n                display.moveTo(firstPoint.x, firstPoint.y);\r\n                for (let g = 0, len = groups.length; g < len; g++) {\r\n                    const points = groups[g];\r\n                    if (points.length > 0) {\r\n                        display.lineTo(points[0].x, points[0].y);\r\n                    }\r\n                    smoothedLine(display, points, tensionX, tensionY);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function smoothedLine(display, points, tensionX, tensionY) {\r\n    for (let i = points.length - 1; i > 0; i--) {\r\n        let p0 = points[i];\r\n        let p1 = points[i - 1];\r\n        if (Math.abs(p0.x - p1.x) < 0.1 && Math.abs(p0.y - p1.y) < 0.1) {\r\n            points.splice(i - 1, 1);\r\n        }\r\n    }\r\n    if (points.length < 3 || (tensionX >= 1 && tensionY >= 1)) {\r\n        line(display, points);\r\n        return;\r\n    }\r\n    tensionX = 1 - tensionX + 0.00001;\r\n    tensionY = 1 - tensionY + 0.00001;\r\n    let first = points[0];\r\n    let last = points[points.length - 1];\r\n    let closed = false;\r\n    if ($math.round(first.x, 3) == $math.round(last.x) && $math.round(first.y) == $math.round(last.y)) {\r\n        closed = true;\r\n    }\r\n    // Can't moveTo here, as it wont be possible to have fill then.\r\n    let path = \"\";\r\n    for (let i = 0, len = points.length - 1; i < len; i++) {\r\n        let p0 = points[i - 1];\r\n        let p1 = points[i];\r\n        let p2 = points[i + 1];\r\n        let p3 = points[i + 2];\r\n        if (i === 0) {\r\n            if (closed) {\r\n                p0 = points[len - 2];\r\n            }\r\n            else {\r\n                p0 = points[0];\r\n            }\r\n        }\r\n        else if (i == len - 1) {\r\n            if (closed) {\r\n                p3 = points[1];\r\n            }\r\n            else {\r\n                p3 = p2;\r\n            }\r\n        }\r\n        let controlPointA = $math.getCubicControlPointA(p0, p1, p2, tensionX, tensionY);\r\n        let controlPointB = $math.getCubicControlPointB(p1, p2, p3, tensionX, tensionY);\r\n        display.bezierCurveTo(controlPointA.x, controlPointA.y, controlPointB.x, controlPointB.y, p2.x, p2.y);\r\n    }\r\n    return path;\r\n}\r\n","export { PercentChart } from \"./.internal/charts/percent/PercentChart\";\r\nexport { PercentSeries } from \"./.internal/charts/percent/PercentSeries\";\r\nexport { PieChart } from \"./.internal/charts/pie/PieChart\";\r\nexport { PieSeries } from \"./.internal/charts/pie/PieSeries\";\r\nexport { FunnelSeries } from \"./.internal/charts/funnel/FunnelSeries\";\r\nexport { FunnelSlice } from \"./.internal/charts/funnel/FunnelSlice\";\r\nexport { PictorialStackedSeries } from \"./.internal/charts/funnel/PictorialStackedSeries\";\r\nexport { PyramidSeries } from \"./.internal/charts/funnel/PyramidSeries\";\r\nexport { SlicedChart } from \"./.internal/charts/funnel/SlicedChart\";\r\nimport { PercentDefaultTheme } from \"./.internal/charts/percent/PercentDefaultTheme\";\r\nexport { PercentDefaultTheme as DefaultTheme };\r\n"],"names":["__awaiter","PercentSeries","Template","ListTemplate","FunnelSlice","Tick","Label","percent","p50","p100","$array","$type","$utils","FunnelSeries","constructor","arguments","Object","defineProperty","enumerable","configurable","writable","value","_makeLinks","_makeSlices","new","_new","_root","themeTags","mergeTags","slices","template","get","_tag","_makeLabels","labels","_makeTicks","ticks","links","makeLink","dataItem","link","slicesContainer","children","push","make","_setDataItem","set","_afterNew","setAll","isMeasured","position","width","height","onPrivate","markDirtySize","horizontalLayout","verticalLayout","processDataItem","slice","makeSlice","label","makeLabel","on","_updateTick","makeTick","events","markDirty","_updateChildren","_opposite","indexOf","labelsContainer","total","count","each","dataItems","isNumber","Math","abs","isHidden","_total","_count","isDirty","_fixLayout","_valuesDirty","_sizeDirty","h","innerHeight","innerWidth","_nextCoord","markDirtyBounds","i","_dataItems","updateLegendValue","tick","color","_setDefault","setPrivate","decorateSlice","isLast","orientation","labelsTemplate","centerX","x","y","getNextValue","index","nextValue","length","nextItem","maxWidth","maxHeight","maxSize","workingValue","bottomRatio","valueHigh","getPrivate","d","Infinity","topWidth","bottomWidth","startLocation","endLocation","linkHeight","min","max","labelY","labelX","hideDataItem","duration","_super","create","hide","call","showDataItem","show","tickLocation","lcw","lch","pl","pr","pt","pb","p0","p1","p2","getPoint","disposeDataItem","removeValue","dispose","_positionBullet","bullet","sprite","locationX","locationY","dx","dy","classNames","concat","className","Graphics","display","moveTo","_tlx","_tly","lineTo","_trx","_try","quadraticCurveTo","_cprx","_cpry","_brx","_bry","_blx","_bly","_cplx","_cply","w","tw","bw","tlx","trx","brx","blx","mlx","mrx","_changed","_clear","ed","PyramidSeries","PictorialStackedSeries","centerY","seriesMask","_updateScale","seriesGraphics","scale","bounds","localBounds","mw","right","left","mh","bottom","top","NaN","_prepareChildren","svgPath","_nextSize","undefined","valueIs","sum","sliceHeight","sliceBottomWidth","pyramidHeight","pyramidWidth","linkWidth","center","relativeToValue","sliceTopWidth","angle","atan2","c","tan","PI","totalSquare","square","s","sqrt","labelCoord","sliceX","sliceY","linkX","linkY","_rLabels","_hLabels","PercentChart","SlicedChart","seriesContainer","layout","SerialChart","PercentDefaultTheme","_defaultThemes","chartContainer","bulletsContainer","_processSeries","series","moveValue","Theme","ColorSet","setColor","setupDefaultRules","ic","interfaceColors","r","rule","bind","legendLabelText","legendValueText","colors","radius","startAngle","endAngle","alignLabels","states","opacity","toggleKey","tooltipText","strokeWidth","strokeOpacity","role","lineJoin","shiftRadius","textType","text","paddingTop","paddingBottom","populateText","location","paddingLeft","paddingRight","sequencedInterpolation","interactive","expandDistance","rotation","fillOpacity","Series","Container","visualSettings","updateLegendMarker","_shouldMakeBullet","ticksContainer","fields","_onDataClear","reset","_lLabels","absSum","valueLow","valueWorking","percentTotal","setRaw","setPrivateRaw","promises","_sequencedShowHide","Promise","all","markDirtyText","_arrange","_arrangeDown","_arrangeUp","_arrangeLeft","_arrangeRight","_afterChanged","next","easing","animation","animate","key","to","waitForStop","applyAnimate","hiddenState","hideTooltip","hoverDataItem","hover","unhoverDataItem","unhover","legendDataItem","markerRectangle","setting","_getNextDown","sort","a","b","l","adjustedLocalBounds","labelTop","_getNextUp","labelBottom","labelLeft","labelRight","_updateSize","_dataItem","_dispose","chart","Percent","$math","PieChart","innerRadius","getArcBounds","wr","hr","innerBounds","mr","mergeBounds","prevRadius","_maxRadius","_markDirtyKey","seriesRadius","seriesInnerRadius","Slice","RadialLabel","PieSeries","arc","currentAngle","currentArc","middleAngle","normalizeAngle","labelRadius","sin","isHiding","labelAngle","cos","Chart","interactiveChildren","$draw","Line","_beforeChanged","isPrivateDirty","points","segments","point","_display","segmentedLine","ListAutoDispose","_disposers","onAll","change","type","oldValues","_removeSeries","newValue","setIndex","insertIndex","oldValue","newIndex","Error","_placeBulletsContainer","isDisposed","_removeBulletsContainer","len","groups","firstGroup","firstPoint","g","line","p","clear","smoothedSegmentedline","tensionX","tensionY","smoothedLine","splice","first","last","closed","round","path","p3","controlPointA","getCubicControlPointA","controlPointB","getCubicControlPointB","bezierCurveTo","DefaultTheme"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]}