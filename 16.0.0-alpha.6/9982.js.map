{"version":3,"file":"9982.js","mappings":"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","sources":["./node_modules/rxjs/dist/esm/internal/Scheduler.js","./node_modules/rxjs/dist/esm/internal/observable/empty.js","./node_modules/rxjs/dist/esm/internal/observable/interval.js","./node_modules/rxjs/dist/esm/internal/observable/merge.js","./node_modules/rxjs/dist/esm/internal/observable/timer.js","./node_modules/rxjs/dist/esm/internal/operators/OperatorSubscriber.js","./node_modules/rxjs/dist/esm/internal/operators/switchMap.js","./node_modules/rxjs/dist/esm/internal/operators/take.js","./node_modules/rxjs/dist/esm/internal/operators/takeUntil.js","./node_modules/rxjs/dist/esm/internal/operators/tap.js","./node_modules/rxjs/dist/esm/internal/scheduler/Action.js","./node_modules/rxjs/dist/esm/internal/scheduler/AnimationFrameAction.js","./node_modules/rxjs/dist/esm/internal/scheduler/AnimationFrameScheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsyncAction.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsyncScheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/animationFrame.js","./node_modules/rxjs/dist/esm/internal/scheduler/animationFrameProvider.js","./node_modules/rxjs/dist/esm/internal/scheduler/async.js","./node_modules/rxjs/dist/esm/internal/scheduler/dateTimestampProvider.js","./node_modules/rxjs/dist/esm/internal/scheduler/intervalProvider.js","./node_modules/rxjs/dist/esm/internal/util/isDate.js","./node_modules/rxjs/dist/esm/internal/util/lift.js","./node_modules/@angular/cdk/fesm2022/drag-drop.mjs"],"sourcesContent":["import { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class Scheduler {\n    constructor(schedulerActionCtor, now = Scheduler.now) {\n        this.schedulerActionCtor = schedulerActionCtor;\n        this.now = now;\n    }\n    schedule(work, delay = 0, state) {\n        return new this.schedulerActionCtor(this, work).schedule(state, delay);\n    }\n}\nScheduler.now = dateTimestampProvider.now;\n","import { Observable } from '../Observable';\nexport const EMPTY = new Observable((subscriber) => subscriber.complete());\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nfunction emptyScheduled(scheduler) {\n    return new Observable((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { timer } from './timer';\nexport function interval(period = 0, scheduler = asyncScheduler) {\n    if (period < 0) {\n        period = 0;\n    }\n    return timer(period, period, scheduler);\n}\n","import { mergeAll } from '../operators/mergeAll';\nimport { innerFrom } from './innerFrom';\nimport { EMPTY } from './empty';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from './from';\nexport function merge(...args) {\n    const scheduler = popScheduler(args);\n    const concurrent = popNumber(args, Infinity);\n    const sources = args;\n    return !sources.length\n        ?\n            EMPTY\n        : sources.length === 1\n            ?\n                innerFrom(sources[0])\n            :\n                mergeAll(concurrent)(from(sources, scheduler));\n}\n","import { Observable } from '../Observable';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\nexport function timer(dueTime = 0, intervalOrScheduler, scheduler = asyncScheduler) {\n    let intervalDuration = -1;\n    if (intervalOrScheduler != null) {\n        if (isScheduler(intervalOrScheduler)) {\n            scheduler = intervalOrScheduler;\n        }\n        else {\n            intervalDuration = intervalOrScheduler;\n        }\n    }\n    return new Observable((subscriber) => {\n        let due = isValidDate(dueTime) ? +dueTime - scheduler.now() : dueTime;\n        if (due < 0) {\n            due = 0;\n        }\n        let n = 0;\n        return scheduler.schedule(function () {\n            if (!subscriber.closed) {\n                subscriber.next(n++);\n                if (0 <= intervalDuration) {\n                    this.schedule(undefined, intervalDuration);\n                }\n                else {\n                    subscriber.complete();\n                }\n            }\n        }, due);\n    });\n}\n","import { Subscriber } from '../Subscriber';\nexport function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {\n    return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\nexport class OperatorSubscriber extends Subscriber {\n    constructor(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {\n        super(destination);\n        this.onFinalize = onFinalize;\n        this.shouldUnsubscribe = shouldUnsubscribe;\n        this._next = onNext\n            ? function (value) {\n                try {\n                    onNext(value);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n            }\n            : super._next;\n        this._error = onError\n            ? function (err) {\n                try {\n                    onError(err);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : super._error;\n        this._complete = onComplete\n            ? function () {\n                try {\n                    onComplete();\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : super._complete;\n    }\n    unsubscribe() {\n        var _a;\n        if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n            const { closed } = this;\n            super.unsubscribe();\n            !closed && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));\n        }\n    }\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function switchMap(project, resultSelector) {\n    return operate((source, subscriber) => {\n        let innerSubscriber = null;\n        let index = 0;\n        let isComplete = false;\n        const checkComplete = () => isComplete && !innerSubscriber && subscriber.complete();\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            innerSubscriber === null || innerSubscriber === void 0 ? void 0 : innerSubscriber.unsubscribe();\n            let innerIndex = 0;\n            const outerIndex = index++;\n            innerFrom(project(value, outerIndex)).subscribe((innerSubscriber = createOperatorSubscriber(subscriber, (innerValue) => subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue), () => {\n                innerSubscriber = null;\n                checkComplete();\n            })));\n        }, () => {\n            isComplete = true;\n            checkComplete();\n        }));\n    });\n}\n","import { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function take(count) {\n    return count <= 0\n        ?\n            () => EMPTY\n        : operate((source, subscriber) => {\n            let seen = 0;\n            source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n                if (++seen <= count) {\n                    subscriber.next(value);\n                    if (count <= seen) {\n                        subscriber.complete();\n                    }\n                }\n            }));\n        });\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\nexport function takeUntil(notifier) {\n    return operate((source, subscriber) => {\n        innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, () => subscriber.complete(), noop));\n        !subscriber.closed && source.subscribe(subscriber);\n    });\n}\n","import { isFunction } from '../util/isFunction';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\nexport function tap(observerOrNext, error, complete) {\n    const tapObserver = isFunction(observerOrNext) || error || complete\n        ?\n            { next: observerOrNext, error, complete }\n        : observerOrNext;\n    return tapObserver\n        ? operate((source, subscriber) => {\n            var _a;\n            (_a = tapObserver.subscribe) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n            let isUnsub = true;\n            source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n                var _a;\n                (_a = tapObserver.next) === null || _a === void 0 ? void 0 : _a.call(tapObserver, value);\n                subscriber.next(value);\n            }, () => {\n                var _a;\n                isUnsub = false;\n                (_a = tapObserver.complete) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n                subscriber.complete();\n            }, (err) => {\n                var _a;\n                isUnsub = false;\n                (_a = tapObserver.error) === null || _a === void 0 ? void 0 : _a.call(tapObserver, err);\n                subscriber.error(err);\n            }, () => {\n                var _a, _b;\n                if (isUnsub) {\n                    (_a = tapObserver.unsubscribe) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n                }\n                (_b = tapObserver.finalize) === null || _b === void 0 ? void 0 : _b.call(tapObserver);\n            }));\n        })\n        :\n            identity;\n}\n","import { Subscription } from '../Subscription';\nexport class Action extends Subscription {\n    constructor(scheduler, work) {\n        super();\n    }\n    schedule(state, delay = 0) {\n        return this;\n    }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { animationFrameProvider } from './animationFrameProvider';\nexport class AnimationFrameAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && delay > 0) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler._scheduled || (scheduler._scheduled = animationFrameProvider.requestAnimationFrame(() => scheduler.flush(undefined)));\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        var _a;\n        if (delay != null ? delay > 0 : this.delay > 0) {\n            return super.recycleAsyncId(scheduler, id, delay);\n        }\n        const { actions } = scheduler;\n        if (id != null && ((_a = actions[actions.length - 1]) === null || _a === void 0 ? void 0 : _a.id) !== id) {\n            animationFrameProvider.cancelAnimationFrame(id);\n            scheduler._scheduled = undefined;\n        }\n        return undefined;\n    }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\nexport class AnimationFrameScheduler extends AsyncScheduler {\n    flush(action) {\n        this._active = true;\n        const flushId = this._scheduled;\n        this._scheduled = undefined;\n        const { actions } = this;\n        let error;\n        action = action || actions.shift();\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while ((action = actions[0]) && action.id === flushId && actions.shift());\n        this._active = false;\n        if (error) {\n            while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { Action } from './Action';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nexport class AsyncAction extends Action {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    schedule(state, delay = 0) {\n        var _a;\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        const id = this.id;\n        const scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = (_a = this.id) !== null && _a !== void 0 ? _a : this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    }\n    requestAsyncId(scheduler, _id, delay = 0) {\n        return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    }\n    recycleAsyncId(_scheduler, id, delay = 0) {\n        if (delay != null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        if (id != null) {\n            intervalProvider.clearInterval(id);\n        }\n        return undefined;\n    }\n    execute(state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        const error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    }\n    _execute(state, _delay) {\n        let errored = false;\n        let errorValue;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = e ? e : new Error('Scheduled action threw falsy error');\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    }\n    unsubscribe() {\n        if (!this.closed) {\n            const { id, scheduler } = this;\n            const { actions } = scheduler;\n            this.work = this.state = this.scheduler = null;\n            this.pending = false;\n            arrRemove(actions, this);\n            if (id != null) {\n                this.id = this.recycleAsyncId(scheduler, id, null);\n            }\n            this.delay = null;\n            super.unsubscribe();\n        }\n    }\n}\n","import { Scheduler } from '../Scheduler';\nexport class AsyncScheduler extends Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        super(SchedulerAction, now);\n        this.actions = [];\n        this._active = false;\n    }\n    flush(action) {\n        const { actions } = this;\n        if (this._active) {\n            actions.push(action);\n            return;\n        }\n        let error;\n        this._active = true;\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while ((action = actions.shift()));\n        this._active = false;\n        if (error) {\n            while ((action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nexport const animationFrameScheduler = new AnimationFrameScheduler(AnimationFrameAction);\nexport const animationFrame = animationFrameScheduler;\n","import { Subscription } from '../Subscription';\nexport const animationFrameProvider = {\n    schedule(callback) {\n        let request = requestAnimationFrame;\n        let cancel = cancelAnimationFrame;\n        const { delegate } = animationFrameProvider;\n        if (delegate) {\n            request = delegate.requestAnimationFrame;\n            cancel = delegate.cancelAnimationFrame;\n        }\n        const handle = request((timestamp) => {\n            cancel = undefined;\n            callback(timestamp);\n        });\n        return new Subscription(() => cancel === null || cancel === void 0 ? void 0 : cancel(handle));\n    },\n    requestAnimationFrame(...args) {\n        const { delegate } = animationFrameProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.requestAnimationFrame) || requestAnimationFrame)(...args);\n    },\n    cancelAnimationFrame(...args) {\n        const { delegate } = animationFrameProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.cancelAnimationFrame) || cancelAnimationFrame)(...args);\n    },\n    delegate: undefined,\n};\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\nexport const async = asyncScheduler;\n","export const dateTimestampProvider = {\n    now() {\n        return (dateTimestampProvider.delegate || Date).now();\n    },\n    delegate: undefined,\n};\n","export const intervalProvider = {\n    setInterval(handler, timeout, ...args) {\n        const { delegate } = intervalProvider;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) {\n            return delegate.setInterval(handler, timeout, ...args);\n        }\n        return setInterval(handler, timeout, ...args);\n    },\n    clearInterval(handle) {\n        const { delegate } = intervalProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);\n    },\n    delegate: undefined,\n};\n","export function isValidDate(value) {\n    return value instanceof Date && !isNaN(value);\n}\n","import { isFunction } from './isFunction';\nexport function hasLift(source) {\n    return isFunction(source === null || source === void 0 ? void 0 : source.lift);\n}\nexport function operate(init) {\n    return (source) => {\n        if (hasLift(source)) {\n            return source.lift(function (liftedSource) {\n                try {\n                    return init(liftedSource, this);\n                }\n                catch (err) {\n                    this.error(err);\n                }\n            });\n        }\n        throw new TypeError('Unable to lift unknown Observable type');\n    };\n}\n","import * as i0 from '@angular/core';\nimport { Injectable, Inject, InjectionToken, Directive, Optional, SkipSelf, Input, EventEmitter, Self, ContentChildren, ContentChild, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { _getEventTarget, normalizePassiveListenerOptions, _getShadowRoot } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement, coerceNumberProperty, coerceArray } from '@angular/cdk/coercion';\nimport { isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\nimport { takeUntil, map, take, startWith, tap, switchMap } from 'rxjs/operators';\nimport * as i1$1 from '@angular/cdk/bidi';\n\n/**\n * Shallow-extends a stylesheet object with another stylesheet-like object.\n * Note that the keys in `source` have to be dash-cased.\n * @docs-private\n */\nfunction extendStyles(dest, source, importantProperties) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            const value = source[key];\n            if (value) {\n                dest.setProperty(key, value, importantProperties?.has(key) ? 'important' : '');\n            }\n            else {\n                dest.removeProperty(key);\n            }\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        'touch-action': enable ? '' : 'none',\n        '-webkit-user-drag': enable ? '' : 'none',\n        '-webkit-tap-highlight-color': enable ? '' : 'transparent',\n        'user-select': userSelect,\n        '-ms-user-select': userSelect,\n        '-webkit-user-select': userSelect,\n        '-moz-user-select': userSelect,\n    });\n}\n/**\n * Toggles whether an element is visible while preserving its dimensions.\n * @param element Element whose visibility to toggle\n * @param enable Whether the element should be visible.\n * @param importantProperties Properties to be set as `!important`.\n * @docs-private\n */\nfunction toggleVisibility(element, enable, importantProperties) {\n    extendStyles(element.style, {\n        position: enable ? '' : 'fixed',\n        top: enable ? '' : '0',\n        opacity: enable ? '' : '0',\n        left: enable ? '' : '-999em',\n    }, importantProperties);\n}\n/**\n * Combines a transform string with an optional other transform\n * that exited before the base transform was applied.\n */\nfunction combineTransforms(transform, initialTransform) {\n    return initialTransform && initialTransform != 'none'\n        ? transform + ' ' + initialTransform\n        : transform;\n}\n\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nfunction getTransformTransitionDurationInMs(element) {\n    const computedStyle = getComputedStyle(element);\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    const propertyIndex = transitionedProperties.indexOf(property);\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return (parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]));\n}\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle, name) {\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map(part => part.trim());\n}\n\n/** Gets a mutable version of an element's bounding `ClientRect`. */\nfunction getMutableClientRect(element) {\n    const clientRect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `ClientRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: clientRect.top,\n        right: clientRect.right,\n        bottom: clientRect.bottom,\n        left: clientRect.left,\n        width: clientRect.width,\n        height: clientRect.height,\n        x: clientRect.x,\n        y: clientRect.y,\n    };\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param clientRect ClientRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param clientRect `ClientRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nfunction adjustClientRect(clientRect, top, left) {\n    clientRect.top += top;\n    clientRect.bottom = clientRect.top + clientRect.height;\n    clientRect.left += left;\n    clientRect.right = clientRect.left + clientRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a ClientRect.\n * @param rect ClientRect to check against.\n * @param threshold Threshold around the ClientRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nfunction isPointerNearClientRect(rect, threshold, pointerX, pointerY) {\n    const { top, right, bottom, left, width, height } = rect;\n    const xThreshold = width * threshold;\n    const yThreshold = height * threshold;\n    return (pointerY > top - yThreshold &&\n        pointerY < bottom + yThreshold &&\n        pointerX > left - xThreshold &&\n        pointerX < right + xThreshold);\n}\n\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nclass ParentPositionTracker {\n    constructor(_document) {\n        this._document = _document;\n        /** Cached positions of the scrollable parent elements. */\n        this.positions = new Map();\n    }\n    /** Clears the cached positions. */\n    clear() {\n        this.positions.clear();\n    }\n    /** Caches the positions. Should be called at the beginning of a drag sequence. */\n    cache(elements) {\n        this.clear();\n        this.positions.set(this._document, {\n            scrollPosition: this.getViewportScrollPosition(),\n        });\n        elements.forEach(element => {\n            this.positions.set(element, {\n                scrollPosition: { top: element.scrollTop, left: element.scrollLeft },\n                clientRect: getMutableClientRect(element),\n            });\n        });\n    }\n    /** Handles scrolling while a drag is taking place. */\n    handleScroll(event) {\n        const target = _getEventTarget(event);\n        const cachedPosition = this.positions.get(target);\n        if (!cachedPosition) {\n            return null;\n        }\n        const scrollPosition = cachedPosition.scrollPosition;\n        let newTop;\n        let newLeft;\n        if (target === this._document) {\n            const viewportScrollPosition = this.getViewportScrollPosition();\n            newTop = viewportScrollPosition.top;\n            newLeft = viewportScrollPosition.left;\n        }\n        else {\n            newTop = target.scrollTop;\n            newLeft = target.scrollLeft;\n        }\n        const topDifference = scrollPosition.top - newTop;\n        const leftDifference = scrollPosition.left - newLeft;\n        // Go through and update the cached positions of the scroll\n        // parents that are inside the element that was scrolled.\n        this.positions.forEach((position, node) => {\n            if (position.clientRect && target !== node && target.contains(node)) {\n                adjustClientRect(position.clientRect, topDifference, leftDifference);\n            }\n        });\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n        return { top: topDifference, left: leftDifference };\n    }\n    /**\n     * Gets the scroll position of the viewport. Note that we use the scrollX and scrollY directly,\n     * instead of going through the `ViewportRuler`, because the first value the ruler looks at is\n     * the top/left offset of the `document.documentElement` which works for most cases, but breaks\n     * if the element is offset by something like the `BlockScrollStrategy`.\n     */\n    getViewportScrollPosition() {\n        return { top: window.scrollY, left: window.scrollX };\n    }\n}\n\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n    const clone = node.cloneNode(true);\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    const nodeName = node.nodeName.toLowerCase();\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    if (nodeName === 'canvas') {\n        transferCanvasData(node, clone);\n    }\n    else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n        transferInputData(node, clone);\n    }\n    transferData('canvas', node, clone, transferCanvasData);\n    transferData('input, textarea, select', node, clone, transferInputData);\n    return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n    const descendantElements = node.querySelectorAll(selector);\n    if (descendantElements.length) {\n        const cloneElements = clone.querySelectorAll(selector);\n        for (let i = 0; i < descendantElements.length; i++) {\n            callback(descendantElements[i], cloneElements[i]);\n        }\n    }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n    // Browsers throw an error when assigning the value of a file input programmatically.\n    if (clone.type !== 'file') {\n        clone.value = source.value;\n    }\n    // Radio button `name` attributes must be unique for radio button groups\n    // otherwise original radio buttons can lose their checked state\n    // once the clone is inserted in the DOM.\n    if (clone.type === 'radio' && clone.name) {\n        clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n    }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n    const context = clone.getContext('2d');\n    if (context) {\n        // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n        // We can't do much about it so just ignore the error.\n        try {\n            context.drawImage(source, 0, 0);\n        }\n        catch { }\n    }\n}\n\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/** Inline styles to be set as `!important` while dragging. */\nconst dragImportantProperties = new Set([\n    // Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n    'position',\n]);\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nclass DragRef {\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._toggleNativeDragInteractions();\n            this._handles.forEach(handle => toggleNativeDragInteractions(handle, newValue));\n        }\n    }\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /** CSS `transform` that is applied to the element while it's being dragged. */\n        this._activeTransform = { x: 0, y: 0 };\n        /**\n         * Whether the dragging sequence has been started. Doesn't\n         * necessarily mean that the element has been moved.\n         */\n        this._hasStartedDragging = false;\n        /** Emits when the item is being moved. */\n        this._moveEvents = new Subject();\n        /** Subscription to pointer movement events. */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /** Subscription to the event that is dispatched when the user lifts their pointer. */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being scrolled. */\n        this._scrollSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being resized. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Cached reference to the boundary element. */\n        this._boundaryElement = null;\n        /** Whether the native dragging interactions have been enabled on the root element. */\n        this._nativeInteractionsEnabled = true;\n        /** Elements that can be used to drag the draggable item. */\n        this._handles = [];\n        /** Registered handles that are currently disabled. */\n        this._disabledHandles = new Set();\n        /** Layout direction of the item. */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /** Emits as the drag sequence is being prepared. */\n        this.beforeStarted = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new Subject();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new Subject();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new Subject();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new Subject();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new Subject();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents;\n        /** Handler for the `mousedown`/`touchstart` events. */\n        this._pointerDown = (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                const targetHandle = this._getTargetHandle(event);\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        };\n        /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n        this._pointerMove = (event) => {\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            if (!this._hasStartedDragging) {\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n                    const container = this._dropContainer;\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!container || (!container.isDragging() && !container.isReceiving())) {\n                        // Prevent the default action as soon as the dragging sequence is considered as\n                        // \"started\" since waiting for the next event can allow the device to begin scrolling.\n                        event.preventDefault();\n                        this._hasStartedDragging = true;\n                        this._ngZone.run(() => this._startDragSequence(event));\n                    }\n                }\n                return;\n            }\n            // We prevent the default action down here so that we know that dragging has started. This is\n            // important for touch devices where doing this too early can unnecessarily block scrolling,\n            // if there's a dragging delay.\n            event.preventDefault();\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n            this._hasMoved = true;\n            this._lastKnownPointerPosition = pointerPosition;\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n            }\n            else {\n                // If there's a position constraint function, we want the element's top/left to be at the\n                // specific position on the page. Use the initial position as a reference if that's the case.\n                const offset = this.constrainPosition ? this._initialClientRect : this._pickupPositionOnPage;\n                const activeTransform = this._activeTransform;\n                activeTransform.x = constrainedPointerPosition.x - offset.x + this._passiveTransform.x;\n                activeTransform.y = constrainedPointerPosition.y - offset.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run(() => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta,\n                    });\n                });\n            }\n        };\n        /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n        this._pointerUp = (event) => {\n            this._endDragSequence(event);\n        };\n        /** Handles a native `dragstart` event. */\n        this._nativeDragStart = (event) => {\n            if (this._handles.length) {\n                const targetHandle = this._getTargetHandle(event);\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    event.preventDefault();\n                }\n            }\n            else if (!this.disabled) {\n                // Usually this isn't necessary since the we prevent the default action in `pointerDown`,\n                // but some cases like dragging of links can slip through (see #24403).\n                event.preventDefault();\n            }\n        };\n        this.withRootElement(element).withParent(_config.parentDragRef || null);\n        this._parentPositions = new ParentPositionTracker(_document);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Gets the currently-visible element that represents the drag item.\n     * While dragging this is the placeholder, otherwise it's the root element.\n     */\n    getVisibleElement() {\n        return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n    }\n    /** Registers the handles that can be used to drag the element. */\n    withHandles(handles) {\n        this._handles = handles.map(handle => coerceElement(handle));\n        this._handles.forEach(handle => toggleNativeDragInteractions(handle, this.disabled));\n        this._toggleNativeDragInteractions();\n        // Delete any lingering disabled handles that may have been destroyed. Note that we re-create\n        // the set, rather than iterate over it and filter out the destroyed handles, because while\n        // the ES spec allows for sets to be modified while they're being iterated over, some polyfills\n        // use an array internally which may throw an error.\n        const disabledHandles = new Set();\n        this._disabledHandles.forEach(handle => {\n            if (this._handles.indexOf(handle) > -1) {\n                disabledHandles.add(handle);\n            }\n        });\n        this._disabledHandles = disabledHandles;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @param template Template that from which to stamp out the preview.\n     */\n    withPreviewTemplate(template) {\n        this._previewTemplate = template;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @param template Template that from which to stamp out the placeholder.\n     */\n    withPlaceholderTemplate(template) {\n        this._placeholderTemplate = template;\n        return this;\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     */\n    withRootElement(rootElement) {\n        const element = coerceElement(rootElement);\n        if (element !== this._rootElement) {\n            if (this._rootElement) {\n                this._removeRootElementListeners(this._rootElement);\n            }\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n                element.addEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n                element.addEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n            });\n            this._initialTransform = undefined;\n            this._rootElement = element;\n        }\n        if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n            this._ownerSVGElement = this._rootElement.ownerSVGElement;\n        }\n        return this;\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     */\n    withBoundaryElement(boundaryElement) {\n        this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        this._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            this._resizeSubscription = this._viewportRuler\n                .change(10)\n                .subscribe(() => this._containInsideBoundaryOnResize());\n        }\n        return this;\n    }\n    /** Sets the parent ref that the ref is nested in.  */\n    withParent(parent) {\n        this._parentDragRef = parent;\n        return this;\n    }\n    /** Removes the dragging functionality from the DOM element. */\n    dispose() {\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            this._rootElement?.remove();\n        }\n        this._anchor?.remove();\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._resizeSubscription.unsubscribe();\n        this._parentPositions.clear();\n        this._boundaryElement =\n            this._rootElement =\n                this._ownerSVGElement =\n                    this._placeholderTemplate =\n                        this._previewTemplate =\n                            this._anchor =\n                                this._parentDragRef =\n                                    null;\n    }\n    /** Checks whether the element is currently being dragged. */\n    isDragging() {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param handle Handle element that should be disabled.\n     */\n    disableHandle(handle) {\n        if (!this._disabledHandles.has(handle) && this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n            toggleNativeDragInteractions(handle, true);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param handle Handle element to be enabled.\n     */\n    enableHandle(handle) {\n        if (this._disabledHandles.has(handle)) {\n            this._disabledHandles.delete(handle);\n            toggleNativeDragInteractions(handle, this.disabled);\n        }\n    }\n    /** Sets the layout direction of the draggable item. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /** Sets the container that the item is part of. */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform.x = value.x;\n        this._passiveTransform.y = value.y;\n        if (!this._dropContainer) {\n            this._applyRootElementTransform(value.x, value.y);\n        }\n        return this;\n    }\n    /**\n     * Sets the container into which to insert the preview element.\n     * @param value Container into which to insert the preview.\n     */\n    withPreviewContainer(value) {\n        this._previewContainer = value;\n        return this;\n    }\n    /** Updates the item's sort order based on the last-known pointer position. */\n    _sortFromLastPointerPosition() {\n        const position = this._lastKnownPointerPosition;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n        }\n    }\n    /** Unsubscribes from the global subscriptions. */\n    _removeSubscriptions() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n    }\n    /** Destroys the preview element and its ViewRef. */\n    _destroyPreview() {\n        this._preview?.remove();\n        this._previewRef?.destroy();\n        this._preview = this._previewRef = null;\n    }\n    /** Destroys the placeholder element and its ViewRef. */\n    _destroyPlaceholder() {\n        this._placeholder?.remove();\n        this._placeholderRef?.destroy();\n        this._placeholder = this._placeholderRef = null;\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @param event Browser event object that ended the sequence.\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeSubscriptions();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor =\n                this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this, event });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then(() => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            });\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run(() => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(pointerPosition),\n                    dropPoint: pointerPosition,\n                    event,\n                });\n            });\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /** Starts the dragging sequence. */\n    _startDragSequence(event) {\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        const dropContainer = this._dropContainer;\n        if (dropContainer) {\n            const element = this._rootElement;\n            const parent = element.parentNode;\n            const placeholder = (this._placeholder = this._createPlaceholderElement());\n            const anchor = (this._anchor = this._anchor || this._document.createComment(''));\n            // Needs to happen before the root element is moved.\n            const shadowRoot = this._getShadowRoot();\n            // Insert an anchor node so that we can restore the element's position in the DOM.\n            parent.insertBefore(anchor, element);\n            // There's no risk of transforms stacking when inside a drop container so\n            // we can keep the initial transform up to date any time dragging starts.\n            this._initialTransform = element.style.transform || '';\n            // Create the preview after the initial transform has\n            // been cached, because it can be affected by the transform.\n            this._preview = this._createPreviewElement();\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            toggleVisibility(element, false, dragImportantProperties);\n            this._document.body.appendChild(parent.replaceChild(placeholder, element));\n            this._getPreviewInsertionPoint(parent, shadowRoot).appendChild(this._preview);\n            this.started.next({ source: this, event }); // Emit before notifying the container.\n            dropContainer.start();\n            this._initialContainer = dropContainer;\n            this._initialIndex = dropContainer.getItemIndex(this);\n        }\n        else {\n            this.started.next({ source: this, event });\n            this._initialContainer = this._initialIndex = undefined;\n        }\n        // Important to run after we've called `start` on the parent container\n        // so that it has had time to resolve its scrollable parents.\n        this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @param referenceElement Element that started the drag sequence.\n     * @param event Browser event object that started the sequence.\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Stop propagation if the item is inside another\n        // draggable so we don't start multiple drag sequences.\n        if (this._parentDragRef) {\n            event.stopPropagation();\n        }\n        const isDragging = this.isDragging();\n        const isTouchSequence = isTouchEvent(event);\n        const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\n        const rootElement = this._rootElement;\n        const target = _getEventTarget(event);\n        const isSyntheticEvent = !isTouchSequence &&\n            this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        const isFakeEvent = isTouchSequence\n            ? isFakeTouchstartFromScreenReader(event)\n            : isFakeMousedownFromScreenReader(event);\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (target && target.draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent || isFakeEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            const rootStyles = rootElement.style;\n            this._rootElementTapHighlight = rootStyles.webkitTapHighlightColor || '';\n            rootStyles.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeSubscriptions();\n        this._initialClientRect = this._rootElement.getBoundingClientRect();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry\n            .scrolled(this._getShadowRoot())\n            .subscribe(scrollEvent => this._updateOnScroll(scrollEvent));\n        if (this._boundaryElement) {\n            this._boundaryRect = getMutableClientRect(this._boundaryElement);\n        }\n        // If we have a custom preview we can't know ahead of time how large it'll be so we position\n        // it next to the cursor. The exception is when the consumer has opted into making the preview\n        // the same size as the root element, in which case we do know the size.\n        const previewTemplate = this._previewTemplate;\n        this._pickupPositionInElement =\n            previewTemplate && previewTemplate.template && !previewTemplate.matchSize\n                ? { x: 0, y: 0 }\n                : this._getPointerPositionInElement(this._initialClientRect, referenceElement, event);\n        const pointerPosition = (this._pickupPositionOnPage =\n            this._lastKnownPointerPosition =\n                this._getPointerPositionOnPage(event));\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        toggleVisibility(this._rootElement, true, dragImportantProperties);\n        this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._initialClientRect =\n            this._boundaryRect =\n                this._previewRect =\n                    this._initialTransform =\n                        undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run(() => {\n            const container = this._dropContainer;\n            const currentIndex = container.getItemIndex(this);\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            const distance = this._getDragDistance(pointerPosition);\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance, dropPoint: pointerPosition, event });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialIndex,\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance,\n                dropPoint: pointerPosition,\n                event,\n            });\n            container.drop(this, currentIndex, this._initialIndex, this._initialContainer, isPointerOverContainer, distance, pointerPosition, event);\n            this._dropContainer = this._initialContainer;\n        });\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     */\n    _updateActiveDropContainer({ x, y }, { x: rawX, y: rawY }) {\n        // Drop container that draggable has been moved into.\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer &&\n            this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run(() => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: this._dropContainer });\n                this._dropContainer.exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = newContainer;\n                this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n                    // If we're re-entering the initial container and sorting is disabled,\n                    // put item the into its starting index to begin with.\n                    newContainer.sortingDisabled\n                    ? this._initialIndex\n                    : undefined);\n                this.entered.next({\n                    item: this,\n                    container: newContainer,\n                    currentIndex: newContainer.getItemIndex(this),\n                });\n            });\n        }\n        // Dragging may have been interrupted as a result of the events above.\n        if (this.isDragging()) {\n            this._dropContainer._startScrollingIfNecessary(rawX, rawY);\n            this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n            if (this.constrainPosition) {\n                this._applyPreviewTransform(x, y);\n            }\n            else {\n                this._applyPreviewTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n            }\n        }\n    }\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     */\n    _createPreviewElement() {\n        const previewConfig = this._previewTemplate;\n        const previewClass = this.previewClass;\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        let preview;\n        if (previewTemplate && previewConfig) {\n            // Measure the element before we've inserted the preview\n            // since the insertion could throw off the measurement.\n            const rootRect = previewConfig.matchSize ? this._initialClientRect : null;\n            const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n            viewRef.detectChanges();\n            preview = getRootNode(viewRef, this._document);\n            this._previewRef = viewRef;\n            if (previewConfig.matchSize) {\n                matchElementSize(preview, rootRect);\n            }\n            else {\n                preview.style.transform = getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n            }\n        }\n        else {\n            preview = deepCloneNode(this._rootElement);\n            matchElementSize(preview, this._initialClientRect);\n            if (this._initialTransform) {\n                preview.style.transform = this._initialTransform;\n            }\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            'pointer-events': 'none',\n            // We have to reset the margin, because it can throw off positioning relative to the viewport.\n            'margin': '0',\n            'position': 'fixed',\n            'top': '0',\n            'left': '0',\n            'z-index': `${this._config.zIndex || 1000}`,\n        }, dragImportantProperties);\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._direction);\n        if (previewClass) {\n            if (Array.isArray(previewClass)) {\n                previewClass.forEach(className => preview.classList.add(className));\n            }\n            else {\n                preview.classList.add(previewClass);\n            }\n        }\n        return preview;\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @returns Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._applyPreviewTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        const duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular(() => {\n            return new Promise(resolve => {\n                const handler = ((event) => {\n                    if (!event ||\n                        (_getEventTarget(event) === this._preview && event.propertyName === 'transform')) {\n                        this._preview?.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                });\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                const timeout = setTimeout(handler, duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            });\n        });\n    }\n    /** Creates an element that will be shown instead of the current element while dragging. */\n    _createPlaceholderElement() {\n        const placeholderConfig = this._placeholderTemplate;\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\n            this._placeholderRef.detectChanges();\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        // Stop pointer events on the preview so the user can't\n        // interact with it while the preview is animating.\n        placeholder.style.pointerEvents = 'none';\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @param referenceElement Element that initiated the dragging.\n     * @param event Event that initiated the dragging.\n     */\n    _getPointerPositionInElement(elementRect, referenceElement, event) {\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        const scrollPosition = this._getViewportScrollPosition();\n        const x = point.pageX - referenceRect.left - scrollPosition.left;\n        const y = point.pageY - referenceRect.top - scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y,\n        };\n    }\n    /** Determines the point of the page that was touched by the user. */\n    _getPointerPositionOnPage(event) {\n        const scrollPosition = this._getViewportScrollPosition();\n        const point = isTouchEvent(event)\n            ? // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n                // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n                // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n                // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n                // throwing an error. The value returned here will be incorrect, but since this only\n                // breaks inside a developer tool and the value is only used for secondary information,\n                // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n                event.touches[0] || event.changedTouches[0] || { pageX: 0, pageY: 0 }\n            : event;\n        const x = point.pageX - scrollPosition.left;\n        const y = point.pageY - scrollPosition.top;\n        // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n        // coordinate system\n        if (this._ownerSVGElement) {\n            const svgMatrix = this._ownerSVGElement.getScreenCTM();\n            if (svgMatrix) {\n                const svgPoint = this._ownerSVGElement.createSVGPoint();\n                svgPoint.x = x;\n                svgPoint.y = y;\n                return svgPoint.matrixTransform(svgMatrix.inverse());\n            }\n        }\n        return { x, y };\n    }\n    /** Gets the pointer position on the page, accounting for any position constraints. */\n    _getConstrainedPointerPosition(point) {\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        let { x, y } = this.constrainPosition\n            ? this.constrainPosition(point, this, this._initialClientRect, this._pickupPositionInElement)\n            : point;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            y = this._pickupPositionOnPage.y;\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            x = this._pickupPositionOnPage.x;\n        }\n        if (this._boundaryRect) {\n            const { x: pickupX, y: pickupY } = this._pickupPositionInElement;\n            const boundaryRect = this._boundaryRect;\n            const { width: previewWidth, height: previewHeight } = this._getPreviewRect();\n            const minY = boundaryRect.top + pickupY;\n            const maxY = boundaryRect.bottom - (previewHeight - pickupY);\n            const minX = boundaryRect.left + pickupX;\n            const maxX = boundaryRect.right - (previewWidth - pickupX);\n            x = clamp$1(x, minX, maxX);\n            y = clamp$1(y, minY, maxY);\n        }\n        return { x, y };\n    }\n    /** Updates the current drag delta, based on the user's current pointer position on the page. */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        const delta = this._pointerDirectionDelta;\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /** Toggles the native drag interactions, based on how many handles are registered. */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /** Removes the manually-added event listeners from the root element. */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n        element.removeEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyRootElementTransform(x, y) {\n        const transform = getTransform(x, y);\n        const styles = this._rootElement.style;\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        // Should be excluded none because none + translate3d(x, y, x) is invalid css\n        if (this._initialTransform == null) {\n            this._initialTransform =\n                styles.transform && styles.transform != 'none' ? styles.transform : '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        styles.transform = combineTransforms(transform, this._initialTransform);\n    }\n    /**\n     * Applies a `transform` to the preview, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyPreviewTransform(x, y) {\n        // Only apply the initial transform if the preview is a clone of the original element, otherwise\n        // it could be completely different and the transform might not make sense anymore.\n        const initialTransform = this._previewTemplate?.template ? undefined : this._initialTransform;\n        const transform = getTransform(x, y);\n        this._preview.style.transform = combineTransforms(transform, initialTransform);\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @param currentPosition Current position of the user's pointer.\n     */\n    _getDragDistance(currentPosition) {\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        // Note: don't use `_clientRectAtStart` here, because we want the latest position.\n        const elementRect = this._rootElement.getBoundingClientRect();\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        // It's possible that the element got hidden away after dragging (e.g. by switching to a\n        // different tab). Don't do anything in this case so we don't clear the user's position.\n        if ((boundaryRect.width === 0 && boundaryRect.height === 0) ||\n            (elementRect.width === 0 && elementRect.height === 0)) {\n            return;\n        }\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        const topOverflow = boundaryRect.top - elementRect.top;\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n    /** Gets the drag start delay, based on the event type. */\n    _getDragStartDelay(event) {\n        const value = this.dragStartDelay;\n        if (typeof value === 'number') {\n            return value;\n        }\n        else if (isTouchEvent(event)) {\n            return value.touch;\n        }\n        return value ? value.mouse : 0;\n    }\n    /** Updates the internal state of the draggable element when scrolling has occurred. */\n    _updateOnScroll(event) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        if (scrollDifference) {\n            const target = _getEventTarget(event);\n            // ClientRect dimensions are based on the scroll position of the page and its parent\n            // node so we have to update the cached boundary ClientRect if the user has scrolled.\n            if (this._boundaryRect &&\n                target !== this._boundaryElement &&\n                target.contains(this._boundaryElement)) {\n                adjustClientRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n            }\n            this._pickupPositionOnPage.x += scrollDifference.left;\n            this._pickupPositionOnPage.y += scrollDifference.top;\n            // If we're in free drag mode, we have to update the active transform, because\n            // it isn't relative to the viewport like the preview inside a drop list.\n            if (!this._dropContainer) {\n                this._activeTransform.x -= scrollDifference.left;\n                this._activeTransform.y -= scrollDifference.top;\n                this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n            }\n        }\n    }\n    /** Gets the scroll position of the viewport. */\n    _getViewportScrollPosition() {\n        return (this._parentPositions.positions.get(this._document)?.scrollPosition ||\n            this._parentPositions.getViewportScrollPosition());\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (this._cachedShadowRoot === undefined) {\n            this._cachedShadowRoot = _getShadowRoot(this._rootElement);\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Gets the element into which the drag preview should be inserted. */\n    _getPreviewInsertionPoint(initialParent, shadowRoot) {\n        const previewContainer = this._previewContainer || 'global';\n        if (previewContainer === 'parent') {\n            return initialParent;\n        }\n        if (previewContainer === 'global') {\n            const documentRef = this._document;\n            // We can't use the body if the user is in fullscreen mode,\n            // because the preview will render under the fullscreen element.\n            // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n            return (shadowRoot ||\n                documentRef.fullscreenElement ||\n                documentRef.webkitFullscreenElement ||\n                documentRef.mozFullScreenElement ||\n                documentRef.msFullscreenElement ||\n                documentRef.body);\n        }\n        return coerceElement(previewContainer);\n    }\n    /** Lazily resolves and returns the dimensions of the preview. */\n    _getPreviewRect() {\n        // Cache the preview element rect if we haven't cached it already or if\n        // we cached it too early before the element dimensions were computed.\n        if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n            this._previewRect = this._preview\n                ? this._preview.getBoundingClientRect()\n                : this._initialClientRect;\n        }\n        return this._previewRect;\n    }\n    /** Gets a handle that is the target of an event. */\n    _getTargetHandle(event) {\n        return this._handles.find(handle => {\n            return event.target && (event.target === handle || handle.contains(event.target));\n        });\n    }\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp$1(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef, _document) {\n    const rootNodes = viewRef.rootNodes;\n    if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n        return rootNodes[0];\n    }\n    const wrapper = _document.createElement('div');\n    rootNodes.forEach(node => wrapper.appendChild(node));\n    return wrapper;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target, sourceRect) {\n    target.style.width = `${sourceRect.width}px`;\n    target.style.height = `${sourceRect.height}px`;\n    target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    const from = clamp(fromIndex, array.length - 1);\n    const to = clamp(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    const target = array[from];\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const from = clamp(currentIndex, currentArray.length - 1);\n    const to = clamp(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const to = clamp(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/** Clamps a number between zero and a maximum. */\nfunction clamp(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * Strategy that only supports sorting along a single axis.\n * Items are reordered using CSS transforms which allows for sorting to be animated.\n * @docs-private\n */\nclass SingleAxisSortStrategy {\n    constructor(_element, _dragDropRegistry) {\n        this._element = _element;\n        this._dragDropRegistry = _dragDropRegistry;\n        /** Cache of the dimensions of all the items inside the container. */\n        this._itemPositions = [];\n        /** Direction in which the list is oriented. */\n        this.orientation = 'vertical';\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n         * the pointer was moving in when the swap occurred and whether the user's pointer continued to\n         * overlap with the swapped item after the swapping occurred.\n         */\n        this._previousSwap = {\n            drag: null,\n            delta: 0,\n            overlaps: false,\n        };\n    }\n    /**\n     * To be called when the drag sequence starts.\n     * @param items Items that are currently in the list.\n     */\n    start(items) {\n        this.withItems(items);\n    }\n    /**\n     * To be called when an item is being sorted.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    sort(item, pointerX, pointerY, pointerDelta) {\n        const siblings = this._itemPositions;\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return null;\n        }\n        const isHorizontal = this.orientation === 'horizontal';\n        const currentIndex = siblings.findIndex(currentItem => currentItem.drag === item);\n        const siblingAtNewPosition = siblings[newIndex];\n        const currentPosition = siblings[currentIndex].clientRect;\n        const newPosition = siblingAtNewPosition.clientRect;\n        const delta = currentIndex > newIndex ? 1 : -1;\n        // How many pixels the item's placeholder should be offset.\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        siblings.forEach((sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            const isDraggedItem = sibling.drag === item;\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            const elementToOffset = isDraggedItem\n                ? item.getPlaceholderElement()\n                : sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = combineTransforms(`translate3d(${Math.round(sibling.offset)}px, 0, 0)`, sibling.initialTransform);\n                adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = combineTransforms(`translate3d(0, ${Math.round(sibling.offset)}px, 0)`, sibling.initialTransform);\n                adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        });\n        // Note that it's important that we do this after the client rects have been adjusted.\n        this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n        return { previousIndex: currentIndex, currentIndex: newIndex };\n    }\n    /**\n     * Called when an item is being moved into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        const newIndex = index == null || index < 0\n            ? // We use the coordinates of where the item entered the drop\n                // zone to figure out at which index it should be inserted.\n                this._getItemIndexFromPointerPosition(item, pointerX, pointerY)\n            : index;\n        const activeDraggables = this._activeDraggables;\n        const currentIndex = activeDraggables.indexOf(item);\n        const placeholder = item.getPlaceholderElement();\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // If we didn't find a new position reference, it means that either the item didn't start off\n        // in this container, or that the item requested to be inserted at the end of the list.\n        if (!newPositionReference &&\n            (newIndex == null || newIndex === -1 || newIndex < activeDraggables.length - 1) &&\n            this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n            newPositionReference = activeDraggables[0];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            const element = newPositionReference.getRootElement();\n            element.parentElement.insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else {\n            coerceElement(this._element).appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that usually `start` is called together with `enter` when an item goes into a new\n        // container. This will cache item positions, but we need to refresh them since the amount\n        // of items has changed.\n        this._cacheItemPositions();\n    }\n    /** Sets the items that are currently part of the list. */\n    withItems(items) {\n        this._activeDraggables = items.slice();\n        this._cacheItemPositions();\n    }\n    /** Assigns a sort predicate to the strategy. */\n    withSortPredicate(predicate) {\n        this._sortPredicate = predicate;\n    }\n    /** Resets the strategy to its initial state before dragging was started. */\n    reset() {\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach(item => {\n            const rootElement = item.getRootElement();\n            if (rootElement) {\n                const initialTransform = this._itemPositions.find(p => p.drag === item)?.initialTransform;\n                rootElement.style.transform = initialTransform || '';\n            }\n        });\n        this._itemPositions = [];\n        this._activeDraggables = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._previousSwap.overlaps = false;\n    }\n    /**\n     * Gets a snapshot of items currently in the list.\n     * Can include items that we dragged in from another list.\n     */\n    getActiveItemsSnapshot() {\n        return this._activeDraggables;\n    }\n    /** Gets the index of a specific item. */\n    getItemIndex(item) {\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        const items = this.orientation === 'horizontal' && this.direction === 'rtl'\n            ? this._itemPositions.slice().reverse()\n            : this._itemPositions;\n        return items.findIndex(currentItem => currentItem.drag === item);\n    }\n    /** Used to notify the strategy that the scroll position has changed. */\n    updateOnScroll(topDifference, leftDifference) {\n        // Since we know the amount that the user has scrolled we can shift all of the\n        // client rectangles ourselves. This is cheaper than re-measuring everything and\n        // we can avoid inconsistent behavior where we might be measuring the element before\n        // its position has changed.\n        this._itemPositions.forEach(({ clientRect }) => {\n            adjustClientRect(clientRect, topDifference, leftDifference);\n        });\n        // We need two loops for this, because we want all of the cached\n        // positions to be up-to-date before we re-sort the item.\n        this._itemPositions.forEach(({ drag }) => {\n            if (this._dragDropRegistry.isDragging(drag)) {\n                // We need to re-sort the item manually, because the pointer move\n                // events won't be dispatched while the user is scrolling.\n                drag._sortFromLastPointerPosition();\n            }\n        });\n    }\n    /** Refreshes the position cache of the items and sibling containers. */\n    _cacheItemPositions() {\n        const isHorizontal = this.orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables\n            .map(drag => {\n            const elementToMeasure = drag.getVisibleElement();\n            return {\n                drag,\n                offset: 0,\n                initialTransform: elementToMeasure.style.transform || '',\n                clientRect: getMutableClientRect(elementToMeasure),\n            };\n        })\n            .sort((a, b) => {\n            return isHorizontal\n                ? a.clientRect.left - b.clientRect.left\n                : a.clientRect.top - b.clientRect.top;\n        });\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @param currentPosition Current position of the item.\n     * @param newPosition Position of the item where the current item should be moved.\n     * @param delta Direction in which the user is moving.\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        let itemOffset = isHorizontal\n            ? newPosition.left - currentPosition.left\n            : newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal\n                ? newPosition.width - currentPosition.width\n                : newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @param currentIndex Index of the item currently being dragged.\n     * @param siblings All of the items in the list.\n     * @param delta Direction in which the user is moving.\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        const currentPosition = siblings[currentIndex].clientRect;\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            const start = isHorizontal ? 'left' : 'top';\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Checks if pointer is entering in the first position\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     */\n    _shouldEnterAsFirstChild(pointerX, pointerY) {\n        if (!this._activeDraggables.length) {\n            return false;\n        }\n        const itemPositions = this._itemPositions;\n        const isHorizontal = this.orientation === 'horizontal';\n        // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n        // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n        const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n        if (reversed) {\n            const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n            return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n        }\n        else {\n            const firstItemRect = itemPositions[0].clientRect;\n            return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n        }\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @param item Item that is being sorted.\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     * @param delta Direction in which the user is moving their pointer.\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        const index = this._itemPositions.findIndex(({ drag, clientRect }) => {\n            // Skip the item itself.\n            if (drag === item) {\n                return false;\n            }\n            if (delta) {\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, their cursor hasn't left\n                // the item after we made the swap, and they didn't change the direction in which they're\n                // dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag &&\n                    this._previousSwap.overlaps &&\n                    direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal\n                ? // Round these down since most browsers report client rects with\n                    // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                    pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right)\n                : pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n        });\n        return index === -1 || !this._sortPredicate(index, item) ? -1 : index;\n    }\n}\n\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nclass DropListRef {\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /** Whether starting a dragging sequence from this container is disabled. */\n        this.disabled = false;\n        /** Whether sorting items within the list is disabled. */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /** Number of pixels to scroll for each frame when auto-scrolling an element. */\n        this.autoScrollStep = 2;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Function that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits right before dragging has started. */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new Subject();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new Subject();\n        /** Emits when a dragging sequence is started in a list connected to the current one. */\n        this.receivingStarted = new Subject();\n        /** Emits when a dragging sequence is stopped from a list connected to the current one. */\n        this.receivingStopped = new Subject();\n        /** Whether an item in the list is being dragged. */\n        this._isDragging = false;\n        /** Draggable items in the container. */\n        this._draggables = [];\n        /** Drop lists that are connected to the current one. */\n        this._siblings = [];\n        /** Connected siblings that currently have a dragged item. */\n        this._activeSiblings = new Set();\n        /** Subscription to the window being scrolled. */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /** Vertical direction in which the list is currently scrolling. */\n        this._verticalScrollDirection = 0 /* AutoScrollVerticalDirection.NONE */;\n        /** Horizontal direction in which the list is currently scrolling. */\n        this._horizontalScrollDirection = 0 /* AutoScrollHorizontalDirection.NONE */;\n        /** Used to signal to the current auto-scroll sequence when to stop. */\n        this._stopScrollTimers = new Subject();\n        /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n        this._cachedShadowRoot = null;\n        /** Starts the interval that'll auto-scroll the element. */\n        this._startScrollInterval = () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe(() => {\n                const node = this._scrollNode;\n                const scrollStep = this.autoScrollStep;\n                if (this._verticalScrollDirection === 1 /* AutoScrollVerticalDirection.UP */) {\n                    node.scrollBy(0, -scrollStep);\n                }\n                else if (this._verticalScrollDirection === 2 /* AutoScrollVerticalDirection.DOWN */) {\n                    node.scrollBy(0, scrollStep);\n                }\n                if (this._horizontalScrollDirection === 1 /* AutoScrollHorizontalDirection.LEFT */) {\n                    node.scrollBy(-scrollStep, 0);\n                }\n                else if (this._horizontalScrollDirection === 2 /* AutoScrollHorizontalDirection.RIGHT */) {\n                    node.scrollBy(scrollStep, 0);\n                }\n            });\n        };\n        this.element = coerceElement(element);\n        this._document = _document;\n        this.withScrollableParents([this.element]);\n        _dragDropRegistry.registerDropContainer(this);\n        this._parentPositions = new ParentPositionTracker(_document);\n        this._sortStrategy = new SingleAxisSortStrategy(this.element, _dragDropRegistry);\n        this._sortStrategy.withSortPredicate((index, item) => this.sortPredicate(index, item, this));\n    }\n    /** Removes the drop list functionality from the DOM element. */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._viewportScrollSubscription.unsubscribe();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this.receivingStarted.complete();\n        this.receivingStopped.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = null;\n        this._parentPositions.clear();\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /** Whether an item from this list is currently being dragged. */\n    isDragging() {\n        return this._isDragging;\n    }\n    /** Starts dragging an item. */\n    start() {\n        this._draggingStarted();\n        this._notifyReceivingSiblings();\n    }\n    /**\n     * Attempts to move an item into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        this._draggingStarted();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        if (index == null && this.sortingDisabled) {\n            index = this._draggables.indexOf(item);\n        }\n        this._sortStrategy.enter(item, pointerX, pointerY, index);\n        // Note that this usually happens inside `_draggingStarted` as well, but the dimensions\n        // can change when the sort strategy moves the item around inside `enter`.\n        this._cacheParentPositions();\n        // Notify siblings at the end so that the item has been inserted into the `activeDraggables`.\n        this._notifyReceivingSiblings();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param item Item that was dragged out.\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * @param item Item being dropped into the container.\n     * @param currentIndex Index at which the item should be inserted.\n     * @param previousIndex Index of the item when dragging started.\n     * @param previousContainer Container from which the item got dragged in.\n     * @param isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param distance Distance the user has dragged since the start of the dragging sequence.\n     * @param event Event that triggered the dropping sequence.\n     *\n     * @breaking-change 15.0.0 `previousIndex` and `event` parameters to become required.\n     */\n    drop(item, currentIndex, previousIndex, previousContainer, isPointerOverContainer, distance, dropPoint, event = {}) {\n        this._reset();\n        this.dropped.next({\n            item,\n            currentIndex,\n            previousIndex,\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance,\n            dropPoint,\n            event,\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @param items Items that are a part of this list.\n     */\n    withItems(items) {\n        const previousItems = this._draggables;\n        this._draggables = items;\n        items.forEach(item => item._withDropContainer(this));\n        if (this.isDragging()) {\n            const draggedItems = previousItems.filter(item => item.isDragging());\n            // If all of the items being dragged were removed\n            // from the list, abort the current drag sequence.\n            if (draggedItems.every(item => items.indexOf(item) === -1)) {\n                this._reset();\n            }\n            else {\n                this._sortStrategy.withItems(this._draggables);\n            }\n        }\n        return this;\n    }\n    /** Sets the layout direction of the drop list. */\n    withDirection(direction) {\n        this._sortStrategy.direction = direction;\n        return this;\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @param connectedTo Other containers that the current containers should be connected to.\n     */\n    connectedTo(connectedTo) {\n        this._siblings = connectedTo.slice();\n        return this;\n    }\n    /**\n     * Sets the orientation of the container.\n     * @param orientation New orientation for the container.\n     */\n    withOrientation(orientation) {\n        // TODO(crisbeto): eventually we should be constructing the new sort strategy here based on\n        // the new orientation. For now we can assume that it'll always be `SingleAxisSortStrategy`.\n        this._sortStrategy.orientation = orientation;\n        return this;\n    }\n    /**\n     * Sets which parent elements are can be scrolled while the user is dragging.\n     * @param elements Elements that can be scrolled.\n     */\n    withScrollableParents(elements) {\n        const element = coerceElement(this.element);\n        // We always allow the current element to be scrollable\n        // so we need to ensure that it's in the array.\n        this._scrollableElements =\n            elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n        return this;\n    }\n    /** Gets the scrollable parents that are registered with this drop container. */\n    getScrollableParents() {\n        return this._scrollableElements;\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param item Item whose index should be determined.\n     */\n    getItemIndex(item) {\n        return this._isDragging\n            ? this._sortStrategy.getItemIndex(item)\n            : this._draggables.indexOf(item);\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled ||\n            !this._clientRect ||\n            !isPointerNearClientRect(this._clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n            return;\n        }\n        const result = this._sortStrategy.sort(item, pointerX, pointerY, pointerDelta);\n        if (result) {\n            this.sorted.next({\n                previousIndex: result.previousIndex,\n                currentIndex: result.currentIndex,\n                container: this,\n                item,\n            });\n        }\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param pointerX User's pointer position along the x axis.\n     * @param pointerY User's pointer position along the y axis.\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        let scrollNode;\n        let verticalScrollDirection = 0 /* AutoScrollVerticalDirection.NONE */;\n        let horizontalScrollDirection = 0 /* AutoScrollHorizontalDirection.NONE */;\n        // Check whether we should start scrolling any of the parent containers.\n        this._parentPositions.positions.forEach((position, element) => {\n            // We have special handling for the `document` below. Also this would be\n            // nicer with a  for...of loop, but it requires changing a compiler flag.\n            if (element === this._document || !position.clientRect || scrollNode) {\n                return;\n            }\n            if (isPointerNearClientRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n                [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, pointerX, pointerY);\n                if (verticalScrollDirection || horizontalScrollDirection) {\n                    scrollNode = element;\n                }\n            }\n        });\n        // Otherwise check if we can start scrolling the viewport.\n        if (!verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            const clientRect = {\n                width,\n                height,\n                top: 0,\n                right: width,\n                bottom: height,\n                left: 0,\n            };\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode &&\n            (verticalScrollDirection !== this._verticalScrollDirection ||\n                horizontalScrollDirection !== this._horizontalScrollDirection ||\n                scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                this._ngZone.runOutsideAngular(this._startScrollInterval);\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /** Stops any currently-running auto-scroll sequences. */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /** Starts the dragging sequence within the list. */\n    _draggingStarted() {\n        const styles = coerceElement(this.element).style;\n        this.beforeStarted.next();\n        this._isDragging = true;\n        // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n        // scrolling. The browser seems to round the value based on the snapping points which means\n        // that we can't increment/decrement the scroll position.\n        this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n        styles.scrollSnapType = styles.msScrollSnapType = 'none';\n        this._sortStrategy.start(this._draggables);\n        this._cacheParentPositions();\n        this._viewportScrollSubscription.unsubscribe();\n        this._listenToScrollEvents();\n    }\n    /** Caches the positions of the configured scrollable parents. */\n    _cacheParentPositions() {\n        const element = coerceElement(this.element);\n        this._parentPositions.cache(this._scrollableElements);\n        // The list element is always in the `scrollableElements`\n        // so we can take advantage of the cached `ClientRect`.\n        this._clientRect = this._parentPositions.positions.get(element).clientRect;\n    }\n    /** Resets the container to its initial state. */\n    _reset() {\n        this._isDragging = false;\n        const styles = coerceElement(this.element).style;\n        styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n        this._siblings.forEach(sibling => sibling._stopReceiving(this));\n        this._sortStrategy.reset();\n        this._stopScrolling();\n        this._viewportScrollSubscription.unsubscribe();\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param x Pointer position along the X axis.\n     * @param y Pointer position along the Y axis.\n     */\n    _isOverContainer(x, y) {\n        return this._clientRect != null && isInsideClientRect(this._clientRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param item Drag item that is being moved.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param item Item that is being dragged into the list.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _canReceive(item, x, y) {\n        if (!this._clientRect ||\n            !isInsideClientRect(this._clientRect, x, y) ||\n            !this.enterPredicate(item, this)) {\n            return false;\n        }\n        const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        const nativeElement = coerceElement(this.element);\n        // The `ClientRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param sibling Sibling in which dragging has started.\n     */\n    _startReceiving(sibling, items) {\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling) &&\n            items.every(item => {\n                // Note that we have to add an exception to the `enterPredicate` for items that started off\n                // in this drop list. The drag ref has logic that allows an item to return to its initial\n                // container, if it has left the initial container and none of the connected containers\n                // allow it to enter. See `DragRef._updateActiveDropContainer` for more context.\n                return this.enterPredicate(item, this) || this._draggables.indexOf(item) > -1;\n            })) {\n            activeSiblings.add(sibling);\n            this._cacheParentPositions();\n            this._listenToScrollEvents();\n            this.receivingStarted.next({\n                initiator: sibling,\n                receiver: this,\n                items,\n            });\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param sibling Sibling whose dragging has stopped.\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n        this.receivingStopped.next({ initiator: sibling, receiver: this });\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollSubscription = this._dragDropRegistry\n            .scrolled(this._getShadowRoot())\n            .subscribe(event => {\n            if (this.isDragging()) {\n                const scrollDifference = this._parentPositions.handleScroll(event);\n                if (scrollDifference) {\n                    this._sortStrategy.updateOnScroll(scrollDifference.top, scrollDifference.left);\n                }\n            }\n            else if (this.isReceiving()) {\n                this._cacheParentPositions();\n            }\n        });\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (!this._cachedShadowRoot) {\n            const shadowRoot = _getShadowRoot(coerceElement(this.element));\n            this._cachedShadowRoot = (shadowRoot || this._document);\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Notifies any siblings that may potentially receive the item. */\n    _notifyReceivingSiblings() {\n        const draggedItems = this._sortStrategy\n            .getActiveItemsSnapshot()\n            .filter(item => item.isDragging());\n        this._siblings.forEach(sibling => sibling._startReceiving(this, draggedItems));\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return 1 /* AutoScrollVerticalDirection.UP */;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return 2 /* AutoScrollVerticalDirection.DOWN */;\n    }\n    return 0 /* AutoScrollVerticalDirection.NONE */;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return 1 /* AutoScrollHorizontalDirection.LEFT */;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return 2 /* AutoScrollHorizontalDirection.RIGHT */;\n    }\n    return 0 /* AutoScrollHorizontalDirection.NONE */;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element, clientRect, pointerX, pointerY) {\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    let verticalScrollDirection = 0 /* AutoScrollVerticalDirection.NONE */;\n    let horizontalScrollDirection = 0 /* AutoScrollHorizontalDirection.NONE */;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        const scrollTop = element.scrollTop;\n        if (computedVertical === 1 /* AutoScrollVerticalDirection.UP */) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = 1 /* AutoScrollVerticalDirection.UP */;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = 2 /* AutoScrollVerticalDirection.DOWN */;\n        }\n    }\n    if (computedHorizontal) {\n        const scrollLeft = element.scrollLeft;\n        if (computedHorizontal === 1 /* AutoScrollHorizontalDirection.LEFT */) {\n            if (scrollLeft > 0) {\n                horizontalScrollDirection = 1 /* AutoScrollHorizontalDirection.LEFT */;\n            }\n        }\n        else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n            horizontalScrollDirection = 2 /* AutoScrollHorizontalDirection.RIGHT */;\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true,\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nclass DragDropRegistry {\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        /** Registered drop container instances. */\n        this._dropInstances = new Set();\n        /** Registered drag item instances. */\n        this._dragInstances = new Set();\n        /** Drag item instances that are currently being dragged. */\n        this._activeDragInstances = [];\n        /** Keeps track of the event listeners that we've bound to the `document`. */\n        this._globalListeners = new Map();\n        /**\n         * Predicate function to check if an item is being dragged.  Moved out into a property,\n         * because it'll be called a lot and we don't want to create a new function every time.\n         */\n        this._draggingPredicate = (item) => item.isDragging();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /**\n         * Emits when the viewport has been scrolled while the user is dragging an item.\n         * @deprecated To be turned into a private member. Use the `scrolled` method instead.\n         * @breaking-change 13.0.0\n         */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (event) => {\n            if (this._activeDragInstances.length > 0) {\n                event.preventDefault();\n            }\n        };\n        /** Event listener for `touchmove` that is bound even if no dragging is happening. */\n        this._persistentTouchmoveListener = (event) => {\n            if (this._activeDragInstances.length > 0) {\n                // Note that we only want to prevent the default action after dragging has actually started.\n                // Usually this is the same time at which the item is added to the `_activeDragInstances`,\n                // but it could be pushed back if the user has set up a drag delay or threshold.\n                if (this._activeDragInstances.some(this._draggingPredicate)) {\n                    event.preventDefault();\n                }\n                this.pointerMove.next(event);\n            }\n        };\n        this._document = _document;\n    }\n    /** Adds a drop container to the registry. */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            this._dropInstances.add(drop);\n        }\n    }\n    /** Adds a drag item instance to the registry. */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular(() => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n            });\n        }\n    }\n    /** Removes a drop container from the registry. */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /** Removes a drag item instance from the registry. */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param drag Drag instance which is being dragged.\n     * @param event Event that initiated the dragging.\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.indexOf(drag) > -1) {\n            return;\n        }\n        this._activeDragInstances.push(drag);\n        if (this._activeDragInstances.length === 1) {\n            const isTouchEvent = event.type.startsWith('touch');\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(isTouchEvent ? 'touchend' : 'mouseup', {\n                handler: (e) => this.pointerUp.next(e),\n                options: true,\n            })\n                .set('scroll', {\n                handler: (e) => this.scroll.next(e),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true,\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions,\n            });\n            // We don't have to bind a move event for touch drag sequences, because\n            // we already have a persistent global one bound from `registerDragItem`.\n            if (!isTouchEvent) {\n                this._globalListeners.set('mousemove', {\n                    handler: (e) => this.pointerMove.next(e),\n                    options: activeCapturingEventOptions,\n                });\n            }\n            this._ngZone.runOutsideAngular(() => {\n                this._globalListeners.forEach((config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                });\n            });\n        }\n    }\n    /** Stops dragging a drag item instance. */\n    stopDragging(drag) {\n        const index = this._activeDragInstances.indexOf(drag);\n        if (index > -1) {\n            this._activeDragInstances.splice(index, 1);\n            if (this._activeDragInstances.length === 0) {\n                this._clearGlobalListeners();\n            }\n        }\n    }\n    /** Gets whether a drag item instance is currently being dragged. */\n    isDragging(drag) {\n        return this._activeDragInstances.indexOf(drag) > -1;\n    }\n    /**\n     * Gets a stream that will emit when any element on the page is scrolled while an item is being\n     * dragged.\n     * @param shadowRoot Optional shadow root that the current dragging sequence started from.\n     *   Top-level listeners won't pick up events coming from the shadow DOM so this parameter can\n     *   be used to include an additional top-level listener at the shadow root level.\n     */\n    scrolled(shadowRoot) {\n        const streams = [this.scroll];\n        if (shadowRoot && shadowRoot !== this._document) {\n            // Note that this is basically the same as `fromEvent` from rxjs, but we do it ourselves,\n            // because we want to guarantee that the event is bound outside of the `NgZone`. With\n            // `fromEvent` it'll only happen if the subscription is outside the `NgZone`.\n            streams.push(new Observable((observer) => {\n                return this._ngZone.runOutsideAngular(() => {\n                    const eventOptions = true;\n                    const callback = (event) => {\n                        if (this._activeDragInstances.length) {\n                            observer.next(event);\n                        }\n                    };\n                    shadowRoot.addEventListener('scroll', callback, eventOptions);\n                    return () => {\n                        shadowRoot.removeEventListener('scroll', callback, eventOptions);\n                    };\n                });\n            }));\n        }\n        return merge(...streams);\n    }\n    ngOnDestroy() {\n        this._dragInstances.forEach(instance => this.removeDragItem(instance));\n        this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /** Clears out the global event listeners from the `document`. */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        });\n        this._globalListeners.clear();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDropRegistry, deps: [{ token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDropRegistry, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDropRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5,\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @param element Element to which to attach the dragging functionality.\n     * @param config Object used to configure the dragging behavior.\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @param element Element to which to attach the drop list functionality.\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDrop, deps: [{ token: DOCUMENT }, { token: i0.NgZone }, { token: i1.ViewportRuler }, { token: DragDropRegistry }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDrop, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDrop, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone }, { type: i1.ViewportRuler }, { type: DragDropRegistry }]; } });\n\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * Asserts that a particular node is an element.\n * @param node Node to be checked.\n * @param name Name to attach to the error message.\n */\nfunction assertElementNode(node, name) {\n    if (node.nodeType !== 1) {\n        throw Error(`${name} must be attached to an element node. ` + `Currently attached to \"${node.nodeName}\".`);\n    }\n}\n\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_HANDLE = new InjectionToken('CdkDragHandle');\n/** Handle that can be used to drag a CdkDrag instance. */\nclass CdkDragHandle {\n    /** Whether starting to drag through this handle is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._stateChanges.next(this);\n    }\n    constructor(element, parentDrag) {\n        this.element = element;\n        /** Emits when the state of the handle has changed. */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDragHandle');\n        }\n        this._parentDrag = parentDrag;\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDragHandle, deps: [{ token: i0.ElementRef }, { token: CDK_DRAG_PARENT, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkDragHandle, isStandalone: true, selector: \"[cdkDragHandle]\", inputs: { disabled: [\"cdkDragHandleDisabled\", \"disabled\"] }, host: { classAttribute: \"cdk-drag-handle\" }, providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDragHandle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDragHandle]',\n                    standalone: true,\n                    host: {\n                        'class': 'cdk-drag-handle',\n                    },\n                    providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_DRAG_PARENT]\n                }, {\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }]; }, propDecorators: { disabled: [{\n                type: Input,\n                args: ['cdkDragHandleDisabled']\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PLACEHOLDER = new InjectionToken('CdkDragPlaceholder');\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\nclass CdkDragPlaceholder {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDragPlaceholder, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkDragPlaceholder, isStandalone: true, selector: \"ng-template[cdkDragPlaceholder]\", inputs: { data: \"data\" }, providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDragPlaceholder, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkDragPlaceholder]',\n                    standalone: true,\n                    providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { data: [{\n                type: Input\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PREVIEW = new InjectionToken('CdkDragPreview');\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\nclass CdkDragPreview {\n    /** Whether the preview should preserve the same size as the item that is being dragged. */\n    get matchSize() {\n        return this._matchSize;\n    }\n    set matchSize(value) {\n        this._matchSize = coerceBooleanProperty(value);\n    }\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._matchSize = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDragPreview, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkDragPreview, isStandalone: true, selector: \"ng-template[cdkDragPreview]\", inputs: { data: \"data\", matchSize: \"matchSize\" }, providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDragPreview, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkDragPreview]',\n                    standalone: true,\n                    providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], matchSize: [{\n                type: Input\n            }] } });\n\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n\nconst DRAG_HOST_CLASS = 'cdk-drag';\n/**\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST = new InjectionToken('CdkDropList');\n/** Element that can be moved inside a CdkDropList container. */\nclass CdkDrag {\n    static { this._dragInstances = []; }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._dragRef.disabled = this._disabled;\n    }\n    constructor(\n    /** Element that the draggable is attached to. */\n    element, \n    /** Droppable container that the draggable is a part of. */\n    dropContainer, \n    /**\n     * @deprecated `_document` parameter no longer being used and will be removed.\n     * @breaking-change 12.0.0\n     */\n    _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef, _selfHandle, _parentDrag) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._selfHandle = _selfHandle;\n        this._parentDrag = _parentDrag;\n        this._destroyed = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new EventEmitter();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new EventEmitter();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new EventEmitter();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new EventEmitter();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new EventEmitter();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((observer) => {\n            const subscription = this._dragRef.moved\n                .pipe(map(movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance,\n            })))\n                .subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n            };\n        });\n        this._dragRef = dragDrop.createDrag(element, {\n            dragStartThreshold: config && config.dragStartThreshold != null ? config.dragStartThreshold : 5,\n            pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null\n                ? config.pointerDirectionChangeThreshold\n                : 5,\n            zIndex: config?.zIndex,\n        });\n        this._dragRef.data = this;\n        // We have to keep track of the drag instances in order to be able to match an element to\n        // a drag instance. We can't go through the global registry of `DragRef`, because the root\n        // element could be different.\n        CdkDrag._dragInstances.push(this);\n        if (config) {\n            this._assignDefaults(config);\n        }\n        // Note that usually the container is assigned when the drop list is picks up the item, but in\n        // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n        // where there are no items on the first change detection pass, but the items get picked up as\n        // soon as the user triggers another pass by dragging. This is a problem, because the item would\n        // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n        // is too late since the two modes save different kinds of information. We work around it by\n        // assigning the drop container both from here and the list.\n        if (dropContainer) {\n            this._dragRef._withDropContainer(dropContainer._dropListRef);\n            dropContainer.addItem(this);\n        }\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._dragRef.setFreeDragPosition(value);\n    }\n    ngAfterViewInit() {\n        // Normally this isn't in the zone, but it can cause major performance regressions for apps\n        // using `zone-patch-rxjs` because it'll trigger a change detection when it unsubscribes.\n        this._ngZone.runOutsideAngular(() => {\n            // We need to wait for the zone to stabilize, in order for the reference\n            // element to be in the proper place in the DOM. This is mostly relevant\n            // for draggable elements inside portals since they get stamped out in\n            // their original DOM position and then they get transferred to the portal.\n            this._ngZone.onStable.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n                this._updateRootElement();\n                this._setupHandlesListener();\n                if (this.freeDragPosition) {\n                    this._dragRef.setFreeDragPosition(this.freeDragPosition);\n                }\n            });\n        });\n    }\n    ngOnChanges(changes) {\n        const rootSelectorChange = changes['rootElementSelector'];\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    ngOnDestroy() {\n        if (this.dropContainer) {\n            this.dropContainer.removeItem(this);\n        }\n        const index = CdkDrag._dragInstances.indexOf(this);\n        if (index > -1) {\n            CdkDrag._dragInstances.splice(index, 1);\n        }\n        // Unnecessary in most cases, but used to avoid extra change detections with `zone-paths-rxjs`.\n        this._ngZone.runOutsideAngular(() => {\n            this._destroyed.next();\n            this._destroyed.complete();\n            this._dragRef.dispose();\n        });\n    }\n    /** Syncs the root element with the `DragRef`. */\n    _updateRootElement() {\n        const element = this.element.nativeElement;\n        let rootElement = element;\n        if (this.rootElementSelector) {\n            rootElement =\n                element.closest !== undefined\n                    ? element.closest(this.rootElementSelector)\n                    : // Comment tag doesn't have closest method, so use parent's one.\n                        element.parentElement?.closest(this.rootElementSelector);\n        }\n        if (rootElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            assertElementNode(rootElement, 'cdkDrag');\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /** Gets the boundary element, based on the `boundaryElement` value. */\n    _getBoundaryElement() {\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return this.element.nativeElement.closest(boundary);\n        }\n        return coerceElement(boundary);\n    }\n    /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe(() => {\n            if (!ref.isDragging()) {\n                const dir = this._dir;\n                const dragStartDelay = this.dragStartDelay;\n                const placeholder = this._placeholderTemplate\n                    ? {\n                        template: this._placeholderTemplate.templateRef,\n                        context: this._placeholderTemplate.data,\n                        viewContainer: this._viewContainerRef,\n                    }\n                    : null;\n                const preview = this._previewTemplate\n                    ? {\n                        template: this._previewTemplate.templateRef,\n                        context: this._previewTemplate.data,\n                        matchSize: this._previewTemplate.matchSize,\n                        viewContainer: this._viewContainerRef,\n                    }\n                    : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.dragStartDelay =\n                    typeof dragStartDelay === 'object' && dragStartDelay\n                        ? dragStartDelay\n                        : coerceNumberProperty(dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref.previewClass = this.previewClass;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview)\n                    .withPreviewContainer(this.previewContainer || 'global');\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        });\n        // This only needs to be resolved once.\n        ref.beforeStarted.pipe(take(1)).subscribe(() => {\n            // If we managed to resolve a parent through DI, use it.\n            if (this._parentDrag) {\n                ref.withParent(this._parentDrag._dragRef);\n                return;\n            }\n            // Otherwise fall back to resolving the parent by looking up the DOM. This can happen if\n            // the item was projected into another item by something like `ngTemplateOutlet`.\n            let parent = this.element.nativeElement.parentElement;\n            while (parent) {\n                if (parent.classList.contains(DRAG_HOST_CLASS)) {\n                    ref.withParent(CdkDrag._dragInstances.find(drag => {\n                        return drag.element.nativeElement === parent;\n                    })?._dragRef || null);\n                    break;\n                }\n                parent = parent.parentElement;\n            }\n        });\n    }\n    /** Handles the events from the underlying `DragRef`. */\n    _handleEvents(ref) {\n        ref.started.subscribe(startEvent => {\n            this.started.emit({ source: this, event: startEvent.event });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.released.subscribe(releaseEvent => {\n            this.released.emit({ source: this, event: releaseEvent.event });\n        });\n        ref.ended.subscribe(endEvent => {\n            this.ended.emit({\n                source: this,\n                distance: endEvent.distance,\n                dropPoint: endEvent.dropPoint,\n                event: endEvent.event,\n            });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(enterEvent => {\n            this.entered.emit({\n                container: enterEvent.container.data,\n                item: this,\n                currentIndex: enterEvent.currentIndex,\n            });\n        });\n        ref.exited.subscribe(exitEvent => {\n            this.exited.emit({\n                container: exitEvent.container.data,\n                item: this,\n            });\n        });\n        ref.dropped.subscribe(dropEvent => {\n            this.dropped.emit({\n                previousIndex: dropEvent.previousIndex,\n                currentIndex: dropEvent.currentIndex,\n                previousContainer: dropEvent.previousContainer.data,\n                container: dropEvent.container.data,\n                isPointerOverContainer: dropEvent.isPointerOverContainer,\n                item: this,\n                distance: dropEvent.distance,\n                dropPoint: dropEvent.dropPoint,\n                event: dropEvent.event,\n            });\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, dragStartDelay, constrainPosition, previewClass, boundaryElement, draggingDisabled, rootElementSelector, previewContainer, } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.dragStartDelay = dragStartDelay || 0;\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n        if (constrainPosition) {\n            this.constrainPosition = constrainPosition;\n        }\n        if (previewClass) {\n            this.previewClass = previewClass;\n        }\n        if (boundaryElement) {\n            this.boundaryElement = boundaryElement;\n        }\n        if (rootElementSelector) {\n            this.rootElementSelector = rootElementSelector;\n        }\n        if (previewContainer) {\n            this.previewContainer = previewContainer;\n        }\n    }\n    /** Sets up the listener that syncs the handles with the drag ref. */\n    _setupHandlesListener() {\n        // Listen for any newly-added handles.\n        this._handles.changes\n            .pipe(startWith(this._handles), \n        // Sync the new handles with the DragRef.\n        tap((handles) => {\n            const childHandleElements = handles\n                .filter(handle => handle._parentDrag === this)\n                .map(handle => handle.element);\n            // Usually handles are only allowed to be a descendant of the drag element, but if\n            // the consumer defined a different drag root, we should allow the drag element\n            // itself to be a handle too.\n            if (this._selfHandle && this.rootElementSelector) {\n                childHandleElements.push(this.element);\n            }\n            this._dragRef.withHandles(childHandleElements);\n        }), \n        // Listen if the state of any of the handles changes.\n        switchMap((handles) => {\n            return merge(...handles.map(item => {\n                return item._stateChanges.pipe(startWith(item));\n            }));\n        }), takeUntil(this._destroyed))\n            .subscribe(handleInstance => {\n            // Enabled/disable the handle that changed in the DragRef.\n            const dragRef = this._dragRef;\n            const handle = handleInstance.element.nativeElement;\n            handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDrag, deps: [{ token: i0.ElementRef }, { token: CDK_DROP_LIST, optional: true, skipSelf: true }, { token: DOCUMENT }, { token: i0.NgZone }, { token: i0.ViewContainerRef }, { token: CDK_DRAG_CONFIG, optional: true }, { token: i1$1.Directionality, optional: true }, { token: DragDrop }, { token: i0.ChangeDetectorRef }, { token: CDK_DRAG_HANDLE, optional: true, self: true }, { token: CDK_DRAG_PARENT, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkDrag, isStandalone: true, selector: \"[cdkDrag]\", inputs: { data: [\"cdkDragData\", \"data\"], lockAxis: [\"cdkDragLockAxis\", \"lockAxis\"], rootElementSelector: [\"cdkDragRootElement\", \"rootElementSelector\"], boundaryElement: [\"cdkDragBoundary\", \"boundaryElement\"], dragStartDelay: [\"cdkDragStartDelay\", \"dragStartDelay\"], freeDragPosition: [\"cdkDragFreeDragPosition\", \"freeDragPosition\"], disabled: [\"cdkDragDisabled\", \"disabled\"], constrainPosition: [\"cdkDragConstrainPosition\", \"constrainPosition\"], previewClass: [\"cdkDragPreviewClass\", \"previewClass\"], previewContainer: [\"cdkDragPreviewContainer\", \"previewContainer\"] }, outputs: { started: \"cdkDragStarted\", released: \"cdkDragReleased\", ended: \"cdkDragEnded\", entered: \"cdkDragEntered\", exited: \"cdkDragExited\", dropped: \"cdkDragDropped\", moved: \"cdkDragMoved\" }, host: { properties: { \"class.cdk-drag-disabled\": \"disabled\", \"class.cdk-drag-dragging\": \"_dragRef.isDragging()\" }, classAttribute: \"cdk-drag\" }, providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }], queries: [{ propertyName: \"_previewTemplate\", first: true, predicate: CDK_DRAG_PREVIEW, descendants: true }, { propertyName: \"_placeholderTemplate\", first: true, predicate: CDK_DRAG_PLACEHOLDER, descendants: true }, { propertyName: \"_handles\", predicate: CDK_DRAG_HANDLE, descendants: true }], exportAs: [\"cdkDrag\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDrag, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDrag]',\n                    exportAs: 'cdkDrag',\n                    standalone: true,\n                    host: {\n                        'class': DRAG_HOST_CLASS,\n                        '[class.cdk-drag-disabled]': 'disabled',\n                        '[class.cdk-drag-dragging]': '_dragRef.isDragging()',\n                    },\n                    providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_DROP_LIST]\n                }, {\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_CONFIG]\n                }] }, { type: i1$1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: DragDrop }, { type: i0.ChangeDetectorRef }, { type: CdkDragHandle, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_HANDLE]\n                }] }, { type: CdkDrag, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_PARENT]\n                }] }]; }, propDecorators: { _handles: [{\n                type: ContentChildren,\n                args: [CDK_DRAG_HANDLE, { descendants: true }]\n            }], _previewTemplate: [{\n                type: ContentChild,\n                args: [CDK_DRAG_PREVIEW]\n            }], _placeholderTemplate: [{\n                type: ContentChild,\n                args: [CDK_DRAG_PLACEHOLDER]\n            }], data: [{\n                type: Input,\n                args: ['cdkDragData']\n            }], lockAxis: [{\n                type: Input,\n                args: ['cdkDragLockAxis']\n            }], rootElementSelector: [{\n                type: Input,\n                args: ['cdkDragRootElement']\n            }], boundaryElement: [{\n                type: Input,\n                args: ['cdkDragBoundary']\n            }], dragStartDelay: [{\n                type: Input,\n                args: ['cdkDragStartDelay']\n            }], freeDragPosition: [{\n                type: Input,\n                args: ['cdkDragFreeDragPosition']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkDragDisabled']\n            }], constrainPosition: [{\n                type: Input,\n                args: ['cdkDragConstrainPosition']\n            }], previewClass: [{\n                type: Input,\n                args: ['cdkDragPreviewClass']\n            }], previewContainer: [{\n                type: Input,\n                args: ['cdkDragPreviewContainer']\n            }], started: [{\n                type: Output,\n                args: ['cdkDragStarted']\n            }], released: [{\n                type: Output,\n                args: ['cdkDragReleased']\n            }], ended: [{\n                type: Output,\n                args: ['cdkDragEnded']\n            }], entered: [{\n                type: Output,\n                args: ['cdkDragEntered']\n            }], exited: [{\n                type: Output,\n                args: ['cdkDragExited']\n            }], dropped: [{\n                type: Output,\n                args: ['cdkDragDropped']\n            }], moved: [{\n                type: Output,\n                args: ['cdkDragMoved']\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST_GROUP = new InjectionToken('CdkDropListGroup');\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nclass CdkDropListGroup {\n    constructor() {\n        /** Drop lists registered inside the group. */\n        this._items = new Set();\n        this._disabled = false;\n    }\n    /** Whether starting a dragging sequence from inside this group is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnDestroy() {\n        this._items.clear();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDropListGroup, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkDropListGroup, isStandalone: true, selector: \"[cdkDropListGroup]\", inputs: { disabled: [\"cdkDropListGroupDisabled\", \"disabled\"] }, providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }], exportAs: [\"cdkDropListGroup\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDropListGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDropListGroup]',\n                    exportAs: 'cdkDropListGroup',\n                    standalone: true,\n                    providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }],\n                }]\n        }], propDecorators: { disabled: [{\n                type: Input,\n                args: ['cdkDropListGroupDisabled']\n            }] } });\n\n/** Counter used to generate unique ids for drop zones. */\nlet _uniqueIdCounter = 0;\n/** Container that wraps a set of draggable items. */\nclass CdkDropList {\n    /** Keeps track of the drop lists that are currently on the page. */\n    static { this._dropLists = []; }\n    /** Whether starting a dragging sequence from this container is disabled. */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    set disabled(value) {\n        // Usually we sync the directive and ref state right before dragging starts, in order to have\n        // a single point of failure and to avoid having to use setters for everything. `disabled` is\n        // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n        // the user in a disabled state, so we also need to sync it as it's being set.\n        this._dropListRef.disabled = this._disabled = coerceBooleanProperty(value);\n    }\n    constructor(\n    /** Element that the drop list is attached to. */\n    element, dragDrop, _changeDetectorRef, _scrollDispatcher, _dir, _group, config) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._dir = _dir;\n        this._group = _group;\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Functions that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new EventEmitter();\n        /**\n         * Keeps track of the items that are registered with this container. Historically we used to\n         * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n         * well which means that we can't handle cases like dragging the headers of a `mat-table`\n         * correctly. What we do instead is to have the items register themselves with the container\n         * and then we sort them based on their position in the DOM.\n         */\n        this._unsortedItems = new Set();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDropList');\n        }\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        this._dropListRef.enterPredicate = (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        };\n        this._dropListRef.sortPredicate = (index, drag, drop) => {\n            return this.sortPredicate(index, drag.data, drop.data);\n        };\n        this._setupInputSyncSubscription(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /** Registers an items with the drop list. */\n    addItem(item) {\n        this._unsortedItems.add(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Removes an item from the drop list. */\n    removeItem(item) {\n        this._unsortedItems.delete(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Gets the registered items in the list, sorted by their position in the DOM. */\n    getSortedItems() {\n        return Array.from(this._unsortedItems).sort((a, b) => {\n            const documentPosition = a._dragRef\n                .getVisibleElement()\n                .compareDocumentPosition(b._dragRef.getVisibleElement());\n            // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n            // tslint:disable-next-line:no-bitwise\n            return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n        });\n    }\n    ngOnDestroy() {\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._unsortedItems.clear();\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n    _setupInputSyncSubscription(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe(value => ref.withDirection(value));\n        }\n        ref.beforeStarted.subscribe(() => {\n            const siblings = coerceArray(this.connectedTo).map(drop => {\n                if (typeof drop === 'string') {\n                    const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\n                    if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                        console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\n                    }\n                    return correspondingDropList;\n                }\n                return drop;\n            });\n            if (this._group) {\n                this._group._items.forEach(drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                });\n            }\n            // Note that we resolve the scrollable parents here so that we delay the resolution\n            // as long as possible, ensuring that the element is in its final place in the DOM.\n            if (!this._scrollableParentsResolved) {\n                const scrollableParents = this._scrollDispatcher\n                    .getAncestorScrollContainers(this.element)\n                    .map(scrollable => scrollable.getElementRef().nativeElement);\n                this._dropListRef.withScrollableParents(scrollableParents);\n                // Only do this once since it involves traversing the DOM and the parents\n                // shouldn't be able to change without the drop list being destroyed.\n                this._scrollableParentsResolved = true;\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = coerceBooleanProperty(this.sortingDisabled);\n            ref.autoScrollDisabled = coerceBooleanProperty(this.autoScrollDisabled);\n            ref.autoScrollStep = coerceNumberProperty(this.autoScrollStep, 2);\n            ref\n                .connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef))\n                .withOrientation(this.orientation);\n        });\n    }\n    /** Handles events from the underlying DropListRef. */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe(() => {\n            this._syncItemsWithRef();\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex,\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data,\n            });\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.sorted.subscribe(event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data,\n            });\n        });\n        ref.dropped.subscribe(dropEvent => {\n            this.dropped.emit({\n                previousIndex: dropEvent.previousIndex,\n                currentIndex: dropEvent.currentIndex,\n                previousContainer: dropEvent.previousContainer.data,\n                container: dropEvent.container.data,\n                item: dropEvent.item.data,\n                isPointerOverContainer: dropEvent.isPointerOverContainer,\n                distance: dropEvent.distance,\n                dropPoint: dropEvent.dropPoint,\n                event: dropEvent.event,\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        });\n        merge(ref.receivingStarted, ref.receivingStopped).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, draggingDisabled, sortingDisabled, listAutoScrollDisabled, listOrientation } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n        this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n        this.orientation = listOrientation || 'vertical';\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n    }\n    /** Syncs up the registered drag items with underlying drop list ref. */\n    _syncItemsWithRef() {\n        this._dropListRef.withItems(this.getSortedItems().map(item => item._dragRef));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDropList, deps: [{ token: i0.ElementRef }, { token: DragDrop }, { token: i0.ChangeDetectorRef }, { token: i1.ScrollDispatcher }, { token: i1$1.Directionality, optional: true }, { token: CDK_DROP_LIST_GROUP, optional: true, skipSelf: true }, { token: CDK_DRAG_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkDropList, isStandalone: true, selector: \"[cdkDropList], cdk-drop-list\", inputs: { connectedTo: [\"cdkDropListConnectedTo\", \"connectedTo\"], data: [\"cdkDropListData\", \"data\"], orientation: [\"cdkDropListOrientation\", \"orientation\"], id: \"id\", lockAxis: [\"cdkDropListLockAxis\", \"lockAxis\"], disabled: [\"cdkDropListDisabled\", \"disabled\"], sortingDisabled: [\"cdkDropListSortingDisabled\", \"sortingDisabled\"], enterPredicate: [\"cdkDropListEnterPredicate\", \"enterPredicate\"], sortPredicate: [\"cdkDropListSortPredicate\", \"sortPredicate\"], autoScrollDisabled: [\"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\"], autoScrollStep: [\"cdkDropListAutoScrollStep\", \"autoScrollStep\"] }, outputs: { dropped: \"cdkDropListDropped\", entered: \"cdkDropListEntered\", exited: \"cdkDropListExited\", sorted: \"cdkDropListSorted\" }, host: { properties: { \"attr.id\": \"id\", \"class.cdk-drop-list-disabled\": \"disabled\", \"class.cdk-drop-list-dragging\": \"_dropListRef.isDragging()\", \"class.cdk-drop-list-receiving\": \"_dropListRef.isReceiving()\" }, classAttribute: \"cdk-drop-list\" }, providers: [\n            // Prevent child drop lists from picking up the same group as their parent.\n            { provide: CDK_DROP_LIST_GROUP, useValue: undefined },\n            { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n        ], exportAs: [\"cdkDropList\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDropList, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDropList], cdk-drop-list',\n                    exportAs: 'cdkDropList',\n                    standalone: true,\n                    providers: [\n                        // Prevent child drop lists from picking up the same group as their parent.\n                        { provide: CDK_DROP_LIST_GROUP, useValue: undefined },\n                        { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n                    ],\n                    host: {\n                        'class': 'cdk-drop-list',\n                        '[attr.id]': 'id',\n                        '[class.cdk-drop-list-disabled]': 'disabled',\n                        '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                        '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: DragDrop }, { type: i0.ChangeDetectorRef }, { type: i1.ScrollDispatcher }, { type: i1$1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: CdkDropListGroup, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DROP_LIST_GROUP]\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_CONFIG]\n                }] }]; }, propDecorators: { connectedTo: [{\n                type: Input,\n                args: ['cdkDropListConnectedTo']\n            }], data: [{\n                type: Input,\n                args: ['cdkDropListData']\n            }], orientation: [{\n                type: Input,\n                args: ['cdkDropListOrientation']\n            }], id: [{\n                type: Input\n            }], lockAxis: [{\n                type: Input,\n                args: ['cdkDropListLockAxis']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkDropListDisabled']\n            }], sortingDisabled: [{\n                type: Input,\n                args: ['cdkDropListSortingDisabled']\n            }], enterPredicate: [{\n                type: Input,\n                args: ['cdkDropListEnterPredicate']\n            }], sortPredicate: [{\n                type: Input,\n                args: ['cdkDropListSortPredicate']\n            }], autoScrollDisabled: [{\n                type: Input,\n                args: ['cdkDropListAutoScrollDisabled']\n            }], autoScrollStep: [{\n                type: Input,\n                args: ['cdkDropListAutoScrollStep']\n            }], dropped: [{\n                type: Output,\n                args: ['cdkDropListDropped']\n            }], entered: [{\n                type: Output,\n                args: ['cdkDropListEntered']\n            }], exited: [{\n                type: Output,\n                args: ['cdkDropListExited']\n            }], sorted: [{\n                type: Output,\n                args: ['cdkDropListSorted']\n            }] } });\n\nconst DRAG_DROP_DIRECTIVES = [\n    CdkDropList,\n    CdkDropListGroup,\n    CdkDrag,\n    CdkDragHandle,\n    CdkDragPreview,\n    CdkDragPlaceholder,\n];\nclass DragDropModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDropModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDropModule, imports: [CdkDropList,\n            CdkDropListGroup,\n            CdkDrag,\n            CdkDragHandle,\n            CdkDragPreview,\n            CdkDragPlaceholder], exports: [CdkScrollableModule, CdkDropList,\n            CdkDropListGroup,\n            CdkDrag,\n            CdkDragHandle,\n            CdkDragPreview,\n            CdkDragPlaceholder] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDropModule, providers: [DragDrop], imports: [CdkScrollableModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDropModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: DRAG_DROP_DIRECTIVES,\n                    exports: [CdkScrollableModule, ...DRAG_DROP_DIRECTIVES],\n                    providers: [DragDrop],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_DRAG_CONFIG, CDK_DRAG_HANDLE, CDK_DRAG_PARENT, CDK_DRAG_PLACEHOLDER, CDK_DRAG_PREVIEW, CDK_DROP_LIST, CDK_DROP_LIST_GROUP, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem };\n"],"names":["dateTimestampProvider","Scheduler","constructor","schedulerActionCtor","now","schedule","work","delay","state","Observable","EMPTY","subscriber","complete","empty","scheduler","emptyScheduled","asyncScheduler","timer","interval","period","mergeAll","innerFrom","popNumber","popScheduler","from","merge","args","concurrent","Infinity","sources","length","async","isScheduler","isValidDate","dueTime","intervalOrScheduler","intervalDuration","due","n","closed","next","undefined","Subscriber","createOperatorSubscriber","destination","onNext","onComplete","onError","onFinalize","OperatorSubscriber","shouldUnsubscribe","_next","value","err","error","_error","unsubscribe","_complete","_a","call","operate","switchMap","project","resultSelector","source","innerSubscriber","index","isComplete","checkComplete","subscribe","innerIndex","outerIndex","innerValue","take","count","seen","noop","takeUntil","notifier","isFunction","identity","tap","observerOrNext","tapObserver","isUnsub","_b","finalize","Subscription","Action","AsyncAction","animationFrameProvider","AnimationFrameAction","requestAsyncId","id","actions","push","_scheduled","requestAnimationFrame","flush","recycleAsyncId","cancelAnimationFrame","AsyncScheduler","AnimationFrameScheduler","action","_active","flushId","shift","execute","intervalProvider","arrRemove","pending","_id","setInterval","bind","_scheduler","clearInterval","Error","_execute","_delay","errored","errorValue","e","SchedulerAction","animationFrameScheduler","animationFrame","callback","request","cancel","delegate","handle","timestamp","Date","handler","timeout","isNaN","hasLift","lift","init","liftedSource","TypeError","i0","Injectable","Inject","InjectionToken","Directive","Optional","SkipSelf","Input","EventEmitter","Self","ContentChildren","ContentChild","Output","NgModule","DOCUMENT","i1","CdkScrollableModule","_getEventTarget","normalizePassiveListenerOptions","_getShadowRoot","coerceBooleanProperty","coerceElement","coerceNumberProperty","coerceArray","isFakeTouchstartFromScreenReader","isFakeMousedownFromScreenReader","Subject","map","startWith","i1$1","extendStyles","dest","importantProperties","key","hasOwnProperty","setProperty","has","removeProperty","toggleNativeDragInteractions","element","enable","userSelect","style","toggleVisibility","position","top","opacity","left","combineTransforms","transform","initialTransform","parseCssTimeUnitsToMs","multiplier","toLowerCase","indexOf","parseFloat","getTransformTransitionDurationInMs","computedStyle","getComputedStyle","transitionedProperties","parseCssPropertyValue","property","find","prop","propertyIndex","rawDurations","rawDelays","name","getPropertyValue","split","part","trim","getMutableClientRect","clientRect","getBoundingClientRect","right","bottom","width","height","x","y","isInsideClientRect","adjustClientRect","isPointerNearClientRect","rect","threshold","pointerX","pointerY","xThreshold","yThreshold","ParentPositionTracker","_document","positions","Map","clear","cache","elements","set","scrollPosition","getViewportScrollPosition","forEach","scrollTop","scrollLeft","handleScroll","event","target","cachedPosition","get","newTop","newLeft","viewportScrollPosition","topDifference","leftDifference","node","contains","window","scrollY","scrollX","deepCloneNode","clone","cloneNode","descendantsWithId","querySelectorAll","nodeName","removeAttribute","i","transferCanvasData","transferInputData","transferData","selector","descendantElements","cloneElements","cloneUniqueId","type","context","getContext","drawImage","passiveEventListenerOptions","passive","activeEventListenerOptions","MOUSE_EVENT_IGNORE_TIME","dragImportantProperties","Set","DragRef","disabled","_disabled","_dropContainer","newValue","_toggleNativeDragInteractions","_handles","_config","_ngZone","_viewportRuler","_dragDropRegistry","_passiveTransform","_activeTransform","_hasStartedDragging","_moveEvents","_pointerMoveSubscription","_pointerUpSubscription","_scrollSubscription","_resizeSubscription","_boundaryElement","_nativeInteractionsEnabled","_disabledHandles","_direction","dragStartDelay","beforeStarted","started","released","ended","entered","exited","dropped","moved","_pointerDown","targetHandle","_getTargetHandle","_initializeDragSequence","_rootElement","_pointerMove","pointerPosition","_getPointerPositionOnPage","distanceX","Math","abs","_pickupPositionOnPage","distanceY","isOverThreshold","dragStartThreshold","isDelayElapsed","_dragStartTime","_getDragStartDelay","container","_endDragSequence","isDragging","isReceiving","preventDefault","run","_startDragSequence","constrainedPointerPosition","_getConstrainedPointerPosition","_hasMoved","_lastKnownPointerPosition","_updatePointerDirectionDelta","_updateActiveDropContainer","offset","constrainPosition","_initialClientRect","activeTransform","_applyRootElementTransform","observers","distance","_getDragDistance","delta","_pointerDirectionDelta","_pointerUp","_nativeDragStart","withRootElement","withParent","parentDragRef","_parentPositions","registerDragItem","getPlaceholderElement","_placeholder","getRootElement","getVisibleElement","withHandles","handles","disabledHandles","add","withPreviewTemplate","template","_previewTemplate","withPlaceholderTemplate","_placeholderTemplate","rootElement","_removeRootElementListeners","runOutsideAngular","addEventListener","_initialTransform","SVGElement","_ownerSVGElement","ownerSVGElement","withBoundaryElement","boundaryElement","change","_containInsideBoundaryOnResize","parent","_parentDragRef","dispose","remove","_anchor","_destroyPreview","_destroyPlaceholder","removeDragItem","_removeSubscriptions","reset","disableHandle","enableHandle","delete","withDirection","direction","_withDropContainer","getFreeDragPosition","setFreeDragPosition","withPreviewContainer","_previewContainer","_sortFromLastPointerPosition","_preview","_previewRef","destroy","_placeholderRef","stopDragging","webkitTapHighlightColor","_rootElementTapHighlight","_stopScrolling","_animatePreviewToPlaceholder","then","_cleanupDragArtifacts","_cleanupCachedDimensions","dropPoint","isTouchEvent","_lastTouchEventTime","dropContainer","parentNode","placeholder","_createPlaceholderElement","anchor","createComment","shadowRoot","insertBefore","_createPreviewElement","body","appendChild","replaceChild","_getPreviewInsertionPoint","start","_initialContainer","_initialIndex","getItemIndex","getScrollableParents","referenceElement","stopPropagation","isTouchSequence","isAuxiliaryMouseButton","button","isSyntheticEvent","isFakeEvent","draggable","rootStyles","pointerMove","pointerUp","scrolled","scrollEvent","_updateOnScroll","_boundaryRect","previewTemplate","_pickupPositionInElement","matchSize","_getPointerPositionInElement","_pointerPositionAtLastDirectionChange","startDragging","_previewRect","currentIndex","isPointerOverContainer","_isOverContainer","item","previousIndex","previousContainer","drop","rawX","rawY","newContainer","_getSiblingContainerFromPosition","exit","enter","sortingDisabled","_startScrollingIfNecessary","_sortItem","_applyPreviewTransform","previewConfig","previewClass","preview","rootRect","viewRef","viewContainer","createEmbeddedView","detectChanges","getRootNode","matchElementSize","getTransform","zIndex","classList","setAttribute","Array","isArray","className","Promise","resolve","placeholderRect","duration","propertyName","removeEventListener","clearTimeout","setTimeout","placeholderConfig","placeholderTemplate","pointerEvents","elementRect","handleElement","referenceRect","point","targetTouches","_getViewportScrollPosition","pageX","pageY","touches","changedTouches","svgMatrix","getScreenCTM","svgPoint","createSVGPoint","matrixTransform","inverse","dropContainerLock","lockAxis","pickupX","pickupY","boundaryRect","previewWidth","previewHeight","_getPreviewRect","minY","maxY","minX","maxX","clamp$1","pointerPositionOnPage","positionSinceLastChange","changeX","changeY","pointerDirectionChangeThreshold","shouldEnable","styles","currentPosition","pickupPosition","leftOverflow","rightOverflow","topOverflow","bottomOverflow","touch","mouse","scrollDifference","_cachedShadowRoot","initialParent","previewContainer","documentRef","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","round","min","max","rootNodes","nodeType","ELEMENT_NODE","wrapper","createElement","sourceRect","moveItemInArray","array","fromIndex","toIndex","clamp","to","transferArrayItem","currentArray","targetArray","targetIndex","splice","copyArrayItem","SingleAxisSortStrategy","_element","_itemPositions","orientation","_previousSwap","drag","overlaps","items","withItems","sort","pointerDelta","siblings","newIndex","_getItemIndexFromPointerPosition","isHorizontal","findIndex","currentItem","siblingAtNewPosition","newPosition","itemOffset","_getItemOffsetPx","siblingOffset","_getSiblingOffsetPx","oldOrder","slice","sibling","isDraggedItem","elementToOffset","activeDraggables","_activeDraggables","newPositionReference","_shouldEnterAsFirstChild","parentElement","_cacheItemPositions","withSortPredicate","predicate","_sortPredicate","p","getActiveItemsSnapshot","reverse","updateOnScroll","elementToMeasure","a","b","immediateSibling","end","itemPositions","reversed","lastItemRect","firstItemRect","floor","DROP_PROXIMITY_THRESHOLD","SCROLL_PROXIMITY_THRESHOLD","DropListRef","autoScrollDisabled","autoScrollStep","enterPredicate","sortPredicate","sorted","receivingStarted","receivingStopped","_isDragging","_draggables","_siblings","_activeSiblings","_viewportScrollSubscription","_verticalScrollDirection","_horizontalScrollDirection","_stopScrollTimers","_startScrollInterval","pipe","_scrollNode","scrollStep","scrollBy","withScrollableParents","registerDropContainer","_sortStrategy","removeDropContainer","_draggingStarted","_notifyReceivingSiblings","_cacheParentPositions","_reset","previousItems","draggedItems","filter","every","connectedTo","withOrientation","_scrollableElements","size","_clientRect","result","scrollNode","verticalScrollDirection","horizontalScrollDirection","getElementScrollDirections","getViewportSize","getVerticalScrollDirection","getHorizontalScrollDirection","_initialScrollSnap","msScrollSnapType","scrollSnapType","_listenToScrollEvents","_stopReceiving","_canReceive","elementFromPoint","nativeElement","_startReceiving","activeSiblings","initiator","receiver","computedVertical","computedHorizontal","scrollHeight","clientHeight","scrollWidth","clientWidth","activeCapturingEventOptions","capture","DragDropRegistry","_dropInstances","_dragInstances","_activeDragInstances","_globalListeners","_draggingPredicate","scroll","_preventDefaultWhileDragging","_persistentTouchmoveListener","some","startsWith","options","config","_clearGlobalListeners","streams","observer","eventOptions","ngOnDestroy","instance","_","ɵfac","DragDropRegistry_Factory","t","ɵɵinject","NgZone","_2","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","decorators","DEFAULT_CONFIG","DragDrop","createDrag","createDropList","DragDrop_Factory","ViewportRuler","CDK_DRAG_PARENT","assertElementNode","CDK_DRAG_HANDLE","CdkDragHandle","_stateChanges","parentDrag","_parentDrag","CdkDragHandle_Factory","ɵɵdirectiveInject","ElementRef","ɵdir","ɵɵdefineDirective","selectors","hostAttrs","inputs","standalone","features","ɵɵProvidersFeature","provide","useExisting","host","providers","CDK_DRAG_PLACEHOLDER","CdkDragPlaceholder","templateRef","CdkDragPlaceholder_Factory","TemplateRef","data","CDK_DRAG_PREVIEW","CdkDragPreview","_matchSize","CdkDragPreview_Factory","CDK_DRAG_CONFIG","DRAG_HOST_CLASS","CDK_DROP_LIST","CdkDrag","_dragRef","_viewContainerRef","_dir","dragDrop","_changeDetectorRef","_selfHandle","_destroyed","subscription","movedEvent","_assignDefaults","_dropListRef","addItem","_syncInputs","_handleEvents","ngAfterViewInit","onStable","_updateRootElement","_setupHandlesListener","freeDragPosition","ngOnChanges","changes","rootSelectorChange","positionChange","firstChange","removeItem","rootElementSelector","closest","_getBoundaryElement","boundary","ref","dir","startEvent","emit","markForCheck","releaseEvent","endEvent","enterEvent","exitEvent","dropEvent","draggingDisabled","childHandleElements","handleInstance","dragRef","CdkDrag_Factory","ViewContainerRef","Directionality","ChangeDetectorRef","_3","contentQueries","CdkDrag_ContentQueries","rf","ctx","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostVars","hostBindings","CdkDrag_HostBindings","ɵɵclassProp","outputs","exportAs","ɵɵNgOnChangesFeature","descendants","CDK_DROP_LIST_GROUP","CdkDropListGroup","_items","CdkDropListGroup_Factory","_uniqueIdCounter","CdkDropList","_dropLists","_group","_scrollDispatcher","_unsortedItems","_setupInputSyncSubscription","_syncItemsWithRef","getSortedItems","documentPosition","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","correspondingDropList","list","console","warn","_scrollableParentsResolved","scrollableParents","getAncestorScrollContainers","scrollable","getElementRef","listAutoScrollDisabled","listOrientation","CdkDropList_Factory","ScrollDispatcher","CdkDropList_HostBindings","ɵɵattribute","useValue","DRAG_DROP_DIRECTIVES","DragDropModule","DragDropModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]}