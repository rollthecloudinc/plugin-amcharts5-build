{"version":3,"file":"6877.js","mappings":"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","sources":["./node_modules/@angular/material/fesm2022/legacy-checkbox.mjs"],"sourcesContent":["import * as i1 from '@angular/cdk/a11y';\nimport * as i0 from '@angular/core';\nimport { forwardRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Optional, Inject, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { _MatCheckboxBase, MAT_CHECKBOX_DEFAULT_OPTIONS, _MatCheckboxRequiredValidatorModule } from '@angular/material/checkbox';\nexport { MAT_CHECKBOX_DEFAULT_OPTIONS as MAT_LEGACY_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY as MAT_LEGACY_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR as MAT_LEGACY_CHECKBOX_REQUIRED_VALIDATOR, MatCheckboxRequiredValidator as MatLegacyCheckboxRequiredValidator, _MatCheckboxRequiredValidatorModule as _MatLegacyCheckboxRequiredValidatorModule } from '@angular/material/checkbox';\nimport * as i2 from '@angular/material/core';\nimport { MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport * as i3 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * Change event object emitted by a checkbox.\n * @deprecated Use `MatCheckboxChange` from `@angular/material/checkbox` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyCheckboxChange {\n}\n/**\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n * @deprecated Use `MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR` from `@angular/material/checkbox` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nconst MAT_LEGACY_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatLegacyCheckbox),\n    multi: true,\n};\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A checkbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://material.io/design/components/selection-controls.html\n * @deprecated Use `MatCheckbox` from `@angular/material/checkbox` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyCheckbox extends _MatCheckboxBase {\n    constructor(elementRef, changeDetectorRef, _focusMonitor, ngZone, tabIndex, animationMode, options) {\n        super('mat-checkbox-', elementRef, changeDetectorRef, ngZone, tabIndex, animationMode, options);\n        this._focusMonitor = _focusMonitor;\n        this._animationClasses = {\n            uncheckedToChecked: 'mat-checkbox-anim-unchecked-checked',\n            uncheckedToIndeterminate: 'mat-checkbox-anim-unchecked-indeterminate',\n            checkedToUnchecked: 'mat-checkbox-anim-checked-unchecked',\n            checkedToIndeterminate: 'mat-checkbox-anim-checked-indeterminate',\n            indeterminateToChecked: 'mat-checkbox-anim-indeterminate-checked',\n            indeterminateToUnchecked: 'mat-checkbox-anim-indeterminate-unchecked',\n        };\n    }\n    _createChangeEvent(isChecked) {\n        const event = new MatLegacyCheckboxChange();\n        event.source = this;\n        event.checked = isChecked;\n        return event;\n    }\n    _getAnimationTargetElement() {\n        return this._elementRef.nativeElement;\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n            if (!focusOrigin) {\n                this._onBlur();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n        super._handleInputClick();\n    }\n    /** Focuses the checkbox. */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyCheckbox, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.FocusMonitor }, { token: i0.NgZone }, { token: 'tabindex', attribute: true }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_CHECKBOX_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyCheckbox, selector: \"mat-checkbox\", inputs: { disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\" }, host: { properties: { \"id\": \"id\", \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"class.mat-checkbox-indeterminate\": \"indeterminate\", \"class.mat-checkbox-checked\": \"checked\", \"class.mat-checkbox-disabled\": \"disabled\", \"class.mat-checkbox-label-before\": \"labelPosition == \\\"before\\\"\", \"class._mat-animation-noopable\": \"_animationMode === 'NoopAnimations'\" }, classAttribute: \"mat-checkbox\" }, providers: [MAT_LEGACY_CHECKBOX_CONTROL_VALUE_ACCESSOR], exportAs: [\"matCheckbox\"], usesInheritance: true, ngImport: i0, template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label>\\n  <span class=\\\"mat-checkbox-inner-container\\\"\\n       [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\">\\n    <input #input\\n           class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [checked]=\\\"checked\\\"\\n           [attr.value]=\\\"value\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n    <span matRipple class=\\\"mat-checkbox-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: _animationMode === 'NoopAnimations' ? 0 : 150}\\\">\\n      <span class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></span>\\n    </span>\\n    <span class=\\\"mat-checkbox-frame\\\"></span>\\n    <span class=\\\"mat-checkbox-background\\\">\\n      <svg version=\\\"1.1\\\"\\n           focusable=\\\"false\\\"\\n           class=\\\"mat-checkbox-checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mat-checkbox-checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              stroke=\\\"white\\\"\\n              d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/>\\n      </svg>\\n      <!-- Element for rendering the indeterminate state checkbox. -->\\n      <span class=\\\"mat-checkbox-mixedmark\\\"></span>\\n    </span>\\n  </span>\\n  <span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\", styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{display:inline-block;transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);position:relative}.mat-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-checkbox-layout{-webkit-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:rgba(0,0,0,0);transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1);-webkit-print-color-adjust:exact;color-adjust:exact}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{display:block;width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:rgba(0,0,0,0)}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox-input:focus~.mat-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: i3.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyCheckbox, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-checkbox', exportAs: 'matCheckbox', host: {\n                        'class': 'mat-checkbox',\n                        '[id]': 'id',\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[class.mat-checkbox-indeterminate]': 'indeterminate',\n                        '[class.mat-checkbox-checked]': 'checked',\n                        '[class.mat-checkbox-disabled]': 'disabled',\n                        '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\n                        '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n                    }, providers: [MAT_LEGACY_CHECKBOX_CONTROL_VALUE_ACCESSOR], inputs: ['disableRipple', 'color', 'tabIndex'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label>\\n  <span class=\\\"mat-checkbox-inner-container\\\"\\n       [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\">\\n    <input #input\\n           class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [checked]=\\\"checked\\\"\\n           [attr.value]=\\\"value\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n    <span matRipple class=\\\"mat-checkbox-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: _animationMode === 'NoopAnimations' ? 0 : 150}\\\">\\n      <span class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></span>\\n    </span>\\n    <span class=\\\"mat-checkbox-frame\\\"></span>\\n    <span class=\\\"mat-checkbox-background\\\">\\n      <svg version=\\\"1.1\\\"\\n           focusable=\\\"false\\\"\\n           class=\\\"mat-checkbox-checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mat-checkbox-checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              stroke=\\\"white\\\"\\n              d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/>\\n      </svg>\\n      <!-- Element for rendering the indeterminate state checkbox. -->\\n      <span class=\\\"mat-checkbox-mixedmark\\\"></span>\\n    </span>\\n  </span>\\n  <span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\", styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{display:inline-block;transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);position:relative}.mat-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-checkbox-layout{-webkit-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:rgba(0,0,0,0);transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1);-webkit-print-color-adjust:exact;color-adjust:exact}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{display:block;width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:rgba(0,0,0,0)}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox-input:focus~.mat-focus-indicator::before{content:\\\"\\\"}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.FocusMonitor }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n                }] }]; } });\n\n/**\n * @deprecated Use `MatCheckboxModule` from `@angular/material/checkbox` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyCheckboxModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyCheckboxModule, declarations: [MatLegacyCheckbox], imports: [MatRippleModule, MatCommonModule, ObserversModule, _MatCheckboxRequiredValidatorModule], exports: [MatLegacyCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyCheckboxModule, imports: [MatRippleModule, MatCommonModule, ObserversModule, _MatCheckboxRequiredValidatorModule, MatCommonModule, _MatCheckboxRequiredValidatorModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatRippleModule, MatCommonModule, ObserversModule, _MatCheckboxRequiredValidatorModule],\n                    exports: [MatLegacyCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule],\n                    declarations: [MatLegacyCheckbox],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_LEGACY_CHECKBOX_CONTROL_VALUE_ACCESSOR, MatLegacyCheckbox, MatLegacyCheckboxChange, MatLegacyCheckboxModule };\n"],"names":["i1","i0","forwardRef","Component","ViewEncapsulation","ChangeDetectionStrategy","Attribute","Optional","Inject","NgModule","NG_VALUE_ACCESSOR","ANIMATION_MODULE_TYPE","_MatCheckboxBase","MAT_CHECKBOX_DEFAULT_OPTIONS","_MatCheckboxRequiredValidatorModule","MAT_LEGACY_CHECKBOX_DEFAULT_OPTIONS","MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY","MAT_LEGACY_CHECKBOX_DEFAULT_OPTIONS_FACTORY","MAT_CHECKBOX_REQUIRED_VALIDATOR","MAT_LEGACY_CHECKBOX_REQUIRED_VALIDATOR","MatCheckboxRequiredValidator","MatLegacyCheckboxRequiredValidator","_MatLegacyCheckboxRequiredValidatorModule","i2","MatRippleModule","MatCommonModule","i3","ObserversModule","_c0","a0","enterDuration","_c1","MatLegacyCheckboxChange","MAT_LEGACY_CHECKBOX_CONTROL_VALUE_ACCESSOR","provide","useExisting","MatLegacyCheckbox","multi","constructor","elementRef","changeDetectorRef","_focusMonitor","ngZone","tabIndex","animationMode","options","_animationClasses","uncheckedToChecked","uncheckedToIndeterminate","checkedToUnchecked","checkedToIndeterminate","indeterminateToChecked","indeterminateToUnchecked","_createChangeEvent","isChecked","event","source","checked","_getAnimationTargetElement","_elementRef","nativeElement","ngAfterViewInit","monitor","subscribe","focusOrigin","_onBlur","ngOnDestroy","stopMonitoring","_onInputClick","stopPropagation","_handleInputClick","focus","origin","focusVia","_inputElement","_","ɵfac","MatLegacyCheckbox_Factory","t","ɵɵdirectiveInject","ElementRef","ChangeDetectorRef","FocusMonitor","NgZone","ɵɵinjectAttribute","_2","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","hostVars","hostBindings","MatLegacyCheckbox_HostBindings","rf","ctx","ɵɵhostProperty","id","ɵɵattribute","ɵɵclassProp","indeterminate","disabled","labelPosition","_animationMode","inputs","disableRipple","color","exportAs","features","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","consts","template","MatLegacyCheckbox_Template","ɵɵprojectionDef","ɵɵelementStart","ɵɵlistener","MatLegacyCheckbox_Template_input_change_3_listener","$event","_onInteractionEvent","MatLegacyCheckbox_Template_input_click_3_listener","ɵɵelementEnd","ɵɵelement","ɵɵnamespaceSVG","ɵɵnamespaceHTML","MatLegacyCheckbox_Template_span_cdkObserveContent_12_listener","_onLabelTextChange","ɵɵtext","ɵɵprojection","_r0","ɵɵreference","_r2","inputId","ɵɵadvance","textContent","trim","ɵɵproperty","required","value","name","ariaLabel","ariaLabelledby","ariaDescribedby","_isRippleDisabled","ɵɵpureFunction1","dependencies","MatRipple","CdkObserveContent","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","host","providers","None","OnPush","undefined","decorators","MatLegacyCheckboxModule","MatLegacyCheckboxModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","exports","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}