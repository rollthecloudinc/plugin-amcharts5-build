{"version":3,"file":"8653.js","mappings":"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","sources":["./node_modules/rxjs/dist/esm/internal/BehaviorSubject.js","./node_modules/rxjs/dist/esm/internal/Subject.js","./node_modules/rxjs/dist/esm/internal/observable/empty.js","./node_modules/rxjs/dist/esm/internal/observable/of.js","./node_modules/rxjs/dist/esm/internal/operators/OperatorSubscriber.js","./node_modules/rxjs/dist/esm/internal/operators/filter.js","./node_modules/rxjs/dist/esm/internal/operators/take.js","./node_modules/rxjs/dist/esm/internal/operators/takeUntil.js","./node_modules/rxjs/dist/esm/internal/util/ObjectUnsubscribedError.js","./node_modules/rxjs/dist/esm/internal/util/isObservable.js","./node_modules/rxjs/dist/esm/internal/util/lift.js","./node_modules/@angular/cdk/fesm2022/tree.mjs"],"sourcesContent":["import { Subject } from './Subject';\nexport class BehaviorSubject extends Subject {\n    constructor(_value) {\n        super();\n        this._value = _value;\n    }\n    get value() {\n        return this.getValue();\n    }\n    _subscribe(subscriber) {\n        const subscription = super._subscribe(subscriber);\n        !subscription.closed && subscriber.next(this._value);\n        return subscription;\n    }\n    getValue() {\n        const { hasError, thrownError, _value } = this;\n        if (hasError) {\n            throw thrownError;\n        }\n        this._throwIfClosed();\n        return _value;\n    }\n    next(value) {\n        super.next((this._value = value));\n    }\n}\n","import { Observable } from './Observable';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\nexport class Subject extends Observable {\n    constructor() {\n        super();\n        this.closed = false;\n        this.currentObservers = null;\n        this.observers = [];\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    lift(operator) {\n        const subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    }\n    _throwIfClosed() {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n    }\n    next(value) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                if (!this.currentObservers) {\n                    this.currentObservers = Array.from(this.observers);\n                }\n                for (const observer of this.currentObservers) {\n                    observer.next(value);\n                }\n            }\n        });\n    }\n    error(err) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.hasError = this.isStopped = true;\n                this.thrownError = err;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().error(err);\n                }\n            }\n        });\n    }\n    complete() {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.isStopped = true;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().complete();\n                }\n            }\n        });\n    }\n    unsubscribe() {\n        this.isStopped = this.closed = true;\n        this.observers = this.currentObservers = null;\n    }\n    get observed() {\n        var _a;\n        return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n    _trySubscribe(subscriber) {\n        this._throwIfClosed();\n        return super._trySubscribe(subscriber);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._checkFinalizedStatuses(subscriber);\n        return this._innerSubscribe(subscriber);\n    }\n    _innerSubscribe(subscriber) {\n        const { hasError, isStopped, observers } = this;\n        if (hasError || isStopped) {\n            return EMPTY_SUBSCRIPTION;\n        }\n        this.currentObservers = null;\n        observers.push(subscriber);\n        return new Subscription(() => {\n            this.currentObservers = null;\n            arrRemove(observers, subscriber);\n        });\n    }\n    _checkFinalizedStatuses(subscriber) {\n        const { hasError, thrownError, isStopped } = this;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped) {\n            subscriber.complete();\n        }\n    }\n    asObservable() {\n        const observable = new Observable();\n        observable.source = this;\n        return observable;\n    }\n}\nSubject.create = (destination, source) => {\n    return new AnonymousSubject(destination, source);\n};\nexport class AnonymousSubject extends Subject {\n    constructor(destination, source) {\n        super();\n        this.destination = destination;\n        this.source = source;\n    }\n    next(value) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n    }\n    error(err) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n    }\n    complete() {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    _subscribe(subscriber) {\n        var _a, _b;\n        return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;\n    }\n}\n","import { Observable } from '../Observable';\nexport const EMPTY = new Observable((subscriber) => subscriber.complete());\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nfunction emptyScheduled(scheduler) {\n    return new Observable((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n","import { popScheduler } from '../util/args';\nimport { from } from './from';\nexport function of(...args) {\n    const scheduler = popScheduler(args);\n    return from(args, scheduler);\n}\n","import { Subscriber } from '../Subscriber';\nexport function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {\n    return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\nexport class OperatorSubscriber extends Subscriber {\n    constructor(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {\n        super(destination);\n        this.onFinalize = onFinalize;\n        this.shouldUnsubscribe = shouldUnsubscribe;\n        this._next = onNext\n            ? function (value) {\n                try {\n                    onNext(value);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n            }\n            : super._next;\n        this._error = onError\n            ? function (err) {\n                try {\n                    onError(err);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : super._error;\n        this._complete = onComplete\n            ? function () {\n                try {\n                    onComplete();\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : super._complete;\n    }\n    unsubscribe() {\n        var _a;\n        if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n            const { closed } = this;\n            super.unsubscribe();\n            !closed && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));\n        }\n    }\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function filter(predicate, thisArg) {\n    return operate((source, subscriber) => {\n        let index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value)));\n    });\n}\n","import { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function take(count) {\n    return count <= 0\n        ?\n            () => EMPTY\n        : operate((source, subscriber) => {\n            let seen = 0;\n            source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n                if (++seen <= count) {\n                    subscriber.next(value);\n                    if (count <= seen) {\n                        subscriber.complete();\n                    }\n                }\n            }));\n        });\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\nexport function takeUntil(notifier) {\n    return operate((source, subscriber) => {\n        innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, () => subscriber.complete(), noop));\n        !subscriber.closed && source.subscribe(subscriber);\n    });\n}\n","import { createErrorClass } from './createErrorClass';\nexport const ObjectUnsubscribedError = createErrorClass((_super) => function ObjectUnsubscribedErrorImpl() {\n    _super(this);\n    this.name = 'ObjectUnsubscribedError';\n    this.message = 'object unsubscribed';\n});\n","import { Observable } from '../Observable';\nimport { isFunction } from './isFunction';\nexport function isObservable(obj) {\n    return !!obj && (obj instanceof Observable || (isFunction(obj.lift) && isFunction(obj.subscribe)));\n}\n","import { isFunction } from './isFunction';\nexport function hasLift(source) {\n    return isFunction(source === null || source === void 0 ? void 0 : source.lift);\n}\nexport function operate(init) {\n    return (source) => {\n        if (hasLift(source)) {\n            return source.lift(function (liftedSource) {\n                try {\n                    return init(liftedSource, this);\n                }\n                catch (err) {\n                    this.error(err);\n                }\n            });\n        }\n        throw new TypeError('Unable to lift unknown Observable type');\n    };\n}\n","import { SelectionModel, isDataSource } from '@angular/cdk/collections';\nimport { isObservable, Subject, BehaviorSubject, of } from 'rxjs';\nimport { take, filter, takeUntil } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i2 from '@angular/cdk/bidi';\n\n/** Base tree control. It has basic toggle/expand/collapse operations on a single data node. */\nclass BaseTreeControl {\n    constructor() {\n        /** A selection model with multi-selection to track expansion status. */\n        this.expansionModel = new SelectionModel(true);\n    }\n    /** Toggles one single data node's expanded/collapsed state. */\n    toggle(dataNode) {\n        this.expansionModel.toggle(this._trackByValue(dataNode));\n    }\n    /** Expands one single data node. */\n    expand(dataNode) {\n        this.expansionModel.select(this._trackByValue(dataNode));\n    }\n    /** Collapses one single data node. */\n    collapse(dataNode) {\n        this.expansionModel.deselect(this._trackByValue(dataNode));\n    }\n    /** Whether a given data node is expanded or not. Returns true if the data node is expanded. */\n    isExpanded(dataNode) {\n        return this.expansionModel.isSelected(this._trackByValue(dataNode));\n    }\n    /** Toggles a subtree rooted at `node` recursively. */\n    toggleDescendants(dataNode) {\n        this.expansionModel.isSelected(this._trackByValue(dataNode))\n            ? this.collapseDescendants(dataNode)\n            : this.expandDescendants(dataNode);\n    }\n    /** Collapse all dataNodes in the tree. */\n    collapseAll() {\n        this.expansionModel.clear();\n    }\n    /** Expands a subtree rooted at given data node recursively. */\n    expandDescendants(dataNode) {\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.select(...toBeProcessed.map(value => this._trackByValue(value)));\n    }\n    /** Collapses a subtree rooted at given data node recursively. */\n    collapseDescendants(dataNode) {\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.deselect(...toBeProcessed.map(value => this._trackByValue(value)));\n    }\n    _trackByValue(value) {\n        return this.trackBy ? this.trackBy(value) : value;\n    }\n}\n\n/** Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\nclass FlatTreeControl extends BaseTreeControl {\n    /** Construct with flat tree data node functions getLevel and isExpandable. */\n    constructor(getLevel, isExpandable, options) {\n        super();\n        this.getLevel = getLevel;\n        this.isExpandable = isExpandable;\n        this.options = options;\n        if (this.options) {\n            this.trackBy = this.options.trackBy;\n        }\n    }\n    /**\n     * Gets a list of the data node's subtree of descendent data nodes.\n     *\n     * To make this working, the `dataNodes` of the TreeControl must be flattened tree nodes\n     * with correct levels.\n     */\n    getDescendants(dataNode) {\n        const startIndex = this.dataNodes.indexOf(dataNode);\n        const results = [];\n        // Goes through flattened tree nodes in the `dataNodes` array, and get all descendants.\n        // The level of descendants of a tree node must be greater than the level of the given\n        // tree node.\n        // If we reach a node whose level is equal to the level of the tree node, we hit a sibling.\n        // If we reach a node whose level is greater than the level of the tree node, we hit a\n        // sibling of an ancestor.\n        for (let i = startIndex + 1; i < this.dataNodes.length && this.getLevel(dataNode) < this.getLevel(this.dataNodes[i]); i++) {\n            results.push(this.dataNodes[i]);\n        }\n        return results;\n    }\n    /**\n     * Expands all data nodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all flattened\n     * data nodes of the tree.\n     */\n    expandAll() {\n        this.expansionModel.select(...this.dataNodes.map(node => this._trackByValue(node)));\n    }\n}\n\n/** Nested tree control. Able to expand/collapse a subtree recursively for NestedNode type. */\nclass NestedTreeControl extends BaseTreeControl {\n    /** Construct with nested tree function getChildren. */\n    constructor(getChildren, options) {\n        super();\n        this.getChildren = getChildren;\n        this.options = options;\n        if (this.options) {\n            this.trackBy = this.options.trackBy;\n        }\n    }\n    /**\n     * Expands all dataNodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all root level\n     * data nodes of the tree.\n     */\n    expandAll() {\n        this.expansionModel.clear();\n        const allNodes = this.dataNodes.reduce((accumulator, dataNode) => [...accumulator, ...this.getDescendants(dataNode), dataNode], []);\n        this.expansionModel.select(...allNodes.map(node => this._trackByValue(node)));\n    }\n    /** Gets a list of descendant dataNodes of a subtree rooted at given data node recursively. */\n    getDescendants(dataNode) {\n        const descendants = [];\n        this._getDescendants(descendants, dataNode);\n        // Remove the node itself\n        return descendants.splice(1);\n    }\n    /** A helper function to get descendants recursively. */\n    _getDescendants(descendants, dataNode) {\n        descendants.push(dataNode);\n        const childrenNodes = this.getChildren(dataNode);\n        if (Array.isArray(childrenNodes)) {\n            childrenNodes.forEach((child) => this._getDescendants(descendants, child));\n        }\n        else if (isObservable(childrenNodes)) {\n            // TypeScript as of version 3.5 doesn't seem to treat `Boolean` like a function that\n            // returns a `boolean` specifically in the context of `filter`, so we manually clarify that.\n            childrenNodes.pipe(take(1), filter(Boolean)).subscribe(children => {\n                for (const child of children) {\n                    this._getDescendants(descendants, child);\n                }\n            });\n        }\n    }\n}\n\n/**\n * Injection token used to provide a `CdkTreeNode` to its outlet.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst CDK_TREE_NODE_OUTLET_NODE = new InjectionToken('CDK_TREE_NODE_OUTLET_NODE');\n/**\n * Outlet for nested CdkNode. Put `[cdkTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass CdkTreeNodeOutlet {\n    constructor(viewContainer, _node) {\n        this.viewContainer = viewContainer;\n        this._node = _node;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTreeNodeOutlet, deps: [{ token: i0.ViewContainerRef }, { token: CDK_TREE_NODE_OUTLET_NODE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkTreeNodeOutlet, selector: \"[cdkTreeNodeOutlet]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTreeNodeOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTreeNodeOutlet]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TREE_NODE_OUTLET_NODE]\n                }, {\n                    type: Optional\n                }] }]; } });\n\n/** Context provided to the tree node component. */\nclass CdkTreeNodeOutletContext {\n    constructor(data) {\n        this.$implicit = data;\n    }\n}\n/**\n * Data node definition for the CdkTree.\n * Captures the node's template and a when predicate that describes when this node should be used.\n */\nclass CdkTreeNodeDef {\n    /** @docs-private */\n    constructor(template) {\n        this.template = template;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTreeNodeDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkTreeNodeDef, selector: \"[cdkTreeNodeDef]\", inputs: { when: [\"cdkTreeNodeDefWhen\", \"when\"] }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTreeNodeDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTreeNodeDef]',\n                    inputs: ['when: cdkTreeNodeDefWhen'],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * Returns an error to be thrown when there is no usable data.\n * @docs-private\n */\nfunction getTreeNoValidDataSourceError() {\n    return Error(`A valid data source must be provided.`);\n}\n/**\n * Returns an error to be thrown when there are multiple nodes that are missing a when function.\n * @docs-private\n */\nfunction getTreeMultipleDefaultNodeDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching node defs for a particular set of data.\n * @docs-private\n */\nfunction getTreeMissingMatchingNodeDefError() {\n    return Error(`Could not find a matching node definition for the provided node data.`);\n}\n/**\n * Returns an error to be thrown when there are tree control.\n * @docs-private\n */\nfunction getTreeControlMissingError() {\n    return Error(`Could not find a tree control for the tree.`);\n}\n/**\n * Returns an error to be thrown when tree control did not implement functions for flat/nested node.\n * @docs-private\n */\nfunction getTreeControlFunctionsMissingError() {\n    return Error(`Could not find functions for nested/flat tree in tree control.`);\n}\n\n/**\n * CDK tree component that connects with a data source to retrieve data of type `T` and renders\n * dataNodes with hierarchy. Updates the dataNodes when new data is provided by the data source.\n */\nclass CdkTree {\n    /**\n     * Provides a stream containing the latest data array to render. Influenced by the tree's\n     * stream of view window (what dataNodes are currently on screen).\n     * Data source can be an observable of data array, or a data array to render.\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    constructor(_differs, _changeDetectorRef) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /** Level of nodes */\n        this._levels = new Map();\n        // TODO(tinayuangao): Setup a listener for scrolling, emit the calculated view to viewChange.\n        //     Remove the MAX_VALUE in viewChange\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         */\n        this.viewChange = new BehaviorSubject({\n            start: 0,\n            end: Number.MAX_VALUE,\n        });\n    }\n    ngOnInit() {\n        this._dataDiffer = this._differs.find([]).create(this.trackBy);\n        if (!this.treeControl && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeControlMissingError();\n        }\n    }\n    ngOnDestroy() {\n        this._nodeOutlet.viewContainer.clear();\n        this.viewChange.complete();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (this._dataSource && typeof this._dataSource.disconnect === 'function') {\n            this.dataSource.disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n    }\n    ngAfterContentChecked() {\n        const defaultNodeDefs = this._nodeDefs.filter(def => !def.when);\n        if (defaultNodeDefs.length > 1 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeMultipleDefaultNodeDefsError();\n        }\n        this._defaultNodeDef = defaultNodeDefs[0];\n        if (this.dataSource && this._nodeDefs && !this._dataSubscription) {\n            this._observeRenderChanges();\n        }\n    }\n    // TODO(tinayuangao): Work on keyboard traversal and actions, make sure it's working for RTL\n    //     and nested trees.\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the node outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        if (this._dataSource && typeof this._dataSource.disconnect === 'function') {\n            this.dataSource.disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n        // Remove the all dataNodes if there is now no data source\n        if (!dataSource) {\n            this._nodeOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n        if (this._nodeDefs) {\n            this._observeRenderChanges();\n        }\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        let dataStream;\n        if (isDataSource(this._dataSource)) {\n            dataStream = this._dataSource.connect(this);\n        }\n        else if (isObservable(this._dataSource)) {\n            dataStream = this._dataSource;\n        }\n        else if (Array.isArray(this._dataSource)) {\n            dataStream = of(this._dataSource);\n        }\n        if (dataStream) {\n            this._dataSubscription = dataStream\n                .pipe(takeUntil(this._onDestroy))\n                .subscribe(data => this.renderNodeChanges(data));\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getTreeNoValidDataSourceError();\n        }\n    }\n    /** Check for changes made in the data and render each change (node added/removed/moved). */\n    renderNodeChanges(data, dataDiffer = this._dataDiffer, viewContainer = this._nodeOutlet.viewContainer, parentData) {\n        const changes = dataDiffer.diff(data);\n        if (!changes) {\n            return;\n        }\n        changes.forEachOperation((item, adjustedPreviousIndex, currentIndex) => {\n            if (item.previousIndex == null) {\n                this.insertNode(data[currentIndex], currentIndex, viewContainer, parentData);\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove(adjustedPreviousIndex);\n                this._levels.delete(item.item);\n            }\n            else {\n                const view = viewContainer.get(adjustedPreviousIndex);\n                viewContainer.move(view, currentIndex);\n            }\n        });\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * Finds the matching node definition that should be used for this node data. If there is only\n     * one node definition, it is returned. Otherwise, find the node definition that has a when\n     * predicate that returns true with the data. If none return true, return the default node\n     * definition.\n     */\n    _getNodeDef(data, i) {\n        if (this._nodeDefs.length === 1) {\n            return this._nodeDefs.first;\n        }\n        const nodeDef = this._nodeDefs.find(def => def.when && def.when(i, data)) || this._defaultNodeDef;\n        if (!nodeDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeMissingMatchingNodeDefError();\n        }\n        return nodeDef;\n    }\n    /**\n     * Create the embedded view for the data node template and place it in the correct index location\n     * within the data node view container.\n     */\n    insertNode(nodeData, index, viewContainer, parentData) {\n        const node = this._getNodeDef(nodeData, index);\n        // Node context that will be provided to created embedded view\n        const context = new CdkTreeNodeOutletContext(nodeData);\n        // If the tree is flat tree, then use the `getLevel` function in flat tree control\n        // Otherwise, use the level of parent node.\n        if (this.treeControl.getLevel) {\n            context.level = this.treeControl.getLevel(nodeData);\n        }\n        else if (typeof parentData !== 'undefined' && this._levels.has(parentData)) {\n            context.level = this._levels.get(parentData) + 1;\n        }\n        else {\n            context.level = 0;\n        }\n        this._levels.set(nodeData, context.level);\n        // Use default tree nodeOutlet, or nested node's nodeOutlet\n        const container = viewContainer ? viewContainer : this._nodeOutlet.viewContainer;\n        container.createEmbeddedView(node.template, context, index);\n        // Set the data to just created `CdkTreeNode`.\n        // The `CdkTreeNode` created from `createEmbeddedView` will be saved in static variable\n        //     `mostRecentTreeNode`. We get it from static variable and pass the node data to it.\n        if (CdkTreeNode.mostRecentTreeNode) {\n            CdkTreeNode.mostRecentTreeNode.data = nodeData;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTree, deps: [{ token: i0.IterableDiffers }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkTree, selector: \"cdk-tree\", inputs: { dataSource: \"dataSource\", treeControl: \"treeControl\", trackBy: \"trackBy\" }, host: { attributes: { \"role\": \"tree\" }, classAttribute: \"cdk-tree\" }, queries: [{ propertyName: \"_nodeDefs\", predicate: CdkTreeNodeDef, descendants: true }], viewQueries: [{ propertyName: \"_nodeOutlet\", first: true, predicate: CdkTreeNodeOutlet, descendants: true, static: true }], exportAs: [\"cdkTree\"], ngImport: i0, template: `<ng-container cdkTreeNodeOutlet></ng-container>`, isInline: true, dependencies: [{ kind: \"directive\", type: CdkTreeNodeOutlet, selector: \"[cdkTreeNodeOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTree, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-tree',\n                    exportAs: 'cdkTree',\n                    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n                    host: {\n                        'class': 'cdk-tree',\n                        'role': 'tree',\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    // The \"OnPush\" status for the `CdkTree` component is effectively a noop, so we are removing it.\n                    // The view for `CdkTree` consists entirely of templates declared in other views. As they are\n                    // declared elsewhere, they are checked when their declaration points are checked.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.IterableDiffers }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { dataSource: [{\n                type: Input\n            }], treeControl: [{\n                type: Input\n            }], trackBy: [{\n                type: Input\n            }], _nodeOutlet: [{\n                type: ViewChild,\n                args: [CdkTreeNodeOutlet, { static: true }]\n            }], _nodeDefs: [{\n                type: ContentChildren,\n                args: [CdkTreeNodeDef, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n/**\n * Tree node for CdkTree. It contains the data in the tree node.\n */\nclass CdkTreeNode {\n    /**\n     * The role of the tree node.\n     * @deprecated The correct role is 'treeitem', 'group' should not be used. This input will be\n     *   removed in a future version.\n     * @breaking-change 12.0.0 Remove this input\n     */\n    get role() {\n        return 'treeitem';\n    }\n    set role(_role) {\n        // TODO: move to host after View Engine deprecation\n        this._elementRef.nativeElement.setAttribute('role', _role);\n    }\n    /**\n     * The most recently created `CdkTreeNode`. We save it in static variable so we can retrieve it\n     * in `CdkTree` and set the data to it.\n     */\n    static { this.mostRecentTreeNode = null; }\n    /** The tree node's data. */\n    get data() {\n        return this._data;\n    }\n    set data(value) {\n        if (value !== this._data) {\n            this._data = value;\n            this._setRoleFromData();\n            this._dataChanges.next();\n        }\n    }\n    get isExpanded() {\n        return this._tree.treeControl.isExpanded(this._data);\n    }\n    get level() {\n        // If the treeControl has a getLevel method, use it to get the level. Otherwise read the\n        // aria-level off the parent node and use it as the level for this node (note aria-level is\n        // 1-indexed, while this property is 0-indexed, so we don't need to increment).\n        return this._tree.treeControl.getLevel\n            ? this._tree.treeControl.getLevel(this._data)\n            : this._parentNodeAriaLevel;\n    }\n    constructor(_elementRef, _tree) {\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        /** Subject that emits when the component has been destroyed. */\n        this._destroyed = new Subject();\n        /** Emits when the node's data has changed. */\n        this._dataChanges = new Subject();\n        CdkTreeNode.mostRecentTreeNode = this;\n        this.role = 'treeitem';\n    }\n    ngOnInit() {\n        this._parentNodeAriaLevel = getParentNodeAriaLevel(this._elementRef.nativeElement);\n        this._elementRef.nativeElement.setAttribute('aria-level', `${this.level + 1}`);\n    }\n    ngOnDestroy() {\n        // If this is the last tree node being destroyed,\n        // clear out the reference to avoid leaking memory.\n        if (CdkTreeNode.mostRecentTreeNode === this) {\n            CdkTreeNode.mostRecentTreeNode = null;\n        }\n        this._dataChanges.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Focuses the menu item. Implements for FocusableOption. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    // TODO: role should eventually just be set in the component host\n    _setRoleFromData() {\n        if (!this._tree.treeControl.isExpandable &&\n            !this._tree.treeControl.getChildren &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeControlFunctionsMissingError();\n        }\n        this.role = 'treeitem';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTreeNode, deps: [{ token: i0.ElementRef }, { token: CdkTree }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkTreeNode, selector: \"cdk-tree-node\", inputs: { role: \"role\" }, host: { properties: { \"attr.aria-expanded\": \"isExpanded\" }, classAttribute: \"cdk-tree-node\" }, exportAs: [\"cdkTreeNode\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTreeNode, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-tree-node',\n                    exportAs: 'cdkTreeNode',\n                    host: {\n                        'class': 'cdk-tree-node',\n                        '[attr.aria-expanded]': 'isExpanded',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: CdkTree }]; }, propDecorators: { role: [{\n                type: Input\n            }] } });\nfunction getParentNodeAriaLevel(nodeElement) {\n    let parent = nodeElement.parentElement;\n    while (parent && !isNodeElement(parent)) {\n        parent = parent.parentElement;\n    }\n    if (!parent) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw Error('Incorrect tree structure containing detached node.');\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (parent.classList.contains('cdk-nested-tree-node')) {\n        return coerceNumberProperty(parent.getAttribute('aria-level'));\n    }\n    else {\n        // The ancestor element is the cdk-tree itself\n        return 0;\n    }\n}\nfunction isNodeElement(element) {\n    const classList = element.classList;\n    return !!(classList?.contains('cdk-nested-tree-node') || classList?.contains('cdk-tree'));\n}\n\n/**\n * Nested node is a child of `<cdk-tree>`. It works with nested tree.\n * By using `cdk-nested-tree-node` component in tree node template, children of the parent node will\n * be added in the `cdkTreeNodeOutlet` in tree node template.\n * The children of node will be automatically added to `cdkTreeNodeOutlet`.\n */\nclass CdkNestedTreeNode extends CdkTreeNode {\n    constructor(elementRef, tree, _differs) {\n        super(elementRef, tree);\n        this._differs = _differs;\n    }\n    ngAfterContentInit() {\n        this._dataDiffer = this._differs.find([]).create(this._tree.trackBy);\n        if (!this._tree.treeControl.getChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeControlFunctionsMissingError();\n        }\n        const childrenNodes = this._tree.treeControl.getChildren(this.data);\n        if (Array.isArray(childrenNodes)) {\n            this.updateChildrenNodes(childrenNodes);\n        }\n        else if (isObservable(childrenNodes)) {\n            childrenNodes\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(result => this.updateChildrenNodes(result));\n        }\n        this.nodeOutlet.changes\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.updateChildrenNodes());\n    }\n    // This is a workaround for https://github.com/angular/angular/issues/23091\n    // In aot mode, the lifecycle hooks from parent class are not called.\n    ngOnInit() {\n        super.ngOnInit();\n    }\n    ngOnDestroy() {\n        this._clear();\n        super.ngOnDestroy();\n    }\n    /** Add children dataNodes to the NodeOutlet */\n    updateChildrenNodes(children) {\n        const outlet = this._getNodeOutlet();\n        if (children) {\n            this._children = children;\n        }\n        if (outlet && this._children) {\n            const viewContainer = outlet.viewContainer;\n            this._tree.renderNodeChanges(this._children, this._dataDiffer, viewContainer, this._data);\n        }\n        else {\n            // Reset the data differ if there's no children nodes displayed\n            this._dataDiffer.diff([]);\n        }\n    }\n    /** Clear the children dataNodes. */\n    _clear() {\n        const outlet = this._getNodeOutlet();\n        if (outlet) {\n            outlet.viewContainer.clear();\n            this._dataDiffer.diff([]);\n        }\n    }\n    /** Gets the outlet for the current node. */\n    _getNodeOutlet() {\n        const outlets = this.nodeOutlet;\n        // Note that since we use `descendants: true` on the query, we have to ensure\n        // that we don't pick up the outlet of a child node by accident.\n        return outlets && outlets.find(outlet => !outlet._node || outlet._node === this);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkNestedTreeNode, deps: [{ token: i0.ElementRef }, { token: CdkTree }, { token: i0.IterableDiffers }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkNestedTreeNode, selector: \"cdk-nested-tree-node\", inputs: { role: \"role\", disabled: \"disabled\", tabIndex: \"tabIndex\" }, host: { classAttribute: \"cdk-nested-tree-node\" }, providers: [\n            { provide: CdkTreeNode, useExisting: CdkNestedTreeNode },\n            { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: CdkNestedTreeNode },\n        ], queries: [{ propertyName: \"nodeOutlet\", predicate: CdkTreeNodeOutlet, descendants: true }], exportAs: [\"cdkNestedTreeNode\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkNestedTreeNode, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-nested-tree-node',\n                    exportAs: 'cdkNestedTreeNode',\n                    inputs: ['role', 'disabled', 'tabIndex'],\n                    providers: [\n                        { provide: CdkTreeNode, useExisting: CdkNestedTreeNode },\n                        { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: CdkNestedTreeNode },\n                    ],\n                    host: {\n                        'class': 'cdk-nested-tree-node',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: CdkTree }, { type: i0.IterableDiffers }]; }, propDecorators: { nodeOutlet: [{\n                type: ContentChildren,\n                args: [CdkTreeNodeOutlet, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * Indent for the children tree dataNodes.\n * This directive will add left-padding to the node to show hierarchy.\n */\nclass CdkTreeNodePadding {\n    /** The level of depth of the tree node. The padding will be `level * indent` pixels. */\n    get level() {\n        return this._level;\n    }\n    set level(value) {\n        this._setLevelInput(value);\n    }\n    /**\n     * The indent for each level. Can be a number or a CSS string.\n     * Default number 40px from material design menu sub-menu spec.\n     */\n    get indent() {\n        return this._indent;\n    }\n    set indent(indent) {\n        this._setIndentInput(indent);\n    }\n    constructor(_treeNode, _tree, _element, _dir) {\n        this._treeNode = _treeNode;\n        this._tree = _tree;\n        this._element = _element;\n        this._dir = _dir;\n        /** Subject that emits when the component has been destroyed. */\n        this._destroyed = new Subject();\n        /** CSS units used for the indentation value. */\n        this.indentUnits = 'px';\n        this._indent = 40;\n        this._setPadding();\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => this._setPadding(true));\n        }\n        // In Ivy the indentation binding might be set before the tree node's data has been added,\n        // which means that we'll miss the first render. We have to subscribe to changes in the\n        // data to ensure that everything is up to date.\n        _treeNode._dataChanges.subscribe(() => this._setPadding());\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** The padding indent value for the tree node. Returns a string with px numbers if not null. */\n    _paddingIndent() {\n        const nodeLevel = this._treeNode.data && this._tree.treeControl.getLevel\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n        const level = this._level == null ? nodeLevel : this._level;\n        return typeof level === 'number' ? `${level * this._indent}${this.indentUnits}` : null;\n    }\n    _setPadding(forceChange = false) {\n        const padding = this._paddingIndent();\n        if (padding !== this._currentPadding || forceChange) {\n            const element = this._element.nativeElement;\n            const paddingProp = this._dir && this._dir.value === 'rtl' ? 'paddingRight' : 'paddingLeft';\n            const resetProp = paddingProp === 'paddingLeft' ? 'paddingRight' : 'paddingLeft';\n            element.style[paddingProp] = padding || '';\n            element.style[resetProp] = '';\n            this._currentPadding = padding;\n        }\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setLevelInput(value) {\n        // Set to null as the fallback value so that _setPadding can fall back to the node level if the\n        // consumer set the directive as `cdkTreeNodePadding=\"\"`. We still want to take this value if\n        // they set 0 explicitly.\n        this._level = coerceNumberProperty(value, null);\n        this._setPadding();\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setIndentInput(indent) {\n        let value = indent;\n        let units = 'px';\n        if (typeof indent === 'string') {\n            const parts = indent.split(cssUnitPattern);\n            value = parts[0];\n            units = parts[1] || units;\n        }\n        this.indentUnits = units;\n        this._indent = coerceNumberProperty(value);\n        this._setPadding();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTreeNodePadding, deps: [{ token: CdkTreeNode }, { token: CdkTree }, { token: i0.ElementRef }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkTreeNodePadding, selector: \"[cdkTreeNodePadding]\", inputs: { level: [\"cdkTreeNodePadding\", \"level\"], indent: [\"cdkTreeNodePaddingIndent\", \"indent\"] }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTreeNodePadding, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTreeNodePadding]',\n                }]\n        }], ctorParameters: function () { return [{ type: CdkTreeNode }, { type: CdkTree }, { type: i0.ElementRef }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { level: [{\n                type: Input,\n                args: ['cdkTreeNodePadding']\n            }], indent: [{\n                type: Input,\n                args: ['cdkTreeNodePaddingIndent']\n            }] } });\n\n/**\n * Node toggle to expand/collapse the node.\n */\nclass CdkTreeNodeToggle {\n    /** Whether expand/collapse the node recursively. */\n    get recursive() {\n        return this._recursive;\n    }\n    set recursive(value) {\n        this._recursive = coerceBooleanProperty(value);\n    }\n    constructor(_tree, _treeNode) {\n        this._tree = _tree;\n        this._treeNode = _treeNode;\n        this._recursive = false;\n    }\n    _toggle(event) {\n        this.recursive\n            ? this._tree.treeControl.toggleDescendants(this._treeNode.data)\n            : this._tree.treeControl.toggle(this._treeNode.data);\n        event.stopPropagation();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTreeNodeToggle, deps: [{ token: CdkTree }, { token: CdkTreeNode }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkTreeNodeToggle, selector: \"[cdkTreeNodeToggle]\", inputs: { recursive: [\"cdkTreeNodeToggleRecursive\", \"recursive\"] }, host: { listeners: { \"click\": \"_toggle($event)\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTreeNodeToggle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTreeNodeToggle]',\n                    host: {\n                        '(click)': '_toggle($event)',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkTree }, { type: CdkTreeNode }]; }, propDecorators: { recursive: [{\n                type: Input,\n                args: ['cdkTreeNodeToggleRecursive']\n            }] } });\n\nconst EXPORTED_DECLARATIONS = [\n    CdkNestedTreeNode,\n    CdkTreeNodeDef,\n    CdkTreeNodePadding,\n    CdkTreeNodeToggle,\n    CdkTree,\n    CdkTreeNode,\n    CdkTreeNodeOutlet,\n];\nclass CdkTreeModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTreeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTreeModule, declarations: [CdkNestedTreeNode,\n            CdkTreeNodeDef,\n            CdkTreeNodePadding,\n            CdkTreeNodeToggle,\n            CdkTree,\n            CdkTreeNode,\n            CdkTreeNodeOutlet], exports: [CdkNestedTreeNode,\n            CdkTreeNodeDef,\n            CdkTreeNodePadding,\n            CdkTreeNodeToggle,\n            CdkTree,\n            CdkTreeNode,\n            CdkTreeNodeOutlet] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTreeModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTreeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: EXPORTED_DECLARATIONS,\n                    declarations: EXPORTED_DECLARATIONS,\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseTreeControl, CDK_TREE_NODE_OUTLET_NODE, CdkNestedTreeNode, CdkTree, CdkTreeModule, CdkTreeNode, CdkTreeNodeDef, CdkTreeNodeOutlet, CdkTreeNodeOutletContext, CdkTreeNodePadding, CdkTreeNodeToggle, FlatTreeControl, NestedTreeControl, getTreeControlFunctionsMissingError, getTreeControlMissingError, getTreeMissingMatchingNodeDefError, getTreeMultipleDefaultNodeDefsError, getTreeNoValidDataSourceError };\n"],"names":["Subject","BehaviorSubject","constructor","_value","value","getValue","_subscribe","subscriber","subscription","closed","next","hasError","thrownError","_throwIfClosed","Observable","Subscription","EMPTY_SUBSCRIPTION","ObjectUnsubscribedError","arrRemove","errorContext","currentObservers","observers","isStopped","lift","operator","subject","AnonymousSubject","Array","from","observer","error","err","length","shift","complete","unsubscribe","observed","_a","_trySubscribe","_checkFinalizedStatuses","_innerSubscribe","push","asObservable","observable","source","create","destination","_b","call","subscribe","EMPTY","empty","scheduler","emptyScheduled","schedule","popScheduler","of","args","Subscriber","createOperatorSubscriber","onNext","onComplete","onError","onFinalize","OperatorSubscriber","shouldUnsubscribe","_next","_error","_complete","operate","filter","predicate","thisArg","index","take","count","seen","innerFrom","noop","takeUntil","notifier","createErrorClass","_super","ObjectUnsubscribedErrorImpl","name","message","isFunction","isObservable","obj","hasLift","init","liftedSource","TypeError","SelectionModel","isDataSource","i0","InjectionToken","Directive","Inject","Optional","Component","ViewEncapsulation","ChangeDetectionStrategy","Input","ViewChild","ContentChildren","NgModule","coerceNumberProperty","coerceBooleanProperty","i2","BaseTreeControl","expansionModel","toggle","dataNode","_trackByValue","expand","select","collapse","deselect","isExpanded","isSelected","toggleDescendants","collapseDescendants","expandDescendants","collapseAll","clear","toBeProcessed","getDescendants","map","trackBy","FlatTreeControl","getLevel","isExpandable","options","startIndex","dataNodes","indexOf","results","i","expandAll","node","NestedTreeControl","getChildren","allNodes","reduce","accumulator","descendants","_getDescendants","splice","childrenNodes","isArray","forEach","child","pipe","Boolean","children","CDK_TREE_NODE_OUTLET_NODE","CdkTreeNodeOutlet","viewContainer","_node","_","ɵfac","CdkTreeNodeOutlet_Factory","t","ɵɵdirectiveInject","ViewContainerRef","_2","ɵdir","ɵɵdefineDirective","type","selectors","ngDevMode","ɵsetClassMetadata","selector","undefined","decorators","CdkTreeNodeOutletContext","data","$implicit","CdkTreeNodeDef","template","CdkTreeNodeDef_Factory","TemplateRef","inputs","when","getTreeNoValidDataSourceError","Error","getTreeMultipleDefaultNodeDefsError","getTreeMissingMatchingNodeDefError","getTreeControlMissingError","getTreeControlFunctionsMissingError","CdkTree","dataSource","_dataSource","_switchDataSource","_differs","_changeDetectorRef","_onDestroy","_levels","Map","viewChange","start","end","Number","MAX_VALUE","ngOnInit","_dataDiffer","find","treeControl","ngOnDestroy","_nodeOutlet","disconnect","_dataSubscription","ngAfterContentChecked","defaultNodeDefs","_nodeDefs","def","_defaultNodeDef","_observeRenderChanges","dataStream","connect","renderNodeChanges","dataDiffer","parentData","changes","diff","forEachOperation","item","adjustedPreviousIndex","currentIndex","previousIndex","insertNode","remove","delete","view","get","move","detectChanges","_getNodeDef","first","nodeDef","nodeData","context","level","has","set","container","createEmbeddedView","CdkTreeNode","mostRecentTreeNode","CdkTree_Factory","IterableDiffers","ChangeDetectorRef","ɵcmp","ɵɵdefineComponent","contentQueries","CdkTree_ContentQueries","rf","ctx","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","viewQuery","CdkTree_Query","ɵɵviewQuery","hostAttrs","exportAs","decls","vars","consts","CdkTree_Template","ɵɵelementContainer","dependencies","encapsulation","host","None","changeDetection","Default","static","role","_role","_elementRef","nativeElement","setAttribute","_data","_setRoleFromData","_dataChanges","_tree","_parentNodeAriaLevel","_destroyed","getParentNodeAriaLevel","focus","CdkTreeNode_Factory","ElementRef","_3","hostVars","hostBindings","CdkTreeNode_HostBindings","ɵɵattribute","nodeElement","parent","parentElement","isNodeElement","classList","contains","getAttribute","element","CdkNestedTreeNode","elementRef","tree","ngAfterContentInit","updateChildrenNodes","result","nodeOutlet","_clear","outlet","_getNodeOutlet","_children","outlets","CdkNestedTreeNode_Factory","CdkNestedTreeNode_ContentQueries","disabled","tabIndex","features","ɵɵProvidersFeature","provide","useExisting","ɵɵInheritDefinitionFeature","providers","cssUnitPattern","CdkTreeNodePadding","_level","_setLevelInput","indent","_indent","_setIndentInput","_treeNode","_element","_dir","indentUnits","_setPadding","change","_paddingIndent","nodeLevel","forceChange","padding","_currentPadding","paddingProp","resetProp","style","units","parts","split","CdkTreeNodePadding_Factory","Directionality","CdkTreeNodeToggle","recursive","_recursive","_toggle","event","stopPropagation","CdkTreeNodeToggle_Factory","CdkTreeNodeToggle_HostBindings","ɵɵlistener","CdkTreeNodeToggle_click_HostBindingHandler","$event","EXPORTED_DECLARATIONS","CdkTreeModule","CdkTreeModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11]}